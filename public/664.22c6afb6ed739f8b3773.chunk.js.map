{"version":3,"file":"664.22c6afb6ed739f8b3773.chunk.js","mappings":"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","sources":["webpack://tweb/./src/components/codeInputField.ts","webpack://tweb/./src/components/monkeys/password.ts","webpack://tweb/./src/components/monkeys/tracking.ts","webpack://tweb/./src/components/passwordInputField.ts","webpack://tweb/./src/helpers/bytes/bufferConcats.ts","webpack://tweb/./src/helpers/bytes/bytesCmp.ts","webpack://tweb/./src/environment/mediaMimeTypesSupport.ts","webpack://tweb/./src/helpers/dom/setInnerHTML.ts","webpack://tweb/./src/helpers/filterChatPhotosMessages.ts","webpack://tweb/./src/helpers/listLoader.ts","webpack://tweb/./src/helpers/searchListLoader.ts","webpack://tweb/./src/components/appSearch.ts","webpack://tweb/./src/components/inputSearch.ts","webpack://tweb/./src/components/buttonIcon.ts","webpack://tweb/./src/components/sliderTab.ts","webpack://tweb/./src/components/slider.ts","webpack://tweb/./src/components/avatarEdit.ts","webpack://tweb/./src/components/buttonCorner.ts","webpack://tweb/./src/components/sidebarLeft/tabs/newGroup.ts","webpack://tweb/./src/components/appMediaPlaybackController.ts","webpack://tweb/./src/helpers/dom/attachGrabListeners.ts","webpack://tweb/./src/components/rangeSelector.ts","webpack://tweb/./src/components/buttonMenu.ts","webpack://tweb/./src/components/buttonMenuToggle.ts","webpack://tweb/./src/helpers/dom/controlsHover.ts","webpack://tweb/./src/lib/mediaPlayer.ts","webpack://tweb/./src/helpers/schedulers/throttleWithRaf.ts","webpack://tweb/./src/helpers/schedulers/throttleWith.ts","webpack://tweb/./src/helpers/formatBytes.ts","webpack://tweb/./src/components/audio.ts","webpack://tweb/./src/components/divAndCaption.ts","webpack://tweb/./src/components/chat/replyContainer.ts","webpack://tweb/./src/helpers/array/accumulate.ts","webpack://tweb/./src/components/groupedLayout.ts","webpack://tweb/./src/components/editPeer.ts","webpack://tweb/./src/components/radioForm.ts","webpack://tweb/./src/components/row.ts","webpack://tweb/./src/helpers/clipboard.ts","webpack://tweb/./src/components/radioField.ts","webpack://tweb/./src/components/toast.ts","webpack://tweb/./src/helpers/schedulers/debounce.ts","webpack://tweb/./src/components/usernameInputField.ts","webpack://tweb/./src/components/popups/peer.ts","webpack://tweb/./src/components/sidebarRight/tabs/chatType.ts","webpack://tweb/./src/helpers/scrollableLoader.ts","webpack://tweb/./src/components/appSelectPeers.ts","webpack://tweb/./src/components/popups/pickUser.ts","webpack://tweb/./src/components/sidebarRight/tabs/userPermissions.ts","webpack://tweb/./src/components/sidebarRight/tabs/groupPermissions.ts","webpack://tweb/./src/components/popups/deleteDialog.ts","webpack://tweb/./src/components/sidebarRight/tabs/chatReactions.ts","webpack://tweb/./src/components/sidebarRight/tabs/editChat.ts","webpack://tweb/./src/components/sidebarRight/tabs/editContact.ts","webpack://tweb/./src/components/sidebarLeft/tabs/addMembers.ts","webpack://tweb/./src/environment/parallaxSupport.ts","webpack://tweb/./src/components/generateVerifiedIcon.ts","webpack://tweb/./src/components/swipeHandler.ts","webpack://tweb/./src/components/peerProfileAvatars.ts","webpack://tweb/./src/components/peerProfile.ts","webpack://tweb/./src/components/sidebarRight/tabs/sharedMedia.ts","webpack://tweb/./src/components/sidebarRight/index.ts","webpack://tweb/./src/components/sidebarRight/tabs/pollResults.ts","webpack://tweb/./src/components/poll.ts","webpack://tweb/./src/components/wrappers.ts","webpack://tweb/./src/helpers/dom/positionElementByIndex.ts","webpack://tweb/./src/helpers/sortedList.ts","webpack://tweb/./src/components/sortedUserList.ts","webpack://tweb/./src/helpers/dom/handleHorizontalSwipe.ts","webpack://tweb/./src/helpers/dom/handleTabSwipe.ts","webpack://tweb/./src/components/popups/forward.ts","webpack://tweb/./src/components/popups/deleteMessages.ts","webpack://tweb/./src/components/popups/sendNow.ts","webpack://tweb/./src/helpers/dom/cancelSelection.ts","webpack://tweb/./src/components/chat/selection.ts","webpack://tweb/./src/helpers/dom/getSelectedText.ts","webpack://tweb/./src/components/appSearchSuper..ts","webpack://tweb/./src/helpers/dom/lockTouchScroll.ts","webpack://tweb/./src/lib/appManagers/appPrivacyManager.ts","webpack://tweb/./src/components/privacySection.ts","webpack://tweb/./src/components/sidebarLeft/tabs/privacy/phoneNumber.ts","webpack://tweb/./src/components/sidebarLeft/tabs/2fa/passwordSet.ts","webpack://tweb/./src/helpers/dom/canFocus.ts","webpack://tweb/./src/components/sidebarLeft/tabs/2fa/emailConfirmation.ts","webpack://tweb/./src/components/sidebarLeft/tabs/2fa/email.ts","webpack://tweb/./src/components/sidebarLeft/tabs/2fa/hint.ts","webpack://tweb/./src/components/sidebarLeft/tabs/2fa/reEnterPassword.ts","webpack://tweb/./src/components/sidebarLeft/tabs/2fa/enterPassword.ts","webpack://tweb/./src/components/sidebarLeft/tabs/2fa/index.ts","webpack://tweb/./src/components/sidebarLeft/tabs/privacy/lastSeen.ts","webpack://tweb/./src/components/sidebarLeft/tabs/privacy/profilePhoto.ts","webpack://tweb/./src/components/sidebarLeft/tabs/privacy/forwardMessages.ts","webpack://tweb/./src/components/sidebarLeft/tabs/privacy/addToGroups.ts","webpack://tweb/./src/components/sidebarLeft/tabs/privacy/calls.ts","webpack://tweb/./src/components/sidebarLeft/tabs/activeSessions.ts","webpack://tweb/./src/components/sidebarLeft/tabs/blockedUsers.ts","webpack://tweb/./src/helpers/string/convertKeyToInputKey.ts","webpack://tweb/./src/components/sidebarLeft/tabs/privacyAndSecurity.ts","webpack://tweb/./src/helpers/averageColor.ts","webpack://tweb/./src/helpers/color.ts","webpack://tweb/./src/helpers/highlightningColor.ts","webpack://tweb/./src/components/chat/gradientRenderer.ts","webpack://tweb/./src/components/colorPicker.ts","webpack://tweb/./src/components/sidebarLeft/tabs/backgroundColor.ts","webpack://tweb/./src/components/sidebarLeft/tabs/background.ts","webpack://tweb/./src/components/popups/stickers.ts","webpack://tweb/./src/environment/geolocationSupport.ts","webpack://tweb/./src/components/sidebarLeft/tabs/quickReaction.ts","webpack://tweb/./src/components/sidebarLeft/tabs/generalSettings.ts","webpack://tweb/./src/helpers/eachMinute.ts","webpack://tweb/./src/helpers/eachTimeout.ts","webpack://tweb/./src/components/sidebarLeft/tabs/editProfile.ts","webpack://tweb/./src/components/sidebarLeft/tabs/includedChats.ts","webpack://tweb/./src/components/sidebarLeft/tabs/editFolder.ts","webpack://tweb/./src/components/sidebarLeft/tabs/chatFolders.ts","webpack://tweb/./src/components/sidebarLeft/tabs/notifications.ts","webpack://tweb/./src/components/sidebarLeft/tabs/language.ts","webpack://tweb/./src/components/confirmationPopup.ts","webpack://tweb/./src/components/sidebarLeft/tabs/autoDownload/photo.ts","webpack://tweb/./src/components/sidebarLeft/tabs/autoDownload/file.ts","webpack://tweb/./src/components/sidebarLeft/tabs/autoDownload/video.ts","webpack://tweb/./src/components/sidebarLeft/tabs/dataAndStorage.ts","webpack://tweb/./src/components/sidebarLeft/tabs/settings.ts","webpack://tweb/./src/components/sidebarLeft/tabs/newChannel.ts","webpack://tweb/./src/components/popups/createContact.ts","webpack://tweb/./src/components/sidebarLeft/tabs/contacts.ts","webpack://tweb/./src/components/sidebarLeft/tabs/archivedTab.ts","webpack://tweb/./src/components/sidebarLeft/tabs/peopleNearby.ts","webpack://tweb/./src/helpers/number/formatNumber.ts","webpack://tweb/./src/components/sidebarLeft/index.ts","webpack://tweb/./src/components/chat/bubbleGroups.ts","webpack://tweb/./src/components/popups/datePicker.ts","webpack://tweb/./src/components/stackedAvatars.ts","webpack://tweb/./src/components/chat/reaction.ts","webpack://tweb/./src/components/chat/reactions.ts","webpack://tweb/./src/components/chat/replies.ts","webpack://tweb/./src/components/chat/messageRender.ts","webpack://tweb/./src/helpers/dom/getElementByPoint.ts","webpack://tweb/./src/helpers/dom/reflowScrollableElement.ts","webpack://tweb/./src/components/stickyIntersector.ts","webpack://tweb/./src/lib/appManagers/appEmojiManager.ts","webpack://tweb/./src/components/emoticonsDropdown/tabs/emoji.ts","webpack://tweb/./src/components/gifsMasonry.ts","webpack://tweb/./src/components/emoticonsDropdown/tabs/gifs.ts","webpack://tweb/./src/components/emoticonsDropdown/tabs/stickers.ts","webpack://tweb/./src/lib/appManagers/appInlineBotsManager.ts","webpack://tweb/./src/components/sidebarRight/tabs/gifs.ts","webpack://tweb/./src/components/sidebarRight/tabs/stickers.ts","webpack://tweb/./src/helpers/dropdownHover.ts","webpack://tweb/./src/components/emoticonsDropdown/index.ts","webpack://tweb/./src/lib/mtproto/constants.ts","webpack://tweb/./src/environment/webrtcSupport.ts","webpack://tweb/./src/environment/callSupport.ts","webpack://tweb/./src/helpers/dom/getVisibleRect.ts","webpack://tweb/./src/lib/appManagers/internalLink.ts","webpack://tweb/./src/components/popups/joinChatInvite.ts","webpack://tweb/./src/helpers/scrollSaver.ts","webpack://tweb/./src/components/chat/bubbles.ts","webpack://tweb/./src/components/popups/unpinMessage.ts","webpack://tweb/./src/helpers/dom/isSelectionEmpty.ts","webpack://tweb/./src/components/popups/reportMessagesConfirm.ts","webpack://tweb/./src/components/popups/reportMessages.ts","webpack://tweb/./src/components/popups/sponsored.ts","webpack://tweb/./src/components/popups/reactedList.ts","webpack://tweb/./src/components/chat/reactionsMenu.ts","webpack://tweb/./src/components/chat/contextMenu.ts","webpack://tweb/./src/components/chat/sendContextMenu.ts","webpack://tweb/./src/components/popups/createPoll.ts","webpack://tweb/./src/helpers/getGifDuration.ts","webpack://tweb/./src/components/popups/newMedia.ts","webpack://tweb/./src/helpers/dom/attachListNavigation.ts","webpack://tweb/./src/components/chat/autocompleteHelper.ts","webpack://tweb/./src/components/chat/stickersHelper.ts","webpack://tweb/./src/components/popups/schedule.ts","webpack://tweb/./src/helpers/dom/getRichValueWithCaret.ts","webpack://tweb/./src/components/chat/emojiHelper.ts","webpack://tweb/./src/components/chat/autocompletePeerHelper.ts","webpack://tweb/./src/components/chat/commandsHelper.ts","webpack://tweb/./src/components/chat/autocompleteHelperController.ts","webpack://tweb/./src/components/chat/mentionsHelper.ts","webpack://tweb/./src/components/chat/replyKeyboard.ts","webpack://tweb/./src/components/chat/inlineHelper.ts","webpack://tweb/./src/components/chat/botCommands.ts","webpack://tweb/./src/components/chat/input.ts","webpack://tweb/./src/helpers/dom/setCaretAt.ts","webpack://tweb/./src/components/chat/pinnedContainer.ts","webpack://tweb/./src/components/chat/audio.ts","webpack://tweb/./src/components/chat/pinnedMessageBorder.ts","webpack://tweb/./src/components/chat/pinnedMessage.ts","webpack://tweb/./src/helpers/dom/handleScrollSideEvent.ts","webpack://tweb/./src/environment/groupCallSupport.ts","webpack://tweb/./src/components/popups/mute.ts","webpack://tweb/./src/components/chat/topbar.ts","webpack://tweb/./src/components/sidebarRight/tabs/search.ts","webpack://tweb/./src/components/chat/search.ts","webpack://tweb/./src/components/chat/patternRenderer.ts","webpack://tweb/./src/components/chat/chat.ts","webpack://tweb/./src/helpers/autoDownload.ts","webpack://tweb/./src/components/chat/markupTooltip.ts","webpack://tweb/./src/helpers/dom/getSelectedNodes.ts","webpack://tweb/./src/helpers/generatePathData.ts","webpack://tweb/./src/components/chat/dragAndDrop.ts","webpack://tweb/./src/helpers/dom/disableTransition.ts","webpack://tweb/./src/components/lineBlobDrawable.ts","webpack://tweb/./src/components/topbarWeave.ts","webpack://tweb/./src/helpers/dom/customProperties.ts","webpack://tweb/./src/lib/rlottie/rlottieIcon.ts","webpack://tweb/./src/components/superIcon.ts","webpack://tweb/./src/components/groupCall/microphoneIcon.ts","webpack://tweb/./src/components/groupCall/participantMutedIcon.ts","webpack://tweb/./src/components/groupCall/index.ts","webpack://tweb/./src/components/groupCall/participantStatus.ts","webpack://tweb/./src/components/groupCall/participantsList.ts","webpack://tweb/./src/components/call/videoCanvasBlur.ts","webpack://tweb/./src/components/groupCall/participantVideo.ts","webpack://tweb/./src/components/groupCall/participantVideos.ts","webpack://tweb/./src/components/groupCall/participants.ts","webpack://tweb/./src/components/groupCall/description.ts","webpack://tweb/./src/components/groupCall/title.ts","webpack://tweb/./src/environment/screenSharingSupport.ts","webpack://tweb/./src/components/call/button.ts","webpack://tweb/./src/components/movableElement.ts","webpack://tweb/./src/helpers/movablePanel.ts","webpack://tweb/./src/helpers/toggleClassName.ts","webpack://tweb/./src/lib/calls/callState.ts","webpack://tweb/./src/components/call/description.ts","webpack://tweb/./src/components/groupCall/microphoneIconMini.ts","webpack://tweb/./src/components/call/index.ts","webpack://tweb/./src/lib/calls/helpers/parseSignalingData.ts","webpack://tweb/./src/lib/calls/callConnectionInstance.ts","webpack://tweb/./src/lib/crypto/subtle.ts","webpack://tweb/./src/lib/calls/p2P/p2PEncryptor.ts","webpack://tweb/./src/lib/crypto/utils/sha256.ts","webpack://tweb/./src/helpers/bytes/convertToUint8Array.ts","webpack://tweb/./src/lib/calls/p2P/chromeP2PSdpBuilder.ts","webpack://tweb/./src/lib/calls/p2P/p2PSdpBuilder.js","webpack://tweb/./src/lib/calls/p2P/firefoxP2PSdpBuilder.js","webpack://tweb/./src/lib/calls/p2P/safariP2PSdpBuilder.js","webpack://tweb/./src/lib/calls/callInstance.ts","webpack://tweb/./src/lib/calls/p2P/getCallProtocol.ts","webpack://tweb/./src/lib/calls/p2P/getRtcConfiguration.ts","webpack://tweb/./src/components/topbarCall.ts","webpack://tweb/./src/lib/appManagers/appCallsManager.ts","webpack://tweb/./src/lib/appManagers/appImManager.ts","webpack://tweb/./src/components/appMediaViewerBase.ts","webpack://tweb/./src/helpers/fillPropertyValue.ts","webpack://tweb/./src/components/appMediaViewer.ts","webpack://tweb/./src/helpers/avatarListLoader.ts","webpack://tweb/./src/components/appMediaViewerAvatar.ts","webpack://tweb/./src/components/avatar.ts","webpack://tweb/./src/components/dialogsContextMenu.ts","webpack://tweb/./src/lib/mtproto/connectionStatus.ts","webpack://tweb/./src/components/sendingStatus.ts","webpack://tweb/./src/components/connectionStatus.ts","webpack://tweb/./src/helpers/roundRect.ts","webpack://tweb/./src/components/groupCallActiveIcon.ts","webpack://tweb/./src/lib/appManagers/appDialogsManager.ts","webpack://tweb/./src/helpers/easing/easeInOutSine.ts","webpack://tweb/./src/lib/mtproto/passwordManager.ts","webpack://tweb/./public/recorder.min.js"],"sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class CodeInputField extends InputField {\r\n  constructor(options: InputFieldOptions & {\r\n    length: number,\r\n    onFill: (code: string) => void\r\n  }) {\r\n    super({\r\n      plainText: true,\r\n      ...options\r\n    });\r\n\r\n    const input = this.input as HTMLInputElement;\r\n    input.type = 'tel';\r\n    input.setAttribute('required', '');\r\n    input.autocomplete = 'off';\r\n\r\n    let lastLength = 0;\r\n    this.input.addEventListener('input', (e) => {\r\n      this.input.classList.remove('error');\r\n      this.setLabel();\r\n  \r\n      const value = this.value.replace(/\\D/g, '').slice(0, options.length);\r\n      this.setValueSilently(value);\r\n  \r\n      const length = this.value.length;\r\n      if(length === options.length) { // submit code\r\n        options.onFill(this.value);\r\n      } else if(length === lastLength) {\r\n        return;\r\n      }\r\n  \r\n      lastLength = length;\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport lottieLoader, { LottieLoader } from \"../../lib/rlottie/lottieLoader\";\r\nimport RLottiePlayer from \"../../lib/rlottie/rlottiePlayer\";\r\nimport PasswordInputField from \"../passwordInputField\";\r\n\r\nexport default class PasswordMonkey {\r\n  public container: HTMLElement;\r\n  public animation: RLottiePlayer;\r\n  public needFrame = 0;\r\n  protected loadPromise: ReturnType<LottieLoader['waitForFirstFrame']>;\r\n\r\n  constructor(protected passwordInputField: PasswordInputField, protected size: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('media-sticker-wrapper');\r\n  }\r\n\r\n  public load() {\r\n    if(this.loadPromise) return this.loadPromise;\r\n    return this.loadPromise = lottieLoader.loadAnimationAsAsset({\r\n      container: this.container,\r\n      loop: false,\r\n      autoplay: false,\r\n      width: this.size,\r\n      height: this.size,\r\n      noCache: true\r\n    //}, 'assets/img/TwoFactorSetupMonkeyClose.tgs').then(_animation => {\r\n    }, 'TwoFactorSetupMonkeyPeek').then(_animation => {\r\n      //return;\r\n      this.animation = _animation;\r\n      this.animation.addEventListener('enterFrame', currentFrame => {\r\n        //console.log('enterFrame', currentFrame, this.needFrame);\r\n\r\n        if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\r\n          (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\r\n            this.animation.setSpeed(1);\r\n            this.animation.pause();\r\n        } \r\n      });\r\n\r\n      this.passwordInputField.onVisibilityClickAdditional = () => {\r\n        if(this.passwordInputField.passwordVisible) {\r\n          this.animation.setDirection(1);\r\n          this.animation.curFrame = 0;\r\n          this.needFrame = 16;\r\n          this.animation.play();\r\n        } else {\r\n          this.animation.setDirection(-1);\r\n          this.animation.curFrame = 16;\r\n          this.needFrame = 0;\r\n          this.animation.play();\r\n        }\r\n      };\r\n\r\n      return lottieLoader.waitForFirstFrame(_animation);\r\n    });\r\n  }\r\n\r\n  public remove() {\r\n    if(this.animation) {\r\n      this.animation.remove();\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport InputField from \"../inputField\";\r\nimport lottieLoader from \"../../lib/rlottie/lottieLoader\";\r\nimport RLottiePlayer from \"../../lib/rlottie/rlottiePlayer\";\r\n\r\nexport default class TrackingMonkey {\r\n  public container: HTMLElement;\r\n\r\n  protected max = 45;\r\n  protected needFrame = 0;\r\n\r\n  protected animation: RLottiePlayer;\r\n  protected idleAnimation: RLottiePlayer;\r\n\r\n  protected loadPromise: Promise<any>;\r\n\r\n  constructor(protected inputField: InputField, protected size: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('media-sticker-wrapper');\r\n\r\n    const input = inputField.input;\r\n\r\n    input.addEventListener('blur', () => {\r\n      this.playAnimation(0);\r\n    });\r\n\r\n    input.addEventListener('input', (e) => {\r\n      this.playAnimation(inputField.value.length);\r\n    });\r\n\r\n    /* codeInput.addEventListener('focus', () => {\r\n      playAnimation(Math.max(codeInput.value.length, 1));\r\n    }); */\r\n  }\r\n\r\n  // 1st symbol = frame 15\r\n  // end symbol = frame 165\r\n  public playAnimation(length: number) {\r\n    if(!this.animation) return;\r\n\r\n    length = Math.min(length, 30);\r\n    let frame: number;\r\n    if(length) {\r\n      frame = Math.round(Math.min(this.max, length) * (165 / this.max) + 11.33);\r\n\r\n      if(this.idleAnimation) {\r\n        this.idleAnimation.stop(true);\r\n        this.idleAnimation.canvas.style.display = 'none';\r\n      }\r\n      \r\n      this.animation.canvas.style.display = '';\r\n    } else {\r\n      /* const cb = (frameNo: number) => {\r\n        if(frameNo <= 1) { */\r\n          /* idleAnimation.play();\r\n          idleAnimation.canvas.style.display = '';\r\n          animation.canvas.style.display = 'none'; */\r\n      /*     animation.removeListener('enterFrame', cb);\r\n        }\r\n      };\r\n      animation.addListener('enterFrame', cb); */\r\n      \r\n      frame = 0;\r\n    }\r\n    //animation.playSegments([1, 2]);\r\n\r\n    const direction = this.needFrame > frame ? -1 : 1;\r\n    //console.log('keydown', length, frame, direction);\r\n\r\n    this.animation.setDirection(direction);\r\n    if(this.needFrame !== 0 && frame === 0) {\r\n      this.animation.setSpeed(7);\r\n    }\r\n    /* let diff = Math.abs(needFrame - frame * direction);\r\n    if((diff / 20) > 1) animation.setSpeed(diff / 20 | 0); */\r\n    this.needFrame = frame;\r\n    \r\n    this.animation.play();\r\n\r\n    /* animation.goToAndStop(15, true); */\r\n    //animation.goToAndStop(length / max * );\r\n  }\r\n\r\n  public load() {\r\n    if(this.loadPromise) return this.loadPromise;\r\n    return this.loadPromise = Promise.all([\r\n      lottieLoader.loadAnimationAsAsset({\r\n        container: this.container,\r\n        loop: true,\r\n        autoplay: true,\r\n        width: this.size,\r\n        height: this.size\r\n      }, 'TwoFactorSetupMonkeyIdle').then(animation => {\r\n        this.idleAnimation = animation;\r\n\r\n        // ! animationIntersector will stop animation instantly\r\n        if(!this.inputField.value.length) {\r\n          animation.play();\r\n        }\r\n\r\n        return lottieLoader.waitForFirstFrame(animation);\r\n      }),\r\n\r\n      lottieLoader.loadAnimationAsAsset({\r\n        container: this.container,\r\n        loop: false,\r\n        autoplay: false,\r\n        width: this.size,\r\n        height: this.size\r\n      }, 'TwoFactorSetupMonkeyTracking').then(_animation => {\r\n        this.animation = _animation;\r\n\r\n        if(!this.inputField.value.length) {\r\n          this.animation.canvas.style.display = 'none';\r\n        }\r\n\r\n        this.animation.addEventListener('enterFrame', currentFrame => {\r\n          //console.log('enterFrame', currentFrame, needFrame);\r\n          //let currentFrame = Math.round(e.currentTime);\r\n          \r\n          if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\r\n            (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\r\n            this.animation.setSpeed(1);\r\n            this.animation.pause();\r\n          }\r\n\r\n          if(currentFrame === 0 && this.needFrame === 0) {\r\n            //animation.curFrame = 0;\r\n            \r\n            if(this.idleAnimation) {\r\n              this.idleAnimation.canvas.style.display = '';\r\n              this.idleAnimation.play();\r\n              this.animation.canvas.style.display = 'none';\r\n            }\r\n          }\r\n        });\r\n        //console.log(animation.getDuration(), animation.getDuration(true));\r\n\r\n        return lottieLoader.waitForFirstFrame(_animation);\r\n      })\r\n    ]);\r\n  }\r\n\r\n  public remove() {\r\n    if(this.animation) this.animation.remove();\r\n    if(this.idleAnimation) this.idleAnimation.remove();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import { IS_MOBILE_SAFARI, IS_SAFARI } from \"../environment/userAgent\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class PasswordInputField extends InputField {\r\n  public passwordVisible = false;\r\n  public toggleVisible: HTMLElement;\r\n  public onVisibilityClickAdditional: () => void;\r\n\r\n  constructor(options: InputFieldOptions = {}) {\r\n    super({\r\n      plainText: true,\r\n      ...options\r\n    });\r\n\r\n    const input = this.input as HTMLInputElement;\r\n    input.type = 'password';\r\n    input.setAttribute('required', '');\r\n    input.name = 'notsearch_password';\r\n    input.autocomplete = 'off';\r\n\r\n    /* if(IS_SAFARI && !IS_MOBILE_SAFARI) {\r\n      input.setAttribute('readonly', '');\r\n      input.addEventListener('focus', () => {\r\n        input.removeAttribute('readonly');\r\n      }, {once: true});\r\n    } */\r\n\r\n    // * https://stackoverflow.com/a/35949954/6758968\r\n    const stealthy = document.createElement('input');\r\n    stealthy.classList.add('stealthy');\r\n    stealthy.tabIndex = -1;\r\n    stealthy.type = 'password';\r\n    input.parentElement.prepend(stealthy);\r\n    input.parentElement.insertBefore(stealthy.cloneNode(), input.nextSibling);\r\n\r\n    const toggleVisible = this.toggleVisible = document.createElement('span');\r\n    toggleVisible.classList.add('toggle-visible', 'tgico');\r\n\r\n    this.container.classList.add('input-field-password');\r\n    this.container.append(toggleVisible);\r\n\r\n    toggleVisible.addEventListener('click', this.onVisibilityClick);\r\n    toggleVisible.addEventListener('touchend', this.onVisibilityClick);\r\n  }\r\n\r\n  public onVisibilityClick = (e: Event) => {\r\n    cancelEvent(e);\r\n    this.passwordVisible = !this.passwordVisible;\r\n\r\n    this.toggleVisible.classList.toggle('eye-hidden', this.passwordVisible);\r\n    (this.input as HTMLInputElement).type = this.passwordVisible ? 'text' : 'password';\r\n    this.onVisibilityClickAdditional && this.onVisibilityClickAdditional();\r\n  };\r\n}\r\n","export default function bufferConcats(...args: (ArrayBuffer | Uint8Array | number[])[]) {\n  const length = args.reduce((acc, v) => acc + ((v as ArrayBuffer).byteLength || (v as Uint8Array).length), 0);\n\n  const tmp = new Uint8Array(length);\n  \n  let lastLength = 0;\n  args.forEach(b => {\n    tmp.set(b instanceof ArrayBuffer ? new Uint8Array(b) : b, lastLength);\n    lastLength += (b as ArrayBuffer).byteLength || (b as Uint8Array).length;\n  });\n\n  return tmp/* .buffer */;\n}\n","export default function bytesCmp(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\n  const len = bytes1.length;\n  if(len !== bytes2.length) {\n    return false;\n  }\n\n  for(let i = 0; i < len; ++i) {\n    if(bytes1[i] !== bytes2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import IMAGE_MIME_TYPES_SUPPORTED from \"./imageMimeTypesSupport\";\nimport VIDEO_MIME_TYPES_SUPPORTED from \"./videoMimeTypesSupport\";\n\nconst arr = [...IMAGE_MIME_TYPES_SUPPORTED].concat([...VIDEO_MIME_TYPES_SUPPORTED]);\n\nconst MEDIA_MIME_TYPES_SUPPORTED = new Set(arr);\n\nexport default MEDIA_MIME_TYPES_SUPPORTED;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function setInnerHTML(elem: Element, html: string) {\r\n  elem.setAttribute('dir', 'auto');\r\n  elem.innerHTML = html;\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { Message, MessageAction } from \"../layer\";\nimport type { MyMessage } from \"../lib/appManagers/appMessagesManager\";\nimport forEachReverse from \"./array/forEachReverse\";\n\nexport default function filterChatPhotosMessages(value: {\n  count: number;\n  next_rate: number;\n  offset_id_offset: number;\n  history: MyMessage[];\n}) {\n  forEachReverse(value.history, (message, idx, arr) => {\n    if(!((message as Message.messageService).action as MessageAction.messageActionChatEditPhoto).photo) {\n      arr.splice(idx, 1);\n      if(value.count !== undefined) {\n        --value.count;\n      }\n    }\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport forEachReverse from \"./array/forEachReverse\";\nimport safeAssign from \"./object/safeAssign\";\n\nexport type ListLoaderOptions<T extends {}, P extends {}> = {\n  loadMore: ListLoader<T, P>['loadMore'],\n  loadCount?: ListLoader<T, P>['loadCount'],\n  loadWhenLeft?: ListLoader<T, P>['loadWhenLeft'],\n  processItem?: ListLoader<T, P>['processItem'],\n  onJump?: ListLoader<T, P>['onJump'],\n  onLoadedMore?: ListLoader<T, P>['onLoadedMore']\n};\n\nexport type ListLoaderResult<T extends {}> = {count: number, items: any[]};\nexport default class ListLoader<T extends {}, P extends {}> {\n  public current: T;\n  public previous: T[] = [];\n  public next: T[] = [];\n  public count: number;\n  public reverse = false; // reverse means next = higher msgid\n\n  protected loadMore: (anchor: T, older: boolean, loadCount: number) => Promise<ListLoaderResult<T>>;\n  protected processItem: (item: P) => T;\n  protected loadCount = 50;\n  protected loadWhenLeft = 20;\n  \n  public onJump: (item: T, older: boolean) => void;\n  public onLoadedMore: () => void;\n\n  protected loadedAllUp = false;\n  protected loadedAllDown = false;\n  protected loadPromiseUp: Promise<void>;\n  protected loadPromiseDown: Promise<void>;\n\n  constructor(options: ListLoaderOptions<T, P>) {\n    safeAssign(this, options);\n  }\n\n  public setTargets(previous: T[], next: T[], reverse: boolean) {\n    this.previous = previous;\n    this.next = next;\n    this.reverse = reverse;\n  }\n\n  public get index() {\n    return this.count !== undefined ? this.previous.length : -1;\n  }\n\n  /* public filter(callback: (item: T, idx: number, arr: T[]) => boolean) {\n    const filter = (item: T, idx: number, arr: T[]) => {\n      if(!callback(item, idx, arr)) {\n        arr.splice(idx, 1);\n      }\n    };\n\n    forEachReverse(this.previous, filter);\n    forEachReverse(this.next, filter);\n  } */\n\n  public reset(loadedAll = false) {\n    this.current = undefined;\n    this.previous = [];\n    this.next = [];\n    this.loadedAllUp = this.loadedAllDown = loadedAll;\n    this.loadPromiseUp = this.loadPromiseDown = null;\n  }\n\n  public go(length: number, dispatchJump = true) {\n    let items: T[], item: T;\n    if(length > 0) {\n      items = this.next.splice(0, length);\n      item = items.pop();\n      if(!item) {\n        return;\n      }\n\n      this.previous.push(this.current, ...items);\n    } else {\n      items = this.previous.splice(this.previous.length + length, -length);\n      item = items.shift();\n      if(!item) {\n        return;\n      }\n\n      this.next.unshift(...items, this.current);\n    }\n\n    if(this.next.length < this.loadWhenLeft) {\n      this.load(!this.reverse);\n    }\n\n    if(this.previous.length < this.loadWhenLeft) {\n      this.load(this.reverse);\n    }\n\n    this.current = item;\n    dispatchJump && this.onJump && this.onJump(item, length > 0);\n    return this.current;\n  }\n\n  // нет смысла делать проверку для reverse и loadMediaPromise\n  public load(older: boolean) {\n    if(older && this.loadedAllDown) return Promise.resolve();\n    else if(!older && this.loadedAllUp) return Promise.resolve();\n\n    if(older && this.loadPromiseDown) return this.loadPromiseDown;\n    else if(!older && this.loadPromiseUp) return this.loadPromiseUp;\n\n    let anchor: T;\n    if(older) {\n      anchor = this.reverse ? this.previous[0] : this.next[this.next.length - 1];\n    } else {\n      anchor = this.reverse ? this.next[this.next.length - 1] : this.previous[0];\n    }\n\n    const promise = this.loadMore(anchor, older, this.loadCount).then(result => {\n      if((older && this.loadPromiseDown !== promise) || (!older && this.loadPromiseUp !== promise)) {\n        return;\n      }\n\n      if(result.items.length < this.loadCount) {\n        if(older) this.loadedAllDown = true;\n        else this.loadedAllUp = true;\n      }\n\n      if(this.count === undefined) {\n        this.count = result.count || result.items.length;\n      }\n\n      const method = older ? result.items.forEach.bind(result.items) : forEachReverse.bind(null, result.items);\n      method((item: any) => {\n        const processed = this.processItem ? this.processItem(item) : item;\n\n        if(!processed) return;\n\n        if(older) {\n          if(this.reverse) this.previous.unshift(processed);\n          else this.next.push(processed);\n        } else {\n          if(this.reverse) this.next.push(processed);\n          else this.previous.unshift(processed);\n        }\n      });\n\n      this.onLoadedMore && this.onLoadedMore();\n    }, () => {}).then(() => {\n      if(older) this.loadPromiseDown = null;\n      else this.loadPromiseUp = null;\n    });\n\n    if(older) this.loadPromiseDown = promise;\n    else this.loadPromiseUp = promise;\n\n    return promise;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { MediaSearchContext } from \"../components/appMediaPlaybackController\";\nimport type { SearchSuperContext } from \"../components/appSearchSuper.\";\nimport type { Message } from \"../layer\";\nimport appMessagesIdsManager from \"../lib/appManagers/appMessagesIdsManager\";\nimport appMessagesManager, { MyMessage } from \"../lib/appManagers/appMessagesManager\";\nimport rootScope from \"../lib/rootScope\";\nimport forEachReverse from \"./array/forEachReverse\";\nimport filterChatPhotosMessages from \"./filterChatPhotosMessages\";\nimport ListLoader, { ListLoaderOptions } from \"./listLoader\";\n\nexport default class SearchListLoader<Item extends {mid: number, peerId: PeerId}> extends ListLoader<Item, Message.message> {\n  public searchContext: MediaSearchContext;\n  public onEmptied: () => void;\n\n  constructor(options: Omit<ListLoaderOptions<Item, Message.message>, 'loadMore'> & {onEmptied?: () => void} = {}) {\n    super({\n      ...options,\n      loadMore: (anchor, older, loadCount) => {\n        const backLimit = older ? 0 : loadCount;\n        let maxId = this.current?.mid;\n\n        if(anchor) maxId = anchor.mid;\n        if(!older) maxId = appMessagesIdsManager.incrementMessageId(maxId, 1);\n\n        return appMessagesManager.getSearch({\n          ...this.searchContext,\n          peerId: this.searchContext.peerId || anchor?.peerId,\n          maxId,\n          limit: backLimit ? 0 : loadCount,\n          backLimit\n        }).then(value => {\n          /* if(DEBUG) {\n            this.log('loaded more media by maxId:', maxId, value, older, this.reverse);\n          } */\n\n          if(this.searchContext.inputFilter._ === 'inputMessagesFilterChatPhotos') {\n            filterChatPhotosMessages(value);\n          }\n\n          if(value.next_rate) {\n            this.searchContext.nextRate = value.next_rate;\n          }\n\n          return {count: value.count, items: value.history};\n        });\n      },\n      processItem: (message) => {\n        const filtered = this.filterMids([message.mid]);\n        if(!filtered.length) {\n          return;\n        }\n\n        return options.processItem(message);\n      }\n    });\n\n    rootScope.addEventListener('history_delete', this.onHistoryDelete);\n    rootScope.addEventListener('history_multiappend', this.onHistoryMultiappend);\n    rootScope.addEventListener('message_sent', this.onMessageSent);\n  }\n\n  protected filterMids(mids: number[]) {\n    const storage = this.searchContext.isScheduled ? \n      appMessagesManager.getScheduledMessagesStorage(this.searchContext.peerId) : \n      appMessagesManager.getMessagesStorage(this.searchContext.peerId);\n     const filtered = appMessagesManager.filterMessagesByInputFilter(this.searchContext.inputFilter._, mids, storage, mids.length) as Message.message[];\n     return filtered;\n  }\n\n  protected onHistoryDelete = ({peerId, msgs}: {peerId: PeerId, msgs: Set<number>}) => {\n    const shouldBeDeleted = (item: Item) => item.peerId === peerId && msgs.has(item.mid);\n    const filter = (item: Item, idx: number, arr: Item[]) => {\n      if(shouldBeDeleted(item)) {\n        arr.splice(idx, 1);\n      }\n    };\n\n    forEachReverse(this.previous, filter);\n    forEachReverse(this.next, filter);\n\n    if(this.current && shouldBeDeleted(this.current)) {\n      /* if(this.go(1)) {\n        this.previous.splice(this.previous.length - 1, 1);\n      } else if(this.go(-1)) {\n        this.next.splice(0, 1);\n      } else  */if(this.onEmptied) {\n        this.onEmptied();\n      }\n    }\n  };\n\n  protected onHistoryMultiappend = (obj: {\n    [peerId: string]: Set<number>;\n  }) => {\n    if(this.searchContext.folderId !== undefined) {\n      return;\n    }\n\n    // because it's reversed\n    if(!this.loadedAllUp || this.loadPromiseUp) {\n      return;\n    }\n\n    const mids = obj[this.searchContext.peerId];\n    if(!mids) {\n      return;\n    }\n\n    const sorted = Array.from(mids).sort((a, b) => a - b);\n    const filtered = this.filterMids(sorted);\n    const targets = filtered.map(message => this.processItem(message)).filter(Boolean);\n    if(targets.length) {\n      this.next.push(...targets);\n    }\n  };\n\n  protected onMessageSent = ({message}: {message: MyMessage}) => {\n    this.onHistoryMultiappend({\n      [message.peerId]: new Set([message.mid])\n    });\n  };\n\n  public setSearchContext(context: SearchSuperContext) {\n    this.searchContext = context;\n\n    if(this.searchContext.folderId !== undefined) {\n      this.loadedAllUp = true;\n\n      if(this.searchContext.nextRate === undefined) {\n        this.loadedAllDown = true;\n      }\n    }\n\n    if(this.searchContext.inputFilter._ === 'inputMessagesFilterChatPhotos') {\n      this.loadedAllUp = true;\n    }\n\n    if(!this.searchContext.useSearch) {\n      this.loadedAllDown = this.loadedAllUp = true;\n    }\n  }\n\n  public reset() {\n    super.reset();\n    this.searchContext = undefined;\n  }\n\n  public cleanup() {\n    this.reset();\n    rootScope.removeEventListener('history_delete', this.onHistoryDelete);\n    rootScope.removeEventListener('history_multiappend', this.onHistoryMultiappend);\n    rootScope.removeEventListener('message_sent', this.onMessageSent);\n    this.onEmptied = undefined;\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appDialogsManager from \"../lib/appManagers/appDialogsManager\";\r\nimport Scrollable from \"./scrollable\";\r\nimport appMessagesManager from \"../lib/appManagers/appMessagesManager\";\r\nimport InputSearch from \"./inputSearch\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\nimport { i18n, LangPackKey } from \"../lib/langPack\";\r\n\r\nexport class SearchGroup {\r\n  container: HTMLDivElement;\r\n  nameEl: HTMLDivElement;\r\n  list: HTMLUListElement;\r\n\r\n  constructor(public name: LangPackKey | boolean, public type: string, private clearable = true, className?: string, clickable = true, public autonomous = true, public onFound?: () => void) {\r\n    this.list = appDialogsManager.createChatList();\r\n    this.container = document.createElement('div');\r\n    if(className) this.container.className = className;\r\n    \r\n    if(name) {\r\n      this.nameEl = document.createElement('div');\r\n      this.nameEl.classList.add('search-group__name');\r\n      if(typeof(name) === 'string') {\r\n        this.nameEl.append(i18n(name));\r\n      }\r\n      this.container.append(this.nameEl);\r\n    }\r\n    \r\n    this.container.classList.add('search-group', 'search-group-' + type);\r\n    this.container.append(this.list);\r\n    this.container.style.display = 'none';\r\n\r\n    if(clickable) {\r\n      appDialogsManager.setListClickListener(this.list, onFound, undefined, autonomous);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.container.style.display = 'none';\r\n\r\n    if(this.clearable) {\r\n      this.list.innerHTML = '';\r\n    }\r\n  }\r\n\r\n  setActive() {\r\n    this.container.style.display = '';\r\n  }\r\n\r\n  toggle() {\r\n    if(this.list.childElementCount) {\r\n      this.setActive();\r\n    } else {\r\n      this.clear();\r\n    }\r\n  }\r\n}\r\n\r\nexport type SearchGroupType = 'contacts' | 'globalContacts' | 'messages' | string;\r\n\r\nexport default class AppSearch {\r\n  private minMsgId = 0;\r\n  private loadedCount = -1;\r\n  private foundCount = -1;\r\n\r\n  private searchPromise: Promise<void> = null;\r\n  private searchTimeout: number = 0;\r\n\r\n  private query = '';\r\n\r\n  private listsContainer: HTMLDivElement = null;\r\n\r\n  private peerId: PeerId; // 0 - means global\r\n  private threadId = 0;\r\n\r\n  private scrollable: Scrollable;\r\n\r\n  constructor(public container: HTMLElement, public searchInput: InputSearch, public searchGroups: {[group in SearchGroupType]: SearchGroup}, public onSearch?: (count: number) => void) {\r\n    this.scrollable = new Scrollable(this.container);\r\n    this.listsContainer = this.scrollable.container as HTMLDivElement;\r\n    for(let i in this.searchGroups) {\r\n      this.listsContainer.append(this.searchGroups[i as SearchGroupType].container);\r\n    }\r\n\r\n    if(this.searchGroups.messages) {\r\n      this.scrollable.setVirtualContainer(this.searchGroups.messages.list);\r\n    }\r\n\r\n    this.searchInput.onChange = (value) => {\r\n      /* if(!value.trim()) {\r\n        //this.peerId = 0;\r\n        return;\r\n      } */\r\n      \r\n      this.query = value;\r\n      this.reset(false);\r\n      this.searchMore();\r\n    };\r\n\r\n    this.scrollable.onScrolledBottom = () => {\r\n      if(!this.query.trim()) return;\r\n    \r\n      if(!this.searchTimeout) {\r\n        this.searchTimeout = window.setTimeout(() => {\r\n          this.searchMore();\r\n          this.searchTimeout = 0;\r\n        }, 0);\r\n      }\r\n    };\r\n  }\r\n\r\n  public reset(all = true) {\r\n    if(all) {\r\n      this.searchInput.value = '';\r\n      this.query = '';\r\n      this.peerId = undefined;\r\n      this.threadId = 0;\r\n    }\r\n\r\n    this.minMsgId = 0;\r\n    this.loadedCount = -1;\r\n    this.foundCount = -1;\r\n\r\n    for(let i in this.searchGroups) {\r\n      this.searchGroups[i as SearchGroupType].clear();\r\n    }\r\n    \r\n    this.searchPromise = null;\r\n  }\r\n\r\n  public beginSearch(peerId?: PeerId, threadId = 0, query = '') {\r\n    this.peerId = peerId;\r\n    this.threadId = threadId;\r\n\r\n    if(this.query !== query) {\r\n      this.searchInput.inputField.value = query;\r\n    }\r\n\r\n    this.searchInput.input.focus();\r\n  }\r\n\r\n  public searchMore() {\r\n    if(this.searchPromise) return this.searchPromise;\r\n    \r\n    const query = this.query;\r\n    \r\n    if(!query.trim()) {\r\n      this.onSearch && this.onSearch(0);\r\n      return;\r\n    }\r\n    \r\n    if(this.foundCount !== -1 && this.loadedCount >= this.foundCount) {\r\n      return Promise.resolve();\r\n    }\r\n    \r\n    const maxId = this.minMsgId || 0;\r\n\r\n    return this.searchPromise = appMessagesManager.getSearch({\r\n      peerId: this.peerId, \r\n      query, \r\n      inputFilter: {_: 'inputMessagesFilterEmpty'}, \r\n      maxId, \r\n      limit: 20,\r\n      threadId: this.threadId\r\n    }).then(res => {\r\n      this.searchPromise = null;\r\n      \r\n      if(this.searchInput.value !== query) {\r\n        return;\r\n      }\r\n      \r\n      //console.log('input search result:', this.peerId, query, null, maxId, 20, res);\r\n      \r\n      const {count, history} = res;\r\n      \r\n      if(history.length && history[0].mid === this.minMsgId) {\r\n        history.shift();\r\n      }\r\n      \r\n      const searchGroup = this.searchGroups.messages;\r\n\r\n      history.forEach((message) => {\r\n        try {\r\n          const peerId = this.peerId ? message.fromId : message.peerId;\r\n          appDialogsManager.addDialogAndSetLastMessage({\r\n            peerId, \r\n            container: this.scrollable/* searchGroup.list */, \r\n            drawStatus: false,\r\n            avatarSize: 54,\r\n            meAsSaved: false,\r\n            message,\r\n            query\r\n          });\r\n        } catch(err) {\r\n          console.error('[appSearch] render search result', err);\r\n        }\r\n      });\r\n\r\n      searchGroup.toggle();\r\n      \r\n      this.minMsgId = history.length && history[history.length - 1].mid;\r\n      \r\n      if(this.loadedCount === -1) {\r\n        this.loadedCount = 0;\r\n      }\r\n      this.loadedCount += history.length;\r\n      \r\n      if(this.foundCount === -1) {\r\n        this.foundCount = count;\r\n\r\n        if(searchGroup.nameEl) {\r\n          replaceContent(searchGroup.nameEl, i18n(count ? 'Chat.Search.MessagesFound' : 'Chat.Search.NoMessagesFound', [count]));\r\n        }\r\n        \r\n        this.onSearch && this.onSearch(this.foundCount);\r\n      }\r\n    }).catch(err => {\r\n      console.error('search error', err);\r\n      this.searchPromise = null;\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n//import { getRichValue } from \"../helpers/dom\";\r\nimport { LangPackKey } from \"../lib/langPack\";\r\nimport InputField from \"./inputField\";\r\n\r\nexport default class InputSearch {\r\n  public container: HTMLElement;\r\n  public input: HTMLElement;\r\n  public inputField: InputField;\r\n  public clearBtn: HTMLElement;\r\n\r\n  public prevValue = '';\r\n  public timeout = 0;\r\n  public onChange: (value: string) => void;\r\n  public onClear: () => void;\r\n\r\n  constructor(placeholder: LangPackKey, onChange?: (value: string) => void) {\r\n    this.inputField = new InputField({\r\n      placeholder,\r\n      plainText: true\r\n    });\r\n\r\n    this.container = this.inputField.container;\r\n    this.container.classList.remove('input-field');\r\n    this.container.classList.add('input-search');\r\n\r\n    this.onChange = onChange;\r\n\r\n    this.input = this.inputField.input;\r\n    this.input.classList.add('input-search-input');\r\n\r\n    const searchIcon = document.createElement('i');\r\n    searchIcon.classList.add('tgico', 'tgico-search');\r\n\r\n    this.clearBtn = document.createElement('i');\r\n    this.clearBtn.classList.add('tgico', 'btn-icon', 'tgico-close');\r\n\r\n    this.input.addEventListener('input', this.onInput);\r\n    this.clearBtn.addEventListener('click', this.onClearClick);\r\n\r\n    this.container.append(searchIcon, this.clearBtn);\r\n  }\r\n  \r\n  onInput = () => {\r\n    if(!this.onChange) return;\r\n\r\n    let value = this.value;\r\n\r\n    //this.input.classList.toggle('is-empty', !value.trim());\r\n\r\n    if(value !== this.prevValue) {\r\n      this.prevValue = value;\r\n      clearTimeout(this.timeout);\r\n      this.timeout = window.setTimeout(() => {\r\n        this.onChange(value);\r\n      }, 200);\r\n    }\r\n  };\r\n\r\n  onClearClick = () => {\r\n    this.value = '';\r\n    this.onChange && this.onChange('');\r\n    this.onClear && this.onClear();\r\n  };\r\n\r\n  get value() {\r\n    return this.inputField.value;\r\n  }\r\n\r\n  set value(value: string) {\r\n    this.prevValue = value;\r\n    clearTimeout(this.timeout);\r\n    this.inputField.value = value;\r\n  }\r\n\r\n  public remove() {\r\n    clearTimeout(this.timeout);\r\n    this.input.removeEventListener('input', this.onInput);\r\n    this.clearBtn.removeEventListener('click', this.onClearClick);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Button from \"./button\";\r\n\r\nconst ButtonIcon = (className?: string, options: Partial<{noRipple: true, onlyMobile: true, asDiv: boolean}> = {}) => {\r\n  const button = Button('btn-icon', {\r\n    icon: className || undefined, \r\n    ...options\r\n  });\r\n\r\n  return button;\r\n};\r\n\r\nexport default ButtonIcon;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport EventListenerBase from \"../helpers/eventListenerBase\";\r\nimport ListenerSetter from \"../helpers/listenerSetter\";\r\nimport { i18n, LangPackKey } from \"../lib/langPack\";\r\nimport ButtonIcon from \"./buttonIcon\";\r\nimport Scrollable from \"./scrollable\";\r\nimport SidebarSlider from \"./slider\";\r\n\r\nexport interface SliderTab {\r\n  onOpen?: () => void,\r\n  onOpenAfterTimeout?: () => void,\r\n  onClose?: () => void,\r\n  onCloseAfterTimeout?: () => void\r\n}\r\n\r\nexport interface SliderSuperTabConstructable {\r\n  new(slider: SidebarSlider, destroyable: boolean): SliderSuperTab;\r\n}\r\n\r\nexport interface SliderSuperTabEventableConstructable {\r\n  new(slider: SidebarSlider, destroyable: boolean): SliderSuperTabEventable;\r\n}\r\n\r\nexport default class SliderSuperTab implements SliderTab {\r\n  public container: HTMLElement;\r\n\r\n  public header: HTMLElement;\r\n  public closeBtn: HTMLElement;\r\n  public title: HTMLElement;\r\n\r\n  public content: HTMLElement;\r\n  public scrollable: Scrollable;\r\n\r\n  public slider: SidebarSlider;\r\n  public destroyable: boolean;\r\n  public listenerSetter: ListenerSetter;\r\n\r\n  constructor(slider: SidebarSlider, destroyable?: boolean) {\r\n    this._constructor(slider, destroyable);\r\n  }\r\n\r\n  public _constructor(slider: SidebarSlider, destroyable = true): any {\r\n    this.slider = slider;\r\n    this.destroyable = destroyable;\r\n\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('tabs-tab', 'sidebar-slider-item');\r\n\r\n    // * Header\r\n    this.header = document.createElement('div');\r\n    this.header.classList.add('sidebar-header');\r\n\r\n    this.closeBtn = ButtonIcon('left sidebar-close-button', {noRipple: true});\r\n    this.title = document.createElement('div');\r\n    this.title.classList.add('sidebar-header__title');\r\n    this.header.append(this.closeBtn, this.title);\r\n\r\n    // * Content\r\n    this.content = document.createElement('div');\r\n    this.content.classList.add('sidebar-content');\r\n\r\n    this.scrollable = new Scrollable(this.content, undefined, undefined, true);\r\n\r\n    this.container.append(this.header, this.content);\r\n\r\n    this.slider.addTab(this);\r\n    \r\n    this.listenerSetter = new ListenerSetter();\r\n  }\r\n\r\n  public close() {\r\n    return this.slider.closeTab(this);\r\n  }\r\n\r\n  public async open(...args: any[]) {\r\n    if(this.init) {\r\n      try {\r\n        const result = this.init();\r\n        this.init = null;\r\n\r\n        if(result instanceof Promise) {\r\n          await result;\r\n        }\r\n      } catch(err) {\r\n        console.error('open tab error', err);\r\n      }\r\n    }\r\n\r\n    this.slider.selectTab(this);\r\n  }\r\n\r\n  protected init(): Promise<any> | any {\r\n\r\n  }\r\n\r\n  public onCloseAfterTimeout() {\r\n    if(this.destroyable) { // ! WARNING, пока что это будет работать только с самой последней внутренней вкладкой !\r\n      this.slider.tabs.delete(this);\r\n      this.container.remove();\r\n    }\r\n\r\n    if(this.listenerSetter) {\r\n      this.listenerSetter.removeAll();\r\n    }\r\n  }\r\n\r\n  protected setTitle(key: LangPackKey) {\r\n    this.title.innerHTML = '';\r\n    this.title.append(i18n(key));\r\n  }\r\n}\r\n\r\nexport class SliderSuperTabEventable extends SliderSuperTab {\r\n  public eventListener: EventListenerBase<{\r\n    destroy: () => void\r\n  }>;\r\n\r\n  constructor(slider: SidebarSlider) {\r\n    super(slider);\r\n    this.eventListener = new EventListenerBase();\r\n  }\r\n\r\n  onCloseAfterTimeout() {\r\n    this.eventListener.dispatchEvent('destroy');\r\n    this.eventListener.cleanup();\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n}\r\n\r\n/* // @ts-ignore\r\ninterface SliderSuperEventsTab extends SliderSuperTab, EventListenerBase<{}> {\r\n  superConstructor: (...args: any[]) => any;\r\n}\r\nclass SliderSuperEventsTab implements SliderSuperEventsTab {\r\n  constructor(slider: SidebarSlider) {\r\n    this.superConstructor([slider, true]);\r\n  }\r\n}\r\napplyMixins(SliderSuperEventsTab, [SliderSuperTab, EventListenerBase]);\r\n\r\n(window as any).lol = SliderSuperEventsTab\r\n\r\nexport {SliderSuperEventsTab}; */\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { horizontalMenu } from \"./horizontalMenu\";\r\nimport { TransitionSlider } from \"./transition\";\r\nimport appNavigationController, { NavigationItem } from \"./appNavigationController\";\r\nimport SliderSuperTab, { SliderSuperTabConstructable, SliderTab } from \"./sliderTab\";\r\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\r\nimport indexOfAndSplice from \"../helpers/array/indexOfAndSplice\";\r\nimport safeAssign from \"../helpers/object/safeAssign\";\r\n\r\nconst TRANSITION_TIME = 250;\r\n\r\nexport type {SliderTab};\r\nexport {SliderSuperTab};\r\n\r\nexport default class SidebarSlider {\r\n  protected _selectTab: ReturnType<typeof horizontalMenu>;\r\n  public historyTabIds: (number | SliderSuperTab)[] = []; // * key is any, since right sidebar is ugly nowz\r\n  public tabsContainer: HTMLElement;\r\n  public sidebarEl: HTMLElement;\r\n  public tabs: Map<any, SliderTab>; // * key is any, since right sidebar is ugly now\r\n  private canHideFirst = false;\r\n  private navigationType: NavigationItem['type']\r\n\r\n  constructor(options: {\r\n    sidebarEl: SidebarSlider['sidebarEl'],\r\n    tabs?: SidebarSlider['tabs'],\r\n    canHideFirst?: SidebarSlider['canHideFirst'],\r\n    navigationType: SidebarSlider['navigationType']\r\n  }) {\r\n    safeAssign(this, options);\r\n\r\n    if(!this.tabs) {\r\n      this.tabs = new Map();\r\n    }\r\n\r\n    this.tabsContainer = this.sidebarEl.querySelector('.sidebar-slider');\r\n    this._selectTab = TransitionSlider(this.tabsContainer, 'navigation', TRANSITION_TIME);\r\n    if(!this.canHideFirst) {\r\n      this._selectTab(0);\r\n    }\r\n\r\n    Array.from(this.sidebarEl.querySelectorAll('.sidebar-close-button') as any as HTMLElement[]).forEach(el => {\r\n      attachClickEvent(el, this.onCloseBtnClick);\r\n    });\r\n  }\r\n\r\n  public onCloseBtnClick = () => {\r\n    const item = appNavigationController.findItemByType(this.navigationType);\r\n    if(item) {\r\n      appNavigationController.back(this.navigationType);\r\n    } else if(this.historyTabIds.length) {\r\n      this.closeTab(this.historyTabIds[this.historyTabIds.length - 1]);\r\n    }\r\n    // this.closeTab();\r\n  };\r\n\r\n  public closeTab = (id?: number | SliderSuperTab, animate?: boolean, isNavigation?: boolean) => {\r\n    if(id !== undefined && this.historyTabIds[this.historyTabIds.length - 1] !== id) {\r\n      return false;\r\n    }\r\n\r\n    //console.log('sidebar-close-button click:', this.historyTabIDs);\r\n    const closingId = this.historyTabIds.pop(); // pop current\r\n    this.onCloseTab(closingId, animate, isNavigation);\r\n\r\n    const tab = this.historyTabIds[this.historyTabIds.length - 1];\r\n    this._selectTab(tab !== undefined ? (tab instanceof SliderSuperTab ? tab.container : tab) : (this.canHideFirst ? -1 : 0), animate);\r\n    return true;\r\n  };\r\n\r\n  public selectTab(id: number | SliderSuperTab): boolean {\r\n    /* if(id instanceof SliderSuperTab) {\r\n      id = id.id;\r\n    } */\r\n\r\n    if(this.historyTabIds[this.historyTabIds.length - 1] === id) {\r\n      return false;\r\n    }\r\n\r\n    const tab: SliderTab = id instanceof SliderSuperTab ? id : this.tabs.get(id);\r\n    if(tab) {\r\n      if(tab.onOpen) {\r\n        tab.onOpen();\r\n      }\r\n  \r\n      if(tab.onOpenAfterTimeout) {\r\n        setTimeout(() => {\r\n          tab.onOpenAfterTimeout();\r\n        }, TRANSITION_TIME);\r\n      }\r\n    }\r\n\r\n    //if(!this.canHideFirst || this.historyTabIds.length) {\r\n      appNavigationController.pushItem({\r\n        type: this.navigationType, \r\n        onPop: (canAnimate) => {\r\n          this.closeTab(undefined, canAnimate, true);\r\n          return true;\r\n        }\r\n      });\r\n    //}\r\n    \r\n    this.historyTabIds.push(id);\r\n    this._selectTab(id instanceof SliderSuperTab ? id.container : id);\r\n    return true;\r\n  }\r\n\r\n  public removeTabFromHistory(id: number | SliderSuperTab) {\r\n    indexOfAndSplice(this.historyTabIds, id);\r\n    this.onCloseTab(id, undefined);\r\n  }\r\n\r\n  public sliceTabsUntilTab(tabConstructor: SliderSuperTabConstructable, preserveTab: SliderSuperTab) {\r\n    for(let i = this.historyTabIds.length - 1; i >= 0; --i) {\r\n      const tab = this.historyTabIds[i];\r\n      if(tab === preserveTab) continue;\r\n      else if(tab instanceof tabConstructor) {\r\n        break;\r\n      }\r\n\r\n      this.removeTabFromHistory(tab);\r\n      //appNavigationController.removeByType(this.navigationType, true);\r\n    }\r\n  }\r\n\r\n  public getTab(tabConstructor: SliderSuperTabConstructable) {\r\n    return this.historyTabIds.find(t => t instanceof tabConstructor) as SliderSuperTab;\r\n  }\r\n\r\n  public isTabExists(tabConstructor: SliderSuperTabConstructable) {\r\n    return !!this.getTab(tabConstructor);\r\n  }\r\n\r\n  protected onCloseTab(id: number | SliderSuperTab, animate: boolean, isNavigation?: boolean) {\r\n    if(!isNavigation) {\r\n      appNavigationController.removeByType(this.navigationType, true);\r\n    }\r\n\r\n    const tab: SliderTab = id instanceof SliderSuperTab ? id : this.tabs.get(id);\r\n    if(tab) {\r\n      if(tab.onClose) {\r\n        tab.onClose();\r\n      }\r\n\r\n      if(tab.onCloseAfterTimeout) {\r\n        setTimeout(() => {\r\n          tab.onCloseAfterTimeout();\r\n        }, TRANSITION_TIME);\r\n      }\r\n    }\r\n  }\r\n\r\n  public addTab(tab: SliderSuperTab) {\r\n    if(!tab.container.parentElement) {\r\n      this.tabsContainer.append(tab.container);\r\n\r\n      if(tab.closeBtn) {\r\n        tab.closeBtn.addEventListener('click', this.onCloseBtnClick);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { CancellablePromise } from \"../helpers/cancellablePromise\";\r\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\r\nimport type { InputFile } from \"../layer\";\r\nimport PopupAvatar from \"./popups/avatar\";\r\n\r\nexport default class AvatarEdit {\r\n  public container: HTMLElement;\r\n  private canvas: HTMLCanvasElement;\r\n  private icon: HTMLSpanElement;\r\n\r\n  constructor(onChange: (uploadAvatar: () => CancellablePromise<InputFile>) => void) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('avatar-edit');\r\n\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.classList.add('avatar-edit-canvas');\r\n\r\n    this.icon = document.createElement('span');\r\n    this.icon.classList.add('tgico', 'tgico-cameraadd');\r\n\r\n    this.container.append(this.canvas, this.icon);\r\n\r\n    attachClickEvent(this.container, () => {\r\n      new PopupAvatar().open(this.canvas, onChange);\r\n    });\r\n  }\r\n\r\n  public clear() {\r\n    const ctx = this.canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Button from \"./button\";\r\n\r\nconst ButtonCorner = (options: Partial<{className: string, icon: string, noRipple: true, onlyMobile: true, asDiv: boolean}> = {}) => {\r\n  const button = Button('btn-circle btn-corner z-depth-1' + (options.className ? ' ' + options.className : ''), options);\r\n  return button;\r\n};\r\n\r\nexport default ButtonCorner;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appSidebarLeft, { SettingSection } from \"..\";\r\nimport { InputFile } from \"../../../layer\";\r\nimport appChatsManager from \"../../../lib/appManagers/appChatsManager\";\r\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport InputField from \"../../inputField\";\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport AvatarEdit from \"../../avatarEdit\";\r\nimport I18n from \"../../../lib/langPack\";\r\nimport ButtonCorner from \"../../buttonCorner\";\r\n\r\ninterface OpenStreetMapInterface {\r\n  place_id?: number;\r\n  license?: string;\r\n  osm_type?: string;\r\n  osm_id?: number;\r\n  lat?: string;\r\n  lon?: string;\r\n  display_name: string;\r\n  address?: object;\r\n  boundingbox?: object;\r\n}\r\n\r\nexport default class AppNewGroupTab extends SliderSuperTab {\r\n  private avatarEdit: AvatarEdit;\r\n  private uploadAvatar: () => Promise<InputFile> = null;\r\n  private peerIds: PeerId[];\r\n  private isGeoChat: boolean = false;\r\n  private nextBtn: HTMLButtonElement;\r\n  private groupNameInputField: InputField;\r\n  private list: HTMLUListElement;\r\n  private groupLocationInputField: InputField;\r\n  private userLocationCoords: {lat: number, long: number};\r\n  private userLocationAddress: string;\r\n\r\n  protected init() {\r\n    this.container.classList.add('new-group-container');\r\n    this.setTitle('NewGroup');\r\n\r\n    this.avatarEdit = new AvatarEdit((_upload) => {\r\n      this.uploadAvatar = _upload;\r\n    });\r\n\r\n    const section = new SettingSection({});\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    this.groupNameInputField = new InputField({\r\n      label: 'CreateGroup.NameHolder',\r\n      maxLength: 128\r\n    });\r\n\r\n    this.groupLocationInputField = new InputField({\r\n      label: 'ChatLocation',\r\n      name: 'location',\r\n      canBeEdited: false\r\n    });\r\n\r\n    inputWrapper.append(\r\n      this.groupNameInputField.container,\r\n      this.groupLocationInputField.container\r\n    );\r\n\r\n    this.groupNameInputField.input.addEventListener('input', () => {\r\n      const value = this.groupNameInputField.value;\r\n      let valueCheck = !!value.length && !this.groupNameInputField.input.classList.contains('error');\r\n      if(this.isGeoChat) valueCheck = valueCheck && !!this.userLocationCoords && !!this.userLocationAddress;\r\n      this.nextBtn.classList.toggle('is-visible', !!valueCheck);\r\n    });\r\n\r\n    this.nextBtn = ButtonCorner({icon: 'arrow_next'});\r\n\r\n    this.nextBtn.addEventListener('click', () => {\r\n      const title = this.groupNameInputField.value;\r\n\r\n      if(this.isGeoChat){\r\n        if(!this.userLocationAddress || !this.userLocationCoords) return;\r\n        appChatsManager.createChannel({\r\n          title, \r\n          about: '', \r\n          geo_point: {\r\n            _: 'inputGeoPoint',\r\n            ...this.userLocationCoords, \r\n          },\r\n          address: this.userLocationAddress,\r\n          megagroup: true\r\n        }).then((chatId) => {\r\n          if(this.uploadAvatar) {\r\n            this.uploadAvatar().then((inputFile) => {\r\n              appChatsManager.editPhoto(chatId, inputFile);\r\n            });\r\n          }\r\n\r\n          if(this.peerIds.length){\r\n            appChatsManager.inviteToChannel(chatId, this.peerIds);\r\n          }\r\n          \r\n          appSidebarLeft.removeTabFromHistory(this);\r\n          appSidebarLeft.selectTab(0);\r\n        });\r\n      } else {\r\n        this.nextBtn.disabled = true;\r\n        appChatsManager.createChat(title, this.peerIds.map(peerId => peerId.toUserId())).then((chatId) => {\r\n          if(this.uploadAvatar) {\r\n            this.uploadAvatar().then((inputFile) => {\r\n              appChatsManager.editPhoto(chatId, inputFile);\r\n            });\r\n          }\r\n          \r\n          appSidebarLeft.removeTabFromHistory(this);\r\n          appSidebarLeft.selectTab(0);\r\n        });\r\n      }\r\n    });\r\n\r\n    const chatsSection = new SettingSection({\r\n      name: 'Members',\r\n      nameArgs: [this.peerIds.length]\r\n    });\r\n\r\n    const list = this.list = appDialogsManager.createChatList({\r\n      new: true\r\n    });\r\n\r\n    chatsSection.content.append(list);\r\n\r\n    section.content.append(this.avatarEdit.container, inputWrapper);\r\n\r\n    this.content.append(this.nextBtn);\r\n    this.scrollable.append(section.container, chatsSection.container);\r\n  }\r\n\r\n  public onCloseAfterTimeout() {\r\n    this.avatarEdit.clear();\r\n    this.uploadAvatar = null;\r\n    this.groupNameInputField.value = '';\r\n    this.groupLocationInputField.container.classList.add('hide');\r\n    this.nextBtn.disabled = false;\r\n  }\r\n\r\n  public open(peerIds: PeerId[], isGeoChat: boolean = false) {\r\n    this.isGeoChat = isGeoChat;\r\n    this.peerIds = peerIds;\r\n    const result = super.open();\r\n    result.then(() => {\r\n      if(isGeoChat) {\r\n        this.setTitle('NearbyCreateGroup');\r\n        this.groupLocationInputField.container.classList.remove('hide');\r\n        this.groupLocationInputField.setValueSilently(I18n.format('Loading', true));\r\n        this.startLocating();\r\n      } else {\r\n        this.groupLocationInputField.container.classList.add('hide');\r\n      }\r\n\r\n      this.peerIds.forEach(userId => {\r\n        const {dom} = appDialogsManager.addDialogNew({\r\n          dialog: userId,\r\n          container: this.list,\r\n          drawStatus: false,\r\n          rippleEnabled: false,\r\n          avatarSize: 48\r\n        });\r\n\r\n        dom.lastMessageSpan.append(appUsersManager.getUserStatusString(userId));\r\n      });\r\n    });\r\n    \r\n    return result;\r\n  }\r\n\r\n  private startLocating(){\r\n    navigator.geolocation.getCurrentPosition((location) => {\r\n      this.userLocationCoords = {\r\n        lat: location.coords.latitude,\r\n        long: location.coords.longitude\r\n      };\r\n\r\n      let uri = \"https://nominatim.openstreetmap.org/reverse\";\r\n      uri += \"?lat=\"+location.coords.latitude;\r\n      uri += \"&lon=\"+location.coords.longitude;\r\n      uri += \"&format=json\";\r\n      uri += \"&addressdetails=1\";\r\n      uri += \"&accept-language=en\";\r\n      fetch(uri)\r\n      .then((response) => response.json())\r\n      .then((response: OpenStreetMapInterface) => {\r\n        this.userLocationAddress = response.display_name;\r\n        this.groupLocationInputField.setValueSilently(response.display_name);\r\n      });\r\n    }, (error) => {\r\n      if(error instanceof GeolocationPositionError) {\r\n        this.groupLocationInputField.setValueSilently('Location permission denied. Please retry later.');\r\n      } else {\r\n        this.groupLocationInputField.setValueSilently('An error has occurred. Please retry later.');\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../lib/rootScope\";\r\nimport appMessagesManager from \"../lib/appManagers/appMessagesManager\";\r\nimport appDocsManager, {MyDocument} from \"../lib/appManagers/appDocsManager\";\r\nimport { CancellablePromise, deferredPromise } from \"../helpers/cancellablePromise\";\r\nimport { IS_APPLE, IS_SAFARI } from \"../environment/userAgent\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport appDownloadManager from \"../lib/appManagers/appDownloadManager\";\r\nimport simulateEvent from \"../helpers/dom/dispatchEvent\";\r\nimport type { SearchSuperContext } from \"./appSearchSuper.\";\r\nimport { DocumentAttribute, Message, PhotoSize } from \"../layer\";\r\nimport appPhotosManager from \"../lib/appManagers/appPhotosManager\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\r\nimport appAvatarsManager from \"../lib/appManagers/appAvatarsManager\";\r\nimport appPeersManager from \"../lib/appManagers/appPeersManager\";\r\nimport I18n from \"../lib/langPack\";\r\nimport SearchListLoader from \"../helpers/searchListLoader\";\r\nimport { onMediaLoad } from \"../helpers/files\";\r\nimport copy from \"../helpers/object/copy\";\r\nimport deepEqual from \"../helpers/object/deepEqual\";\r\n\r\n// TODO: Safari: проверить стрим, включить его и сразу попробовать включить видео или другую песню\r\n// TODO: Safari: попробовать замаскировать подгрузку последнего чанка\r\n// TODO: Safari: пофиксить момент, когда заканчивается песня и пытаешься включить её заново - прогресс сразу в конце\r\n\r\nexport type MediaItem = {mid: number, peerId: PeerId};\r\n\r\ntype HTMLMediaElement = HTMLAudioElement | HTMLVideoElement;\r\n\r\nconst SHOULD_USE_SAFARI_FIX = (() => {\r\n  try {\r\n    return IS_SAFARI && +navigator.userAgent.match(/ Version\\/(\\d+)/)[1] < 14;\r\n  } catch(err) {\r\n    return false;\r\n  }\r\n})();\r\n\r\nconst SEEK_OFFSET = 10;\r\n\r\nexport type MediaSearchContext = SearchSuperContext & Partial<{\r\n  isScheduled: boolean,\r\n  useSearch: boolean\r\n}>;\r\n\r\ntype MediaDetails = {\r\n  peerId: PeerId, \r\n  mid: number, \r\n  docId: DocId, \r\n  clean?: boolean,\r\n  isScheduled?: boolean, \r\n  isSingle?: boolean\r\n};\r\n\r\nexport type PlaybackMediaType = 'voice' | 'video' | 'audio';\r\n\r\nclass AppMediaPlaybackController {\r\n  private container: HTMLElement;\r\n  private media: Map<PeerId, Map<number, HTMLMediaElement>> = new Map();\r\n  private scheduled: AppMediaPlaybackController['media'] = new Map();\r\n  private mediaDetails: Map<HTMLMediaElement, MediaDetails> = new Map();\r\n  private playingMedia: HTMLMediaElement;\r\n  private playingMediaType: PlaybackMediaType;\r\n\r\n  private waitingMediaForLoad: Map<PeerId, Map<number, CancellablePromise<void>>> = new Map();\r\n  private waitingScheduledMediaForLoad: AppMediaPlaybackController['waitingMediaForLoad'] = new Map();\r\n  private waitingDocumentsForLoad: {[docId: string]: Set<HTMLMediaElement>} = {};\r\n  \r\n  public willBePlayedMedia: HTMLMediaElement;\r\n  private searchContext: MediaSearchContext;\r\n\r\n  private listLoader: SearchListLoader<MediaItem>;\r\n\r\n  public volume: number;\r\n  public muted: boolean;\r\n  public playbackRate: number;\r\n  private _volume = 1;\r\n  private _muted = false;\r\n  private _playbackRate = 1;\r\n  private lockedSwitchers: boolean;\r\n  private playbackRates: Record<PlaybackMediaType, number> = {\r\n    voice: 1,\r\n    video: 1,\r\n    audio: 1\r\n  };\r\n\r\n  constructor() {\r\n    this.container = document.createElement('div');\r\n    //this.container.style.cssText = 'position: absolute; top: -10000px; left: -10000px;';\r\n    this.container.style.cssText = 'display: none;';\r\n    document.body.append(this.container);\r\n\r\n    if(navigator.mediaSession) {\r\n      const actions: {[action in MediaSessionAction]?: MediaSessionActionHandler} = {\r\n        play: this.play,\r\n        pause: this.pause,\r\n        stop: this.stop,\r\n        seekbackward: this.seekBackward,\r\n        seekforward: this.seekForward,\r\n        seekto: this.seekTo,\r\n        previoustrack: this.previous,\r\n        nexttrack: this.next\r\n      };\r\n\r\n      for(const action in actions) {\r\n        try {\r\n          navigator.mediaSession.setActionHandler(action as MediaSessionAction, actions[action as MediaSessionAction]);\r\n        } catch(err) {\r\n          console.warn('MediaSession action is not supported:', action);\r\n        }\r\n      }\r\n    }\r\n\r\n    rootScope.addEventListener('document_downloaded', (doc) => {\r\n      const set = this.waitingDocumentsForLoad[doc.id];\r\n      if(set) {\r\n        for(const media of set) {\r\n          this.onMediaDocumentLoad(media);\r\n        }\r\n      }\r\n    });\r\n\r\n    const properties: {[key: PropertyKey]: PropertyDescriptor} = {};\r\n    const keys = [\r\n      'volume' as const, \r\n      'muted' as const, \r\n      'playbackRate' as const\r\n    ];\r\n    keys.forEach(key => {\r\n      const _key = ('_' + key) as `_${typeof key}`;\r\n      properties[key] = {\r\n        get: () => this[_key],\r\n        set: (value: number | boolean) => {\r\n          if(this[_key] === value) {\r\n            return;\r\n          }\r\n\r\n          // @ts-ignore\r\n          this[_key] = value;\r\n          if(this.playingMedia) {\r\n            // @ts-ignore\r\n            this.playingMedia[key] = value;\r\n          }\r\n\r\n          if(key === 'playbackRate' && this.playingMediaType !== undefined) {\r\n            this.playbackRates[this.playingMediaType] = value as number;\r\n          }\r\n\r\n          this.dispatchPlaybackParams();\r\n        }\r\n      };\r\n    });\r\n    Object.defineProperties(this, properties);\r\n  }\r\n\r\n  private dispatchPlaybackParams() {\r\n    const {volume, muted, playbackRate} = this;\r\n    rootScope.dispatchEvent('media_playback_params', {\r\n      volume, muted, playbackRate\r\n    });\r\n  }\r\n\r\n  public seekBackward = (details: MediaSessionActionDetails) => {\r\n    const media = this.playingMedia;\r\n    if(media) {\r\n      media.currentTime = Math.max(0, media.currentTime - (details.seekOffset || SEEK_OFFSET));\r\n    }\r\n  };\r\n\r\n  public seekForward = (details: MediaSessionActionDetails) => {\r\n    const media = this.playingMedia;\r\n    if(media) {\r\n      media.currentTime = Math.min(media.duration, media.currentTime + (details.seekOffset || SEEK_OFFSET));\r\n    }\r\n  };\r\n\r\n  public seekTo = (details: MediaSessionActionDetails) => {\r\n    const media = this.playingMedia;\r\n    if(media) {\r\n      media.currentTime = details.seekTime;\r\n    }\r\n  };\r\n\r\n  public addMedia(message: Message.message, autoload: boolean, clean?: boolean): HTMLMediaElement {\r\n    const {peerId, mid} = message;\r\n\r\n    const isScheduled = !!message.pFlags.is_scheduled;\r\n    const s = isScheduled ? this.scheduled : this.media;\r\n    let storage = s.get(message.peerId);\r\n    if(!storage) {\r\n      s.set(message.peerId, storage = new Map());\r\n    }\r\n\r\n    let media = storage.get(mid);\r\n    if(media) {\r\n      return media;\r\n    }\r\n\r\n    const doc: MyDocument = appMessagesManager.getMediaFromMessage(message);\r\n    storage.set(mid, media = document.createElement(doc.type === 'round' || doc.type === 'video' ? 'video' : 'audio'));\r\n    //const source = document.createElement('source');\r\n    //source.type = doc.type === 'voice' && !opusDecodeController.isPlaySupported() ? 'audio/wav' : doc.mime_type;\r\n\r\n    if(doc.type === 'round') {\r\n      media.setAttribute('playsinline', 'true');\r\n      //media.muted = true;\r\n    }\r\n\r\n    const details: MediaDetails = {\r\n      peerId,\r\n      mid,\r\n      docId: doc.id,\r\n      clean,\r\n      isScheduled: message.pFlags.is_scheduled\r\n    };\r\n\r\n    this.mediaDetails.set(media, details);\r\n\r\n    //media.autoplay = true;\r\n    media.volume = 1;\r\n    //media.append(source);\r\n\r\n    this.container.append(media);\r\n\r\n    media.addEventListener('play', this.onPlay);\r\n    media.addEventListener('pause', this.onPause);\r\n    media.addEventListener('ended', this.onEnded);\r\n\r\n    if(doc.type !== 'audio' && message?.pFlags.media_unread && message.fromId !== rootScope.myId) {\r\n      media.addEventListener('timeupdate', () => {\r\n        appMessagesManager.readMessages(peerId, [mid]);\r\n      }, {once: true});\r\n    }\r\n    \r\n    /* const onError = (e: Event) => {\r\n      //console.log('appMediaPlaybackController: video onError', e);\r\n\r\n      if(this.nextMid === mid) {\r\n        this.loadSiblingsMedia(peerId, doc.type as MediaType, mid).then(() => {\r\n          if(this.nextMid && storage[this.nextMid]) {\r\n            storage[this.nextMid].play();\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    media.addEventListener('error', onError); */\r\n\r\n    const deferred = deferredPromise<void>();\r\n    if(autoload) {\r\n      deferred.resolve();\r\n    } else {\r\n      const w = message.pFlags.is_scheduled ? this.waitingScheduledMediaForLoad : this.waitingMediaForLoad;\r\n      let waitingStorage = w.get(peerId);\r\n      if(!waitingStorage) {\r\n        w.set(peerId, waitingStorage = new Map());\r\n      }\r\n\r\n      waitingStorage.set(mid, deferred);\r\n    }\r\n\r\n    deferred.then(() => {\r\n      //media.autoplay = true;\r\n      //console.log('will set media url:', media, doc, doc.type, doc.url);\r\n\r\n      const cacheContext = appDownloadManager.getCacheContext(doc);\r\n      if(doc.supportsStreaming || cacheContext.url) {\r\n        this.onMediaDocumentLoad(media);\r\n      } else {\r\n        let set = this.waitingDocumentsForLoad[doc.id];\r\n        if(!set) {\r\n          set = this.waitingDocumentsForLoad[doc.id] = new Set();\r\n        }\r\n\r\n        set.add(media);\r\n        appDocsManager.downloadDoc(doc);\r\n      }\r\n    }/* , onError */);\r\n    \r\n    return media;\r\n  }\r\n\r\n  public getMedia(peerId: PeerId, mid: number, isScheduled?: boolean) {\r\n    const s = (isScheduled ? this.scheduled : this.media).get(peerId);\r\n    return s?.get(mid);\r\n  }\r\n\r\n  private onMediaDocumentLoad = (media: HTMLMediaElement) => {\r\n    const details = this.mediaDetails.get(media);\r\n    const doc = appDocsManager.getDoc(details.docId);\r\n    if(doc.type === 'audio' && doc.supportsStreaming && SHOULD_USE_SAFARI_FIX) {\r\n      this.handleSafariStreamable(media);\r\n    }\r\n\r\n    // setTimeout(() => {\r\n    const cacheContext = appDownloadManager.getCacheContext(doc);\r\n    media.src = cacheContext.url;\r\n\r\n    if(this.playingMedia === media) {\r\n      media.playbackRate = this.playbackRate;\r\n    }\r\n    // }, doc.supportsStreaming ? 500e3 : 0);\r\n\r\n    const set = this.waitingDocumentsForLoad[doc.id];\r\n    if(set) {\r\n      set.delete(media);\r\n\r\n      if(!set.size) {\r\n        delete this.waitingDocumentsForLoad[doc.id];\r\n      }\r\n    }\r\n  };\r\n\r\n  // safari подгрузит последний чанк и песня включится,\r\n  // при этом этот чанк нельзя руками отдать из SW, потому что браузер тогда теряется\r\n  private handleSafariStreamable(media: HTMLMediaElement) {\r\n    media.addEventListener('play', () => {\r\n      /* if(media.readyState === 4) { // https://developer.mozilla.org/ru/docs/Web/API/XMLHttpRequest/readyState\r\n        return;\r\n      } */\r\n\r\n      //media.volume = 0;\r\n      const currentTime = media.currentTime;\r\n      //this.setSafariBuffering(media, true);\r\n\r\n      media.addEventListener('progress', () => {\r\n        media.currentTime = media.duration - 1;\r\n\r\n        media.addEventListener('progress', () => {\r\n          media.currentTime = currentTime;\r\n          //media.volume = 1;\r\n          //this.setSafariBuffering(media, false);\r\n\r\n          if(!media.paused) {\r\n            media.play()/* .catch(() => {}) */;\r\n          }\r\n        }, {once: true});\r\n      }, {once: true});\r\n    }/* , {once: true} */);\r\n  }\r\n\r\n  public resolveWaitingForLoadMedia(peerId: PeerId, mid: number, isScheduled?: boolean) {\r\n    const w = isScheduled ? this.waitingScheduledMediaForLoad : this.waitingMediaForLoad;\r\n    const storage = w.get(peerId);\r\n    if(!storage) {\r\n      return;\r\n    }\r\n\r\n    const promise = storage.get(mid);\r\n    if(promise) {\r\n      promise.resolve();\r\n      storage.delete(mid);\r\n\r\n      if(!storage.size) {\r\n        w.delete(peerId);\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Only for audio\r\n   */\r\n  public isSafariBuffering(media: HTMLMediaElement) {\r\n    /// @ts-ignore\r\n    return !!media.safariBuffering;\r\n  }\r\n\r\n  private setSafariBuffering(media: HTMLMediaElement, value: boolean) {\r\n    // @ts-ignore\r\n    media.safariBuffering = value;\r\n  }\r\n\r\n  private async setNewMediadata(message: Message.message, playingMedia = this.playingMedia) {\r\n    await onMediaLoad(playingMedia, undefined, false); // have to wait for load, otherwise on macOS won't set\r\n\r\n    const doc = appMessagesManager.getMediaFromMessage(message) as MyDocument;\r\n    \r\n    const artwork: MediaImage[] = [];\r\n\r\n    const isVoice = doc.type === 'voice' || doc.type === 'round';\r\n    let title = '', artist = '';\r\n\r\n    if(doc.thumbs?.length) {\r\n      const size = doc.thumbs[doc.thumbs.length - 1];\r\n      if(!(size as PhotoSize.photoStrippedSize).bytes) {\r\n        const cacheContext = appDownloadManager.getCacheContext(doc, size.type);\r\n\r\n        if(cacheContext.url) {\r\n          artwork.push({\r\n            src: cacheContext.url,\r\n            sizes: `${(size as PhotoSize.photoSize).w}x${(size as PhotoSize.photoSize).h}`,\r\n            type: 'image/jpeg'\r\n          });\r\n        } else {\r\n          const download = appPhotosManager.preloadPhoto(doc, size);\r\n          download.then(() => {\r\n            if(this.playingMedia !== playingMedia || !cacheContext.url) {\r\n              return;\r\n            }\r\n\r\n            this.setNewMediadata(message);\r\n          });\r\n        }\r\n      }\r\n    } else if(isVoice) {\r\n      const peerId = message.fromId || message.peerId;\r\n      const peerPhoto = appPeersManager.getPeerPhoto(peerId);\r\n      if(peerPhoto) {\r\n        const result = appAvatarsManager.loadAvatar(peerId, peerPhoto, 'photo_small');\r\n        if(result.cached) {\r\n          const url = await result.loadPromise;\r\n          artwork.push({\r\n            src: url,\r\n            sizes: '160x160',\r\n            type: 'image/jpeg'\r\n          });\r\n        } else {\r\n          result.loadPromise.then((url) => {\r\n            if(this.playingMedia !== playingMedia || !url) {\r\n              return;\r\n            }\r\n  \r\n            this.setNewMediadata(message);\r\n          });\r\n        }\r\n      }\r\n\r\n      title = appPeersManager.getPeerTitle(peerId, true, false);\r\n      artist = I18n.format(doc.type === 'voice' ? 'AttachAudio' : 'AttachRound', true);\r\n    }\r\n\r\n    if(!isVoice) {\r\n      const attribute = doc.attributes.find(attribute => attribute._ === 'documentAttributeAudio') as DocumentAttribute.documentAttributeAudio;\r\n      title = attribute && attribute.title || doc.file_name;\r\n      artist = attribute && attribute.performer;\r\n    }\r\n\r\n    if(!artwork.length) {\r\n      if(IS_APPLE) {\r\n        if(IS_TOUCH_SUPPORTED) {\r\n          artwork.push({\r\n            src: `assets/img/apple-touch-icon-precomposed.png`,\r\n            sizes: '180x180',\r\n            type: 'image/png'\r\n          });\r\n        } else {\r\n          artwork.push({\r\n            src: `assets/img/apple-touch-icon.png`,\r\n            sizes: '180x180',\r\n            type: 'image/png'\r\n          });\r\n        }\r\n      } else {\r\n        [72, 96, 144, 192, 256, 384, 512].forEach(size => {\r\n          const sizes = `${size}x${size}`;\r\n          artwork.push({\r\n            src: `assets/img/android-chrome-${sizes}.png`,\r\n            sizes,\r\n            type: 'image/png'\r\n          });\r\n        });\r\n      }\r\n    }\r\n\r\n    const metadata = new MediaMetadata({\r\n      title,\r\n      artist,\r\n      artwork\r\n    });\r\n\r\n    navigator.mediaSession.metadata = metadata;\r\n  }\r\n\r\n  private getMessageByMedia(media: HTMLMediaElement): Message.message {\r\n    const details = this.mediaDetails.get(media);\r\n    const {peerId, mid} = details;\r\n    const message = details.isScheduled ? appMessagesManager.getScheduledMessageByPeer(peerId, mid) : appMessagesManager.getMessageByPeer(peerId, mid);\r\n    return message;\r\n  }\r\n\r\n  private onPlay = (e?: Event) => {\r\n    const media = e.target as HTMLMediaElement;\r\n    const details = this.mediaDetails.get(media);\r\n    const {peerId, mid} = details;\r\n\r\n    //console.log('appMediaPlaybackController: video playing', this.currentPeerId, this.playingMedia, media);\r\n\r\n    const message = this.getMessageByMedia(media);\r\n\r\n    const previousMedia = this.playingMedia;\r\n    if(previousMedia !== media) {\r\n      this.stop();\r\n\r\n      const verify = (element: MediaItem) => element.mid === mid && element.peerId === peerId;\r\n      if(!this.listLoader.current || !verify(this.listLoader.current)) {\r\n        let idx = this.listLoader.previous.findIndex(verify);\r\n        let jumpLength: number;\r\n        if(idx !== -1) {\r\n          jumpLength = -(this.listLoader.previous.length - idx);\r\n        } else {\r\n          idx = this.listLoader.next.findIndex(verify);\r\n          if(idx !== -1) {\r\n            jumpLength = idx + 1;\r\n          }\r\n        }\r\n  \r\n        if(idx !== -1) {\r\n          if(jumpLength) {\r\n            this.listLoader.go(jumpLength, false);\r\n          }\r\n        } else {\r\n          this.setTargets({peerId, mid});\r\n        }\r\n      }\r\n\r\n      this.setMedia(media, message);\r\n    }\r\n\r\n    // audio_pause не успеет сработать без таймаута\r\n    setTimeout(() => {\r\n      if(this.playingMedia !== media) {\r\n        return;\r\n      }\r\n\r\n      rootScope.dispatchEvent('media_play', this.getPlayingDetails());\r\n    }, 0);\r\n  };\r\n\r\n  public getPlayingDetails() {\r\n    const {playingMedia} = this;\r\n    if(!playingMedia) {\r\n      return;\r\n    }\r\n\r\n    const message = this.getMessageByMedia(playingMedia);\r\n    return {\r\n      doc: appMessagesManager.getMediaFromMessage(message),\r\n      message,\r\n      media: playingMedia\r\n    };\r\n  }\r\n\r\n  private onPause = (e?: Event) => {\r\n    /* const target = e.target as HTMLMediaElement;\r\n    if(!isInDOM(target)) {\r\n      this.container.append(target);\r\n      target.play();\r\n      return;\r\n    } */\r\n\r\n    rootScope.dispatchEvent('media_pause');\r\n  };\r\n\r\n  private onEnded = (e?: Event) => {\r\n    if(!e.isTrusted) {\r\n      return;\r\n    }\r\n\r\n    this.onPause(e);\r\n\r\n    //console.log('on media end');\r\n\r\n    if(!this.next()) {\r\n      this.stop();\r\n      rootScope.dispatchEvent('media_stop');\r\n    }\r\n  };\r\n\r\n  public toggle(play?: boolean) {\r\n    if(!this.playingMedia) {\r\n      return false;\r\n    }\r\n\r\n    if(play === undefined) {\r\n      play = this.playingMedia.paused;\r\n    }\r\n\r\n    if(this.playingMedia.paused !== play) {\r\n      return false;\r\n    }\r\n\r\n    if(play) {\r\n      this.playingMedia.play();\r\n    } else {\r\n      this.playingMedia.pause();\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public play = () => {\r\n    return this.toggle(true);\r\n  };\r\n\r\n  public pause = () => {\r\n    return this.toggle(false);\r\n  };\r\n\r\n  public stop = () => {\r\n    const media = this.playingMedia;\r\n    if(!media) {\r\n      return false;\r\n    }\r\n\r\n    if(!media.paused) {\r\n      media.pause();\r\n    }\r\n\r\n    media.currentTime = 0;\r\n    simulateEvent(media, 'ended');\r\n\r\n    const details = this.mediaDetails.get(media);\r\n    if(details?.clean) {\r\n      media.src = '';\r\n      const peerId = details.peerId;\r\n      const s = details.isScheduled ? this.scheduled : this.media;\r\n      const storage = s.get(peerId);\r\n      if(storage) {\r\n        storage.delete(details.mid);\r\n  \r\n        if(!storage.size) {\r\n          s.delete(peerId);\r\n        }\r\n      }\r\n  \r\n      media.remove();\r\n\r\n      this.mediaDetails.delete(media);\r\n    }\r\n\r\n    this.playingMedia = undefined;\r\n    this.playingMediaType = undefined;\r\n\r\n    return true;\r\n  };\r\n\r\n  public playItem = (item: MediaItem) => {\r\n    const {peerId, mid} = item;\r\n    const isScheduled = this.searchContext.isScheduled;\r\n    const media = this.getMedia(peerId, mid, isScheduled);\r\n\r\n    /* if(isSafari) {\r\n      media.autoplay = true;\r\n    } */\r\n\r\n    media.play();\r\n    \r\n    setTimeout(() => {\r\n      this.resolveWaitingForLoadMedia(peerId, mid, isScheduled);\r\n    }, 0);\r\n  };\r\n\r\n  public next = () => {\r\n    return !this.lockedSwitchers && this.listLoader.go(1);\r\n  };\r\n\r\n  public previous = () => {\r\n    const media = this.playingMedia;\r\n    if(media && (media.currentTime > 5 || !this.listLoader.previous.length)) {\r\n      media.currentTime = 0;\r\n      this.toggle(true);\r\n      return;\r\n    }\r\n\r\n    return !this.lockedSwitchers && this.listLoader.go(-1);\r\n  };\r\n\r\n  public willBePlayed(media: HTMLMediaElement) {\r\n    this.willBePlayedMedia = media;\r\n  }\r\n\r\n  public setSearchContext(context: MediaSearchContext) {\r\n    if(deepEqual(this.searchContext, context)) {\r\n      return false;\r\n    }\r\n\r\n    this.searchContext = copy(context); // {_: type === 'audio' ? 'inputMessagesFilterMusic' : 'inputMessagesFilterRoundVoice'}\r\n    return true;\r\n  }\r\n\r\n  public getSearchContext() {\r\n    return this.searchContext;\r\n  }\r\n\r\n  public setTargets(current: MediaItem, prev?: MediaItem[], next?: MediaItem[]) {\r\n    if(!this.listLoader) {\r\n      this.listLoader = new SearchListLoader({\r\n        loadCount: 10,\r\n        loadWhenLeft: 5,\r\n        processItem: (message: Message.message) => {\r\n          this.addMedia(message, false);\r\n          return {peerId: message.peerId, mid: message.mid};\r\n        },\r\n        onJump: (item, older) => {\r\n          this.playItem(item);\r\n        },\r\n        onEmptied: () => {\r\n          rootScope.dispatchEvent('media_stop');\r\n          this.stop();\r\n        }\r\n      });\r\n    } else {\r\n      this.listLoader.reset();\r\n    }\r\n\r\n    const reverse = this.searchContext.folderId !== undefined ? false : true;\r\n    if(prev) {\r\n      this.listLoader.setTargets(prev, next, reverse);\r\n    } else {\r\n      this.listLoader.reverse = reverse;\r\n    }\r\n\r\n    this.listLoader.setSearchContext(this.searchContext);\r\n    this.listLoader.current = current;\r\n\r\n    this.listLoader.load(true);\r\n    this.listLoader.load(false);\r\n  }\r\n\r\n  private getPlaybackMediaTypeFromMessage(message: Message.message) {\r\n    const doc = appMessagesManager.getMediaFromMessage(message) as MyDocument;\r\n    let mediaType: PlaybackMediaType = 'audio';\r\n    if(doc?.type) {\r\n      if(doc.type === 'voice' || doc.type === 'round') {\r\n        mediaType = 'voice';\r\n      } else if(doc.type === 'video') {\r\n        mediaType = 'video';\r\n      }\r\n    }\r\n\r\n    return mediaType;\r\n  }\r\n\r\n  public setMedia(media: HTMLMediaElement, message: Message.message) {\r\n    const mediaType = this.getPlaybackMediaTypeFromMessage(message);\r\n\r\n    this._playbackRate = this.playbackRates[mediaType];\r\n\r\n    this.playingMedia = media;\r\n    this.playingMediaType = mediaType;\r\n    this.playingMedia.volume = this.volume;\r\n    this.playingMedia.muted = this.muted;\r\n    this.playingMedia.playbackRate = this.playbackRate;\r\n\r\n    if('mediaSession' in navigator) {\r\n      this.setNewMediadata(message);\r\n    }\r\n  }\r\n\r\n  public setSingleMedia(media?: HTMLMediaElement, message?: Message.message) {\r\n    const playingMedia = this.playingMedia;\r\n\r\n    const wasPlaying = this.pause();\r\n\r\n    this.willBePlayed(undefined);\r\n    if(media) this.setMedia(media, message);\r\n    else this.playingMedia = undefined;\r\n    this.toggleSwitchers(false);\r\n\r\n    return () => {\r\n      this.toggleSwitchers(true);\r\n\r\n      if(playingMedia) {\r\n        if(this.mediaDetails.get(playingMedia)) {\r\n          this.setMedia(playingMedia, this.getMessageByMedia(playingMedia));\r\n        } else {\r\n          this.next() || this.previous();\r\n        }\r\n      }\r\n\r\n      if(media && this.playingMedia === media) {\r\n        this.stop();\r\n      }\r\n\r\n      if(wasPlaying) {\r\n        this.play();\r\n      }\r\n    };\r\n  }\r\n\r\n  public toggleSwitchers(enabled: boolean) {\r\n    this.lockedSwitchers = !enabled;\r\n  }\r\n}\r\n\r\nconst appMediaPlaybackController = new AppMediaPlaybackController();\r\nMOUNT_CLASS_TO.appMediaPlaybackController = appMediaPlaybackController;\r\nexport default appMediaPlaybackController;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport type GrabEvent = {x: number, y: number, isTouch?: boolean, event: TouchEvent | MouseEvent};\r\n\r\nexport default function attachGrabListeners(element: HTMLElement, \r\n  onStart: (position: GrabEvent) => void, \r\n  onMove: (position: GrabEvent) => void, \r\n  onEnd?: (position: GrabEvent) => void) {\r\n  // * Mouse\r\n  const onMouseMove = (event: MouseEvent) => {\r\n    onMove({x: event.pageX, y: event.pageY, event});\r\n  };\r\n\r\n  const onMouseUp = (event: MouseEvent) => {\r\n    document.removeEventListener('mousemove', onMouseMove);\r\n    element.addEventListener('mousedown', onMouseDown, {once: true});\r\n    onEnd && onEnd({x: event.pageX, y: event.pageY, event});\r\n  };\r\n\r\n  const onMouseDown = (event: MouseEvent) => {\r\n    if(event.button !== 0) {\r\n      element.addEventListener('mousedown', onMouseDown, {once: true});\r\n      return;\r\n    }\r\n\r\n    onStart({x: event.pageX, y: event.pageY, event});\r\n    onMouseMove(event);\r\n\r\n    document.addEventListener('mousemove', onMouseMove);\r\n    document.addEventListener('mouseup', onMouseUp, {once: true});\r\n  };\r\n\r\n  element.addEventListener('mousedown', onMouseDown, {once: true});\r\n\r\n  // * Touch\r\n  const onTouchMove = (event: TouchEvent) => {\r\n    event.preventDefault();\r\n    onMove({x: event.touches[0].clientX, y: event.touches[0].clientY, isTouch: true, event});\r\n  };\r\n\r\n  const onTouchEnd = (event: TouchEvent) => {\r\n    document.removeEventListener('touchmove', onTouchMove);\r\n    element.addEventListener('touchstart', onTouchStart, {passive: false, once: true});\r\n    onEnd && onEnd({x: event.touches[0].clientX, y: event.touches[0].clientY, isTouch: true, event});\r\n  };\r\n\r\n  const onTouchStart = (event: TouchEvent) => {\r\n    onStart({x: event.touches[0].clientX, y: event.touches[0].clientY, isTouch: true, event});\r\n    onTouchMove(event);\r\n\r\n    document.addEventListener('touchmove', onTouchMove, {passive: false});\r\n    document.addEventListener('touchend', onTouchEnd, {passive: false, once: true});\r\n  };\r\n\r\n  element.addEventListener('touchstart', onTouchStart, {passive: false, once: true});\r\n\r\n  return () => {\r\n    element.removeEventListener('mousedown', onMouseDown);\r\n    document.removeEventListener('mousemove', onMouseMove);\r\n    document.removeEventListener('mouseup', onMouseUp);\r\n\r\n    element.removeEventListener('touchstart', onTouchStart);\r\n    document.removeEventListener('touchmove', onTouchMove);\r\n    document.removeEventListener('touchend', onTouchEnd);\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport attachGrabListeners, { GrabEvent } from \"../helpers/dom/attachGrabListeners\";\r\nimport clamp from \"../helpers/number/clamp\";\r\nimport safeAssign from \"../helpers/object/safeAssign\";\r\n\r\nexport default class RangeSelector {\r\n  public container: HTMLDivElement;\r\n  protected filled: HTMLDivElement;\r\n  protected seek: HTMLInputElement;\r\n\r\n  public mousedown = false;\r\n  protected rect: DOMRect;\r\n  protected _removeListeners: () => void;\r\n\r\n  private events: Partial<{\r\n    //onMouseMove: ProgressLine['onMouseMove'],\r\n    onMouseDown: RangeSelector['onMouseDown'],\r\n    onMouseUp: RangeSelector['onMouseUp'],\r\n    onScrub: (value: number) => void\r\n  }> = {};\r\n\r\n  protected decimals: number;\r\n\r\n  protected step: number;\r\n  protected min: number;\r\n  protected max: number;\r\n  protected withTransition = false;\r\n  protected useTransform = false;\r\n  protected vertical = false;\r\n\r\n  constructor(\r\n    options: {\r\n      step: RangeSelector['step'],\r\n      min: RangeSelector['min'],\r\n      max: RangeSelector['max'],\r\n      withTransition?: RangeSelector['withTransition'],\r\n      useTransform?: RangeSelector['useTransform'],\r\n      vertical?: RangeSelector['vertical']\r\n    }, \r\n    value = 0\r\n  ) {\r\n    safeAssign(this, options);\r\n\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('progress-line');\r\n\r\n    // there is no sense in using transition with transform, because it is updating every frame\r\n    if(this.useTransform) {\r\n      this.container.classList.add('use-transform');\r\n    } else if(this.withTransition) {\r\n      this.container.classList.add('with-transition');\r\n    }\r\n\r\n    this.filled = document.createElement('div');\r\n    this.filled.classList.add('progress-line__filled');\r\n\r\n    const seek = this.seek = document.createElement('input');\r\n    seek.classList.add('progress-line__seek');\r\n    //seek.setAttribute('max', '0');\r\n    seek.type = 'range';\r\n    seek.step = '' + this.step;\r\n    seek.min = '' + this.min;\r\n    seek.max = '' + this.max;\r\n    seek.value = '' + value;\r\n\r\n    if(value) {\r\n      this.setProgress(value);\r\n    }\r\n\r\n    const stepStr = '' + this.step;\r\n    const index = stepStr.indexOf('.');\r\n    this.decimals = index === -1 ? 0 : stepStr.length - index - 1;\r\n\r\n    //this.setListeners();\r\n\r\n    this.container.append(this.filled, seek);\r\n  }\r\n\r\n  get value() {\r\n    return +this.seek.value;\r\n  }\r\n\r\n  public setHandlers(events: RangeSelector['events']) {\r\n    this.events = events;\r\n  }\r\n\r\n  protected onMouseMove = (event: GrabEvent) => {\r\n    this.scrub(event);\r\n  };\r\n\r\n  protected onMouseDown = (event: GrabEvent) => {\r\n    this.rect = this.container.getBoundingClientRect();\r\n    this.mousedown = true;\r\n    this.scrub(event);\r\n    this.container.classList.add('is-focused');\r\n    this.events?.onMouseDown && this.events.onMouseDown(event);\r\n  };\r\n\r\n  protected onMouseUp = (event: GrabEvent) => {\r\n    this.mousedown = false;\r\n    this.container.classList.remove('is-focused');\r\n    this.events?.onMouseUp && this.events.onMouseUp(event);\r\n  };\r\n\r\n  public setListeners() {\r\n    this.seek.addEventListener('input', this.onInput);\r\n    this._removeListeners = attachGrabListeners(this.container, this.onMouseDown, this.onMouseMove, this.onMouseUp);\r\n  }\r\n\r\n  public onInput = () => {\r\n    const value = +this.seek.value;\r\n    this.setFilled(value);\r\n    this.events?.onScrub && this.events.onScrub(value);\r\n  };\r\n\r\n  public setProgress(value: number) {\r\n    this.seek.value = '' + value;\r\n    this.setFilled(+this.seek.value); // clamp\r\n  }\r\n\r\n  public addProgress(value: number) {\r\n    this.seek.value = '' + (+this.seek.value + value);\r\n    this.setFilled(+this.seek.value); // clamp\r\n  }\r\n\r\n  public setFilled(value: number) {\r\n    let percents = (value - this.min) / (this.max - this.min);\r\n    percents = clamp(percents, 0, 1);\r\n    \r\n    // using scaleX and width even with vertical because it will be rotated\r\n    if(this.useTransform) {\r\n      this.filled.style.transform = `scaleX(${percents})`;\r\n    } else {\r\n      this.filled.style.width = (percents * 100) + '%';\r\n    }\r\n  }\r\n\r\n  protected scrub(event: GrabEvent) {\r\n    const rectMax = this.vertical ? this.rect.height : this.rect.width;\r\n    const offsetAxisValue = clamp(this.vertical ? -(event.y - this.rect.bottom) : event.x - this.rect.left, 0, rectMax);\r\n\r\n    let value = this.min + (offsetAxisValue / rectMax * (this.max - this.min));\r\n\r\n    if((value - this.min) < ((this.max - this.min) / 2)) {\r\n      value -= this.step / 10;\r\n    }\r\n    \r\n    value = +value.toFixed(this.decimals);\r\n    value = clamp(value, this.min, this.max);\r\n\r\n    //this.seek.value = '' + value;\r\n    //this.onInput();\r\n\r\n    this.setProgress(value);\r\n    this.events?.onScrub && this.events.onScrub(value);\r\n\r\n    return value;\r\n  }\r\n\r\n  public removeListeners() {\r\n    if(this._removeListeners) {\r\n      this._removeListeners();\r\n      this._removeListeners = null;\r\n    }\r\n\r\n    this.seek.removeEventListener('input', this.onInput);\r\n    \r\n    this.events = {};\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport { AttachClickOptions, attachClickEvent, CLICK_EVENT_NAME } from \"../helpers/dom/clickEvent\";\nimport ListenerSetter from \"../helpers/listenerSetter\";\nimport { FormatterArguments, i18n, LangPackKey } from \"../lib/langPack\";\nimport CheckboxField from \"./checkboxField\";\nimport { closeBtnMenu } from \"./misc\";\nimport { ripple } from \"./ripple\";\n\nexport type ButtonMenuItemOptions = {\n  icon?: string, \n  text?: LangPackKey, \n  textArgs?: FormatterArguments,\n  regularText?: string, \n  onClick: (e: MouseEvent | TouchEvent) => void | boolean, \n  element?: HTMLElement,\n  textElement?: HTMLElement,\n  options?: AttachClickOptions,\n  checkboxField?: CheckboxField,\n  noCheckboxClickListener?: boolean,\n  keepOpen?: boolean\n  /* , cancelEvent?: true */\n};\n\nconst ButtonMenuItem = (options: ButtonMenuItemOptions) => {\n  if(options.element) return options.element;\n\n  const {icon, text, onClick, checkboxField, noCheckboxClickListener} = options;\n  const el = document.createElement('div');\n  el.className = 'btn-menu-item rp-overflow' + (icon ? ' tgico-' + icon : '');\n  ripple(el);\n\n  let textElement = options.textElement;\n  if(!textElement) {\n    textElement = options.textElement = text ? i18n(text, options.textArgs) : document.createElement('span');\n    if(options.regularText) textElement.innerHTML = options.regularText;\n  }\n  \n  textElement.classList.add('btn-menu-item-text');\n  el.append(textElement);\n\n  const keepOpen = !!checkboxField || !!options.keepOpen;\n\n  // * cancel mobile keyboard close\n  onClick && attachClickEvent(el, /* CLICK_EVENT_NAME !== 'click' || keepOpen ? */ (e) => {\n    cancelEvent(e);\n    const result = onClick(e);\n\n    if(result === false) {\n      return;\n    }\n\n    if(!keepOpen) {\n      closeBtnMenu();\n    }\n\n    if(checkboxField && !noCheckboxClickListener/*  && result !== false */) {\n      checkboxField.checked = checkboxField.input.type === 'radio' ? true : !checkboxField.checked;\n    }\n  }/*  : onClick */, options.options);\n\n  if(checkboxField) {\n    el.append(checkboxField.label);\n  }\n\n  return options.element = el;\n};\n\nconst ButtonMenu = (buttons: ButtonMenuItemOptions[], listenerSetter?: ListenerSetter) => {\n  const el = document.createElement('div');\n  el.classList.add('btn-menu');\n\n  if(listenerSetter) {\n    buttons.forEach(b => {\n      if(b.options) {\n        b.options.listenerSetter = listenerSetter;\n      } else {\n        b.options = {listenerSetter};\n      }\n    });\n  }\n\n  const items = buttons.map(ButtonMenuItem);\n\n  el.append(...items);\n\n  return el;\n};\n\nexport default ButtonMenu;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { AttachClickOptions, CLICK_EVENT_NAME } from \"../helpers/dom/clickEvent\";\r\nimport ListenerSetter from \"../helpers/listenerSetter\";\r\nimport ButtonIcon from \"./buttonIcon\";\r\nimport ButtonMenu, { ButtonMenuItemOptions } from \"./buttonMenu\";\r\nimport { closeBtnMenu, openBtnMenu } from \"./misc\";\r\n\r\nconst ButtonMenuToggle = (\r\n  options: Partial<{\r\n    noRipple: true, \r\n    onlyMobile: true, \r\n    listenerSetter: ListenerSetter, \r\n    asDiv: boolean,\r\n    container: HTMLElement\r\n  }> = {}, \r\n  direction: 'bottom-left' | 'bottom-right' | 'top-left' | 'top-right', \r\n  buttons: ButtonMenuItemOptions[], \r\n  onOpen?: (e: Event) => void,\r\n  onClose?: () => void\r\n) => {\r\n  options.asDiv = true;\r\n  const button = options.container ?? ButtonIcon('more', options);\r\n  button.classList.add('btn-menu-toggle');\r\n\r\n  const btnMenu = ButtonMenu(buttons, options.listenerSetter);\r\n  btnMenu.classList.add(direction);\r\n  ButtonMenuToggleHandler(button, onOpen, options, onClose);\r\n  button.append(btnMenu);\r\n  return button;\r\n};\r\n\r\n// TODO: refactor for attachClickEvent, because if move finger after touchstart, it will start anyway\r\nconst ButtonMenuToggleHandler = (el: HTMLElement, onOpen?: (e: Event) => void, options?: AttachClickOptions, onClose?: () => void) => {\r\n  const add = options?.listenerSetter ? options.listenerSetter.add(el) : el.addEventListener.bind(el);\r\n\r\n  //console.trace('ButtonMenuToggleHandler attach', el, onOpen, options);\r\n  add(CLICK_EVENT_NAME, (e: Event) => {\r\n    //console.log('ButtonMenuToggleHandler click', e);\r\n    if(!el.classList.contains('btn-menu-toggle')) return false;\r\n\r\n    //window.removeEventListener('mousemove', onMouseMove);\r\n    const openedMenu = el.querySelector('.btn-menu') as HTMLDivElement;\r\n    cancelEvent(e);\r\n\r\n    if(el.classList.contains('menu-open')) {\r\n      closeBtnMenu();\r\n    } else {\r\n      onOpen && onOpen(e);\r\n      openBtnMenu(openedMenu, onClose);\r\n    }\r\n  });\r\n};\r\n\r\nexport { ButtonMenuToggleHandler };\r\nexport default ButtonMenuToggle;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\nimport EventListenerBase from \"../eventListenerBase\";\nimport ListenerSetter from \"../listenerSetter\";\nimport safeAssign from \"../object/safeAssign\";\nimport findUpClassName from \"./findUpClassName\";\n\nexport default class ControlsHover extends EventListenerBase<{\n  toggleControls: (show: boolean) => void\n}> {\n  protected hideControlsTimeout: number;\n  protected controlsLocked: boolean;\n\n  protected canHideControls: () => boolean;\n  protected element: HTMLElement;\n  protected listenerSetter: ListenerSetter;\n  protected showOnLeaveToClassName: string;\n  protected ignoreClickClassName: string;\n\n  constructor() {\n    super(false);\n    this.hideControlsTimeout = 0;\n  }\n  \n  public setup(options: {\n    element: HTMLElement, \n    listenerSetter: ListenerSetter, \n    canHideControls?: () => boolean,\n    showOnLeaveToClassName?: string,\n    ignoreClickClassName?: string\n  }) {\n    safeAssign(this, options);\n\n    const {listenerSetter, element} = this;\n\n    if(IS_TOUCH_SUPPORTED) {\n      listenerSetter.add(element)('click', (e) => {\n        if(this.ignoreClickClassName && findUpClassName(e.target, this.ignoreClickClassName)) {\n          return;\n        }\n\n        this.toggleControls();\n      });\n\n      /* listenerSetter.add(player)('touchstart', () => {\n        showControls(false);\n      });\n\n      listenerSetter.add(player)('touchend', () => {\n        if(player.classList.contains('is-playing')) {\n          showControls();\n        }\n      }); */\n    } else {\n      listenerSetter.add(element)('mousemove', () => {\n        this.showControls();\n      });\n\n      listenerSetter.add(element)('mouseenter', () => {\n        this.showControls(false);\n      });\n\n      listenerSetter.add(element)('mouseleave', (e) => {\n        if(e.relatedTarget && this.showOnLeaveToClassName && findUpClassName(e.relatedTarget, this.showOnLeaveToClassName)) {\n          this.showControls(false);\n          return;\n        }\n        \n        this.hideControls();\n      });\n    }\n  }\n\n  public hideControls = (setHideTimeout = false) => {\n    if(setHideTimeout) {\n      if(!this.hideControlsTimeout) {\n        this.hideControlsTimeout = window.setTimeout(this.hideControls, 3e3);\n      }\n\n      return;\n    }\n    \n    clearTimeout(this.hideControlsTimeout);\n    this.hideControlsTimeout = 0;\n\n    const isShown = this.element.classList.contains('show-controls');\n    if(this.controlsLocked !== false) {\n      if((this.canHideControls ? !this.canHideControls() : false) || !isShown || this.controlsLocked) {\n        return;\n      }\n    } else if(!isShown) {\n      return;\n    }\n    \n    this.dispatchEvent('toggleControls', false);\n    this.element.classList.remove('show-controls');\n  };\n  \n  public showControls = (setHideTimeout = true) => {\n    if(this.hideControlsTimeout) {\n      clearTimeout(this.hideControlsTimeout);\n      this.hideControlsTimeout = 0;\n    } else if(!this.element.classList.contains('show-controls') && this.controlsLocked !== false) {\n      this.dispatchEvent('toggleControls', true);\n      this.element.classList.add('show-controls');\n    }\n\n    if(!setHideTimeout || this.controlsLocked) {\n      return;\n    }\n\n    this.hideControlsTimeout = window.setTimeout(this.hideControls, 3e3);\n  };\n\n  public toggleControls = (show?: boolean) => {\n    const isShown = this.element.classList.contains('show-controls');\n\n    if(show === undefined) {\n      if(isShown) this.hideControls();\n      else this.showControls();\n    } else if(show === isShown) return;\n    else if(show === false) this.hideControls();\n    else this.showControls();\n  };\n\n  public lockControls(visible: boolean) {\n    this.controlsLocked = visible;\n\n    this.element.classList.toggle('disable-hover', visible === false);\n    this.toggleControls(visible);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appMediaPlaybackController from \"../components/appMediaPlaybackController\";\nimport { IS_APPLE_MOBILE } from \"../environment/userAgent\";\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\nimport RangeSelector from \"../components/rangeSelector\";\nimport { onMediaLoad } from \"../helpers/files\";\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport ListenerSetter from \"../helpers/listenerSetter\";\nimport ButtonMenu from \"../components/buttonMenu\";\nimport { ButtonMenuToggleHandler } from \"../components/buttonMenuToggle\";\nimport rootScope from \"./rootScope\";\nimport { GrabEvent } from \"../helpers/dom/attachGrabListeners\";\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\nimport ControlsHover from \"../helpers/dom/controlsHover\";\nimport { addFullScreenListener, cancelFullScreen, isFullScreen, requestFullScreen } from \"../helpers/dom/fullScreen\";\n\nexport class MediaProgressLine extends RangeSelector {\n  protected filledLoad: HTMLDivElement;\n\n  protected progressRAF = 0;\n\n  protected media: HTMLMediaElement;\n  protected streamable: boolean;\n\n  constructor(media?: HTMLAudioElement | HTMLVideoElement, streamable?: boolean, withTransition?: boolean, useTransform?: boolean) {\n    super({\n      step: 1000 / 60 / 1000, \n      min: 0, \n      max: 1, \n      withTransition, \n      useTransform\n    }, 0);\n\n    if(media) {\n      this.setMedia(media, streamable);\n    }\n  }\n\n  public setMedia(media: HTMLMediaElement, streamable = false) {\n    if(this.media) {\n      this.removeListeners();\n    }\n\n    if(streamable && !this.filledLoad) {\n      this.filledLoad = document.createElement('div');\n      this.filledLoad.classList.add('progress-line__filled', 'progress-line__loaded');\n      this.container.prepend(this.filledLoad);\n      //this.setLoadProgress();\n    } else if(this.filledLoad) {\n      this.filledLoad.classList.toggle('hide', !streamable);\n    }\n\n    this.media = media;\n    this.streamable = streamable;\n    if(!media.paused || media.currentTime > 0) {\n      this.onPlay();\n    }\n\n    let wasPlaying = false;\n    this.setSeekMax();\n    this.setListeners();\n    this.setHandlers({\n      onMouseDown: () => {\n        wasPlaying = !this.media.paused;\n        wasPlaying && this.media.pause();\n      },\n\n      onMouseUp: (e) => {\n        // cancelEvent(e.event);\n        wasPlaying && this.media.play();\n      }\n    });\n  }\n\n  protected onLoadedData = () => {\n    this.max = this.media.duration;\n    this.seek.setAttribute('max', '' + this.max);\n  };\n\n  protected onEnded = () => {\n    this.setProgress();\n  };\n\n  protected onPlay = () => {\n    let r = () => {\n      this.setProgress();\n\n      this.progressRAF = this.media.paused ? 0 : window.requestAnimationFrame(r);\n    };\n\n    if(this.progressRAF) {\n      window.cancelAnimationFrame(this.progressRAF);\n    }\n\n    if(this.streamable) {\n      this.setLoadProgress();\n    }\n\n    this.progressRAF = window.requestAnimationFrame(r);\n  };\n\n  protected onTimeUpdate = () => {\n    if(this.media.paused) {\n      this.setProgress();\n\n      if(this.streamable) {\n        this.setLoadProgress();\n      }\n    }\n  };\n\n  protected onProgress = (e: Event) => {\n    this.setLoadProgress();\n  };\n\n  protected scrub(e: GrabEvent) {\n    const scrubTime = super.scrub(e);\n    this.media.currentTime = scrubTime;\n    return scrubTime;\n  }\n\n  protected setLoadProgress() {\n    if(appMediaPlaybackController.isSafariBuffering(this.media)) return;\n    const buf = this.media.buffered;\n    const numRanges = buf.length;\n\n    const currentTime = this.media.currentTime;\n    let nearestStart = 0, end = 0;\n    for(let i = 0; i < numRanges; ++i) {\n      const start = buf.start(i);\n      if(currentTime >= start && start >= nearestStart) {\n        nearestStart = start;\n        end = buf.end(i);\n      }\n\n      //console.log('onProgress range:', i, buf.start(i), buf.end(i), this.media);\n    }\n\n    //console.log('onProgress correct range:', nearestStart, end, this.media);\n\n    const percents = this.media.duration ? end / this.media.duration : 0;\n    this.filledLoad.style.width = (percents * 100) + '%';\n    //this.filledLoad.style.transform = 'scaleX(' + percents + ')';\n  }\n\n  protected setSeekMax() {\n    this.max = this.media.duration || 0;\n    if(this.max > 0) {\n      this.onLoadedData();\n    } else {\n      this.media.addEventListener('loadeddata', this.onLoadedData);\n    }\n  }\n\n  public setProgress() {\n    if(appMediaPlaybackController.isSafariBuffering(this.media)) return;\n    const currentTime = this.media.currentTime;\n\n    super.setProgress(currentTime);\n  }\n\n  public setListeners() {\n    super.setListeners();\n    this.media.addEventListener('ended', this.onEnded);\n    this.media.addEventListener('play', this.onPlay);\n    this.media.addEventListener('timeupdate', this.onTimeUpdate);\n    this.streamable && this.media.addEventListener('progress', this.onProgress);\n  }\n\n  public removeListeners() {\n    super.removeListeners();\n\n    if(this.media) {\n      this.media.removeEventListener('loadeddata', this.onLoadedData);\n      this.media.removeEventListener('ended', this.onEnded);\n      this.media.removeEventListener('play', this.onPlay);\n      this.media.removeEventListener('timeupdate', this.onTimeUpdate);\n      this.streamable && this.media.removeEventListener('progress', this.onProgress);\n    }\n\n    if(this.progressRAF) {\n      window.cancelAnimationFrame(this.progressRAF);\n      this.progressRAF = 0;\n    }\n  }\n}\n\nexport class VolumeSelector extends RangeSelector {\n  private static ICONS = ['volume_off', 'volume_mute', 'volume_down', 'volume_up'];\n  public btn: HTMLElement;\n  protected icon: HTMLSpanElement;\n\n  constructor(protected listenerSetter: ListenerSetter, protected vertical = false) {\n    super({\n      step: 0.01, \n      min: 0, \n      max: 1,\n      vertical\n    }, 1);\n\n    this.setListeners();\n    this.setHandlers({\n      onScrub: currentTime => {\n        const value = Math.max(Math.min(currentTime, 1), 0);\n\n        //console.log('volume scrub:', currentTime, value);\n\n        appMediaPlaybackController.muted = false;\n        appMediaPlaybackController.volume = value;\n      },\n\n      /* onMouseUp: (e) => {\n        cancelEvent(e.event);\n      } */\n    });\n\n    const className = 'player-volume';\n    const btn = this.btn = document.createElement('div');\n    btn.classList.add('btn-icon', className);\n    const icon = this.icon = document.createElement('span');\n    icon.classList.add(className + '__icon');\n\n    btn.append(icon, this.container);\n\n    attachClickEvent(icon, this.onMuteClick, {listenerSetter: this.listenerSetter});\n    this.listenerSetter.add(rootScope)('media_playback_params', this.setVolume);\n\n    this.setVolume();\n  }\n\n  private onMuteClick = (e?: Event) => {\n    e && cancelEvent(e);\n    appMediaPlaybackController.muted = !appMediaPlaybackController.muted;\n  };\n\n  private setVolume = () => {\n    // const volume = video.volume;\n    const {volume, muted} = appMediaPlaybackController;\n    let d: string;\n    let iconIndex: number;\n    if(!volume || muted) {\n      iconIndex = 0;\n    } else if(volume > .5) {\n      iconIndex = 3;\n    } else if(volume > 0 && volume < .25) {\n      iconIndex = 1;\n    } else {\n      iconIndex = 2;\n    }\n\n    VolumeSelector.ICONS.forEach(icon => this.icon.classList.remove('tgico-' + icon));\n    this.icon.classList.add('tgico-' + VolumeSelector.ICONS[iconIndex]);\n\n    if(!this.mousedown) {\n      this.setProgress(muted ? 0 : volume);\n    }\n  };\n}\n\nexport default class VideoPlayer extends ControlsHover {\n  private static PLAYBACK_RATES = [0.5, 1, 1.5, 2];\n  private static PLAYBACK_RATES_ICONS = ['playback_05', 'playback_1x', 'playback_15', 'playback_2x'];\n\n  protected video: HTMLVideoElement;\n  protected wrapper: HTMLDivElement;\n  protected progress: MediaProgressLine;\n  protected skin: 'default';\n\n  protected listenerSetter: ListenerSetter;\n  protected playbackRateButton: HTMLElement;\n\n  /* protected videoParent: HTMLElement;\n  protected videoWhichChild: number; */\n\n  protected onPlaybackRackMenuToggle?: (open: boolean) => void;\n\n  constructor({video, play = false, streamable = false, duration, onPlaybackRackMenuToggle}: {\n    video: HTMLVideoElement, \n    play?: boolean, \n    streamable?: boolean, \n    duration?: number,\n    onPlaybackRackMenuToggle?: (open: boolean) => void\n  }) {\n    super();\n\n    this.video = video;\n    this.wrapper = document.createElement('div');\n    this.wrapper.classList.add('ckin__player');\n\n    this.onPlaybackRackMenuToggle = onPlaybackRackMenuToggle;\n\n    this.listenerSetter = new ListenerSetter();\n\n    this.setup({\n      element: this.wrapper, \n      listenerSetter: this.listenerSetter, \n      canHideControls: () => {\n        return !this.video.paused && (!this.playbackRateButton || !this.playbackRateButton.classList.contains('menu-open'));\n      },\n      showOnLeaveToClassName: 'media-viewer-caption',\n      ignoreClickClassName: 'ckin__controls'\n    });\n\n    video.parentNode.insertBefore(this.wrapper, video);\n    this.wrapper.appendChild(video);\n\n    this.skin = 'default';\n\n    this.stylePlayer(duration);\n    this.setBtnMenuToggle();\n\n    if(this.skin === 'default') {\n      const controls = this.wrapper.querySelector('.default__controls.ckin__controls') as HTMLDivElement;\n      this.progress = new MediaProgressLine(video, streamable);\n      controls.prepend(this.progress.container);\n    }\n\n    if(play/*  && video.paused */) {\n      const promise = video.play();\n      promise.catch((err: Error) => {\n        if(err.name === 'NotAllowedError') {\n          video.muted = true;\n          video.autoplay = true;\n          video.play();\n        }\n      }).finally(() => { // due to autoplay, play will not call\n        this.wrapper.classList.toggle('is-playing', !this.video.paused);\n      });\n      //(this.wrapper.querySelector('.toggle') as HTMLButtonElement).click();\n    }\n  }\n\n  private stylePlayer(initDuration: number) {\n    const {wrapper, video, skin, listenerSetter} = this;\n\n    wrapper.classList.add(skin);\n  \n    const html = this.buildControls();\n    wrapper.insertAdjacentHTML('beforeend', html);\n    let timeDuration: HTMLElement;\n  \n    if(skin === 'default') {\n      this.playbackRateButton = this.wrapper.querySelector('.playback-rate') as HTMLElement;\n      \n      const toggle = wrapper.querySelectorAll('.toggle') as NodeListOf<HTMLElement>;\n      const fullScreenButton = wrapper.querySelector('.fullscreen') as HTMLElement;\n      const timeElapsed = wrapper.querySelector('#time-elapsed');\n      timeDuration = wrapper.querySelector('#time-duration') as HTMLElement;\n      timeDuration.innerHTML = String(video.duration | 0).toHHMMSS();\n\n      const volumeSelector = new VolumeSelector(listenerSetter);\n\n      const leftControls = wrapper.querySelector('.left-controls');\n      volumeSelector.btn.classList.remove('btn-icon');\n      leftControls.insertBefore(volumeSelector.btn, timeElapsed.parentElement);\n\n      Array.from(toggle).forEach((button) => {\n        listenerSetter.add(button)('click', () => {\n          this.togglePlay();\n        });\n      });\n\n      if(!IS_TOUCH_SUPPORTED) {\n        listenerSetter.add(video)('click', () => {\n          this.togglePlay();\n        });\n\n        listenerSetter.add(document)('keydown', (e: KeyboardEvent) => {\n          if(rootScope.overlaysActive > 1) { // forward popup is active, etc\n            return;\n          }\n\n          const {key, code} = e;\n\n          let good = true;\n          if(code === 'KeyF') {\n            this.toggleFullScreen();\n          } else if(code === 'KeyM') {\n            appMediaPlaybackController.muted = !appMediaPlaybackController.muted;\n          } else if(code === 'Space') {\n            this.togglePlay();\n          } else if(e.altKey && (code === 'Equal' || code === 'Minus')) {\n            const add = code === 'Equal' ? 1 : -1;\n            const playbackRate = appMediaPlaybackController.playbackRate;\n            const idx = VideoPlayer.PLAYBACK_RATES.indexOf(playbackRate);\n            const nextIdx = idx + add;\n            if(nextIdx >= 0 && nextIdx < VideoPlayer.PLAYBACK_RATES.length) {\n              appMediaPlaybackController.playbackRate = VideoPlayer.PLAYBACK_RATES[nextIdx];\n            }\n          } else if(wrapper.classList.contains('ckin__fullscreen') && (key === 'ArrowLeft' || key === 'ArrowRight')) {\n            if(key === 'ArrowLeft') appMediaPlaybackController.seekBackward({action: 'seekbackward'});\n            else appMediaPlaybackController.seekForward({action: 'seekforward'});\n          } else {\n            good = false;\n          }\n\n          if(good) {\n            cancelEvent(e);\n            return false;\n          }\n        });\n      }\n  \n      /* player.addEventListener('click', (e) => {\n        if(e.target !== player) {\n          return;\n        }\n\n        this.togglePlay();\n      }); */\n  \n      /* video.addEventListener('play', () => {\n      }); */\n\n      listenerSetter.add(video)('dblclick', () => {\n        if(!IS_TOUCH_SUPPORTED) {\n          this.toggleFullScreen();\n        }\n      });\n\n      listenerSetter.add(fullScreenButton)('click', () => {\n        this.toggleFullScreen();\n      });\n\n      addFullScreenListener(wrapper, this.onFullScreen.bind(this, fullScreenButton), listenerSetter);\n\n      listenerSetter.add(video)('timeupdate', () => {\n        timeElapsed.innerHTML = String(video.currentTime | 0).toHHMMSS();\n      });\n\n      listenerSetter.add(video)('play', () => {\n        wrapper.classList.add('played');\n\n        if(!IS_TOUCH_SUPPORTED) {\n          listenerSetter.add(video)('play', () => {\n            this.hideControls(true);\n          });\n        }\n      }, {once: true});\n\n      listenerSetter.add(video)('pause', () => {\n        this.showControls(false);\n      });\n\n      listenerSetter.add(rootScope)('media_playback_params', () => {\n        this.setPlaybackRateIcon();\n      });\n    }\n\n    listenerSetter.add(video)('play', () => {\n      wrapper.classList.add('is-playing');\n    });\n\n    listenerSetter.add(video)('pause', () => {\n      wrapper.classList.remove('is-playing');\n    });\n\n    if(video.duration || initDuration) {\n      timeDuration.innerHTML = String(Math.round(video.duration || initDuration)).toHHMMSS();\n    } else {\n      onMediaLoad(video).then(() => {\n        timeDuration.innerHTML = String(Math.round(video.duration)).toHHMMSS();\n      });\n    }\n  }\n\n  protected togglePlay() {\n    this.video[this.video.paused ? 'play' : 'pause']();\n  }\n\n  private buildControls() {\n    const skin = this.skin;\n    if(skin === 'default') {\n      return `\n      <button class=\"${skin}__button--big toggle tgico\" title=\"Toggle Play\"></button>\n      <div class=\"${skin}__gradient-bottom ckin__controls\"></div>\n      <div class=\"${skin}__controls ckin__controls\">\n        <div class=\"bottom-controls\">\n          <div class=\"left-controls\">\n            <button class=\"btn-icon ${skin}__button toggle tgico\" title=\"Toggle Video\"></button>\n            <div class=\"time\">\n              <time id=\"time-elapsed\">0:00</time>\n              <span> / </span>\n              <time id=\"time-duration\">0:00</time>\n            </div>\n          </div>\n          <div class=\"right-controls\">\n            <button class=\"btn-icon ${skin}__button btn-menu-toggle playback-rate night\" title=\"Playback Rate\"></button>\n            <button class=\"btn-icon ${skin}__button fullscreen tgico-fullscreen\" title=\"Full Screen\"></button>\n          </div>\n        </div>\n      </div>`;\n    }\n  }\n\n  protected setBtnMenuToggle() {\n    const buttons: Parameters<typeof ButtonMenu>[0] = VideoPlayer.PLAYBACK_RATES.map((rate, idx) => {\n      return { \n        // icon: VideoPlayer.PLAYBACK_RATES_ICONS[idx],\n        regularText: rate + 'x', \n        onClick: () => {\n          appMediaPlaybackController.playbackRate = rate;\n        }\n      };\n    });\n    const btnMenu = ButtonMenu(buttons);\n    btnMenu.classList.add('top-left');\n    ButtonMenuToggleHandler(\n      this.playbackRateButton, \n      this.onPlaybackRackMenuToggle ? () => {\n        this.onPlaybackRackMenuToggle(true);\n      } : undefined, \n      undefined, \n      this.onPlaybackRackMenuToggle ? () => {\n        this.onPlaybackRackMenuToggle(false);\n      } : undefined\n    );\n    this.playbackRateButton.append(btnMenu);\n\n    this.setPlaybackRateIcon();\n  }\n\n  protected setPlaybackRateIcon() {\n    const playbackRateButton = this.playbackRateButton;\n    VideoPlayer.PLAYBACK_RATES_ICONS.forEach((className) => {\n      className = 'tgico-' + className;\n      playbackRateButton.classList.remove(className);\n    });\n\n    let idx = VideoPlayer.PLAYBACK_RATES.indexOf(appMediaPlaybackController.playbackRate);\n    if(idx === -1) idx = VideoPlayer.PLAYBACK_RATES.indexOf(1);\n\n    playbackRateButton.classList.add('tgico-' + VideoPlayer.PLAYBACK_RATES_ICONS[idx]);\n  }\n  \n  protected toggleFullScreen() {\n    const player = this.wrapper;\n\n    // * https://caniuse.com/#feat=fullscreen\n    if(IS_APPLE_MOBILE) {\n      const video = this.video as any;\n      video.webkitEnterFullscreen();\n      video.enterFullscreen();\n      return;\n    }\n    \n    if(!isFullScreen()) {\n      /* const videoParent = this.video.parentElement;\n      const videoWhichChild = whichChild(this.video);\n      const needVideoRemount = videoParent !== player;\n\n      if(needVideoRemount) {\n        this.videoParent = videoParent;\n        this.videoWhichChild = videoWhichChild;\n        player.prepend(this.video);\n      } */\n  \n      requestFullScreen(player);\n    } else {\n      /* if(this.videoParent) {\n        const {videoWhichChild, videoParent} = this;\n        if(!videoWhichChild) {\n          videoParent.prepend(this.video);\n        } else {\n          videoParent.insertBefore(this.video, videoParent.children[videoWhichChild]);\n        }\n\n        this.videoParent = null;\n        this.videoWhichChild = -1;\n      } */\n  \n      cancelFullScreen();\n    }\n  }\n  \n  protected onFullScreen(fullScreenButton: HTMLElement) {\n    const isFull = isFullScreen();\n    this.wrapper.classList.toggle('ckin__fullscreen', isFull);\n    if(!isFull) {\n      fullScreenButton.classList.remove('tgico-smallscreen');\n      fullScreenButton.classList.add('tgico-fullscreen');\n      fullScreenButton.setAttribute('title', 'Full Screen');\n    } else {\n      fullScreenButton.classList.remove('tgico-fullscreen');\n      fullScreenButton.classList.add('tgico-smallscreen');\n      fullScreenButton.setAttribute('title', 'Exit Full Screen');\n    }\n  }\n\n  public removeListeners() {\n    super.cleanup();\n    this.listenerSetter.removeAll();\n    this.progress.removeListeners();\n    this.onPlaybackRackMenuToggle = undefined;\n  }\n}\n","// * Jolly Cobra's schedulers\n\nimport { AnyToVoidFunction } from \"../../types\";\nimport { fastRaf } from \"../schedulers\";\nimport throttleWith from \"./throttleWith\";\n\nexport default function throttleWithRaf<F extends AnyToVoidFunction>(fn: F) {\n  return throttleWith(fastRaf, fn);\n}\n","// * Jolly Cobra's schedulers\n\nimport { AnyToVoidFunction } from \"../../types\";\n\nexport default function throttleWith<F extends AnyToVoidFunction>(schedulerFn: AnyToVoidFunction, fn: F) {\n  let waiting = false;\n  let args: Parameters<F>;\n\n  return (..._args: Parameters<F>) => {\n    args = _args;\n\n    if (!waiting) {\n      waiting = true;\n\n      schedulerFn(() => {\n        waiting = false;\n        // @ts-ignore\n        fn(...args);\n      });\n    }\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { i18n, LangPackKey } from \"../lib/langPack\";\n\nexport default function formatBytes(bytes: number, decimals = 2) {\n  if(bytes === 0) return i18n('FileSize.B', [0]);\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes: LangPackKey[] = ['FileSize.B', 'FileSize.KB', 'FileSize.MB', 'FileSize.GB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return i18n(sizes[i], [parseFloat((bytes / Math.pow(k, i)).toFixed(dm))]);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appDocsManager, {MyDocument} from \"../lib/appManagers/appDocsManager\";\nimport { wrapPhoto } from \"./wrappers\";\nimport ProgressivePreloader from \"./preloader\";\nimport { MediaProgressLine } from \"../lib/mediaPlayer\";\nimport appMediaPlaybackController, { MediaItem, MediaSearchContext } from \"./appMediaPlaybackController\";\nimport { DocumentAttribute, Message } from \"../layer\";\nimport mediaSizes from \"../helpers/mediaSizes\";\nimport { IS_SAFARI } from \"../environment/userAgent\";\nimport appMessagesManager from \"../lib/appManagers/appMessagesManager\";\nimport rootScope from \"../lib/rootScope\";\nimport './middleEllipsis';\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\nimport LazyLoadQueue from \"./lazyLoadQueue\";\nimport { CancellablePromise, deferredPromise } from \"../helpers/cancellablePromise\";\nimport ListenerSetter, { Listener } from \"../helpers/listenerSetter\";\nimport noop from \"../helpers/noop\";\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\nimport { joinElementsWith } from \"../lib/langPack\";\nimport { MiddleEllipsisElement } from \"./middleEllipsis\";\nimport htmlToSpan from \"../helpers/dom/htmlToSpan\";\nimport { formatFullSentTime } from \"../helpers/date\";\nimport throttleWithRaf from \"../helpers/schedulers/throttleWithRaf\";\nimport { NULL_PEER_ID } from \"../lib/mtproto/mtproto_config\";\nimport formatBytes from \"../helpers/formatBytes\";\nimport { animateSingle } from \"../helpers/animation\";\nimport clamp from \"../helpers/number/clamp\";\n\nrootScope.addEventListener('messages_media_read', ({mids, peerId}) => {\n  mids.forEach(mid => {\n    const attr = `[data-mid=\"${mid}\"][data-peer-id=\"${peerId}\"]`;\n    (Array.from(document.querySelectorAll(`audio-element.is-unread${attr}, .media-round.is-unread${attr}`)) as AudioElement[]).forEach(elem => {\n      elem.classList.remove('is-unread');\n    });\n  });\n});\n\n// https://github.com/LonamiWebs/Telethon/blob/4393ec0b83d511b6a20d8a20334138730f084375/telethon/utils.py#L1285\nexport function decodeWaveform(waveform: Uint8Array | number[]) {\n  if(!(waveform instanceof Uint8Array)) {\n    waveform = new Uint8Array(waveform);\n  }\n\n  const bitCount = waveform.length * 8;\n  const valueCount = bitCount / 5 | 0;\n  if(!valueCount) {\n    return new Uint8Array([]);\n  }\n\n  let result: Uint8Array;\n  try {\n    const dataView = new DataView(waveform.buffer);\n    result = new Uint8Array(valueCount);\n    for(let i = 0; i < valueCount; i++) {\n      const byteIndex = i * 5 / 8 | 0;\n      const bitShift = i * 5 % 8;\n      const value = dataView.getUint16(byteIndex, true);\n      result[i] = (value >> bitShift) & 0b00011111;\n    }\n  } catch(err) {\n    result = new Uint8Array([]);\n  }\n\n  /* var byteIndex = (valueCount - 1) / 8 | 0;\n  var bitShift = (valueCount - 1) % 8;\n  if(byteIndex === waveform.length - 1) {\n    var value = waveform[byteIndex];\n  } else {\n    var value = dataView.getUint16(byteIndex, true);\n  }\n  console.log('decoded waveform, setting last value:', value, byteIndex, bitShift);\n  result[valueCount - 1] = (value >> bitShift) & 0b00011111; */\n  return result;\n}\n\nfunction createWaveformBars(waveform: Uint8Array, duration: number) {\n  const barWidth = 2;\n  const barMargin = 2;      //mediaSizes.isMobile ? 2 : 1;\n  const barHeightMin = 4;   //mediaSizes.isMobile ? 3 : 2;\n  const barHeightMax = mediaSizes.isMobile ? 16 : 23;\n  // const availW = 150;       //mediaSizes.isMobile ? 152 : 190;\n\n  const minW = mediaSizes.isMobile ? 152 : 190;\n  const maxW = mediaSizes.isMobile ? 190 : 256;\n  const availW = clamp(duration / 60 * maxW, minW, maxW); // mediaSizes.isMobile ? 152 : 224;\n\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  svg.classList.add('audio-waveform-bars');\n  svg.setAttributeNS(null, 'width', '' + availW);\n  svg.setAttributeNS(null, 'height', '' + barHeightMax);\n  svg.setAttributeNS(null, 'viewBox', `0 0 ${availW} ${barHeightMax}`);\n\n  //console.log('decoded waveform:', waveform);\n\n  const normValue = Math.max(...waveform);\n  const wfSize = waveform.length ? waveform.length : 100;\n  const barCount = Math.min((availW / (barWidth + barMargin)) | 0, wfSize);\n\n  let maxValue = 0;\n  const maxDelta = barHeightMax - barHeightMin;\n\n  let html = '';\n  for(let i = 0, barX = 0, sumI = 0; i < wfSize; ++i) {\n    const value = waveform[i] || 0;\n    if((sumI + barCount) >= wfSize) { // draw bar\n      sumI = sumI + barCount - wfSize;\n\t\t\tif(sumI < (barCount + 1) / 2) {\n\t\t\t\tif(maxValue < value) maxValue = value;\n      }\n      \n      const bar_value = Math.max(((maxValue * maxDelta) + ((normValue + 1) / 2)) / (normValue + 1), barHeightMin);\n      \n      const h = `\n      <rect x=\"${barX}\" y=\"${barHeightMax - bar_value}\" width=\"${barWidth}\" height=\"${bar_value}\" rx=\"1\" ry=\"1\"></rect>\n      `;\n      html += h;\n\n      barX += barWidth + barMargin;\n\n      if(sumI < (barCount + 1) / 2) {\n        maxValue = 0;\n      } else {\n        maxValue = value;\n      }\n    } else {\n      if(maxValue < value) maxValue = value;\n\n      sumI += barCount;\n    }\n  }\n\n  const container = document.createElement('div');\n  container.classList.add('audio-waveform');\n  container.append(svg);\n\n  svg.insertAdjacentHTML('beforeend', html);\n  return {svg, container, availW};\n}\n\nfunction wrapVoiceMessage(audioEl: AudioElement) {\n  audioEl.classList.add('is-voice');\n\n  const message = audioEl.message;\n  const doc = appMessagesManager.getMediaFromMessage(message) as MyDocument;\n\n  if(message.pFlags.out) {\n    audioEl.classList.add('is-out');\n  }\n\n  let waveform = (doc.attributes.find(attribute => attribute._ === 'documentAttributeAudio') as DocumentAttribute.documentAttributeAudio).waveform || new Uint8Array([]);\n  waveform = decodeWaveform(waveform.slice(0, 63));\n  \n  const {svg, container: svgContainer, availW} = createWaveformBars(waveform, doc.duration);\n  \n  const fakeSvgContainer = svgContainer.cloneNode(true) as HTMLElement;\n  fakeSvgContainer.classList.add('audio-waveform-fake');\n  svgContainer.classList.add('audio-waveform-background');\n\n  const waveformContainer = document.createElement('div');\n  waveformContainer.classList.add('audio-waveform-container');\n  waveformContainer.append(svgContainer, fakeSvgContainer);\n\n  const timeDiv = document.createElement('div');\n  timeDiv.classList.add('audio-time');\n  audioEl.append(waveformContainer, timeDiv);\n\n  let progress = svg as any as HTMLElement;\n  \n  const onLoad = () => {\n    let audio = audioEl.audio;\n\n    const setAnimation = () => {\n      animateSingle(() => {\n        onTimeUpdate();\n        return !audio.paused;\n      }, audioEl);\n    };\n\n    const onTimeUpdate = () => {\n      fakeSvgContainer.style.width = (audio.currentTime / audio.duration * 100) + '%';\n    };\n\n    if(!audio.paused || (audio.currentTime > 0 && audio.currentTime !== audio.duration)) {\n      onTimeUpdate();\n    }\n\n    const throttledTimeUpdate = throttleWithRaf(onTimeUpdate);\n    audioEl.addAudioListener('timeupdate', throttledTimeUpdate);\n    audioEl.addAudioListener('ended', throttledTimeUpdate);\n    audioEl.addAudioListener('play', setAnimation);\n\n    audioEl.readyPromise.then(() => {\n      let mousedown = false, mousemove = false;\n      progress.addEventListener('mouseleave', (e) => {\n        if(mousedown) {\n          audio.play();\n          mousedown = false;\n        }\n        mousemove = false;\n      })\n      progress.addEventListener('mousemove', (e) => {\n        mousemove = true;\n        if(mousedown) scrub(e);\n      });\n      progress.addEventListener('mousedown', (e) => {\n        e.preventDefault();\n        if(e.button !== 0) return;\n        if(!audio.paused) {\n          audio.pause();\n        }\n        \n        scrub(e);\n        mousedown = true;\n      });\n      progress.addEventListener('mouseup', (e) => {\n        if(mousemove && mousedown) {\n          audio.play();\n          mousedown = false;\n        }\n      });\n      attachClickEvent(progress, (e) => {\n        cancelEvent(e);\n        if(!audio.paused) scrub(e);\n      });\n      \n      function scrub(e: MouseEvent | TouchEvent) {\n        let offsetX: number;\n        if(e instanceof MouseEvent) {\n          offsetX = e.offsetX;\n        } else { // touch\n          const rect = (e.target as HTMLElement).getBoundingClientRect();\n          offsetX = e.targetTouches[0].pageX - rect.left;\n        }\n        \n        const scrubTime = offsetX / availW /* width */ * audio.duration;\n        audio.currentTime = scrubTime;\n      }\n    }, noop);\n    \n    return () => {\n      progress.remove();\n      progress = null;\n      audio = null;\n    };\n  };\n\n  return onLoad;\n}\n\nfunction wrapAudio(audioEl: AudioElement) {\n  const withTime = audioEl.withTime;\n\n  const message = audioEl.message;\n  const doc: MyDocument = appMessagesManager.getMediaFromMessage(message);\n\n  const isVoice = doc.type === 'voice' || doc.type === 'round';\n  const descriptionEl = document.createElement('div');\n  descriptionEl.classList.add('audio-description');\n  \n  if(!isVoice) {\n    const parts: (Node | string)[] = [];\n    if(doc.audioPerformer) {\n      parts.push(htmlToSpan(doc.audioPerformer));\n    }\n\n    if(withTime) {\n      parts.push(formatFullSentTime(message.date));\n    } else if(!parts.length) {\n      parts.push(formatBytes(doc.size));\n    }\n\n    if(audioEl.showSender) {\n      parts.push(appMessagesManager.wrapSenderToPeer(message));\n    }\n\n    descriptionEl.append(...joinElementsWith(parts, ' • '));\n  }\n\n  const html = `\n  <div class=\"audio-details\">\n    <div class=\"audio-title\"></div>\n    <div class=\"audio-subtitle\"><div class=\"audio-time\"></div></div>\n  </div>`;\n  audioEl.insertAdjacentHTML('beforeend', html);\n\n  const titleEl = audioEl.querySelector('.audio-title') as HTMLElement;\n\n  const middleEllipsisEl = new MiddleEllipsisElement();\n  middleEllipsisEl.dataset.fontWeight = audioEl.dataset.fontWeight;\n  if(isVoice) {\n    middleEllipsisEl.append(appMessagesManager.wrapSenderToPeer(message));\n  } else {\n    middleEllipsisEl.innerHTML = doc.audioTitle || doc.fileName;\n  }\n\n  titleEl.append(middleEllipsisEl);\n\n  if(audioEl.showSender) {\n    titleEl.append(appMessagesManager.wrapSentTime(message));\n  }\n  \n  const subtitleDiv = audioEl.querySelector('.audio-subtitle') as HTMLDivElement;\n  subtitleDiv.append(descriptionEl);\n\n  const onLoad = () => {\n    let launched = false;\n\n    let progressLine = new MediaProgressLine(audioEl.audio, doc.supportsStreaming);\n\n    audioEl.addAudioListener('ended', () => {\n      audioEl.classList.remove('audio-show-progress');\n      // Reset subtitle\n      subtitleDiv.lastChild.replaceWith(descriptionEl);\n      launched = false;\n    });\n\n    const onPlay = () => {\n      if(!launched) {\n        audioEl.classList.add('audio-show-progress');\n        launched = true;\n\n        if(progressLine) {\n          subtitleDiv.lastChild.replaceWith(progressLine.container);\n        }\n      }\n    };\n\n    audioEl.addAudioListener('play', onPlay);\n\n    if(!audioEl.audio.paused || audioEl.audio.currentTime > 0) {\n      onPlay();\n    }\n\n    return () => {\n      progressLine.removeListeners();\n      progressLine.container.remove();\n      progressLine = null;\n    };\n  };\n\n  return onLoad;\n}\n\nfunction constructDownloadPreloader(tryAgainOnFail = true) {\n  const preloader = new ProgressivePreloader({cancelable: true, tryAgainOnFail});\n  preloader.construct();\n\n  if(!tryAgainOnFail) {\n    preloader.circle.setAttributeNS(null, 'r', '23');\n    preloader.totalLength = 143.58203125;\n  }\n\n  return preloader;\n}\n\nexport const findMediaTargets = (anchor: HTMLElement/* , useSearch: boolean */) => {\n  let prev: MediaItem[], next: MediaItem[];\n  // if(anchor.classList.contains('search-super-item') || !useSearch) {\n    const isBubbles = !anchor.classList.contains('search-super-item');\n    const container = findUpClassName(anchor, !isBubbles ? 'tabs-tab' : 'bubbles-inner');\n    if(container) {\n      const attr = `:not([data-is-outgoing=\"1\"])`;\n      const justAudioSelector = `.audio:not(.is-voice)${attr}`;\n      let selectors: string[];\n      if(!anchor.matches(justAudioSelector)) {\n        selectors = [`.audio.is-voice${attr}`, `.media-round${attr}`];\n      } else {\n        selectors = [justAudioSelector];\n      }\n\n      if(isBubbles) {\n        const prefix = '.bubble:not(.webpage) ';\n        selectors = selectors.map(s => prefix + s);\n      }\n\n      const selector = selectors.join(', ');\n\n      const elements = Array.from(container.querySelectorAll(selector)) as HTMLElement[];\n      const idx = elements.indexOf(anchor);\n\n      const mediaItems: MediaItem[] = elements.map(element => ({peerId: element.dataset.peerId.toPeerId(), mid: +element.dataset.mid}));\n\n      prev = mediaItems.slice(0, idx);\n      next = mediaItems.slice(idx + 1);\n    }\n  // }\n\n  return [prev, next];\n};\n\nexport default class AudioElement extends HTMLElement {\n  public audio: HTMLAudioElement;\n  public preloader: ProgressivePreloader;\n  public message: Message.message;\n  public withTime = false;\n  public voiceAsMusic = false;\n  public searchContext: MediaSearchContext;\n  public showSender = false;\n  public noAutoDownload: boolean;\n  public lazyLoadQueue: LazyLoadQueue;\n  public loadPromises: Promise<any>[];\n\n  private listenerSetter = new ListenerSetter();\n  private onTypeDisconnect: () => void;\n  public onLoad: (autoload?: boolean) => void;\n  public readyPromise: CancellablePromise<void>;\n\n  public render() {\n    this.classList.add('audio');\n\n    this.dataset.mid = '' + this.message.mid;\n    this.dataset.peerId = '' + this.message.peerId;\n\n    const doc: MyDocument = appMessagesManager.getMediaFromMessage(this.message);\n    const isRealVoice = doc.type === 'voice';\n    const isVoice = !this.voiceAsMusic && isRealVoice;\n    const isOutgoing = this.message.pFlags.is_outgoing;\n    const uploading = isOutgoing && this.preloader;\n\n    const durationStr = String(doc.duration | 0).toHHMMSS();\n\n    this.innerHTML = `\n    <div class=\"audio-toggle audio-ico\">\n      <div class=\"audio-play-icon\">\n        <div class=\"part one\" x=\"0\" y=\"0\" fill=\"#fff\"></div>\n        <div class=\"part two\" x=\"0\" y=\"0\" fill=\"#fff\"></div>\n      </div>\n    </div>`;\n\n    const toggle = this.firstElementChild as HTMLElement;\n\n    const downloadDiv = document.createElement('div');\n    downloadDiv.classList.add('audio-download');\n\n    const isUnread = doc.type !== 'audio' && this.message && this.message.pFlags.media_unread;\n    if(isUnread) {\n      this.classList.add('is-unread');\n    }\n\n    if(uploading) {\n      this.classList.add('is-outgoing');\n      this.append(downloadDiv);\n    }\n\n    const onTypeLoad = isVoice ? wrapVoiceMessage(this) : wrapAudio(this);\n    \n    const audioTimeDiv = this.querySelector('.audio-time') as HTMLDivElement;\n    audioTimeDiv.innerHTML = durationStr;\n\n    const onLoad = this.onLoad = (autoload: boolean) => {\n      this.onLoad = undefined;\n\n      const audio = this.audio = appMediaPlaybackController.addMedia(this.message, autoload);\n\n      const readyPromise = this.readyPromise = deferredPromise<void>();\n      if(this.audio.readyState >= this.audio.HAVE_CURRENT_DATA) readyPromise.resolve();\n      else {\n        this.addAudioListener('canplay', () => readyPromise.resolve(), {once: true});\n      }\n\n      this.onTypeDisconnect = onTypeLoad();\n      \n      const getTimeStr = () => String(audio.currentTime | 0).toHHMMSS() + (isVoice ? (' / ' + durationStr) : '');\n\n      const onPlay = () => {\n        audioTimeDiv.innerText = getTimeStr();\n        toggle.classList.toggle('playing', !audio.paused);\n      };\n\n      if(!audio.paused || (audio.currentTime > 0 && audio.currentTime !== audio.duration)) {\n        onPlay();\n      }\n\n      const togglePlay = (e?: Event, paused = audio.paused) => {\n        e && cancelEvent(e);\n\n        if(paused) {\n          const hadSearchContext = !!this.searchContext;\n          if(appMediaPlaybackController.setSearchContext(this.searchContext || {\n            peerId: NULL_PEER_ID, \n            inputFilter: {_: 'inputMessagesFilterEmpty'}, \n            useSearch: false\n          })) {\n            const [prev, next] = !hadSearchContext ? [] : findMediaTargets(this/* , this.searchContext.useSearch */);\n            appMediaPlaybackController.setTargets({peerId: this.message.peerId, mid: this.message.mid}, prev, next);\n          }\n\n          audio.play().catch(() => {});\n        } else {\n          audio.pause();\n        }\n      };\n\n      attachClickEvent(toggle, (e) => togglePlay(e), {listenerSetter: this.listenerSetter});\n\n      this.addAudioListener('ended', () => {\n        toggle.classList.remove('playing');\n        audioTimeDiv.innerText = durationStr;\n      });\n\n      this.addAudioListener('timeupdate', () => {\n        if((!audio.currentTime && audio.paused) || appMediaPlaybackController.isSafariBuffering(audio)) return;\n        audioTimeDiv.innerText = getTimeStr();\n      });\n\n      this.addAudioListener('pause', () => {\n        toggle.classList.remove('playing');\n      });\n\n      this.addAudioListener('play', onPlay);\n\n      return togglePlay;\n    };\n\n    if(doc.thumbs?.length) {\n      const imgs: HTMLImageElement[] = [];\n      const wrapped = wrapPhoto({\n        photo: doc, \n        message: null, \n        container: toggle, \n        boxWidth: 48, \n        boxHeight: 48,\n        loadPromises: this.loadPromises,\n        withoutPreloader: true,\n        lazyLoadQueue: this.lazyLoadQueue\n      });\n      toggle.style.width = toggle.style.height = '';\n      if(wrapped.images.thumb) imgs.push(wrapped.images.thumb);\n      if(wrapped.images.full) imgs.push(wrapped.images.full);\n\n      this.classList.add('audio-with-thumb');\n      imgs.forEach(img => img.classList.add('audio-thumb'));\n    }\n\n    if(!isOutgoing) {\n      let preloader: ProgressivePreloader = this.preloader;\n\n      const autoDownload = doc.type !== 'audio'/*  || !this.noAutoDownload */;\n      onLoad(autoDownload);\n\n      const r = (shouldPlay: boolean) => {\n        if(this.audio.src) {\n          return;\n        }\n\n        appMediaPlaybackController.resolveWaitingForLoadMedia(this.message.peerId, this.message.mid, this.message.pFlags.is_scheduled);\n\n        const onDownloadInit = () => {\n          if(shouldPlay) {\n            appMediaPlaybackController.willBePlayed(this.audio); // prepare for loading audio\n  \n            if(IS_SAFARI && !this.audio.autoplay) {\n              this.audio.autoplay = true;\n            }\n          }\n        };\n\n        onDownloadInit();\n\n        if(!preloader) {\n          if(doc.supportsStreaming) {\n            this.classList.add('corner-download');\n\n            let pauseListener: Listener;\n            const onPlay = () => {\n              const preloader = constructDownloadPreloader(false);\n              const deferred = deferredPromise<void>();\n              deferred.notifyAll({done: 75, total: 100});\n              deferred.catch(() => {\n                this.audio.pause();\n                appMediaPlaybackController.willBePlayed(undefined);\n              });\n              deferred.cancel = () => {\n                deferred.cancel = noop;\n                const err = new Error();\n                (err as any).type = 'CANCELED';\n                deferred.reject(err);\n              };\n              preloader.attach(downloadDiv, false, deferred);\n\n              pauseListener = this.addAudioListener('pause', () => {\n                deferred.cancel();\n              }, {once: true}) as any;\n\n              onDownloadInit();\n            };\n\n            /* if(!this.audio.paused) {\n              onPlay();\n            } */\n\n            const playListener: any = this.addAudioListener('play', onPlay);\n            this.readyPromise.then(() => {\n              this.listenerSetter.remove(playListener);\n              this.listenerSetter.remove(pauseListener);\n            });\n          } else {\n            preloader = constructDownloadPreloader();\n\n            if(!shouldPlay) {\n              this.readyPromise = deferredPromise();\n            }\n\n            const load = () => {\n              onDownloadInit();\n\n              const download = appDocsManager.downloadDoc(doc);\n              \n              if(!shouldPlay) {\n                download.then(() => {\n                  this.readyPromise.resolve();\n                });\n              }\n\n              preloader.attach(downloadDiv, false, download);\n              return {download};\n            };\n\n            preloader.setDownloadFunction(load);\n            load();\n          }\n        }\n\n        if(this.classList.contains('corner-download')) {\n          toggle.append(downloadDiv);\n        } else {\n          this.append(downloadDiv);\n        }\n\n        this.classList.add('downloading');\n\n        this.readyPromise.then(() => {\n          this.classList.remove('downloading');\n          downloadDiv.classList.add('downloaded');\n          setTimeout(() => {\n            downloadDiv.remove();\n          }, 200);\n  \n          //setTimeout(() => {\n            // release loaded audio\n            if(appMediaPlaybackController.willBePlayedMedia === this.audio) {\n              this.audio.play();\n              appMediaPlaybackController.willBePlayed(undefined);\n            }\n          //}, 10e3);\n        });\n      };\n\n      if(!this.audio?.src) {\n        if(autoDownload) {\n          r(false);\n        } else {\n          attachClickEvent(toggle, () => {\n            r(true);\n          }, {once: true, capture: true, passive: false, listenerSetter: this.listenerSetter});\n        }\n      }\n    } else if(uploading) {\n      this.dataset.isOutgoing = '1';\n      this.preloader.attach(downloadDiv, false);\n      //onLoad();\n    }\n  }\n\n  get addAudioListener() {\n    return this.listenerSetter.add(this.audio);\n  }\n\n  disconnectedCallback() {\n    if(this.isConnected) {\n      return;\n    }\n    \n    if(this.onTypeDisconnect) {\n      this.onTypeDisconnect();\n      this.onTypeDisconnect = null;\n    }\n\n    if(this.readyPromise) {\n      this.readyPromise.reject();\n    }\n\n    this.listenerSetter.removeAll();\n    this.listenerSetter = null;\n\n    this.preloader = null;\n  }\n}\n\ncustomElements.define(\"audio-element\", AudioElement);\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default class DivAndCaption<T> {\r\n  public container: HTMLElement;\r\n  public border: HTMLElement;\r\n  public content: HTMLElement;\r\n  public title: HTMLElement;\r\n  public subtitle: HTMLElement;\r\n\r\n  constructor(protected className: string, public fill?: T) {\r\n    this.container = document.createElement('div');\r\n    this.container.className = className;\r\n\r\n    this.border = document.createElement('div');\r\n    this.border.classList.add(className + '-border');\r\n    \r\n    this.content = document.createElement('div');\r\n    this.content.classList.add(className + '-content');\r\n\r\n    this.title = document.createElement('div');\r\n    this.title.classList.add(className + '-title');\r\n    this.title.setAttribute('dir', 'auto');\r\n\r\n    this.subtitle = document.createElement('div');\r\n    this.subtitle.classList.add(className + '-subtitle');\r\n    this.subtitle.setAttribute('dir', 'auto');\r\n\r\n    this.content.append(this.title, this.subtitle);\r\n    this.container.append(this.border, this.content);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport replaceContent from \"../../helpers/dom/replaceContent\";\r\nimport limitSymbols from \"../../helpers/string/limitSymbols\";\r\nimport appImManager, { CHAT_ANIMATION_GROUP } from \"../../lib/appManagers/appImManager\";\r\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\r\nimport appPhotosManager from \"../../lib/appManagers/appPhotosManager\";\r\nimport { RichTextProcessor } from \"../../lib/richtextprocessor\";\r\nimport DivAndCaption from \"../divAndCaption\";\r\nimport { wrapPhoto, wrapSticker } from \"../wrappers\";\r\n\r\nconst MEDIA_SIZE = 32;\r\n\r\nexport function wrapReplyDivAndCaption(options: {\r\n  title: string | HTMLElement | DocumentFragment,\r\n  titleEl: HTMLElement,\r\n  subtitle: string | HTMLElement | DocumentFragment,\r\n  subtitleEl: HTMLElement,\r\n  message: any,\r\n  mediaEl: HTMLElement,\r\n  loadPromises?: Promise<any>[]\r\n}) {\r\n  let {title, titleEl, subtitle, subtitleEl, mediaEl, message, loadPromises} = options;\r\n  if(title !== undefined) {\r\n    if(typeof(title) === 'string') {\r\n      title = limitSymbols(title, 140);\r\n      title = RichTextProcessor.wrapEmojiText(title);\r\n    }\r\n\r\n    replaceContent(titleEl, title);\r\n  }\r\n\r\n  if(!loadPromises) {\r\n    loadPromises = [];\r\n  }\r\n\r\n  let media = message && message.media;\r\n  let setMedia = false, isRound = false;\r\n  const mediaChildren = mediaEl ? Array.from(mediaEl.children).slice() : [];\r\n  let middleware: () => boolean;\r\n  if(media && mediaEl) {\r\n    subtitleEl.textContent = '';\r\n    subtitleEl.append(appMessagesManager.wrapMessageForReply(message, undefined, undefined, undefined, undefined, true));\r\n\r\n    //console.log('wrap reply', media);\r\n\r\n    if(media.webpage) {\r\n      media = media.webpage;\r\n    }\r\n    \r\n    if(media.photo || (media.document && media.document.thumbs?.length)/* ['video', 'sticker', 'gif', 'round', 'photo', 'audio'].indexOf(media.document.type) !== -1) */) {\r\n      middleware = appImManager.chat.bubbles.getMiddleware();\r\n      const lazyLoadQueue = appImManager.chat.bubbles.lazyLoadQueue;\r\n\r\n      if(media.document?.type === 'sticker') {\r\n        setMedia = true;\r\n        wrapSticker({\r\n          doc: media.document,\r\n          div: mediaEl,\r\n          lazyLoadQueue,\r\n          group: CHAT_ANIMATION_GROUP,\r\n          //onlyThumb: media.document.sticker === 2,\r\n          width: MEDIA_SIZE,\r\n          height: MEDIA_SIZE,\r\n          middleware,\r\n          loadPromises\r\n        });\r\n      } else {\r\n        const photo = media.photo || media.document;\r\n\r\n        isRound = photo.type === 'round';\r\n\r\n        try {\r\n          wrapPhoto({\r\n            photo,\r\n            container: mediaEl,\r\n            boxWidth: MEDIA_SIZE,\r\n            boxHeight: MEDIA_SIZE,\r\n            size: appPhotosManager.choosePhotoSize(photo, MEDIA_SIZE, MEDIA_SIZE),\r\n            middleware,\r\n            lazyLoadQueue,\r\n            noBlur: true,\r\n            withoutPreloader: true,\r\n            loadPromises\r\n          });\r\n          setMedia = true;\r\n        } catch(err) {\r\n\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    if(message) {\r\n      subtitleEl.textContent = '';\r\n      subtitleEl.append(appMessagesManager.wrapMessageForReply(message));\r\n    } else {\r\n      if(typeof(subtitle) === 'string') {\r\n        subtitle = limitSymbols(subtitle, 140);\r\n        subtitle = RichTextProcessor.wrapEmojiText(subtitle);\r\n      }\r\n\r\n      replaceContent(subtitleEl, subtitle || '');\r\n    }\r\n  }\r\n\r\n  Promise.all(loadPromises).then(() => {\r\n    if(middleware && !middleware()) return;\r\n    mediaChildren.forEach(child => child.remove());\r\n\r\n    if(mediaEl) {\r\n      mediaEl.classList.toggle('is-round', isRound);\r\n    }\r\n  });\r\n\r\n  return setMedia;\r\n}\r\n\r\nexport default class ReplyContainer extends DivAndCaption<(title: string | HTMLElement | DocumentFragment, subtitle: string | HTMLElement | DocumentFragment, message?: any) => void> {\r\n  private mediaEl: HTMLElement;\r\n\r\n  constructor(protected className: string) {\r\n    super(className, (title, subtitle = '', message?) => {\r\n      if(!this.mediaEl) {\r\n        this.mediaEl = document.createElement('div');\r\n        this.mediaEl.classList.add(this.className + '-media');\r\n      }\r\n\r\n      const isMediaSet = wrapReplyDivAndCaption({\r\n        title,\r\n        titleEl: this.title,\r\n        subtitle,\r\n        subtitleEl: this.subtitle,\r\n        mediaEl: this.mediaEl,\r\n        message\r\n      });\r\n      \r\n      this.container.classList.toggle('is-media', isMediaSet);\r\n      if(isMediaSet) {\r\n        this.content.prepend(this.mediaEl);\r\n      } else {\r\n        this.mediaEl.remove();\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default function accumulate(arr: number[], initialValue: number) {\n  return arr.reduce((acc, value) => acc + value, initialValue);\n}\n","/*\r\nThis file is part of Telegram Desktop,\r\nthe official desktop application for the Telegram messaging service.\r\nFor license and copyright information please follow this link:\r\nhttps://github.com/telegramdesktop/tdesktop/blob/master/LEGAL\r\n*/\r\n\r\nimport accumulate from \"../helpers/array/accumulate\";\r\nimport clamp from \"../helpers/number/clamp\";\r\n\r\ntype Size = {w: number, h: number};\r\nexport type GroupMediaLayout = {\r\n  geometry: {\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  },\r\n  sides: number\r\n};\r\ntype Attempt = {\r\n  lineCounts: number[],\r\n  heights: number[]\r\n};\r\nexport const RectPart = {\r\n  None: 0,\r\n  Top: 1,\r\n  Right: 2,\r\n  Bottom: 4,\r\n  Left: 8\r\n};\r\n\r\n// https://github.com/telegramdesktop/tdesktop/blob/4669c07dc5335cbf4795bbbe5b0ab7c007b9aee2/Telegram/SourceFiles/ui/grouped_layout.cpp\r\nexport class Layouter {\r\n  private count: number;\r\n  private ratios: number[];\r\n  private proportions: string;\r\n  private averageRatio: number;\r\n  private maxSizeRatio: number;\r\n\r\n  constructor(private sizes: Size[], private maxWidth: number, private minWidth: number, private spacing: number, private maxHeight = maxWidth) {\r\n    this.count = sizes.length;\r\n    this.ratios = Layouter.countRatios(sizes);\r\n    this.proportions = Layouter.countProportions(this.ratios);\r\n    this.averageRatio = accumulate(this.ratios, 1) / this.count; // warn\r\n    this.maxSizeRatio = maxWidth / this.maxHeight;\r\n  }\r\n\r\n  public layout(): GroupMediaLayout[] {\r\n    if(!this.count) return [];\r\n    //else if(this.count === 1) return this.layoutOne();\r\n\r\n    if(this.count >= 5 || this.ratios.find(r => r > 2)) {\r\n      return new ComplexLayouter(this.ratios, this.averageRatio, this.maxWidth, this.minWidth, this.spacing).layout();\r\n    }\r\n\r\n    if(this.count === 2) return this.layoutTwo();\r\n    else if(this.count === 3) return this.layoutThree();\r\n    return this.layoutFour();\r\n  }\r\n\r\n  private layoutTwo(): ReturnType<Layouter['layout']> {\r\n    if((this.proportions === \"ww\")\r\n      && (this.averageRatio > 1.4 * this.maxSizeRatio)\r\n      && (this.ratios[1] - this.ratios[0] < 0.2)) {\r\n      return this.layoutTwoTopBottom();\r\n    } else if(this.proportions === \"ww\" || this.proportions === \"qq\") {\r\n      return this.layoutTwoLeftRightEqual();\r\n    }\r\n    return this.layoutTwoLeftRight();\r\n  }\r\n\r\n  private layoutThree(): ReturnType<Layouter['layout']> {\r\n    //console.log('layoutThree:', this);\r\n    if(this.proportions[0] === 'n') {\r\n      return this.layoutThreeLeftAndOther();\r\n    }\r\n    return this.layoutThreeTopAndOther();\r\n  }\r\n\r\n  private layoutFour(): ReturnType<Layouter['layout']> {\r\n    if(this.proportions[0] === 'w') {\r\n      return this.layoutFourTopAndOther();\r\n    }\r\n    return this.layoutFourLeftAndOther();\r\n  }\r\n\r\n  private layoutTwoTopBottom(): ReturnType<Layouter['layout']> {\r\n    const width = this.maxWidth;\r\n    const height = Math.round(Math.min(\r\n      width / this.ratios[0],\r\n      Math.min(\r\n        width / this.ratios[1],\r\n        (this.maxHeight - this.spacing) / 2)));\r\n  \r\n    return [\r\n      {\r\n        geometry: {x: 0, y: 0, width, height},\r\n        sides: RectPart.Left | RectPart.Top | RectPart.Right\r\n      },\r\n      {\r\n        geometry: {x: 0, y: height + this.spacing, width, height},\r\n        sides: RectPart.Left | RectPart.Bottom | RectPart.Right\r\n      },\r\n    ];\r\n  }\r\n\r\n  private layoutTwoLeftRightEqual(): ReturnType<Layouter['layout']> {\r\n    const width = (this.maxWidth - this.spacing) / 2;\r\n    const height = Math.round(Math.min(\r\n      width / this.ratios[0],\r\n      Math.min(width / this.ratios[1], this.maxHeight * 1)));\r\n  \r\n    return [\r\n      {\r\n        geometry: {x: 0, y: 0, width, height},\r\n        sides: RectPart.Top | RectPart.Left | RectPart.Bottom\r\n      },\r\n      {\r\n        geometry: {x: width + this.spacing, y: 0, width, height},\r\n        sides: RectPart.Top | RectPart.Right | RectPart.Bottom\r\n      },\r\n    ];\r\n  }\r\n\r\n  private layoutTwoLeftRight(): ReturnType<Layouter['layout']> {\r\n    const minimalWidth = Math.round(this.minWidth * 1.5);\r\n    const secondWidth = Math.min(\r\n      Math.round(Math.max(\r\n        0.4 * (this.maxWidth - this.spacing),\r\n        (this.maxWidth - this.spacing) / this.ratios[0]\r\n          / (1 / this.ratios[0] + 1 / this.ratios[1]))),\r\n      this.maxWidth - this.spacing - minimalWidth);\r\n    const firstWidth = this.maxWidth\r\n      - secondWidth\r\n      - this.spacing;\r\n    const height = Math.min(\r\n      this.maxHeight,\r\n      Math.round(Math.min(\r\n        firstWidth / this.ratios[0],\r\n        secondWidth / this.ratios[1])));\r\n  \r\n    return [\r\n      {\r\n        geometry: {x: 0, y: 0, width: firstWidth, height},\r\n        sides: RectPart.Top | RectPart.Left | RectPart.Bottom\r\n      },\r\n      {\r\n        geometry: {x: firstWidth + this.spacing, y: 0, width: secondWidth, height},\r\n        sides: RectPart.Top | RectPart.Right | RectPart.Bottom\r\n      },\r\n    ];\r\n  }\r\n\r\n  private layoutThreeLeftAndOther(): ReturnType<Layouter['layout']> {\r\n    const firstHeight = this.maxHeight;\r\n    const thirdHeight = Math.round(Math.min(\r\n      (this.maxHeight - this.spacing) / 2.,\r\n      (this.ratios[1] * (this.maxWidth - this.spacing)\r\n        / (this.ratios[2] + this.ratios[1]))));\r\n    const secondHeight = firstHeight\r\n      - thirdHeight\r\n      - this.spacing;\r\n    const rightWidth = Math.max(\r\n      this.minWidth,\r\n      Math.round(Math.min(\r\n        (this.maxWidth - this.spacing) / 2.,\r\n        Math.min(\r\n          thirdHeight * this.ratios[2],\r\n          secondHeight * this.ratios[1]))));\r\n    const leftWidth = Math.min(\r\n      Math.round(firstHeight * this.ratios[0]),\r\n      this.maxWidth - this.spacing - rightWidth);\r\n\r\n    return [\r\n      {\r\n        geometry: {x: 0, y: 0, width: leftWidth, height: firstHeight},\r\n        sides: RectPart.Top | RectPart.Left | RectPart.Bottom\r\n      },\r\n      {\r\n        geometry: {x: leftWidth + this.spacing, y: 0, width: rightWidth, height: secondHeight},\r\n        sides: RectPart.Top | RectPart.Right\r\n      },\r\n      {\r\n        geometry: {x: leftWidth + this.spacing, y: secondHeight + this.spacing, width: rightWidth, height: thirdHeight},\r\n        sides: RectPart.Bottom | RectPart.Right\r\n      },\r\n    ];\r\n  }\r\n  \r\n  private layoutThreeTopAndOther(): ReturnType<Layouter['layout']> {\r\n    const firstWidth = this.maxWidth;\r\n    const firstHeight = Math.round(Math.min(\r\n      firstWidth / this.ratios[0],\r\n      (this.maxHeight - this.spacing) * 0.66));\r\n    const secondWidth = (this.maxWidth - this.spacing) / 2;\r\n    const secondHeight = Math.min(\r\n      this.maxHeight - firstHeight - this.spacing,\r\n      Math.round(Math.min(\r\n        secondWidth / this.ratios[1],\r\n        secondWidth / this.ratios[2])));\r\n    const thirdWidth = firstWidth - secondWidth - this.spacing;\r\n  \r\n    return [\r\n      {\r\n        geometry: {x: 0, y: 0, width: firstWidth, height: firstHeight},\r\n        sides: RectPart.Left | RectPart.Top | RectPart.Right\r\n      },\r\n      {\r\n        geometry: {x: 0, y: firstHeight + this.spacing, width: secondWidth, height: secondHeight},\r\n        sides: RectPart.Bottom | RectPart.Left\r\n      },\r\n      {\r\n        geometry: {x: secondWidth + this.spacing, y: firstHeight + this.spacing, width: thirdWidth, height: secondHeight},\r\n        sides: RectPart.Bottom | RectPart.Right\r\n      },\r\n    ];\r\n  }\r\n\r\n  private layoutFourTopAndOther(): ReturnType<Layouter['layout']> {\r\n    const w = this.maxWidth;\r\n    const h0 = Math.round(Math.min(\r\n      w / this.ratios[0],\r\n      (this.maxHeight - this.spacing) * 0.66));\r\n    const h = Math.round(\r\n      (this.maxWidth - 2 * this.spacing)\r\n        / (this.ratios[1] + this.ratios[2] + this.ratios[3]));\r\n    const w0 = Math.max(\r\n      this.minWidth,\r\n      Math.round(Math.min(\r\n        (this.maxWidth - 2 * this.spacing) * 0.4,\r\n        h * this.ratios[1])));\r\n    const w2 = Math.round(Math.max(\r\n      Math.max(\r\n        this.minWidth * 1.,\r\n        (this.maxWidth - 2 * this.spacing) * 0.33),\r\n      h * this.ratios[3]));\r\n    const w1 = w - w0 - w2 - 2 * this.spacing;\r\n    const h1 = Math.min(\r\n      this.maxHeight - h0 - this.spacing,\r\n      h);\r\n  \r\n    return [\r\n      {\r\n        geometry: {x: 0, y: 0, width: w, height: h0},\r\n        sides: RectPart.Left | RectPart.Top | RectPart.Right\r\n      },\r\n      {\r\n        geometry: {x: 0, y: h0 + this.spacing, width: w0, height: h1},\r\n        sides: RectPart.Bottom | RectPart.Left\r\n      },\r\n      {\r\n        geometry: {x: w0 + this.spacing, y: h0 + this.spacing, width: w1, height: h1},\r\n        sides: RectPart.Bottom,\r\n      },\r\n      {\r\n        geometry: {x: w0 + this.spacing + w1 + this.spacing, y: h0 + this.spacing, width: w2, height: h1},\r\n        sides: RectPart.Right | RectPart.Bottom\r\n      },\r\n    ];\r\n  }\r\n\r\n  private layoutFourLeftAndOther(): ReturnType<Layouter['layout']> {\r\n    const h = this.maxHeight;\r\n    const w0 = Math.round(Math.min(\r\n      h * this.ratios[0],\r\n      (this.maxWidth - this.spacing) * 0.6));\r\n  \r\n    const w = Math.round(\r\n      (this.maxHeight - 2 * this.spacing)\r\n        / (1. / this.ratios[1] + 1. / this.ratios[2] + 1. / this.ratios[3])\r\n    );\r\n    const h0 = Math.round(w / this.ratios[1]);\r\n    const h1 = Math.round(w / this.ratios[2]);\r\n    const h2 = h - h0 - h1 - 2 * this.spacing;\r\n    const w1 = Math.max(\r\n      this.minWidth,\r\n      Math.min(this.maxWidth - w0 - this.spacing, w));\r\n  \r\n    return [\r\n      {\r\n        geometry: {x: 0, y: 0, width: w0, height: h},\r\n        sides: RectPart.Top | RectPart.Left | RectPart.Bottom\r\n      },\r\n      {\r\n        geometry: {x: w0 + this.spacing, y: 0, width: w1, height: h0},\r\n        sides: RectPart.Top | RectPart.Right\r\n      },\r\n      {\r\n        geometry: {x: w0 + this.spacing, y: h0 + this.spacing, width: w1, height: h1},\r\n        sides: RectPart.Right\r\n      },\r\n      {\r\n        geometry: {x: w0 + this.spacing, y: h0 + h1 + 2 * this.spacing, width: w1, height: h2},\r\n        sides: RectPart.Bottom | RectPart.Right\r\n      },\r\n    ];\r\n  }\r\n\r\n  private static countRatios(sizes: Size[]) {\r\n    return sizes.map(size => size.w / size.h);\r\n  }\r\n\r\n  private static countProportions(ratios: number[]) {\r\n    return ratios.map(ratio => (ratio > 1.2) ? 'w' : (ratio < 0.8) ? 'n' : 'q').join('');\r\n  }\r\n}\r\n\r\nclass ComplexLayouter {\r\n  private ratios: number[];\r\n  private count: number;\r\n\r\n  constructor(ratios: number[], private averageRatio: number, private maxWidth: number, private minWidth: number, private spacing: number, private maxHeight = maxWidth * 4 / 3) {\r\n    this.ratios = ComplexLayouter.cropRatios(ratios, averageRatio);\r\n    this.count = ratios.length;\r\n  }\r\n\r\n  private static cropRatios(ratios: number[], averageRatio: number) {\r\n    const kMaxRatio = 2.75;\r\n    const kMinRatio = 0.6667;\r\n    return ratios.map(ratio => {\r\n      return averageRatio > 1.1\r\n\t\t\t  ? clamp(ratio, 1., kMaxRatio)\r\n\t\t\t  : clamp(ratio, kMinRatio, 1.);\r\n    });\r\n  }\r\n\r\n  public layout(): GroupMediaLayout[] {\r\n    let result = new Array<GroupMediaLayout>(this.count);\r\n\r\n    let attempts: Attempt[] = [];\r\n    const multiHeight = (offset: number, count: number) => {\r\n      const ratios = this.ratios.slice(offset, offset + count); // warn\r\n      const sum = accumulate(ratios, 0);\r\n      return (this.maxWidth - (count - 1) * this.spacing) / sum;\r\n    };\r\n    const pushAttempt = (lineCounts: number[]) => {\r\n      let heights: number[] = [];\r\n      let offset = 0;\r\n      for(let count of lineCounts) {\r\n        heights.push(multiHeight(offset, count));\r\n        offset += count;\r\n      }\r\n      attempts.push({lineCounts, heights}); // warn\r\n    };\r\n\r\n    for(let first = 1; first !== this.count; ++first) {\r\n      const second = this.count - first;\r\n      if(first > 3 || second > 3) {\r\n        continue;\r\n      }\r\n      pushAttempt([first, second]);\r\n    }\r\n    for(let first = 1; first !== this.count - 1; ++first) {\r\n      for(let second = 1; second !== this.count - first; ++second) {\r\n        const third = this.count - first - second;\r\n        if((first > 3)\r\n          || (second > ((this.averageRatio < 0.85) ? 4 : 3))\r\n          || (third > 3)) {\r\n          continue;\r\n        }\r\n        pushAttempt([first, second, third]);\r\n      }\r\n    }\r\n    for(let first = 1; first !== this.count - 1; ++first) {\r\n      for(let second = 1; second !== this.count - first; ++second) {\r\n        for(let third = 1; third !== this.count - first - second; ++third) {\r\n          const fourth = this.count - first - second - third;\r\n          if(first > 3 || second > 3 || third > 3 || fourth > 3) {\r\n            continue;\r\n          }\r\n          pushAttempt([first, second, third, fourth]);\r\n        }\r\n      }\r\n    }\r\n\r\n    let optimalAttempt: Attempt = null;\r\n    let optimalDiff = 0;\r\n    for(const attempt of attempts) {\r\n      const {heights, lineCounts: counts} = attempt;\r\n      const lineCount = counts.length;\r\n      const totalHeight = accumulate(heights, 0) \r\n        + this.spacing * (lineCount - 1);\r\n      const minLineHeight = Math.min(...heights);\r\n      const maxLineHeight = Math.max(...heights);\r\n      const bad1 = (minLineHeight < this.minWidth) ? 1.5 : 1;\r\n      const bad2 = (() => {\r\n        for(let line = 1; line !== lineCount; ++line) {\r\n          if(counts[line - 1] > counts[line]) {\r\n            return 1.5;\r\n          }\r\n        }\r\n        return 1.;\r\n      })();\r\n      const diff = Math.abs(totalHeight - this.maxHeight) * bad1 * bad2;\r\n      if(!optimalAttempt || diff < optimalDiff) {\r\n        optimalAttempt = attempt;\r\n        optimalDiff = diff;\r\n      }\r\n    }\r\n\r\n    const optimalCounts = optimalAttempt.lineCounts;\r\n\t  const optimalHeights = optimalAttempt.heights;\r\n    const rowCount = optimalCounts.length;\r\n    \r\n    let index = 0;\r\n    let y = 0;\r\n    for(let row = 0; row !== rowCount; ++row) {\r\n      const colCount = optimalCounts[row];\r\n      const lineHeight = optimalHeights[row];\r\n      const height = Math.round(lineHeight);\r\n\r\n      let x = 0;\r\n      for(let col = 0; col !== colCount; ++col) {\r\n        const sides = RectPart.None\r\n          | (row === 0 ? RectPart.Top : RectPart.None)\r\n          | (row === rowCount - 1 ? RectPart.Bottom : RectPart.None)\r\n          | (col === 0 ? RectPart.Left : RectPart.None)\r\n          | (col === colCount - 1 ? RectPart.Right : RectPart.None);\r\n\r\n        const ratio = this.ratios[index];\r\n        const width = (col === colCount - 1)\r\n          ? (this.maxWidth - x)\r\n          : Math.round(ratio * lineHeight);\r\n        result[index] = {\r\n          geometry: {x, y, width, height},\r\n          sides\r\n        };\r\n\r\n        x += width + this.spacing;\r\n        ++index;\r\n      }\r\n      y += height + this.spacing;\r\n    }\r\n\r\n    return result;\r\n  }\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { InputFile } from \"../layer\";\r\nimport AvatarEdit from \"./avatarEdit\";\r\nimport AvatarElement from \"./avatar\";\r\nimport InputField from \"./inputField\";\r\nimport ListenerSetter from \"../helpers/listenerSetter\";\r\nimport ButtonCorner from \"./buttonCorner\";\r\nimport safeAssign from \"../helpers/object/safeAssign\";\r\n\r\nexport default class EditPeer {\r\n  public nextBtn: HTMLButtonElement;\r\n\r\n  public uploadAvatar: () => Promise<InputFile>;\r\n  public avatarEdit: AvatarEdit;\r\n  public avatarElem: AvatarElement;\r\n\r\n  private inputFields: InputField[];\r\n  private listenerSetter: ListenerSetter;\r\n\r\n  private peerId: PeerId;\r\n\r\n  private _disabled = false;\r\n  private avatarSize = 120;\r\n\r\n  constructor(options: {\r\n    peerId?: EditPeer['peerId'],\r\n    inputFields: EditPeer['inputFields'],\r\n    listenerSetter: ListenerSetter,\r\n    doNotEditAvatar?: boolean,\r\n    withoutAvatar?: boolean,\r\n    nextBtn?: HTMLButtonElement,\r\n    avatarSize?: number\r\n  }) {\r\n    safeAssign(this, options);\r\n\r\n    if(!this.nextBtn) {\r\n      this.nextBtn = ButtonCorner({icon: 'check'});\r\n    } else if(!this.nextBtn.classList.contains('btn-corner')) {\r\n      this.handleChange = () => {\r\n        this.nextBtn.toggleAttribute('disabled', !this.isChanged() || this.disabled);\r\n      };\r\n    }\r\n\r\n    if(!options.withoutAvatar) {\r\n      this.avatarElem = document.createElement('avatar-element') as AvatarElement;\r\n      this.avatarElem.classList.add('avatar-placeholder', 'avatar-' + this.avatarSize);\r\n      this.avatarElem.setAttribute('peer', '' + this.peerId);\r\n  \r\n      if(!options.doNotEditAvatar) {\r\n        this.avatarEdit = new AvatarEdit((_upload) => {\r\n          this.uploadAvatar = _upload;\r\n          this.handleChange();\r\n          this.avatarElem.remove();\r\n        });\r\n  \r\n        this.avatarEdit.container.append(this.avatarElem);\r\n      }\r\n    }\r\n\r\n    this.inputFields.forEach(inputField => {\r\n      this.listenerSetter.add(inputField.input)('input', this.handleChange);\r\n    });\r\n\r\n    this.handleChange();\r\n  }\r\n\r\n  public get disabled() {\r\n    return this._disabled;\r\n  }\r\n\r\n  public set disabled(value) {\r\n    this._disabled = value;\r\n    this.inputFields.forEach(inputField => inputField.input.toggleAttribute('disabled', value));\r\n    this.handleChange();\r\n  }\r\n\r\n  public lockWithPromise(promise: Promise<any>, unlockOnSuccess = false) {\r\n    this.disabled = true;\r\n    promise.then(() => {\r\n      if(unlockOnSuccess) {\r\n        this.disabled = false;\r\n      }\r\n    }, () => {\r\n      this.disabled = false;\r\n    });\r\n  }\r\n\r\n  public isChanged = () => {\r\n    if(this.uploadAvatar) {\r\n      return true;\r\n    }\r\n\r\n    let changedLength = 0, requiredLength = 0, requiredValidLength = 0;\r\n    this.inputFields.forEach(inputField => {\r\n      if(inputField.isValid()) {\r\n        if(inputField.isChanged()) {\r\n          ++changedLength;\r\n        }\r\n\r\n        if(inputField.required) {\r\n          ++requiredValidLength;\r\n        }\r\n      }\r\n\r\n      if(inputField.required) {\r\n        ++requiredLength;\r\n      }\r\n    });\r\n\r\n    return requiredLength === requiredValidLength && changedLength > 0;\r\n  };\r\n\r\n  public handleChange = () => {\r\n    this.nextBtn.classList.toggle('is-visible', this.isChanged());\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function RadioForm(radios: {container: HTMLElement, input: HTMLInputElement}[], onChange: (value: string, event: Event) => void) {\r\n  const form = document.createElement('form');\r\n\r\n  radios.forEach(r => {\r\n    const {container, input} = r;\r\n    form.append(container);\r\n    input.addEventListener('change', (e) => {\r\n      if(input.checked) {\r\n        onChange(input.value, e);\r\n      }\r\n    });\r\n  });\r\n\r\n  return form;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport CheckboxField from \"./checkboxField\";\r\nimport RadioField from \"./radioField\";\r\nimport { ripple } from \"./ripple\";\r\nimport { SliderSuperTab } from \"./slider\";\r\nimport RadioForm from \"./radioForm\";\r\nimport { i18n, LangPackKey } from \"../lib/langPack\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\nimport setInnerHTML from \"../helpers/dom/setInnerHTML\";\r\n\r\nexport default class Row {\r\n  public container: HTMLElement;\r\n  public title: HTMLDivElement;\r\n  public titleRight: HTMLElement;\r\n  public subtitle: HTMLElement;\r\n  public media: HTMLElement;\r\n\r\n  public checkboxField: CheckboxField;\r\n  public radioField: RadioField;\r\n\r\n  public freezed = false;\r\n\r\n  constructor(options: Partial<{\r\n    icon: string,\r\n    subtitle: string | HTMLElement | DocumentFragment,\r\n    subtitleLangKey: LangPackKey,\r\n    subtitleLangArgs: any[],\r\n    radioField: Row['radioField'],\r\n    checkboxField: Row['checkboxField'],\r\n    noCheckboxSubtitle: boolean,\r\n    title: string | HTMLElement,\r\n    titleLangKey: LangPackKey,\r\n    titleRight: string | HTMLElement,\r\n    titleRightSecondary: string | HTMLElement,\r\n    clickable: boolean | ((e: Event) => void),\r\n    navigationTab: SliderSuperTab,\r\n    havePadding: boolean,\r\n    noRipple: boolean\r\n  }> = {}) {\r\n    this.container = document.createElement(options.radioField || options.checkboxField ? 'label' : 'div');\r\n    this.container.classList.add('row');\r\n\r\n    this.subtitle = document.createElement('div');\r\n    this.subtitle.classList.add('row-subtitle');\r\n    this.subtitle.setAttribute('dir', 'auto');\r\n    if(options.subtitle) {\r\n      if(typeof(options.subtitle) === 'string') {\r\n        setInnerHTML(this.subtitle, options.subtitle);\r\n      } else {\r\n        this.subtitle.append(options.subtitle);\r\n      }\r\n    } else if(options.subtitleLangKey) {\r\n      this.subtitle.append(i18n(options.subtitleLangKey, options.subtitleLangArgs));\r\n    }\r\n    this.container.append(this.subtitle);\r\n\r\n    let havePadding = !!options.havePadding;\r\n    if(options.radioField || options.checkboxField) {\r\n      if(options.radioField) {\r\n        this.radioField = options.radioField;\r\n        this.container.append(this.radioField.label);\r\n        havePadding = true;\r\n      }\r\n\r\n      if(options.checkboxField) {\r\n        this.checkboxField = options.checkboxField;\r\n        \r\n        const isToggle = options.checkboxField.label.classList.contains('checkbox-field-toggle');\r\n        if(isToggle) {\r\n          this.container.classList.add('row-with-toggle');\r\n          options.titleRight = this.checkboxField.label;\r\n        } else {\r\n          havePadding = true;\r\n          this.container.append(this.checkboxField.label);\r\n        }\r\n\r\n        if(!options.noCheckboxSubtitle && !isToggle) {\r\n          this.checkboxField.input.addEventListener('change', () => {\r\n            replaceContent(this.subtitle, i18n(this.checkboxField.input.checked ? 'Checkbox.Enabled' : 'Checkbox.Disabled'));\r\n          });\r\n        }\r\n      }\r\n\r\n      const i = options.radioField || options.checkboxField;\r\n      i.label.classList.add('disable-hover');\r\n    } \r\n    \r\n    if(options.title || options.titleLangKey) {\r\n      let c: HTMLElement;\r\n      const titleRight = options.titleRight || options.titleRightSecondary;\r\n      if(titleRight) {\r\n        c = document.createElement('div');\r\n        c.classList.add('row-title-row');\r\n        this.container.append(c);\r\n      } else {\r\n        c = this.container;\r\n      }\r\n\r\n      this.title = document.createElement('div');\r\n      this.title.classList.add('row-title');\r\n      this.title.setAttribute('dir', 'auto');\r\n      if(options.title) {\r\n        if(typeof(options.title) === 'string') {\r\n          this.title.innerHTML = options.title;\r\n        } else {\r\n          this.title.append(options.title);\r\n        }\r\n      } else {\r\n        this.title.append(i18n(options.titleLangKey));\r\n      }\r\n      c.append(this.title);\r\n\r\n      if(titleRight) {\r\n        const titleRightEl = this.titleRight = document.createElement('div');\r\n        titleRightEl.classList.add('row-title', 'row-title-right');\r\n\r\n        if(options.titleRightSecondary) {\r\n          titleRightEl.classList.add('row-title-right-secondary');\r\n        }\r\n\r\n        if(typeof(titleRight) === 'string') {\r\n          titleRightEl.innerHTML = titleRight;\r\n        } else {\r\n          titleRightEl.append(titleRight);\r\n        }\r\n\r\n        c.append(titleRightEl);\r\n      }\r\n    }\r\n\r\n    if(options.icon) {\r\n      havePadding = true;\r\n      this.title.classList.add('tgico', 'tgico-' + options.icon);\r\n      this.container.classList.add('row-with-icon');\r\n    }\r\n\r\n    if(havePadding) {\r\n      this.container.classList.add('row-with-padding');\r\n    }\r\n\r\n    if(options.navigationTab) {\r\n      options.clickable = () => options.navigationTab.open();\r\n    }\r\n\r\n    if(options.clickable || options.radioField || options.checkboxField) {\r\n      if(typeof(options.clickable) === 'function') {\r\n        this.container.addEventListener('click', (e) => {\r\n          if(this.freezed) return;\r\n          (options.clickable as any)(e);\r\n        });\r\n      }\r\n\r\n      this.container.classList.add('row-clickable', 'hover-effect');\r\n\r\n      if(!options.noRipple) {\r\n        ripple(this.container, undefined, undefined, true);\r\n      }\r\n\r\n      /* if(options.radioField || options.checkboxField) {\r\n        this.container.prepend(this.container.lastElementChild);\r\n      } */\r\n    }\r\n  }\r\n\r\n  public createMedia(size?: 'small') {\r\n    this.container.classList.add('row-with-padding');\r\n    \r\n    const media = this.media = document.createElement('div');\r\n    media.classList.add('row-media');\r\n\r\n    if(size) {\r\n      media.classList.add('row-media-' + size);\r\n    }\r\n\r\n    this.container.append(media);\r\n\r\n    return media;\r\n  }\r\n}\r\n\r\nexport const RadioFormFromRows = (rows: Row[], onChange: (value: string) => void) => {\r\n  return RadioForm(rows.map(r => ({container: r.container, input: r.radioField.input})), onChange);\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// https://stackoverflow.com/a/30810322\r\nfunction fallbackCopyTextToClipboard(text: string) {\r\n  var textArea = document.createElement(\"textarea\");\r\n  textArea.value = text;\r\n  \r\n  // Avoid scrolling to bottom\r\n  textArea.style.top = \"0\";\r\n  textArea.style.left = \"0\";\r\n  textArea.style.position = \"fixed\";\r\n\r\n  document.body.appendChild(textArea);\r\n  textArea.focus();\r\n  textArea.select();\r\n\r\n  try {\r\n    document.execCommand('copy');\r\n    //const successful = document.execCommand('copy');\r\n    //const msg = successful ? 'successful' : 'unsuccessful';\r\n    //console.log('Fallback: Copying text command was ' + msg);\r\n  } catch(err) {\r\n    //console.error('Fallback: Oops, unable to copy', err);\r\n  }\r\n\r\n  document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text: string) {\r\n  if(!navigator.clipboard) {\r\n    fallbackCopyTextToClipboard(text);\r\n    return;\r\n  }\r\n  \r\n  navigator.clipboard.writeText(text);/* .then(function() {\r\n    console.log('Async: Copying to clipboard was successful!');\r\n  }, function(err) {\r\n    console.error('Async: Could not copy text: ', err);\r\n  }); */\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport getDeepProperty from \"../helpers/object/getDeepProperty\";\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport { LangPackKey, _i18n } from \"../lib/langPack\";\r\n\r\nexport default class RadioField {\r\n  public input: HTMLInputElement;\r\n  public label: HTMLLabelElement;\r\n  public main: HTMLElement;\r\n\r\n  constructor(options: {\r\n    text?: string, \r\n    langKey?: LangPackKey,\r\n    name: string, \r\n    value?: string, \r\n    stateKey?: string,\r\n    alignRight?: boolean\r\n  }) {\r\n    const label = this.label = document.createElement('label');\r\n    label.classList.add('radio-field');\r\n\r\n    if(options.alignRight) {\r\n      label.classList.add('radio-field-right');\r\n    }\r\n  \r\n    const input = this.input = document.createElement('input');\r\n    input.type = 'radio';\r\n    /* input.id =  */input.name = 'input-radio-' + options.name;\r\n  \r\n    if(options.value) {\r\n      input.value = options.value;\r\n  \r\n      if(options.stateKey) {\r\n        appStateManager.getState().then(state => {\r\n          input.checked = getDeepProperty(state, options.stateKey) === options.value;\r\n        });\r\n    \r\n        input.addEventListener('change', () => {\r\n          appStateManager.setByKey(options.stateKey, options.value);\r\n        });\r\n      }\r\n    }\r\n  \r\n    const main = this.main = document.createElement('div');\r\n    main.classList.add('radio-field-main');\r\n  \r\n    if(options.text) {\r\n      main.innerHTML = options.text;\r\n      /* const caption = document.createElement('div');\r\n      caption.classList.add('radio-field-main-caption');\r\n      caption.innerHTML = text;\r\n  \r\n      if(subtitle) {\r\n        label.classList.add('radio-field-with-subtitle');\r\n        caption.insertAdjacentHTML('beforeend', `<div class=\"radio-field-main-subtitle\">${subtitle}</div>`);\r\n      }\r\n  \r\n      main.append(caption); */\r\n    } else if(options.langKey) {\r\n      _i18n(main, options.langKey);\r\n    }\r\n  \r\n    label.append(input, main);\r\n  }\r\n\r\n  get checked() {\r\n    return this.input.checked;\r\n  }\r\n\r\n  set checked(checked: boolean) {\r\n    this.setValueSilently(checked);\r\n\r\n    const event = new Event('change', {bubbles: true, cancelable: true});\r\n    this.input.dispatchEvent(event);\r\n  }\r\n\r\n  public setValueSilently(checked: boolean) {\r\n    this.input.checked = checked;\r\n  }\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\nimport { i18n, LangPackKey } from \"../lib/langPack\";\r\n\r\nconst toastEl = document.createElement('div');\r\ntoastEl.classList.add('toast');\r\nexport function toast(content: string | Node) {\r\n  replaceContent(toastEl, content);\r\n  document.body.append(toastEl);\r\n\r\n  if(toastEl.dataset.timeout) clearTimeout(+toastEl.dataset.timeout);\r\n  toastEl.dataset.timeout = '' + setTimeout(() => {\r\n    toastEl.remove();\r\n    delete toastEl.dataset.timeout;\r\n  }, 3000);\r\n}\r\n\r\nexport function toastNew(options: Partial<{\r\n  langPackKey: LangPackKey\r\n}>) {\r\n  toast(i18n(options.langPackKey));\r\n}\r\n","// * Jolly Cobra's schedulers\r\n\r\nimport { AnyFunction, Awaited } from \"../../types\";\r\n\r\nexport default function debounce<F extends AnyFunction>(\r\n  fn: F,\r\n  ms: number,\r\n  shouldRunFirst = true,\r\n  shouldRunLast = true,\r\n) {\r\n  let waitingTimeout: number;\r\n  let waitingPromise: Promise<Awaited<ReturnType<F>>>, resolve: (result: any) => void, reject: () => void;\r\n  let hadNewCall = false;\r\n\r\n  return (...args: Parameters<F>): typeof waitingPromise => {\r\n    if(!waitingPromise) waitingPromise = new Promise((_resolve, _reject) => (resolve = _resolve, reject = _reject));\r\n\r\n    if(waitingTimeout) {\r\n      clearTimeout(waitingTimeout);\r\n      hadNewCall = true;\r\n      reject();\r\n      waitingPromise = new Promise((_resolve, _reject) => (resolve = _resolve, reject = _reject));\r\n    } else if(shouldRunFirst) {\r\n      // @ts-ignore\r\n      resolve(fn(...args));\r\n      hadNewCall = false;\r\n    }\r\n\r\n    waitingTimeout = setTimeout(() => {\r\n      // will run if should run last or first but with new call\r\n      if(shouldRunLast && (!shouldRunFirst || hadNewCall)) {\r\n        // @ts-ignore\r\n        resolve(fn(...args));\r\n      }\r\n\r\n      waitingTimeout = waitingPromise = resolve = reject = undefined;\r\n      hadNewCall = false;\r\n    }, ms) as any;\r\n\r\n    waitingPromise.catch(() => {});\r\n    return waitingPromise;\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport ListenerSetter from \"../helpers/listenerSetter\";\r\nimport debounce from \"../helpers/schedulers/debounce\";\r\nimport appChatsManager from \"../lib/appManagers/appChatsManager\";\r\nimport { LangPackKey } from \"../lib/langPack\";\r\nimport apiManager from \"../lib/mtproto/mtprotoworker\";\r\nimport RichTextProcessor from \"../lib/richtextprocessor\";\r\nimport InputField, { InputFieldOptions, InputState } from \"./inputField\";\r\n\r\nexport class UsernameInputField extends InputField {\r\n  private checkUsernamePromise: Promise<any>;\r\n  private checkUsernameDebounced: (username: string) => void;\r\n  public options: InputFieldOptions & {\r\n    peerId?: PeerId,\r\n    listenerSetter: ListenerSetter,\r\n    onChange?: () => void,\r\n    invalidText: LangPackKey,\r\n    takenText: LangPackKey,\r\n    availableText: LangPackKey,\r\n    head?: string\r\n  };\r\n\r\n  constructor(options: UsernameInputField['options']) {\r\n    super(options);\r\n\r\n    this.checkUsernameDebounced = debounce(this.checkUsername.bind(this), 150, false, true);\r\n\r\n    options.listenerSetter.add(this.input)('input', () => {\r\n      const value = this.getValue();\r\n\r\n      //console.log('userNameInput:', value);\r\n      if(value === this.originalValue || !value.length) {\r\n        this.setState(InputState.Neutral, this.options.label);\r\n        this.options.onChange && this.options.onChange();\r\n        return;\r\n      } else if(!RichTextProcessor.isUsernameValid(value)) { // does not check the last underscore\r\n        this.setError(this.options.invalidText);\r\n      } else {\r\n        this.setState(InputState.Neutral);\r\n      }\r\n\r\n      if(this.input.classList.contains('error')) {\r\n        this.options.onChange && this.options.onChange();\r\n        return;\r\n      }\r\n\r\n      this.checkUsernameDebounced(value);\r\n    });\r\n  }\r\n\r\n  public getValue() {\r\n    let value = this.value;\r\n    if(this.options.head) {\r\n      value = value.slice(this.options.head.length);\r\n      this.setValueSilently(this.options.head + value);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  private checkUsername(username: string) {\r\n    if(this.checkUsernamePromise) return;\r\n\r\n    if(this.options.peerId) {\r\n      this.checkUsernamePromise = apiManager.invokeApi('channels.checkUsername', {\r\n        channel: appChatsManager.getChannelInput(this.options.peerId.toChatId()),\r\n        username\r\n      });\r\n    } else {\r\n      this.checkUsernamePromise = apiManager.invokeApi('account.checkUsername', {username});\r\n    }\r\n\r\n    this.checkUsernamePromise.then(available => {\r\n      if(this.getValue() !== username) return;\r\n\r\n      if(available) {\r\n        this.setState(InputState.Valid, this.options.availableText);\r\n      } else {\r\n        this.setError(this.options.takenText);\r\n      }\r\n    }, (err) => {\r\n      if(this.getValue() !== username) return;\r\n\r\n      switch(err.type) {\r\n        case 'USERNAME_INVALID': {\r\n          this.setError(this.options.invalidText);\r\n          break;\r\n        }\r\n      }\r\n    }).then(() => {\r\n      this.checkUsernamePromise = undefined;\r\n      this.options.onChange && this.options.onChange();\r\n\r\n      const value = this.getValue();\r\n      if(value !== username && this.isValidToChange() && RichTextProcessor.isUsernameValid(value)) {\r\n        this.checkUsername(value);\r\n      }\r\n    });\r\n  };\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport AvatarElement from \"../avatar\";\nimport PopupElement, { addCancelButton, PopupButton, PopupOptions } from \".\";\nimport { i18n, LangPackKey } from \"../../lib/langPack\";\nimport CheckboxField, { CheckboxFieldOptions } from \"../checkboxField\";\n\nexport type PopupPeerButton = Omit<PopupButton, 'callback'> & Partial<{callback: PopupPeerButtonCallback}>;\nexport type PopupPeerButtonCallbackCheckboxes = Set<LangPackKey>;\nexport type PopupPeerButtonCallback = (checkboxes?: PopupPeerButtonCallbackCheckboxes) => void;\nexport type PopupPeerCheckboxOptions = CheckboxFieldOptions & {checkboxField?: CheckboxField};\n\nexport type PopupPeerOptions = PopupOptions & Partial<{\n  peerId: PeerId,\n  title: string | HTMLElement,\n  titleLangKey?: LangPackKey,\n  titleLangArgs?: any[],\n  noTitle?: boolean,\n  description: string,\n  descriptionLangKey?: LangPackKey,\n  descriptionLangArgs?: any[],\n  buttons?: Array<PopupPeerButton>,\n  checkboxes: Array<PopupPeerCheckboxOptions>\n}>;\nexport default class PopupPeer extends PopupElement {\n  protected description: HTMLParagraphElement;\n\n  constructor(private className: string, options: PopupPeerOptions = {}) {\n    super('popup-peer' + (className ? ' ' + className : ''), options.buttons && addCancelButton(options.buttons), {overlayClosable: true, ...options});\n\n    if(options.peerId) {\n      let avatarEl = new AvatarElement();\n      avatarEl.setAttribute('dialog', '1');\n      avatarEl.setAttribute('peer', '' + options.peerId);\n      avatarEl.classList.add('avatar-32');\n      this.header.prepend(avatarEl);\n    }\n\n    if(!options.noTitle) {\n      if(options.titleLangKey || !options.title) this.title.append(i18n(options.titleLangKey || 'AppName', options.titleLangArgs));\n      else if(options.title instanceof HTMLElement) {\n        this.title.append(options.title);\n      } else this.title.innerText = options.title || '';\n    }\n\n    const fragment = document.createDocumentFragment();\n\n    if(options.descriptionLangKey || options.description) {\n      const p = this.description = document.createElement('p');\n      p.classList.add('popup-description');\n      if(options.descriptionLangKey) p.append(i18n(options.descriptionLangKey, options.descriptionLangArgs));\n      else if(options.description) p.innerHTML = options.description;\n  \n      fragment.append(p);\n    }\n\n    if(options.checkboxes) {\n      this.container.classList.add('have-checkbox');\n      \n      options.checkboxes.forEach(o => {\n        o.withRipple = false;\n        const checkboxField = new CheckboxField(o);\n        o.checkboxField = checkboxField;\n        fragment.append(checkboxField.label);\n      });\n\n      options.buttons.forEach(button => {\n        if(button.callback) {\n          const original = button.callback;\n          button.callback = () => {\n            const c: Set<LangPackKey> = new Set();\n            options.checkboxes.forEach(o => {\n              if(o.checkboxField.checked) {\n                c.add(o.text);\n              }\n            });\n            original(c);\n          };\n        }\n      });\n    }\n\n    this.container.insertBefore(fragment, this.header.nextElementSibling);\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { copyTextToClipboard } from \"../../../helpers/clipboard\";\r\nimport { randomLong } from \"../../../helpers/random\";\r\nimport { Chat, ChatFull, ExportedChatInvite } from \"../../../layer\";\r\nimport appChatsManager from \"../../../lib/appManagers/appChatsManager\";\r\nimport appProfileManager from \"../../../lib/appManagers/appProfileManager\";\r\nimport Button from \"../../button\";\r\nimport { setButtonLoader } from \"../../misc\";\r\nimport RadioField from \"../../radioField\";\r\nimport Row, { RadioFormFromRows } from \"../../row\";\r\nimport { SettingSection } from \"../../sidebarLeft\";\r\nimport { toast } from \"../../toast\";\r\nimport { UsernameInputField } from \"../../usernameInputField\";\r\nimport { SliderSuperTabEventable } from \"../../sliderTab\";\r\nimport I18n from \"../../../lib/langPack\";\r\nimport PopupPeer from \"../../popups/peer\";\r\nimport ButtonCorner from \"../../buttonCorner\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport toggleDisability from \"../../../helpers/dom/toggleDisability\";\r\nimport CheckboxField from \"../../checkboxField\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\n\r\nexport default class AppChatTypeTab extends SliderSuperTabEventable {\r\n  public chatId: ChatId;\r\n  public chatFull: ChatFull;\r\n\r\n  protected init() {\r\n    this.container.classList.add('edit-peer-container', 'group-type-container');\r\n\r\n    const isBroadcast = appChatsManager.isBroadcast(this.chatId);\r\n\r\n    this.setTitle(isBroadcast ? 'ChannelType' : 'GroupType');\r\n\r\n    const section = new SettingSection({\r\n      name: isBroadcast ? 'ChannelType' : 'GroupType'\r\n    });\r\n\r\n    const random = randomLong();\r\n    const privateRow = new Row({\r\n      radioField: new RadioField({\r\n        langKey: isBroadcast ? 'ChannelPrivate' : 'MegaPrivate', \r\n        name: random, \r\n        value: 'private'\r\n      }),\r\n      subtitleLangKey: isBroadcast ? 'ChannelPrivateInfo' : 'MegaPrivateInfo'\r\n    });\r\n    const publicRow = new Row({\r\n      radioField: new RadioField({\r\n        langKey: isBroadcast ? 'ChannelPublic' : 'MegaPublic', \r\n        name: random, \r\n        value: 'public'\r\n      }),\r\n      subtitleLangKey: isBroadcast ? 'ChannelPublicInfo' : 'MegaPublicInfo'\r\n    });\r\n    const form = RadioFormFromRows([privateRow, publicRow], (value) => {\r\n      const a = [privateSection, publicSection];\r\n      if(value === 'public') a.reverse();\r\n\r\n      a[0].container.classList.remove('hide');\r\n      a[1].container.classList.add('hide');\r\n\r\n      onChange();\r\n    });\r\n\r\n    const chat: Chat = appChatsManager.getChat(this.chatId);\r\n\r\n    section.content.append(form);\r\n\r\n    const privateSection = new SettingSection({});\r\n\r\n    //let revoked = false;\r\n    const linkRow = new Row({\r\n      title: (this.chatFull.exported_invite as ExportedChatInvite.chatInviteExported).link,\r\n      subtitleLangKey: isBroadcast ? 'ChannelPrivateLinkHelp' : 'MegaPrivateLinkHelp',\r\n      clickable: () => {\r\n        copyTextToClipboard((this.chatFull.exported_invite as ExportedChatInvite.chatInviteExported).link);\r\n        toast(I18n.format('LinkCopied', true));\r\n      }\r\n    });\r\n\r\n    const btnRevoke = Button('btn-primary btn-transparent danger', {icon: 'delete', text: 'RevokeLink'});\r\n\r\n    attachClickEvent(btnRevoke, () => {\r\n      new PopupPeer('revoke-link', {\r\n        buttons: [{\r\n          langKey: 'RevokeButton',\r\n          callback: () => {\r\n            const toggle = toggleDisability([btnRevoke], true);\r\n            \r\n            appProfileManager.getChatInviteLink(this.chatId, true).then(link => {\r\n              toggle();\r\n              linkRow.title.innerHTML = link;\r\n              //revoked = true;\r\n              //onChange();\r\n            });\r\n          }\r\n        }],\r\n        titleLangKey: 'RevokeLink',\r\n        descriptionLangKey: 'RevokeAlert'\r\n      }).show();\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    privateSection.content.append(linkRow.container, btnRevoke);\r\n\r\n    const publicSection = new SettingSection({\r\n      caption: isBroadcast ? 'Channel.UsernameAboutChannel' : 'Channel.UsernameAboutGroup',\r\n      noDelimiter: true\r\n    });\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    const placeholder = 't.me/';\r\n\r\n    const onChange = () => {\r\n      const changed = (privateRow.radioField.checked && (originalValue !== placeholder/*  || revoked */)) \r\n        || (linkInputField.isValidToChange() && linkInputField.input.classList.contains('valid'));\r\n      applyBtn.classList.toggle('is-visible', changed);\r\n    };\r\n\r\n    const linkInputField = new UsernameInputField({\r\n      label: 'SetUrlPlaceholder',\r\n      name: 'group-public-link',\r\n      plainText: true,\r\n      listenerSetter: this.listenerSetter,\r\n      availableText: 'Link.Available',\r\n      invalidText: 'Link.Invalid',\r\n      takenText: 'Link.Taken',\r\n      onChange: onChange,\r\n      peerId: this.chatId.toPeerId(true),\r\n      head: placeholder\r\n    });\r\n\r\n    const originalValue = placeholder + ((chat as Chat.channel).username || '');\r\n\r\n    inputWrapper.append(linkInputField.container)\r\n    publicSection.content.append(inputWrapper);\r\n\r\n    const applyBtn = ButtonCorner({icon: 'check', className: 'is-visible'});\r\n    this.content.append(applyBtn);\r\n\r\n    attachClickEvent(applyBtn, () => {\r\n      /* const unsetLoader =  */setButtonLoader(applyBtn);\r\n      const username = publicRow.radioField.checked ? linkInputField.getValue() : '';\r\n      appChatsManager.migrateChat(this.chatId).then(channelId => {\r\n        return appChatsManager.updateUsername(channelId, username);\r\n      }).then(() => {\r\n        //unsetLoader();\r\n        this.close();\r\n      });\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    (originalValue !== placeholder ? publicRow : privateRow).radioField.checked = true;\r\n    linkInputField.setOriginalValue(originalValue);\r\n\r\n    this.scrollable.append(section.container, privateSection.container, publicSection.container);\r\n\r\n    {\r\n      const section = new SettingSection({\r\n        name: 'SavingContentTitle',\r\n        caption: isBroadcast ? 'RestrictSavingContentInfoChannel' : 'RestrictSavingContentInfoGroup'\r\n      });\r\n\r\n      const checkboxField = new CheckboxField({\r\n        text: 'RestrictSavingContent',\r\n        withRipple: true\r\n      });\r\n\r\n      this.listenerSetter.add(checkboxField.input)('change', () => {\r\n        const toggle = checkboxField.toggleDisability(true);\r\n        appChatsManager.toggleNoForwards(this.chatId, checkboxField.checked).then(() => {\r\n          toggle();\r\n        });\r\n      });\r\n\r\n      const onChatUpdate = () => {\r\n        checkboxField.setValueSilently(!!(chat as Chat.channel).pFlags.noforwards);\r\n      };\r\n\r\n      this.listenerSetter.add(rootScope)('chat_update', (chatId) => {\r\n        if(this.chatId === chatId) {\r\n          onChatUpdate();\r\n        }\r\n      });\r\n\r\n      onChatUpdate();\r\n\r\n      section.content.append(checkboxField.label);\r\n\r\n      this.scrollable.append(section.container);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Scrollable from \"../components/scrollable\";\r\nimport safeAssign from \"./object/safeAssign\";\r\n\r\nexport default class ScrollableLoader {\r\n  public loading = false;\r\n  private scrollable: Scrollable;\r\n  private getPromise: () => Promise<boolean>;\r\n  private promise: Promise<any>;\r\n  private loaded = false;\r\n\r\n  constructor(options: {\r\n    scrollable: ScrollableLoader['scrollable'],\r\n    getPromise: ScrollableLoader['getPromise']\r\n  }) {\r\n    safeAssign(this, options);\r\n\r\n    options.scrollable.onScrolledBottom = () => {\r\n      this.load();\r\n    };\r\n  }\r\n  \r\n  public load() {\r\n    if(this.loaded) {\r\n      return Promise.resolve();\r\n    }\r\n    \r\n    if(this.loading) {\r\n      return this.promise;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.promise = this.getPromise().then(done => {\r\n      this.loading = false;\r\n      this.promise = undefined;\r\n\r\n      if(done) {\r\n        this.loaded = true;\r\n        this.scrollable.onScrolledBottom = null;\r\n      } else {\r\n        this.scrollable.checkForTriggers();\r\n      }\r\n    }, () => {\r\n      this.promise = undefined;\r\n      this.loading = false;\r\n    });\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appChatsManager, { ChatRights } from \"../lib/appManagers/appChatsManager\";\nimport appDialogsManager from \"../lib/appManagers/appDialogsManager\";\nimport appMessagesManager, { Dialog } from \"../lib/appManagers/appMessagesManager\";\nimport appUsersManager from \"../lib/appManagers/appUsersManager\";\nimport rootScope from \"../lib/rootScope\";\nimport Scrollable from \"./scrollable\";\nimport { FocusDirection } from \"../helpers/fastSmoothScroll\";\nimport CheckboxField from \"./checkboxField\";\nimport appProfileManager from \"../lib/appManagers/appProfileManager\";\nimport { i18n, LangPackKey, _i18n } from \"../lib/langPack\";\nimport findUpAttribute from \"../helpers/dom/findUpAttribute\";\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\nimport PeerTitle from \"./peerTitle\";\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport replaceContent from \"../helpers/dom/replaceContent\";\nimport debounce from \"../helpers/schedulers/debounce\";\nimport windowSize from \"../helpers/windowSize\";\nimport appPeersManager, { IsPeerType } from \"../lib/appManagers/appPeersManager\";\nimport { generateDelimiter, SettingSection } from \"./sidebarLeft\";\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\nimport filterUnique from \"../helpers/array/filterUnique\";\nimport indexOfAndSplice from \"../helpers/array/indexOfAndSplice\";\nimport safeAssign from \"../helpers/object/safeAssign\";\n\ntype SelectSearchPeerType = 'contacts' | 'dialogs' | 'channelParticipants';\n\n// TODO: правильная сортировка для addMembers, т.е. для peerType: 'contacts', потому что там идут сначала контакты - потом неконтакты, а должно всё сортироваться по имени\n\nexport default class AppSelectPeers {\n  public container = document.createElement('div');\n  public list = appDialogsManager.createChatList(/* {\n    handheldsSize: 66,\n    avatarSize: 48\n  } */);\n  private chatsContainer = document.createElement('div');\n  public scrollable: Scrollable;\n  private selectedScrollable: Scrollable;\n  \n  private selectedContainer: HTMLElement;\n  public input: HTMLInputElement;\n  \n  //public selected: {[peerId: PeerId]: HTMLElement} = {};\n  public selected = new Set<PeerId | string>();\n\n  public freezed = false;\n\n  private folderId = 0;\n  private offsetIndex = 0;\n  private promise: Promise<any>;\n\n  private query = '';\n  private cachedContacts: PeerId[];\n\n  private loadedWhat: Partial<{[k in 'dialogs' | 'archived' | 'contacts' | 'channelParticipants']: true}> = {};\n\n  private renderedPeerIds: Set<PeerId> = new Set();\n\n  private appendTo: HTMLElement;\n  private onChange: (length: number) => void;\n  private peerType: SelectSearchPeerType[] = ['dialogs'];\n  private renderResultsFunc: (peerIds: PeerId[]) => void;\n  private chatRightsAction: ChatRights;\n  private multiSelect = true;\n  private rippleEnabled = true;\n  private avatarSize = 48;\n  private exceptSelf = false;\n  private filterPeerTypeBy: IsPeerType[];\n\n  private tempIds: {[k in keyof AppSelectPeers['loadedWhat']]: number} = {};\n  private peerId: PeerId;\n\n  private placeholder: LangPackKey;\n\n  private selfPresence: LangPackKey = 'Presence.YourChat';\n  \n  private needSwitchList = false;\n\n  private sectionNameLangPackKey: LangPackKey;\n  \n  constructor(options: {\n    appendTo: AppSelectPeers['appendTo'], \n    onChange?: AppSelectPeers['onChange'], \n    peerType?: AppSelectPeers['peerType'], \n    peerId?: AppSelectPeers['peerId'],\n    onFirstRender?: () => void, \n    renderResultsFunc?: AppSelectPeers['renderResultsFunc'], \n    chatRightsAction?: AppSelectPeers['chatRightsAction'], \n    multiSelect?: AppSelectPeers['multiSelect'],\n    rippleEnabled?: AppSelectPeers['rippleEnabled'],\n    avatarSize?: AppSelectPeers['avatarSize'],\n    placeholder?: AppSelectPeers['placeholder'],\n    selfPresence?: AppSelectPeers['selfPresence'],\n    exceptSelf?: AppSelectPeers['exceptSelf'],\n    filterPeerTypeBy?: AppSelectPeers['filterPeerTypeBy'],\n    sectionNameLangPackKey?: AppSelectPeers['sectionNameLangPackKey']\n  }) {\n    safeAssign(this, options);\n\n    this.container.classList.add('selector');\n\n    const f = (this.renderResultsFunc || this.renderResults).bind(this);\n    this.renderResultsFunc = (peerIds) => {\n      if(this.needSwitchList) {\n        this.scrollable.splitUp.replaceWith(this.list);\n        this.scrollable.setVirtualContainer(this.list);\n        this.needSwitchList = false;\n      }\n      \n      peerIds = peerIds.filter(peerId => {\n        const notRendered = !this.renderedPeerIds.has(peerId);\n        if(notRendered) this.renderedPeerIds.add(peerId);\n        return notRendered;\n      });\n\n      if(this.filterPeerTypeBy) {\n        peerIds = peerIds.filter(peerId => {\n          if(peerId.isPeerId()) {\n            const peer = appPeersManager.getPeer(peerId);\n            if(!peer.deleted) {\n              return this.filterPeerTypeBy.find(method => appPeersManager[method](peerId));\n            }\n          }\n\n          return true;\n        });\n      }\n\n      return f(peerIds);\n    };\n\n    this.input = document.createElement('input');\n    this.input.classList.add('selector-search-input');\n    if(this.placeholder) {\n      _i18n(this.input, this.placeholder, undefined, 'placeholder');\n    } else {\n      _i18n(this.input, 'SendMessageTo', undefined, 'placeholder');\n    }\n\n    this.input.type = 'text';\n\n    if(this.multiSelect) {\n      const section = new SettingSection({});\n      section.innerContainer.classList.add('selector-search-section');\n      let topContainer = document.createElement('div');\n      topContainer.classList.add('selector-search-container');\n  \n      this.selectedContainer = document.createElement('div');\n      this.selectedContainer.classList.add('selector-search');\n      \n      this.selectedContainer.append(this.input);\n      topContainer.append(this.selectedContainer);\n      this.selectedScrollable = new Scrollable(topContainer);\n  \n      // let delimiter = document.createElement('hr');\n\n      attachClickEvent(this.selectedContainer, (e) => {\n        if(this.freezed) return;\n        let target = e.target as HTMLElement;\n        target = findUpClassName(target, 'selector-user');\n  \n        if(!target) return;\n  \n        const peerId = target.dataset.key;\n        const li = this.chatsContainer.querySelector('[data-peer-id=\"' + peerId + '\"]') as HTMLElement;\n        if(!li) {\n          this.remove(peerId.toPeerId());\n        } else {\n          li.click();\n        }\n      });\n\n      section.content.append(topContainer);\n      this.container.append(section.container/* , delimiter */);\n    }\n\n    this.chatsContainer.classList.add('chatlist-container');\n    // this.chatsContainer.append(this.list);\n    const section = new SettingSection({\n      name: this.sectionNameLangPackKey,\n      noShadow: true\n    });\n    section.content.append(this.list);\n    this.chatsContainer.append(section.container);\n    this.scrollable = new Scrollable(this.chatsContainer);\n    this.scrollable.setVirtualContainer(this.list);\n\n    attachClickEvent(this.chatsContainer, (e) => {\n      const target = findUpAttribute(e.target, 'data-peer-id') as HTMLElement;\n      cancelEvent(e);\n\n      if(!target) return;\n      if(this.freezed) return;\n\n      let key: PeerId | string = target.dataset.peerId;\n      key = key.isPeerId() ? key.toPeerId() : key;\n\n      if(!this.multiSelect) {\n        this.add(key);\n        return;\n      }\n\n      //target.classList.toggle('active');\n      if(this.selected.has(key)) {\n        this.remove(key);\n      } else {\n        this.add(key);\n      }\n\n      const checkbox = target.querySelector('input') as HTMLInputElement;\n      checkbox.checked = !checkbox.checked;\n    });\n\n    const debouncedInput = debounce(this.onInput, 200, false, true);\n    this.input.addEventListener('input', debouncedInput);\n\n    this.scrollable.onScrolledBottom = () => {\n      this.getMoreResults();\n    };\n\n    this.scrollable.container.prepend(generateDelimiter());\n\n    this.container.append(this.chatsContainer);\n    this.appendTo.append(this.container);\n\n    // WARNING TIMEOUT\n    setTimeout(() => {\n      let getResultsPromise = this.getMoreResults() as Promise<any>;\n      if(options.onFirstRender) {\n        getResultsPromise.then(() => {\n          options.onFirstRender();\n        });\n      }\n    }, 0);\n  }\n\n  private onInput = () => {\n    const value = this.input.value;\n    if(this.query !== value) {\n      if(this.peerType.includes('contacts') || this.peerType.includes('dialogs')) {\n        this.cachedContacts = null;\n      }\n      \n      if(this.peerType.includes('dialogs')) {\n        this.folderId = 0;\n        this.offsetIndex = 0;\n      }\n\n      for(let i in this.tempIds) {\n        // @ts-ignore\n        ++this.tempIds[i];\n      }\n\n      this.list = appDialogsManager.createChatList();\n\n      this.promise = null;\n      this.loadedWhat = {};\n      this.query = value;\n      this.renderedPeerIds.clear();\n      this.needSwitchList = true;\n      \n      //console.log('selectPeers input:', this.query);\n      this.getMoreResults();\n    }\n  };\n\n  private renderSaved() {\n    if(!this.exceptSelf && \n      !this.offsetIndex && \n      this.folderId === 0 && \n      this.peerType.includes('dialogs') && \n      (!this.query || appUsersManager.testSelfSearch(this.query))) {\n      this.renderResultsFunc([rootScope.myId]);\n    }\n  }\n\n  private getTempId(type: keyof AppSelectPeers['tempIds']) {\n    if(this.tempIds[type] === undefined) {\n      this.tempIds[type] = 0;\n    }\n\n    return ++this.tempIds[type];\n  }\n\n  private async getMoreDialogs(): Promise<any> {\n    if(this.promise) return this.promise;\n\n    if(this.loadedWhat.dialogs && this.loadedWhat.archived) {\n      return;\n    }\n    \n    // в десктопе - сначала без группы, потом архивные, потом контакты без сообщений\n    const pageCount = windowSize.height / 72 * 1.25 | 0;\n\n    const tempId = this.getTempId('dialogs');\n    const promise = appMessagesManager.getConversations(this.query, this.offsetIndex, pageCount, this.folderId, true).promise;\n    this.promise = promise;\n    const value = await promise;\n    if(this.tempIds.dialogs !== tempId) {\n      return;\n    }\n\n    this.promise = null;\n\n    let dialogs = value.dialogs as Dialog[];\n    if(dialogs.length) {\n      const newOffsetIndex = dialogs[dialogs.length - 1].index || 0;\n\n      dialogs = dialogs.slice();\n      dialogs.findAndSplice(d => d.peerId === rootScope.myId); // no my account\n\n      if(this.chatRightsAction) {\n        dialogs = dialogs.filter(d => this.filterByRights(d.peerId));\n      }\n\n      this.renderSaved();\n\n      this.offsetIndex = newOffsetIndex;\n    }\n\n    this.renderResultsFunc(dialogs.map(dialog => dialog.peerId));\n    \n    if(value.isEnd) {\n      if(!this.loadedWhat.dialogs) {\n        this.renderSaved();\n\n        this.loadedWhat.dialogs = true;\n        this.offsetIndex = 0;\n        this.folderId = 1;\n\n        return this.getMoreDialogs();\n      } else {\n        this.loadedWhat.archived = true;\n\n        if(!this.loadedWhat.contacts/*  && this.peerType.includes('contacts') */) {\n          return this.getMoreContacts();\n        }\n      }\n    }\n  }\n\n  private filterByRights(peerId: PeerId) {\n    return (\n      peerId.isUser() && \n      (this.chatRightsAction !== 'send_messages' || appUsersManager.canSendToUser(peerId))\n    ) || appChatsManager.hasRights(peerId.toChatId(), this.chatRightsAction);\n  }\n\n  private async getMoreContacts() {\n    if(this.promise) return this.promise;\n\n    if(this.loadedWhat.contacts) {\n      return;\n    }\n\n    const isGlobalSearch = this.peerType.includes('contacts');\n\n    if(!this.cachedContacts) {\n      /* const promises: Promise<any>[] = [appUsersManager.getContacts(this.query)];\n      if(!this.peerType.includes('dialogs')) {\n        promises.push(appMessagesManager.getConversationsAll());\n      }\n\n      this.promise = Promise.all(promises);\n      this.cachedContacts = (await this.promise)[0].slice(); */\n      const tempId = this.getTempId('contacts');\n      const promise = Promise.all([\n        isGlobalSearch ? appUsersManager.getContactsPeerIds(this.query) : [],\n        this.query ? appUsersManager.searchContacts(this.query) : undefined\n      ]);\n\n      this.promise = promise;\n      let [cachedContacts, searchResult] = await promise;\n      if(this.tempIds.contacts !== tempId) {\n        return;\n      }\n\n      if(searchResult) {\n        // do not add global result if only dialogs needed\n        let resultPeerIds = isGlobalSearch ? searchResult.my_results.concat(searchResult.results) : searchResult.my_results;\n\n        if(this.chatRightsAction) {\n          resultPeerIds = resultPeerIds.filter(peerId => this.filterByRights(peerId));\n        }\n\n        if(!this.peerType.includes('dialogs')) {\n          resultPeerIds = resultPeerIds.filter(peerId => peerId.isUser());\n        }\n\n        this.cachedContacts = filterUnique(cachedContacts.concat(resultPeerIds));\n      } else this.cachedContacts = cachedContacts.slice();\n\n      indexOfAndSplice(this.cachedContacts, rootScope.myId); // no my account\n      this.promise = null;\n    }\n\n    // if(this.cachedContacts.length) {\n      const pageCount = windowSize.height / 72 * 1.25 | 0;\n      const arr = this.cachedContacts.splice(0, pageCount);\n      this.renderResultsFunc(arr);\n    // }\n    \n    if(!this.cachedContacts.length) {\n      this.loadedWhat.contacts = true;\n\n      // need to load non-contacts\n      /* if(!this.peerType.includes('dialogs')) {\n        return this.getMoreDialogs();\n      } */\n    }\n  }\n\n  private async getMoreChannelParticipants() {\n    if(this.promise) return this.promise;\n\n    if(this.loadedWhat.channelParticipants) {\n      return;\n    }\n\n    const pageCount = 50; // same as in group permissions to use cache\n\n    const tempId = this.getTempId('channelParticipants');\n    const promise = appProfileManager.getChannelParticipants(this.peerId.toChatId(), {_: 'channelParticipantsSearch', q: this.query}, pageCount, this.list.childElementCount);\n    const participants = await promise;\n    if(this.tempIds.channelParticipants !== tempId) {\n      return;\n    }\n    \n    const peerIds = participants.participants.map(participant => {\n      return appChatsManager.getParticipantPeerId(participant);\n    });\n    indexOfAndSplice(peerIds, rootScope.myId);\n    this.renderResultsFunc(peerIds);\n\n    if(this.list.childElementCount >= participants.count || participants.participants.length < pageCount) {\n      this.loadedWhat.channelParticipants = true;\n    }\n  }\n\n  checkForTriggers = () => {\n    this.scrollable.checkForTriggers();\n  };\n\n  private getMoreResults() {\n    const get = () => {\n      const promises: Promise<any>[] = [];\n\n      // if(!loadedAllDialogs && (this.peerType.includes('dialogs')/*  || this.peerType.includes('contacts') */)) {\n      //   if(!loadAllDialogsPromise) {\n      //     loadAllDialogsPromise = appMessagesManager.getConversationsAll()\n      //     .then(() => {\n      //       loadedAllDialogs = true;\n      //     }).finally(() => {\n      //       loadAllDialogsPromise = null;\n      //     });\n      //   }\n\n      //   promises.push(loadAllDialogsPromise);\n      // }\n  \n      if((this.peerType.includes('dialogs')/*  || this.loadedWhat.contacts */) && !this.loadedWhat.archived) { // to load non-contacts\n        promises.push(this.getMoreDialogs());\n  \n        if(!this.loadedWhat.archived) {\n          return promises;\n        }\n      }\n      \n      if((this.peerType.includes('contacts') || this.peerType.includes('dialogs')) && !this.loadedWhat.contacts) {\n        promises.push(this.getMoreContacts());\n      }\n\n      if(this.peerType.includes('channelParticipants') && !this.loadedWhat.channelParticipants) {\n        promises.push(this.getMoreChannelParticipants());\n      }\n  \n      return promises;\n    };\n    \n    const promises = get();\n    const promise = Promise.all(promises);\n    if(promises.length) {\n      promise.then(this.checkForTriggers);\n    }\n\n    return promise;\n  }\n\n  private renderResults(peerIds: PeerId[]) {\n    //console.log('will renderResults:', peerIds);\n\n    // оставим только неконтакты с диалогов\n    if(!this.peerType.includes('dialogs') && this.loadedWhat.contacts) {\n      peerIds = peerIds.filter(peerId => {\n        return appUsersManager.isNonContactUser(peerId);\n      });\n    }\n\n    peerIds.forEach(peerId => {\n      const {dom} = appDialogsManager.addDialogNew({\n        dialog: peerId,\n        container: this.scrollable,\n        drawStatus: false,\n        rippleEnabled: this.rippleEnabled,\n        avatarSize: this.avatarSize\n      });\n\n      if(this.multiSelect) {\n        const selected = this.selected.has(peerId);\n        const checkboxField = new CheckboxField();\n\n        if(selected) {\n          //dom.listEl.classList.add('active');\n          checkboxField.input.checked = true;\n        }\n\n        dom.containerEl.prepend(checkboxField.label);\n      }\n\n      let subtitleEl: HTMLElement;\n      if(peerId.isAnyChat()) {\n        subtitleEl = appProfileManager.getChatMembersString(peerId.toChatId());\n      } else if(peerId === rootScope.myId) {\n        subtitleEl = i18n(this.selfPresence);\n      } else {\n        subtitleEl = appUsersManager.getUserStatusString(peerId);\n      }\n\n      dom.lastMessageSpan.append(subtitleEl);\n    });\n  }\n\n  public add(key: PeerId | string, title?: string | HTMLElement, scroll = true) {\n    //console.trace('add');\n    this.selected.add(key);\n\n    if(!this.multiSelect) {\n      this.onChange(this.selected.size);\n      return;\n    }\n\n    if(this.query.trim()) {\n      this.input.value = '';\n      this.onInput();\n    }\n\n    const div = document.createElement('div');\n    div.classList.add('selector-user', 'scale-in');\n\n    const avatarEl = document.createElement('avatar-element');\n    avatarEl.classList.add('selector-user-avatar', 'tgico');\n    avatarEl.setAttribute('dialog', '1');\n    avatarEl.classList.add('avatar-32');\n\n    div.dataset.key = '' + key;\n    if(key.isPeerId()) {\n      if(title === undefined) {\n        title = new PeerTitle({peerId: key.toPeerId(), dialog: true}).element;\n      }\n\n      avatarEl.setAttribute('peer', '' + key);\n    }\n\n    if(title) {\n      if(typeof(title) === 'string') {\n        div.innerHTML = title;\n      } else {\n        replaceContent(div, title);\n        div.append(title);\n      }\n    }\n\n    div.insertAdjacentElement('afterbegin', avatarEl);\n\n    this.selectedContainer.insertBefore(div, this.input);\n    //this.selectedScrollable.scrollTop = this.selectedScrollable.scrollHeight;\n    this.onChange && this.onChange(this.selected.size);\n    \n    if(scroll) {\n      this.selectedScrollable.scrollIntoViewNew({\n        element: this.input, \n        position: 'center'\n      });\n    }\n    \n    return div;\n  }\n\n  public remove(key: PeerId | string) {\n    if(!this.multiSelect) return;\n    //const div = this.selected[peerId];\n    const div = this.selectedContainer.querySelector(`[data-key=\"${key}\"]`) as HTMLElement;\n    div.classList.remove('scale-in');\n    void div.offsetWidth;\n    div.classList.add('scale-out');\n\n    const onAnimationEnd = () => {\n      this.selected.delete(key);\n      div.remove();\n      this.onChange && this.onChange(this.selected.size);\n    };\n\n    if(rootScope.settings.animationsEnabled) {\n      div.addEventListener('animationend', onAnimationEnd, {once: true});\n    } else {\n      onAnimationEnd();\n    }\n  }\n\n  public getSelected() {\n    return [...this.selected];\n  }\n\n  public addInitial(values: any[]) {\n    values.forEach(value => {\n      this.add(value, undefined, false);\n    });\n\n    window.requestAnimationFrame(() => { // ! not the best place for this raf though it works\n      this.selectedScrollable.scrollIntoViewNew({\n        element: this.input, \n        position: 'center', \n        forceDirection: FocusDirection.Static\n      });\n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\r\nimport AppSelectPeers from \"../appSelectPeers\";\r\nimport PopupElement from \".\";\r\nimport { LangPackKey, _i18n } from \"../../lib/langPack\";\r\n\r\nexport default class PopupPickUser extends PopupElement {\r\n  protected selector: AppSelectPeers;\r\n  \r\n  constructor(options: {\r\n    peerTypes: AppSelectPeers['peerType'], \r\n    onSelect?: (peerId: PeerId) => Promise<void> | void, \r\n    placeholder: LangPackKey,\r\n    chatRightsAction?: AppSelectPeers['chatRightsAction'],\r\n    peerId?: number,\r\n    selfPresence?: LangPackKey\r\n  }) {\r\n    super('popup-forward', null, {closable: true, overlayClosable: true, body: true});\r\n\r\n    this.selector = new AppSelectPeers({\r\n      appendTo: this.body, \r\n      onChange: async() => {\r\n        const selected = this.selector.getSelected();\r\n        const peerId = selected[selected.length - 1].toPeerId();\r\n        \r\n        if(options.onSelect) {\r\n          const res = options.onSelect(peerId);\r\n          if(res instanceof Promise) {\r\n            try {\r\n              await res;\r\n            } catch(err) {\r\n              return;\r\n            }\r\n          }\r\n        }\r\n\r\n        this.selector = null;\r\n        this.hide();\r\n      }, \r\n      peerType: options.peerTypes, \r\n      onFirstRender: () => {\r\n        this.show();\r\n        this.selector.checkForTriggers(); // ! due to zero height before mounting\r\n\r\n        if(!IS_TOUCH_SUPPORTED) {\r\n          this.selector.input.focus();\r\n        }\r\n      }, \r\n      chatRightsAction: options.chatRightsAction, \r\n      multiSelect: false,\r\n      rippleEnabled: false,\r\n      avatarSize: 46,\r\n      peerId: options.peerId,\r\n      placeholder: options.placeholder,\r\n      selfPresence: options.selfPresence\r\n    });\r\n\r\n    //this.scrollable = new Scrollable(this.body);\r\n\r\n    this.title.append(this.selector.input);\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\nimport toggleDisability from \"../../../helpers/dom/toggleDisability\";\nimport deepEqual from \"../../../helpers/object/deepEqual\";\nimport { ChannelParticipant } from \"../../../layer\";\nimport appChatsManager from \"../../../lib/appManagers/appChatsManager\";\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\nimport Button from \"../../button\";\nimport { SettingSection } from \"../../sidebarLeft\";\nimport { SliderSuperTabEventable } from \"../../sliderTab\";\nimport { ChatPermissions } from \"./groupPermissions\";\n\nexport default class AppUserPermissionsTab extends SliderSuperTabEventable {\n  public participant: ChannelParticipant;\n  public chatId: ChatId;\n  public userId: UserId;\n\n  protected init() {\n    this.container.classList.add('edit-peer-container', 'user-permissions-container');\n    this.setTitle('UserRestrictions');\n\n    let destroyListener: () => void;\n\n    {\n      const section = new SettingSection({\n        name: 'UserRestrictionsCanDo',\n      });\n      \n      const div = document.createElement('div');\n      div.classList.add('chatlist-container');\n      section.content.insertBefore(div, section.title);\n\n      const list = appDialogsManager.createChatList({new: true});\n      div.append(list);\n\n      const {dom} = appDialogsManager.addDialogNew({\n        dialog: this.userId.toPeerId(false),\n        container: list,\n        drawStatus: false,\n        rippleEnabled: true,\n        avatarSize: 48\n      });\n\n      dom.lastMessageSpan.append(appUsersManager.getUserStatusString(this.userId));\n\n      const p = new ChatPermissions({\n        chatId: this.chatId,\n        listenerSetter: this.listenerSetter,\n        appendTo: section.content,\n        participant: this.participant._ === 'channelParticipantBanned' ? this.participant : undefined\n      });\n\n      destroyListener = () => {\n        //appChatsManager.editChatDefaultBannedRights(this.chatId, p.takeOut());\n        const rights = p.takeOut();\n        if(this.participant._ === 'channelParticipantBanned' && deepEqual(this.participant.banned_rights.pFlags, rights.pFlags)) {\n          return;\n        }\n\n        appChatsManager.editBanned(this.chatId, this.participant, rights);\n      };\n\n      this.eventListener.addEventListener('destroy', destroyListener, {once: true});\n\n      this.scrollable.append(section.container);\n    }\n    \n    {\n      const section = new SettingSection({});\n\n      if(this.participant._ === 'channelParticipantBanned') {\n        const btnDeleteException = Button('btn-primary btn-transparent danger', {icon: 'delete', text: 'GroupPermission.Delete'});\n\n        attachClickEvent(btnDeleteException, () => {\n          const toggle = toggleDisability([btnDeleteException], true);\n          appChatsManager.clearChannelParticipantBannedRights(this.chatId, this.participant).then(() => {\n            this.eventListener.removeEventListener('destroy', destroyListener);\n            this.close();\n          }, () => {\n            toggle();\n          });\n        }, {listenerSetter: this.listenerSetter});\n  \n        section.content.append(btnDeleteException);\n      }\n\n      const btnDelete = Button('btn-primary btn-transparent danger', {icon: 'deleteuser', text: 'UserRestrictionsBlock'});\n\n      attachClickEvent(btnDelete, () => {\n        const toggle = toggleDisability([btnDelete], true);\n        appChatsManager.kickFromChannel(this.chatId, this.participant).then(() => {\n          this.eventListener.removeEventListener('destroy', destroyListener);\n          this.close();\n        });\n        /* new PopupPeer('popup-group-kick-user', {\n          peerId: -this.chatId,\n          title: 'Ban User?',\n          description: `Are you sure you want to ban <b>${appPeersManager.getPeerTitle(this.userId)}</b>`,\n          buttons: addCancelButton([{\n            text: 'BAN',\n            callback: () => {\n              const toggle = toggleDisability([btnDelete], true);\n\n              appChatsManager.kickFromChannel(this.chatId, this.participant).then(() => {\n                this.eventListener.removeEventListener('destroy', destroyListener);\n                this.close();\n              }, () => {\n                toggle();\n              });\n            },\n            isDanger: true\n          }])\n        }).show(); */\n      }, {listenerSetter: this.listenerSetter});\n\n      section.content.append(btnDelete);\n\n      this.scrollable.append(section.container);\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\nimport findUpTag from \"../../../helpers/dom/findUpTag\";\nimport replaceContent from \"../../../helpers/dom/replaceContent\";\nimport ListenerSetter from \"../../../helpers/listenerSetter\";\nimport ScrollableLoader from \"../../../helpers/scrollableLoader\";\nimport { ChannelParticipant, Chat, ChatBannedRights, Update } from \"../../../layer\";\nimport appChatsManager, { ChatRights } from \"../../../lib/appManagers/appChatsManager\";\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\nimport appPeersManager from \"../../../lib/appManagers/appPeersManager\";\nimport appProfileManager from \"../../../lib/appManagers/appProfileManager\";\nimport I18n, { i18n, join, LangPackKey } from \"../../../lib/langPack\";\nimport rootScope from \"../../../lib/rootScope\";\nimport CheckboxField from \"../../checkboxField\";\nimport PopupPickUser from \"../../popups/pickUser\";\nimport Row from \"../../row\";\nimport { SettingSection } from \"../../sidebarLeft\";\nimport { SliderSuperTabEventable } from \"../../sliderTab\";\nimport { toast } from \"../../toast\";\nimport AppUserPermissionsTab from \"./userPermissions\";\n\nexport class ChatPermissions {\n  public v: Array<{\n    flags: ChatRights[],\n    text: LangPackKey,\n    exceptionText: LangPackKey,\n    checkboxField?: CheckboxField,\n  }>;\n  private toggleWith: Partial<{[chatRight in ChatRights]: ChatRights[]}>;\n\n  constructor(options: {\n    chatId: ChatId,\n    listenerSetter: ListenerSetter,\n    appendTo: HTMLElement,\n    participant?: ChannelParticipant.channelParticipantBanned\n  }) {\n    this.v = [\n      {flags: ['send_messages'], text: 'UserRestrictionsSend', exceptionText: 'UserRestrictionsNoSend'},\n      {flags: ['send_media'], text: 'UserRestrictionsSendMedia', exceptionText: 'UserRestrictionsNoSendMedia'},\n      {flags: ['send_stickers', 'send_gifs'], text: 'UserRestrictionsSendStickers', exceptionText: 'UserRestrictionsNoSendStickers'},\n      {flags: ['send_polls'], text: 'UserRestrictionsSendPolls', exceptionText: 'UserRestrictionsNoSendPolls'},\n      {flags: ['embed_links'], text: 'UserRestrictionsEmbedLinks', exceptionText: 'UserRestrictionsNoEmbedLinks'},\n      {flags: ['invite_users'], text: 'UserRestrictionsInviteUsers', exceptionText: 'UserRestrictionsNoInviteUsers'},\n      {flags: ['pin_messages'], text: 'UserRestrictionsPinMessages', exceptionText: 'UserRestrictionsNoPinMessages'},\n      {flags: ['change_info'], text: 'UserRestrictionsChangeInfo', exceptionText: 'UserRestrictionsNoChangeInfo'}\n    ];\n\n    this.toggleWith = {\n      'send_messages': ['send_media', 'send_stickers', 'send_polls', 'embed_links']\n    };\n\n    const chat: Chat.chat | Chat.channel = appChatsManager.getChat(options.chatId);\n    const defaultBannedRights = chat.default_banned_rights;\n    const rights = options.participant ? appChatsManager.combineParticipantBannedRights(options.chatId, options.participant.banned_rights) : defaultBannedRights;\n    \n    const restrictionText: LangPackKey = options.participant ? 'UserRestrictionsDisabled' : 'EditCantEditPermissionsPublic';\n    for(const info of this.v) {\n      const mainFlag = info.flags[0];\n      info.checkboxField = new CheckboxField({\n        text: info.text,\n        checked: appChatsManager.hasRights(options.chatId, mainFlag, rights),\n        restriction: true,\n        withRipple: true\n      });\n\n      if((\n          options.participant && \n          defaultBannedRights.pFlags[mainFlag as keyof typeof defaultBannedRights['pFlags']]\n        ) || (\n          (chat as Chat.channel).username &&\n          (\n            info.flags.includes('pin_messages') ||\n            info.flags.includes('change_info')\n          )\n        )\n      ) {\n        info.checkboxField.input.disabled = true;\n        \n        /* options.listenerSetter.add(info.checkboxField.input)('change', (e) => {\n          if(!e.isTrusted) {\n            return;\n          }\n\n          cancelEvent(e);\n          toast('This option is disabled for all members in Group Permissions.');\n          info.checkboxField.checked = false;\n        }); */\n\n        attachClickEvent(info.checkboxField.label, (e) => {\n          toast(I18n.format(restrictionText, true));\n        }, {listenerSetter: options.listenerSetter});\n      }\n\n      if(this.toggleWith[mainFlag]) {\n        options.listenerSetter.add(info.checkboxField.input)('change', () => {\n          if(!info.checkboxField.checked) {\n            const other = this.v.filter(i => this.toggleWith[mainFlag].includes(i.flags[0]));\n            other.forEach(info => {\n              info.checkboxField.checked = false;\n            });\n          }\n        });\n      }\n\n      options.appendTo.append(info.checkboxField.label);\n    }\n  }\n\n  public takeOut() {\n    const rights: ChatBannedRights = {\n      _: 'chatBannedRights',\n      until_date: 0x7FFFFFFF,\n      pFlags: {}\n    };\n\n    for(const info of this.v) {\n      const banned = !info.checkboxField.checked;\n      if(banned) {\n        info.flags.forEach(flag => {\n          // @ts-ignore\n          rights.pFlags[flag] = true;\n        });\n      }\n    }\n\n    return rights;\n  }\n}\n\nexport default class AppGroupPermissionsTab extends SliderSuperTabEventable {\n  public chatId: ChatId;\n\n  protected async init() {\n    this.container.classList.add('edit-peer-container', 'group-permissions-container');\n    this.setTitle('ChannelPermissions');\n\n    let chatPermissions: ChatPermissions;\n    {\n      const section = new SettingSection({\n        name: 'ChannelPermissionsHeader',\n      });\n\n      chatPermissions = new ChatPermissions({\n        chatId: this.chatId,\n        listenerSetter: this.listenerSetter,\n        appendTo: section.content,\n      });\n\n      this.eventListener.addEventListener('destroy', () => {\n        appChatsManager.editChatDefaultBannedRights(this.chatId, chatPermissions.takeOut());\n      }, {once: true});\n\n      this.scrollable.append(section.container);\n    }\n    \n    {\n      const section = new SettingSection({\n        name: 'PrivacyExceptions'\n      });\n\n      const addExceptionRow = new Row({\n        titleLangKey: 'ChannelAddException',\n        subtitleLangKey: 'Loading',\n        icon: 'adduser',\n        clickable: () => {\n          new PopupPickUser({\n            peerTypes: ['channelParticipants'],\n            onSelect: (peerId) => {\n              setTimeout(() => {\n                openPermissions(peerId);\n              }, 0);\n            },\n            placeholder: 'ExceptionModal.Search.Placeholder',\n            peerId: -this.chatId,\n          });\n        }\n      });\n\n      const openPermissions = async(peerId: PeerId) => {\n        let participant: AppUserPermissionsTab['participant'];\n        try {\n          participant = await appProfileManager.getChannelParticipant(this.chatId, peerId) as any;\n        } catch(err) {\n          toast('User is no longer participant');\n          return;\n        }\n\n        const tab = new AppUserPermissionsTab(this.slider);\n        tab.participant = participant;\n        tab.chatId = this.chatId;\n        tab.userId = peerId;\n        tab.open();\n      };\n\n      section.content.append(addExceptionRow.container);\n\n      /* const removedUsersRow = new Row({\n        titleLangKey: 'ChannelBlockedUsers',\n        subtitleLangKey: 'NoBlockedUsers',\n        icon: 'deleteuser',\n        clickable: true\n      });\n\n      section.content.append(removedUsersRow.container); */\n\n      const c = section.generateContentElement();\n      c.classList.add('chatlist-container');\n      \n      const list = appDialogsManager.createChatList({new: true});\n      c.append(list);\n\n      attachClickEvent(list, (e) => {\n        const target = findUpTag(e.target, 'LI');\n        if(!target) return;\n\n        const peerId = target.dataset.peerId.toPeerId();\n        openPermissions(peerId);\n      }, {listenerSetter: this.listenerSetter});\n\n      const setSubtitle = (li: Element, participant: ChannelParticipant.channelParticipantBanned) => {\n        const bannedRights = participant.banned_rights;//appChatsManager.combineParticipantBannedRights(this.chatId, participant.banned_rights);\n        const defaultBannedRights = (appChatsManager.getChat(this.chatId) as Chat.channel).default_banned_rights;\n        //const combinedRights = appChatsManager.combineParticipantBannedRights(this.chatId, bannedRights);\n\n        const cantWhat: LangPackKey[] = []/* , canWhat: LangPackKey[] = [] */;\n        chatPermissions.v.forEach(info => {\n          const mainFlag = info.flags[0];\n          // @ts-ignore\n          if(bannedRights.pFlags[mainFlag] && !defaultBannedRights.pFlags[mainFlag]) {\n            cantWhat.push(info.exceptionText);\n          // @ts-ignore\n          }/*  else if(!combinedRights.pFlags[mainFlag]) {\n            canWhat.push(info.exceptionText);\n          } */\n        });\n\n        const el = li.querySelector('.user-last-message') as HTMLElement;\n\n        if(cantWhat.length) {\n          el.innerHTML = '';\n          el.append(...join(cantWhat.map(t => i18n(t)), false));\n        }/*  else if(canWhat.length) {\n          str = 'Can ' + canWhat.join(canWhat.length === 2 ? ' and ' : ', ');\n        } */\n  \n        el.classList.toggle('hide', !cantWhat.length);\n      };\n\n      const add = (participant: ChannelParticipant.channelParticipantBanned, append: boolean) => {\n        const {dom} = appDialogsManager.addDialogNew({\n          dialog: appPeersManager.getPeerId(participant.peer),\n          container: list,\n          drawStatus: false,\n          rippleEnabled: true,\n          avatarSize: 48,\n          append\n        });\n\n        setSubtitle(dom.listEl, participant);\n\n        //dom.titleSpan.innerHTML = 'Chinaza Akachi';\n        //dom.lastMessageSpan.innerHTML = 'Can Add Users and Pin Messages';\n      };\n\n      this.listenerSetter.add(rootScope)('updateChannelParticipant', (update: Update.updateChannelParticipant) => {\n        const needAdd = update.new_participant?._ === 'channelParticipantBanned' && !update.new_participant.banned_rights.pFlags.view_messages;\n        const li = list.querySelector(`[data-peer-id=\"${update.user_id}\"]`);\n        if(needAdd) {\n          if(!li) {\n            add(update.new_participant as ChannelParticipant.channelParticipantBanned, false);\n          } else {\n            setSubtitle(li, update.new_participant as ChannelParticipant.channelParticipantBanned);\n          }\n\n          if(update.prev_participant?._ !== 'channelParticipantBanned') {\n            ++exceptionsCount;\n          }\n        } else {\n          if(li) {\n            li.remove();\n          }\n\n          if(update.prev_participant?._ === 'channelParticipantBanned') {\n            --exceptionsCount;\n          }\n        }\n\n        setLength();\n      });\n\n      const setLength = () => {\n        replaceContent(addExceptionRow.subtitle, i18n(exceptionsCount ? 'Permissions.ExceptionsCount' : 'Permissions.NoExceptions', [exceptionsCount]));\n      };\n\n      let exceptionsCount = 0;\n      let loader: ScrollableLoader;\n      const setLoader = () => {\n        const LOAD_COUNT = 50;\n        loader = new ScrollableLoader({\n          scrollable: this.scrollable,\n          getPromise: () => {\n            return appProfileManager.getChannelParticipants(this.chatId, {_: 'channelParticipantsBanned', q: ''}, LOAD_COUNT, list.childElementCount).then(res => {\n              for(const participant of res.participants) {\n                add(participant as ChannelParticipant.channelParticipantBanned, true);\n              }\n  \n              exceptionsCount = res.count;\n              setLength();\n  \n              return res.participants.length < LOAD_COUNT || res.count === list.childElementCount;\n            });\n          }\n        });\n\n        return loader.load();\n      };\n\n      this.scrollable.append(section.container);\n\n      if(appChatsManager.isChannel(this.chatId)) {\n        await setLoader();\n      } else {\n        setLength();\n        \n        this.listenerSetter.add(rootScope)('dialog_migrate', ({migrateFrom, migrateTo}) => {\n          if(this.chatId === migrateFrom) {\n            this.chatId = migrateTo;\n            setLoader();\n          }\n        });\n      }\n    }\n  }\n\n  onOpenAfterTimeout() {\n    this.scrollable.onScroll();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appChatsManager from \"../../lib/appManagers/appChatsManager\";\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\nimport appPeersManager, { PeerType } from \"../../lib/appManagers/appPeersManager\";\nimport { LangPackKey } from \"../../lib/langPack\";\nimport PeerTitle from \"../peerTitle\";\nimport PopupPeer, { PopupPeerButtonCallbackCheckboxes, PopupPeerOptions } from \"./peer\";\n\nexport default class PopupDeleteDialog {\n  constructor(\n    peerId: PeerId, \n    // actionType: 'leave' | 'delete', \n    peerType: PeerType = appPeersManager.getDialogType(peerId), \n    onSelect?: (promise: Promise<any>) => void\n  ) {\n    const peerTitleElement = new PeerTitle({peerId}).element;\n\n    /* const callbackFlush = (checked: PopupPeerButtonCallbackCheckboxes) => {\n      const promise = appMessagesManager.flushHistory(peerId, checkboxes ? !checked[checkboxes[0].text] : undefined);\n      onSelect && onSelect(promise);\n    }; */\n\n    const callbackLeave = (checked: PopupPeerButtonCallbackCheckboxes, flush = checkboxes && !!checked.size) => {\n      let promise = appChatsManager.leave(peerId.toChatId());\n      \n      if(flush) {\n        promise = promise.finally(() => {\n          return appMessagesManager.flushHistory(peerId);\n        }) as any;\n      }\n      \n      onSelect && onSelect(promise);\n    };\n\n    const callbackDelete = (checked: PopupPeerButtonCallbackCheckboxes) => {\n      let promise: Promise<any>;\n\n      if(peerId.isUser()) {\n        promise = appMessagesManager.flushHistory(peerId, false, checkboxes ? !!checked.size : undefined);\n      } else {\n        if(checked.size) {\n          promise = appChatsManager.delete(peerId.toChatId());\n        } else {\n          return callbackLeave(checked);\n        }\n      }\n      \n      onSelect && onSelect(promise);\n    };\n\n    let title: LangPackKey, description: LangPackKey, descriptionArgs: any[], buttons: PopupPeerOptions['buttons'], checkboxes: PopupPeerOptions['checkboxes'];\n    switch(peerType) {\n      case 'channel': {\n        if(/* actionType === 'delete' &&  */appChatsManager.hasRights(peerId.toChatId(), 'delete_chat')) {\n          appChatsManager.deleteChannel\n          title = 'ChannelDeleteMenu';\n          description = 'AreYouSureDeleteAndExitChannel';\n          buttons = [{\n            langKey: 'ChannelDeleteMenu',\n            isDanger: true,\n            callback: callbackDelete\n          }];\n\n          checkboxes = [{\n            text: 'DeleteChannelForAll'\n          }];\n        } else {\n          title = 'LeaveChannelMenu';\n          description = 'ChannelLeaveAlertWithName';\n          descriptionArgs = [peerTitleElement];\n          buttons = [{\n            langKey: 'LeaveChannel',\n            isDanger: true,\n            callback: callbackLeave\n          }];\n        }\n\n        break;\n      }\n\n      /* case 'megagroup': {\n        title = 'Leave Group?';\n        description = `Are you sure you want to leave this group?`;\n        buttons = [{\n          text: 'LEAVE ' + peerTitleElement,\n          isDanger: true,\n          callback: callbackLeave\n        }];\n\n        break;\n      } */\n\n      case 'chat': {\n        title = 'DeleteChatUser';\n        description = 'AreYouSureDeleteThisChatWithUser';\n        descriptionArgs = [peerTitleElement];\n\n        buttons = [{\n          langKey: 'DeleteChatUser',\n          isDanger: true,\n          callback: callbackDelete\n        }];\n\n        checkboxes = [{\n          text: 'DeleteMessagesOptionAlso',\n          textArgs: [\n            new PeerTitle({peerId}).element\n          ]\n        }];\n\n        break;\n      }\n\n      case 'saved': {\n        title = 'DeleteChatUser';\n        description = 'AreYouSureDeleteThisChatSavedMessages';\n        buttons = [{\n          langKey: 'DeleteChatUser',\n          isDanger: true,\n          callback: callbackDelete\n        }];\n\n        break;\n      }\n\n      case 'megagroup':\n      case 'group': {\n        if(/* actionType === 'delete' &&  */appChatsManager.hasRights(peerId.toChatId(), 'delete_chat')) {\n          title = 'DeleteMegaMenu';\n          description = 'AreYouSureDeleteAndExit';\n          buttons = [{\n            langKey: 'DeleteMegaMenu',\n            isDanger: true,\n            callback: callbackDelete\n          }];\n\n          checkboxes = [{\n            text: 'DeleteChat.DeleteGroupForAll'\n          }];\n        } else {\n          title = 'LeaveMegaMenu';\n          description = 'AreYouSureDeleteAndExitName';\n          descriptionArgs = [peerTitleElement];\n          buttons = [{\n            langKey: 'DeleteChatUser',\n            isDanger: true,\n            callback: (checkboxes) => callbackLeave(checkboxes, true)\n          }];\n        }\n\n        break;\n      }\n    }\n\n    new PopupPeer('popup-delete-chat', {\n      peerId,\n      titleLangKey: title,\n      descriptionLangKey: description,\n      descriptionLangArgs: descriptionArgs,\n      buttons,\n      checkboxes\n    }).show();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport debounce from \"../../../helpers/schedulers/debounce\";\nimport appChatsManager from \"../../../lib/appManagers/appChatsManager\";\nimport appProfileManager from \"../../../lib/appManagers/appProfileManager\";\nimport appReactionsManager from \"../../../lib/appManagers/appReactionsManager\";\nimport CheckboxField from \"../../checkboxField\";\nimport Row from \"../../row\";\nimport { SettingSection } from \"../../sidebarLeft\";\nimport { SliderSuperTabEventable } from \"../../sliderTab\";\nimport { wrapStickerToRow } from \"../../wrappers\";\n\nexport default class AppChatReactionsTab extends SliderSuperTabEventable {\n  public chatId: ChatId;\n\n  protected async init() {\n    this.setTitle('Reactions');\n\n    const availableReactions = await appReactionsManager.getActiveAvailableReactions();\n    const chatFull = await appProfileManager.getChatFull(this.chatId);\n    let originalReactions = chatFull.available_reactions ?? [];\n    const enabledReactions = new Set(originalReactions);\n\n    const toggleSection = new SettingSection({\n      caption: appChatsManager.isBroadcast(this.chatId) ? 'EnableReactionsChannelInfo' : 'EnableReactionsGroupInfo'\n    });\n\n    const toggleCheckboxField = new CheckboxField({toggle: true, checked: !!enabledReactions.size});\n    const toggleRow = new Row({\n      checkboxField: toggleCheckboxField,\n      titleLangKey: 'EnableReactions'\n    });\n\n    toggleSection.content.append(toggleRow.container);\n\n    const reactionsSection = new SettingSection({\n      name: 'AvailableReactions'\n    });\n\n    const checkboxFields = availableReactions.map(availableReaction => {\n      const checkboxField = new CheckboxField({\n        toggle: true, \n        checked: enabledReactions.has(availableReaction.reaction)\n      });\n\n      this.listenerSetter.add(checkboxField.input)('change', () => {\n        if(checkboxField.checked) {\n          enabledReactions.add(availableReaction.reaction);\n\n          if(!toggleCheckboxField.checked) {\n            toggleCheckboxField.setValueSilently(true);\n          }\n        } else {\n          enabledReactions.delete(availableReaction.reaction);\n\n          if(!enabledReactions.size && toggleCheckboxField.checked) {\n            toggleCheckboxField.setValueSilently(false);\n          }\n        }\n\n        saveReactionsDebounced();\n      });\n\n      const row = new Row({\n        checkboxField,\n        title: availableReaction.title,\n        havePadding: true\n      });\n\n      wrapStickerToRow({\n        row,\n        doc: availableReaction.static_icon,\n        size: 'small'\n      });\n\n      reactionsSection.content.append(row.container);\n\n      return checkboxField;\n    });\n\n    this.listenerSetter.add(toggleRow.checkboxField.input)('change', () => {\n      if(!toggleCheckboxField.checked) {\n        checkboxFields.forEach(checkboxField => checkboxField.checked = false);\n        saveReactionsDebounced();\n      } else if(checkboxFields.every(checkboxField => !checkboxField.checked)) {\n        checkboxFields.forEach(checkboxField => checkboxField.checked = true);\n        saveReactionsDebounced();\n      }\n    });\n\n    const saveReactions = () => {\n      const newReactions = Array.from(enabledReactions);\n      if([...newReactions].sort().join() === [...originalReactions].sort().join()) {\n        return;\n      }\n\n      const chatFull = appProfileManager.getCachedFullChat(this.chatId);\n      if(chatFull) {\n        chatFull.available_reactions = newReactions;\n      }\n      \n      appChatsManager.setChatAvailableReactions(this.chatId, newReactions);\n      originalReactions = newReactions;\n    };\n\n    const saveReactionsDebounced = debounce(saveReactions, 3000, false, true);\n\n    this.eventListener.addEventListener('destroy', saveReactions, {once: true});\n\n    this.scrollable.append(toggleSection.container, reactionsSection.container);\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\"\r\nimport InputField from \"../../inputField\";\r\nimport EditPeer from \"../../editPeer\";\r\nimport { SettingSection } from \"../../sidebarLeft\";\r\nimport Row from \"../../row\";\r\nimport Button from \"../../button\";\r\nimport appChatsManager, { ChatRights } from \"../../../lib/appManagers/appChatsManager\";\r\nimport appProfileManager from \"../../../lib/appManagers/appProfileManager\";\r\nimport { Chat, ChatFull } from \"../../../layer\";\r\nimport AppChatTypeTab from \"./chatType\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport AppGroupPermissionsTab from \"./groupPermissions\";\r\nimport { i18n, LangPackKey } from \"../../../lib/langPack\";\r\nimport PopupDeleteDialog from \"../../popups/deleteDialog\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport toggleDisability from \"../../../helpers/dom/toggleDisability\";\r\nimport CheckboxField from \"../../checkboxField\";\r\nimport appReactionsManager from \"../../../lib/appManagers/appReactionsManager\";\r\nimport AppChatReactionsTab from \"./chatReactions\";\r\n\r\nexport default class AppEditChatTab extends SliderSuperTab {\r\n  private chatNameInputField: InputField;\r\n  private descriptionInputField: InputField;\r\n  private editPeer: EditPeer;\r\n  private tempId: number;\r\n  public chatId: ChatId;\r\n\r\n  protected async _init() {\r\n    // * cleanup prev\r\n    this.listenerSetter.removeAll();\r\n    this.scrollable.container.innerHTML = '';\r\n    this.tempId ??= 0;\r\n    const tempId = ++this.tempId;\r\n\r\n    this.container.classList.add('edit-peer-container', 'edit-group-container');\r\n    this.setTitle('Edit');\r\n    \r\n    let chatFull = await appProfileManager.getChatFull(this.chatId, true);\r\n\r\n    const chat: Chat.chat | Chat.channel = appChatsManager.getChat(this.chatId);\r\n    const isBroadcast = appChatsManager.isBroadcast(this.chatId);\r\n    const isChannel = appChatsManager.isChannel(this.chatId);\r\n\r\n    const chatUpdateListeners: (() => void)[] = [];\r\n    const addChatUpdateListener = (callback: () => void) => {\r\n      chatUpdateListeners.push(callback);\r\n    };\r\n\r\n    this.listenerSetter.add(rootScope)('chat_update', (chatId) => {\r\n      if(this.chatId === chatId) {\r\n        chatUpdateListeners.forEach(callback => callback());\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('chat_full_update', (chatId) => {\r\n      if(this.chatId === chatId) {\r\n        chatFull = appProfileManager.getCachedFullChat(chatId) || chatFull;\r\n      }\r\n    });\r\n\r\n    const peerId = this.chatId.toPeerId(true);\r\n    const canChangeType = appChatsManager.hasRights(this.chatId, 'change_type');\r\n    const canChangePermissions = appChatsManager.hasRights(this.chatId, 'change_permissions');\r\n\r\n    {\r\n      const section = new SettingSection({noDelimiter: true});\r\n      const inputFields: InputField[] = [];\r\n\r\n      const inputWrapper = document.createElement('div');\r\n      inputWrapper.classList.add('input-wrapper');\r\n  \r\n      this.chatNameInputField = new InputField({\r\n        label: isBroadcast ? 'EnterChannelName' : 'CreateGroup.NameHolder',\r\n        name: 'chat-name',\r\n        maxLength: 255,\r\n        required: true\r\n      });\r\n      this.descriptionInputField = new InputField({\r\n        label: 'DescriptionPlaceholder',\r\n        name: 'chat-description',\r\n        maxLength: 255\r\n      });\r\n      \r\n      this.chatNameInputField.setOriginalValue(chat.title);\r\n      this.descriptionInputField.setOriginalValue(chatFull.about);\r\n\r\n      inputWrapper.append(this.chatNameInputField.container, this.descriptionInputField.container);\r\n      \r\n      inputFields.push(this.chatNameInputField, this.descriptionInputField);\r\n\r\n      this.editPeer = new EditPeer({\r\n        peerId,\r\n        inputFields,\r\n        listenerSetter: this.listenerSetter\r\n      });\r\n      this.content.append(this.editPeer.nextBtn);\r\n\r\n      section.content.append(this.editPeer.avatarEdit.container, inputWrapper);\r\n    \r\n      if(canChangeType) {\r\n        const chatTypeRow = new Row({\r\n          titleLangKey: isBroadcast ? 'ChannelType' : 'GroupType',\r\n          clickable: () => {\r\n            const tab = new AppChatTypeTab(this.slider);\r\n            tab.chatId = this.chatId;\r\n            tab.chatFull = chatFull;\r\n            tab.open();\r\n\r\n            this.listenerSetter.add(tab.eventListener)('destroy', setChatTypeSubtitle);\r\n          },\r\n          icon: 'lock'\r\n        });\r\n\r\n        const setChatTypeSubtitle = () => {\r\n          chatTypeRow.subtitle.textContent = '';\r\n\r\n          let key: LangPackKey;\r\n          if(isBroadcast) {\r\n            key = (chat as Chat.channel).username ? 'TypePublic' : 'TypePrivate';\r\n          } else {\r\n            key = (chat as Chat.channel).username ? 'TypePublicGroup' : 'TypePrivateGroup';\r\n          }\r\n\r\n          chatTypeRow.subtitle.append(i18n(key));\r\n        };\r\n\r\n        setChatTypeSubtitle();\r\n        section.content.append(chatTypeRow.container);\r\n      }\r\n\r\n      if(canChangeType || canChangePermissions) {\r\n        const reactionsRow = new Row({\r\n          titleLangKey: 'Reactions',\r\n          icon: 'reactions',\r\n          clickable: () => {\r\n            const tab = new AppChatReactionsTab(this.slider);\r\n            tab.chatId = this.chatId;\r\n            tab.open().then(() => {\r\n              if(this.tempId !== tempId) {\r\n                return;\r\n              }\r\n              \r\n              this.listenerSetter.add(tab.eventListener)('destroy', setReactionsLength);\r\n            });\r\n          }\r\n        });\r\n\r\n        const availableReactions = await appReactionsManager.getAvailableReactions();\r\n        const availableReactionsLength = availableReactions.filter(availableReaction => !availableReaction.pFlags.inactive).length;\r\n        const setReactionsLength = () => {\r\n          const reactions = chatFull.available_reactions ?? [];\r\n          reactionsRow.subtitle.innerHTML = reactions.length + '/' + availableReactionsLength;\r\n        };\r\n\r\n        setReactionsLength();\r\n\r\n        section.content.append(reactionsRow.container);\r\n      }\r\n\r\n      if(canChangePermissions && !isBroadcast) {\r\n        const flags = [\r\n          'send_messages',\r\n          'send_media',\r\n          'send_stickers',\r\n          'send_polls',\r\n          'embed_links',\r\n          'invite_users',\r\n          'pin_messages',\r\n          'change_info'\r\n        ] as ChatRights[];\r\n\r\n        const permissionsRow = new Row({\r\n          titleLangKey: 'ChannelPermissions',\r\n          clickable: () => {\r\n            const tab = new AppGroupPermissionsTab(this.slider);\r\n            tab.chatId = this.chatId;\r\n            tab.open();\r\n          },\r\n          icon: 'permissions',\r\n        });\r\n\r\n        const setPermissionsLength = () => {\r\n          permissionsRow.subtitle.innerHTML = flags.reduce((acc, f) => acc + +appChatsManager.hasRights(this.chatId, f, chat.default_banned_rights), 0) + '/' + flags.length;\r\n        };\r\n\r\n        setPermissionsLength();        \r\n        section.content.append(permissionsRow.container);\r\n\r\n        this.listenerSetter.add(rootScope)('chat_update', (chatId) => {\r\n          if(this.chatId === chatId) {\r\n            setPermissionsLength();\r\n          }\r\n        });\r\n      }\r\n\r\n      /* const administratorsRow = new Row({\r\n        titleLangKey: 'PeerInfo.Administrators',\r\n        subtitle: '' + ((chatFull as ChatFull.channelFull).admins_count || 1),\r\n        icon: 'admin',\r\n        clickable: true\r\n      });\r\n\r\n      section.content.append(administratorsRow.container); */\r\n\r\n      this.scrollable.append(section.container);\r\n\r\n      attachClickEvent(this.editPeer.nextBtn, () => {\r\n        this.editPeer.nextBtn.disabled = true;\r\n  \r\n        let promises: Promise<any>[] = [];\r\n\r\n        const id = this.chatId;\r\n        if(this.chatNameInputField.isValidToChange()) {\r\n          promises.push(appChatsManager.editTitle(id, this.chatNameInputField.value));\r\n        }\r\n\r\n        if(this.descriptionInputField.isValidToChange()) {\r\n          promises.push(appChatsManager.editAbout(id, this.descriptionInputField.value));\r\n        }\r\n\r\n        if(this.editPeer.uploadAvatar) {\r\n          promises.push(this.editPeer.uploadAvatar().then(inputFile => {\r\n            return appChatsManager.editPhoto(id, inputFile);\r\n          }));\r\n        }\r\n  \r\n        Promise.race(promises).finally(() => {\r\n          this.editPeer.nextBtn.removeAttribute('disabled');\r\n          this.close();\r\n        });\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      \r\n      /* if(appChatsManager.hasRights(-this.peerId, 'change_info')) {\r\n        const discussionRow = new Row({\r\n          titleLangKey: 'PeerInfo.Discussion',\r\n          subtitleLangKey: 'PeerInfo.Discussion.Add',\r\n          clickable: true,\r\n          icon: 'message'\r\n        });\r\n\r\n        section.content.append(discussionRow.container);\r\n      }\r\n\r\n      const administratorsRow = new Row({\r\n        titleLangKey: 'PeerInfo.Administrators',\r\n        subtitle: '' + chatFull.admins_count,\r\n        icon: 'admin',\r\n        clickable: true\r\n      });\r\n\r\n      section.content.append(administratorsRow.container); */\r\n\r\n      if(isBroadcast && appChatsManager.hasRights(this.chatId, 'change_info')) {\r\n        const signMessagesCheckboxField = new CheckboxField({\r\n          text: 'PeerInfo.SignMessages',\r\n          checked: !!(chat as Chat.channel).pFlags.signatures,\r\n          withRipple: true\r\n        });\r\n\r\n        this.listenerSetter.add(signMessagesCheckboxField.input)('change', () => {\r\n          const toggle = signMessagesCheckboxField.toggleDisability(true);\r\n          appChatsManager.toggleSignatures(this.chatId, signMessagesCheckboxField.checked).then(() => {\r\n            toggle();\r\n          });\r\n        });\r\n\r\n        addChatUpdateListener(() => {\r\n          signMessagesCheckboxField.setValueSilently(!!(chat as Chat.channel).pFlags.signatures);\r\n        });\r\n\r\n        section.content.append(signMessagesCheckboxField.label);\r\n      }\r\n    }\r\n\r\n    if(!isBroadcast) {\r\n      const section = new SettingSection({\r\n\r\n      });\r\n\r\n      /* const membersRow = new Row({\r\n        titleLangKey: isBroadcast ? 'PeerInfo.Subscribers' : 'GroupMembers',\r\n        icon: 'newgroup',\r\n        clickable: true\r\n      });\r\n\r\n      membersRow.subtitle.append(i18n('Subscribers', [numberThousandSplitter(335356)]));\r\n\r\n      section.content.append(membersRow.container); */\r\n\r\n      if(!isBroadcast && canChangeType) {\r\n        const showChatHistoryCheckboxField = new CheckboxField({\r\n          text: 'ChatHistory',\r\n          withRipple: true\r\n        });\r\n\r\n        this.listenerSetter.add(showChatHistoryCheckboxField.input)('change', () => {\r\n          const toggle = showChatHistoryCheckboxField.toggleDisability(true);\r\n          appChatsManager.togglePreHistoryHidden(this.chatId, !showChatHistoryCheckboxField.checked).then(() => {\r\n            toggle();\r\n          });\r\n        });\r\n\r\n        // ! it won't be updated because chatFull will be old\r\n        const onChatUpdate = () => {\r\n          showChatHistoryCheckboxField.setValueSilently(isChannel && !(chatFull as ChatFull.channelFull).pFlags.hidden_prehistory);\r\n        };\r\n\r\n        onChatUpdate();\r\n        addChatUpdateListener(onChatUpdate);\r\n  \r\n        section.content.append(showChatHistoryCheckboxField.label);\r\n      }\r\n\r\n      if(section.content.childElementCount) {\r\n        this.scrollable.append(section.container);\r\n      }\r\n    }\r\n\r\n    if(appChatsManager.hasRights(this.chatId, 'delete_chat')) {\r\n      const section = new SettingSection({});\r\n\r\n      const btnDelete = Button('btn-primary btn-transparent danger', {icon: 'delete', text: isBroadcast ? 'PeerInfo.DeleteChannel' : 'DeleteAndExitButton'});\r\n\r\n      attachClickEvent(btnDelete, () => {\r\n        new PopupDeleteDialog(peerId/* , 'delete' */, undefined, (promise) => {\r\n          const toggle = toggleDisability([btnDelete], true);\r\n          promise.then(() => {\r\n            this.close();\r\n          }, () => {\r\n            toggle();\r\n          });\r\n        });\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      section.content.append(btnDelete);\r\n\r\n      this.scrollable.append(section.container);\r\n    }\r\n\r\n    if(!isChannel) {\r\n      // ! this one will fire earlier than tab's closeAfterTimeout (destroy) event and listeners will be erased, so destroy won't fire\r\n      this.listenerSetter.add(rootScope)('dialog_migrate', ({migrateFrom, migrateTo}) => {\r\n        if(peerId === migrateFrom) {\r\n          this.chatId = migrateTo.toChatId();\r\n          this._init();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  protected init() {\r\n    return this._init();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\"\r\nimport InputField from \"../../inputField\";\r\nimport EditPeer from \"../../editPeer\";\r\nimport { SettingSection } from \"../../sidebarLeft\";\r\nimport Row from \"../../row\";\r\nimport CheckboxField from \"../../checkboxField\";\r\nimport Button from \"../../button\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport appNotificationsManager from \"../../../lib/appManagers/appNotificationsManager\";\r\nimport PeerTitle from \"../../peerTitle\";\r\nimport appMessagesManager from \"../../../lib/appManagers/appMessagesManager\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport appPeersManager from \"../../../lib/appManagers/appPeersManager\";\r\nimport PopupPeer from \"../../popups/peer\";\r\nimport { addCancelButton } from \"../../popups\";\r\nimport { i18n } from \"../../../lib/langPack\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport toggleDisability from \"../../../helpers/dom/toggleDisability\";\r\n\r\nexport default class AppEditContactTab extends SliderSuperTab {\r\n  private nameInputField: InputField;\r\n  private lastNameInputField: InputField;\r\n  private editPeer: EditPeer;\r\n  public peerId: PeerId;\r\n\r\n  protected init() {\r\n    this.container.classList.add('edit-peer-container', 'edit-contact-container');\r\n    const isNew = !appUsersManager.isContact(this.peerId.toUserId());\r\n    this.setTitle(isNew ? 'AddContactTitle' : 'Edit');\r\n\r\n    {\r\n      const section = new SettingSection({noDelimiter: true});\r\n      const inputFields: InputField[] = [];\r\n\r\n      const inputWrapper = document.createElement('div');\r\n      inputWrapper.classList.add('input-wrapper');\r\n  \r\n      this.nameInputField = new InputField({\r\n        label: 'FirstName',\r\n        name: 'contact-name',\r\n        maxLength: 70,\r\n        required: true\r\n      });\r\n      this.lastNameInputField = new InputField({\r\n        label: 'LastName',\r\n        name: 'contact-lastname',\r\n        maxLength: 70\r\n      });\r\n\r\n      if(this.peerId) {\r\n        const user = appUsersManager.getUser(this.peerId);\r\n\r\n        if(isNew) {\r\n          this.nameInputField.setDraftValue(user.first_name);\r\n          this.lastNameInputField.setDraftValue(user.last_name);\r\n        } else {\r\n          this.nameInputField.setOriginalValue(user.first_name);\r\n          this.lastNameInputField.setOriginalValue(user.last_name);\r\n        }\r\n      }\r\n      \r\n      inputWrapper.append(this.nameInputField.container, this.lastNameInputField.container);\r\n      inputFields.push(this.nameInputField, this.lastNameInputField);\r\n\r\n      this.editPeer = new EditPeer({\r\n        peerId: this.peerId,\r\n        inputFields,\r\n        listenerSetter: this.listenerSetter,\r\n        doNotEditAvatar: true\r\n      });\r\n      this.content.append(this.editPeer.nextBtn);\r\n\r\n      if(this.peerId) {\r\n        const div = document.createElement('div');\r\n        div.classList.add('avatar-edit');\r\n        div.append(this.editPeer.avatarElem);\r\n  \r\n        const notificationsCheckboxField = new CheckboxField({\r\n          text: 'Notifications'\r\n        });\r\n  \r\n        notificationsCheckboxField.input.addEventListener('change', (e) => {\r\n          if(!e.isTrusted) {\r\n            return;\r\n          }\r\n  \r\n          appMessagesManager.togglePeerMute(this.peerId);\r\n        });\r\n  \r\n        this.listenerSetter.add(rootScope)('notify_settings', (update) => {\r\n          if(update.peer._ !== 'notifyPeer') return;\r\n          const peerId = appPeersManager.getPeerId(update.peer.peer);\r\n          if(this.peerId === peerId) {\r\n            const enabled = !appNotificationsManager.isMuted(update.notify_settings);\r\n            if(enabled !== notificationsCheckboxField.checked) {\r\n              notificationsCheckboxField.checked = enabled;\r\n            }\r\n          }\r\n        });\r\n  \r\n        const profileNameDiv = document.createElement('div');\r\n        profileNameDiv.classList.add('profile-name');\r\n        profileNameDiv.append(new PeerTitle({\r\n          peerId: this.peerId\r\n        }).element);\r\n        //profileNameDiv.innerHTML = 'Karen Stanford';\r\n  \r\n        const profileSubtitleDiv = document.createElement('div');\r\n        profileSubtitleDiv.classList.add('profile-subtitle');\r\n        profileSubtitleDiv.append(i18n('EditContact.OriginalName'));\r\n\r\n        section.content.append(div, profileNameDiv, profileSubtitleDiv, inputWrapper);\r\n\r\n        if(!isNew) {\r\n          const notificationsRow = new Row({\r\n            checkboxField: notificationsCheckboxField\r\n          });\r\n    \r\n          const enabled = !appNotificationsManager.isPeerLocalMuted(this.peerId, false);\r\n          notificationsCheckboxField.checked = enabled;\r\n\r\n          section.content.append(notificationsRow.container);\r\n        } else {\r\n          const user = appUsersManager.getUser(this.peerId);\r\n\r\n          const phoneRow = new Row({\r\n            icon: 'phone',\r\n            titleLangKey: user.phone ? undefined : 'MobileHidden',\r\n            title: user.phone ? appUsersManager.formatUserPhone(user.phone) : undefined,\r\n            subtitleLangKey: user.phone ? 'Phone' : 'MobileHiddenExceptionInfo',\r\n            subtitleLangArgs: user.phone ? undefined : [new PeerTitle({peerId: this.peerId}).element]\r\n          });\r\n\r\n          section.content.append(phoneRow.container);\r\n        }\r\n      } else {\r\n        section.content.append(inputWrapper);\r\n      }\r\n\r\n      this.scrollable.append(section.container);\r\n\r\n      attachClickEvent(this.editPeer.nextBtn, () => {\r\n        this.editPeer.nextBtn.disabled = true;\r\n\r\n        appUsersManager.addContact(this.peerId, this.nameInputField.value, this.lastNameInputField.value, appUsersManager.getUser(this.peerId).phone)\r\n        .finally(() => {\r\n          this.editPeer.nextBtn.removeAttribute('disabled');\r\n          this.close();\r\n        });\r\n      }, {listenerSetter: this.listenerSetter});\r\n    }\r\n\r\n    if(!isNew) {\r\n      const section = new SettingSection({\r\n        \r\n      });\r\n\r\n      const btnDelete = Button('btn-primary btn-transparent danger', {icon: 'delete', text: 'PeerInfo.DeleteContact'});\r\n\r\n      attachClickEvent(btnDelete, () => {\r\n        new PopupPeer('popup-delete-contact', {\r\n          peerId: this.peerId,\r\n          titleLangKey: 'DeleteContact',\r\n          descriptionLangKey: 'AreYouSureDeleteContact',\r\n          buttons: addCancelButton([{\r\n            langKey: 'Delete',\r\n            callback: () => {\r\n              const toggle = toggleDisability([btnDelete], true);\r\n\r\n              appUsersManager.deleteContacts([this.peerId]).then(() => {\r\n                this.close();\r\n              }, () => {\r\n                toggle();\r\n              });\r\n            },\r\n            isDanger: true\r\n          }])\r\n        }).show();\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      section.content.append(btnDelete);\r\n\r\n      this.scrollable.append(section.container);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport AppSelectPeers from \"../../appSelectPeers\";\r\nimport { setButtonLoader } from \"../../misc\";\r\nimport { LangPackKey, _i18n } from \"../../../lib/langPack\";\r\nimport ButtonCorner from \"../../buttonCorner\";\r\n\r\nexport default class AppAddMembersTab extends SliderSuperTab {\r\n  private nextBtn: HTMLButtonElement;\r\n  private selector: AppSelectPeers;\r\n  private peerType: 'channel' | 'chat' | 'privacy';\r\n  private takeOut: (peerIds: PeerId[]) => Promise<any> | false | void;\r\n  private skippable: boolean;\r\n\r\n  protected init() {\r\n    this.container.classList.add('add-members-container');\r\n    this.nextBtn = ButtonCorner({icon: 'arrow_next'});\r\n    this.content.append(this.nextBtn);\r\n    this.scrollable.container.remove();\r\n    \r\n    this.nextBtn.addEventListener('click', () => {\r\n      const peerIds = this.selector.getSelected().map(sel => sel.toPeerId());\r\n\r\n      if(this.skippable) {\r\n        this.takeOut(peerIds);\r\n        this.close();\r\n      } else {\r\n        const promise = this.takeOut(peerIds);\r\n\r\n        if(promise instanceof Promise) {\r\n          this.attachToPromise(promise);\r\n        } else if(promise === undefined) {\r\n          this.close();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public attachToPromise(promise: Promise<any>) {\r\n    const removeLoader = setButtonLoader(this.nextBtn, 'arrow_next');\r\n\r\n    promise.then(() => {\r\n      this.close();\r\n    }, () => {\r\n      removeLoader();\r\n    });\r\n  }\r\n\r\n  public open(options: {\r\n    title: LangPackKey,\r\n    placeholder: LangPackKey,\r\n    type: AppAddMembersTab['peerType'], \r\n    takeOut?: AppAddMembersTab['takeOut'],\r\n    skippable: boolean,\r\n    selectedPeerIds?: PeerId[]\r\n  }) {\r\n    const ret = super.open();\r\n\r\n    this.setTitle(options.title);\r\n    this.peerType = options.type;\r\n    this.takeOut = options.takeOut;\r\n    this.skippable = options.skippable;\r\n\r\n    const isPrivacy = this.peerType === 'privacy';\r\n    this.selector = new AppSelectPeers({\r\n      appendTo: this.content, \r\n      onChange: this.skippable ? null : (length) => {\r\n        this.nextBtn.classList.toggle('is-visible', !!length);\r\n      }, \r\n      peerType: [isPrivacy ? 'dialogs' : 'contacts'],\r\n      placeholder: options.placeholder,\r\n      exceptSelf: isPrivacy,\r\n      filterPeerTypeBy: isPrivacy ? ['isAnyGroup', 'isUser'] : undefined\r\n    });\r\n\r\n    if(options.selectedPeerIds) {\r\n      this.selector.addInitial(options.selectedPeerIds);\r\n    }\r\n\r\n    this.nextBtn.classList.add('tgico-arrow_next');\r\n    this.nextBtn.innerHTML = '';\r\n    this.nextBtn.disabled = false;\r\n    this.nextBtn.classList.toggle('is-visible', this.skippable);\r\n\r\n    return ret;\r\n  }\r\n}","import { IS_FIREFOX } from \"./userAgent\";\n\nconst IS_PARALLAX_SUPPORTED = !IS_FIREFOX && false;\n\nexport default IS_PARALLAX_SUPPORTED;\n","export default function generateVerifiedIcon() {\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svg.setAttributeNS(null, 'viewBox', '0 0 24 24');\n  svg.setAttributeNS(null, 'width', '24');\n  svg.setAttributeNS(null, 'height', '24');\n  svg.classList.add('verified-icon');\n\n  const use = document.createElementNS('http://www.w3.org/2000/svg', 'use');\n  use.setAttributeNS(null, 'href', '#verified-background');\n  use.classList.add('verified-background');\n\n  const use2 = document.createElementNS('http://www.w3.org/2000/svg', 'use');\n  use2.setAttributeNS(null, 'href', '#verified-check');\n  use2.classList.add('verified-check');\n\n  svg.append(use, use2);\n\n  return svg;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport safeAssign from \"../helpers/object/safeAssign\";\r\n\r\nconst getEvent = (e: TouchEvent | MouseEvent) => {\r\n  return (e as TouchEvent).touches ? (e as TouchEvent).touches[0] : e as MouseEvent;\r\n};\r\n\r\nconst attachGlobalListenerTo = window;\r\n\r\nlet RESET_GLOBAL = false;\r\nrootScope.addEventListener('context_menu_toggle', (visible) => {\r\n  RESET_GLOBAL = visible;\r\n});\r\n\r\nexport type SwipeHandlerOptions = {\r\n  element: SwipeHandler['element'],\r\n  onSwipe: SwipeHandler['onSwipe'],\r\n  verifyTouchTarget?: SwipeHandler['verifyTouchTarget'],\r\n  onFirstSwipe?: SwipeHandler['onFirstSwipe'],\r\n  onReset?: SwipeHandler['onReset'],\r\n  cursor?: SwipeHandler['cursor'],\r\n  cancelEvent?: SwipeHandler['cancelEvent'],\r\n  listenerOptions?: SwipeHandler['listenerOptions']\r\n};\r\n\r\nexport default class SwipeHandler {\r\n  private element: HTMLElement;\r\n  private onSwipe: (xDiff: number, yDiff: number, e: TouchEvent | MouseEvent) => boolean | void;\r\n  private verifyTouchTarget: (evt: TouchEvent | MouseEvent) => boolean;\r\n  private onFirstSwipe: () => void;\r\n  private onReset: () => void;\r\n  private cursor: 'grabbing' | 'move' | 'row-resize' | 'col-resize' | 'nesw-resize' | 'nwse-resize' | 'ne-resize' | 'se-resize' | 'sw-resize' | 'nw-resize' | 'n-resize' | 'e-resize' | 's-resize' | 'w-resize' | '' = 'grabbing';\r\n  private cancelEvent = true;\r\n  private listenerOptions: boolean | AddEventListenerOptions = false;\r\n  private setCursorTo: HTMLElement;\r\n\r\n  private hadMove = false;\r\n  private xDown: number = null;\r\n  private yDown: number = null;\r\n\r\n  constructor(options: SwipeHandlerOptions) {\r\n    safeAssign(this, options);\r\n    \r\n    this.setCursorTo = this.element;\r\n\r\n    this.setListeners();\r\n  }\r\n\r\n  public setListeners() {\r\n    if(!IS_TOUCH_SUPPORTED) {\r\n      this.element.addEventListener('mousedown', this.handleStart, this.listenerOptions);\r\n      attachGlobalListenerTo.addEventListener('mouseup', this.reset);\r\n    } else {\r\n      this.element.addEventListener('touchstart', this.handleStart, this.listenerOptions);\r\n      attachGlobalListenerTo.addEventListener('touchend', this.reset);\r\n    }\r\n  }\r\n\r\n  public removeListeners() {\r\n    if(!IS_TOUCH_SUPPORTED) {\r\n      this.element.removeEventListener('mousedown', this.handleStart, this.listenerOptions);\r\n      attachGlobalListenerTo.removeEventListener('mouseup', this.reset);\r\n    } else {\r\n      this.element.removeEventListener('touchstart', this.handleStart, this.listenerOptions);\r\n      attachGlobalListenerTo.removeEventListener('touchend', this.reset);\r\n    }\r\n  }\r\n\r\n  public setCursor(cursor: SwipeHandler['cursor']) {\r\n    this.cursor = cursor;\r\n    \r\n    if(!IS_TOUCH_SUPPORTED && this.hadMove) {\r\n      this.setCursorTo.style.setProperty('cursor', this.cursor, 'important');\r\n    }\r\n  }\r\n\r\n  reset = (e?: Event) => {\r\n    /* if(e) {\r\n      cancelEvent(e);\r\n    } */\r\n\r\n    if(IS_TOUCH_SUPPORTED) {\r\n      attachGlobalListenerTo.removeEventListener('touchmove', this.handleMove, {capture: true});\r\n    } else {\r\n      attachGlobalListenerTo.removeEventListener('mousemove', this.handleMove);\r\n      this.setCursorTo.style.cursor = '';\r\n    }\r\n\r\n    if(this.onReset && this.hadMove) {\r\n      this.onReset();\r\n    }\r\n\r\n    this.xDown = this.yDown = null;\r\n    this.hadMove = false;\r\n  };\r\n\r\n  handleStart = (_e: TouchEvent | MouseEvent) => {\r\n    const e = getEvent(_e);\r\n    if(this.verifyTouchTarget && !this.verifyTouchTarget(_e)) {\r\n      return this.reset();\r\n    }\r\n\r\n    this.xDown = e.clientX;\r\n    this.yDown = e.clientY;\r\n\r\n    if(IS_TOUCH_SUPPORTED) {\r\n      attachGlobalListenerTo.addEventListener('touchmove', this.handleMove, {passive: false, capture: true});\r\n    } else {\r\n      attachGlobalListenerTo.addEventListener('mousemove', this.handleMove, false);\r\n    }\r\n  };\r\n\r\n  handleMove = (_e: TouchEvent | MouseEvent) => {\r\n    if(this.xDown === null || this.yDown === null || RESET_GLOBAL) {\r\n      this.reset();\r\n      return;\r\n    }\r\n\r\n    if(this.cancelEvent) {\r\n      cancelEvent(_e);\r\n    }\r\n\r\n    const e = getEvent(_e);\r\n    const xUp = e.clientX;\r\n    const yUp = e.clientY;\r\n\r\n    const xDiff = this.xDown - xUp;\r\n    const yDiff = this.yDown - yUp;\r\n\r\n    if(!this.hadMove) {\r\n      if(!xDiff && !yDiff) {\r\n        return;\r\n      }\r\n\r\n      this.hadMove = true;\r\n\r\n      if(!IS_TOUCH_SUPPORTED) {\r\n        this.setCursorTo.style.setProperty('cursor', this.cursor, 'important');\r\n      }\r\n\r\n      if(this.onFirstSwipe) {\r\n        this.onFirstSwipe();\r\n      }\r\n    }\r\n\r\n    // if(Math.abs(xDiff) > Math.abs(yDiff)) { /*most significant*/\r\n    //   if(xDiff > 0) { /* left swipe */ \r\n\r\n    //   } else { /* right swipe */\r\n\r\n    //   }                       \r\n    // } else {\r\n    //   if(yDiff > 0) { /* up swipe */ \r\n        \r\n    //   } else { /* down swipe */\r\n        \r\n    //   }\r\n    // }\r\n\r\n    /* reset values */\r\n    const onSwipeResult = this.onSwipe(xDiff, yDiff, _e);\r\n    if(onSwipeResult !== undefined && onSwipeResult) {\r\n      this.reset();\r\n    }\r\n  };\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport IS_PARALLAX_SUPPORTED from \"../environment/parallaxSupport\";\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\nimport filterChatPhotosMessages from \"../helpers/filterChatPhotosMessages\";\nimport ListenerSetter from \"../helpers/listenerSetter\";\nimport ListLoader from \"../helpers/listLoader\";\nimport { fastRaf } from \"../helpers/schedulers\";\nimport { Message, ChatFull, MessageAction, Photo } from \"../layer\";\nimport appAvatarsManager from \"../lib/appManagers/appAvatarsManager\";\nimport appMessagesManager, { AppMessagesManager } from \"../lib/appManagers/appMessagesManager\";\nimport appPeersManager from \"../lib/appManagers/appPeersManager\";\nimport appPhotosManager from \"../lib/appManagers/appPhotosManager\";\nimport appProfileManager from \"../lib/appManagers/appProfileManager\";\nimport rootScope from \"../lib/rootScope\";\nimport { openAvatarViewer } from \"./avatar\";\nimport Scrollable from \"./scrollable\";\nimport SwipeHandler from \"./swipeHandler\";\nimport { wrapPhoto } from \"./wrappers\";\n\nconst LOAD_NEAREST = 3;\n\nexport default class PeerProfileAvatars {\n  private static BASE_CLASS = 'profile-avatars';\n  private static SCALE = IS_PARALLAX_SUPPORTED ? 2 : 1;\n  private static TRANSLATE_TEMPLATE = IS_PARALLAX_SUPPORTED ? `translate3d({x}, 0, -1px) scale(${PeerProfileAvatars.SCALE})` : 'translate({x}, 0)';\n  public container: HTMLElement;\n  public avatars: HTMLElement;\n  public gradient: HTMLElement;\n  public info: HTMLElement;\n  public arrowPrevious: HTMLElement;\n  public arrowNext: HTMLElement;\n  private tabs: HTMLDivElement;\n  private listLoader: ListLoader<Photo.photo['id'] | Message.messageService, Photo.photo['id'] | Message.messageService>;\n  private peerId: PeerId;\n  private intersectionObserver: IntersectionObserver;\n  private loadCallbacks: Map<Element, () => void>;\n  private listenerSetter: ListenerSetter;\n  private swipeHandler: SwipeHandler;\n\n  constructor(public scrollable: Scrollable) {\n    this.container = document.createElement('div');\n    this.container.classList.add(PeerProfileAvatars.BASE_CLASS + '-container');\n\n    this.avatars = document.createElement('div');\n    this.avatars.classList.add(PeerProfileAvatars.BASE_CLASS + '-avatars');\n\n    this.gradient = document.createElement('div');\n    this.gradient.classList.add(PeerProfileAvatars.BASE_CLASS + '-gradient');\n\n    this.info = document.createElement('div');\n    this.info.classList.add(PeerProfileAvatars.BASE_CLASS + '-info');\n\n    this.tabs = document.createElement('div');\n    this.tabs.classList.add(PeerProfileAvatars.BASE_CLASS + '-tabs');\n\n    this.arrowPrevious = document.createElement('div');\n    this.arrowPrevious.classList.add(PeerProfileAvatars.BASE_CLASS + '-arrow', 'tgico-avatarprevious');\n\n    /* const previousIcon = document.createElement('i');\n    previousIcon.classList.add(PeerProfileAvatars.BASE_CLASS + '-arrow-icon', 'tgico-previous');\n    this.arrowBack.append(previousIcon); */\n    \n    this.arrowNext = document.createElement('div');\n    this.arrowNext.classList.add(PeerProfileAvatars.BASE_CLASS + '-arrow', PeerProfileAvatars.BASE_CLASS + '-arrow-next', 'tgico-avatarnext');\n\n    /* const nextIcon = document.createElement('i');\n    nextIcon.classList.add(PeerProfileAvatars.BASE_CLASS + '-arrow-icon', 'tgico-next');\n    this.arrowNext.append(nextIcon); */\n\n    this.container.append(this.avatars, this.gradient, this.info, this.tabs, this.arrowPrevious, this.arrowNext);\n\n    this.loadCallbacks = new Map();\n    this.listenerSetter = new ListenerSetter();\n\n    const checkScrollTop = () => {\n      if(this.scrollable.scrollTop !== 0) {\n        this.scrollable.scrollIntoViewNew({\n          element: this.scrollable.container.firstElementChild as HTMLElement, \n          position: 'start'\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    const SWITCH_ZONE = 1 / 3;\n    let cancel = false;\n    let freeze = false;\n    attachClickEvent(this.container, async(_e) => {\n      if(freeze) {\n        cancelEvent(_e);\n        return;\n      }\n\n      if(cancel) {\n        cancel = false;\n        return;\n      }\n\n      if(!checkScrollTop()) {\n        return;\n      }\n\n      const rect = this.container.getBoundingClientRect();\n\n      // const e = (_e as TouchEvent).touches ? (_e as TouchEvent).touches[0] : _e as MouseEvent;\n      const e = _e;\n      const x = e.pageX;\n\n      const clickX = x - rect.left;\n      if((!this.listLoader.previous.length && !this.listLoader.next.length) \n        || (clickX > (rect.width * SWITCH_ZONE) && clickX < (rect.width - rect.width * SWITCH_ZONE))) {\n        const peerId = this.peerId;\n\n        const targets: {element: HTMLElement, item: Photo.photo['id'] | Message.messageService}[] = [];\n        this.listLoader.previous.concat(this.listLoader.current, this.listLoader.next).forEach((item, idx) => {\n          targets.push({\n            element: /* null */this.avatars.children[idx] as HTMLElement,\n            item\n          });\n        });\n\n        const prevTargets = targets.slice(0, this.listLoader.previous.length);\n        const nextTargets = targets.slice(this.listLoader.previous.length + 1);\n\n        const target = this.avatars.children[this.listLoader.previous.length] as HTMLElement;\n        freeze = true;\n        openAvatarViewer(target, peerId, () => peerId === this.peerId, this.listLoader.current, prevTargets, nextTargets);\n        freeze = false;\n      } else {\n        const centerX = rect.right - (rect.width / 2);\n        const toRight = x > centerX;\n  \n        // this.avatars.classList.remove('no-transition');\n        // fastRaf(() => {\n          this.avatars.classList.add('no-transition');\n          void this.avatars.offsetLeft; // reflow\n\n          let distance: number;\n          if(this.listLoader.index === 0 && !toRight) distance = this.listLoader.count - 1;\n          else if(this.listLoader.index === (this.listLoader.count - 1) && toRight) distance = -(this.listLoader.count - 1);\n          else distance = toRight ? 1 : -1;\n          this.listLoader.go(distance);\n\n          fastRaf(() => {\n            this.avatars.classList.remove('no-transition');\n          });\n        // });\n      }\n    }, {listenerSetter: this.listenerSetter});\n\n    const cancelNextClick = () => {\n      cancel = true;\n      document.body.addEventListener(IS_TOUCH_SUPPORTED ? 'touchend' : 'click', (e) => {\n        cancel = false;\n      }, {once: true});\n    };\n\n    let width = 0, x = 0, lastDiffX = 0, lastIndex = 0, minX = 0;\n    const swipeHandler = this.swipeHandler = new SwipeHandler({\n      element: this.avatars, \n      onSwipe: (xDiff, yDiff) => {\n        lastDiffX = xDiff;\n        let lastX = x + xDiff * -PeerProfileAvatars.SCALE;\n        if(lastX > 0) lastX = 0;\n        else if(lastX < minX) lastX = minX;\n\n        this.avatars.style.transform = PeerProfileAvatars.TRANSLATE_TEMPLATE.replace('{x}', lastX + 'px');\n        //console.log(xDiff, yDiff);\n        return false;\n      }, \n      verifyTouchTarget: (e) => {\n        if(!checkScrollTop()) {\n          cancelNextClick();\n          cancelEvent(e);\n          return false;\n        } else if(this.container.classList.contains('is-single') || freeze) {\n          return false;\n        }\n\n        return true;\n      }, \n      onFirstSwipe: () => {\n        const rect = this.avatars.getBoundingClientRect();\n        width = rect.width;\n        minX = -width * (this.tabs.childElementCount - 1);\n\n        /* lastIndex = whichChild(this.tabs.querySelector('.active'));\n        x = -width * lastIndex; */\n        x = rect.left - this.container.getBoundingClientRect().left;\n        \n        this.avatars.style.transform = PeerProfileAvatars.TRANSLATE_TEMPLATE.replace('{x}', x + 'px');\n\n        this.container.classList.add('is-swiping');\n        this.avatars.classList.add('no-transition');\n        void this.avatars.offsetLeft; // reflow\n      },\n      onReset: () => {\n        const addIndex = Math.ceil(Math.abs(lastDiffX) / (width / PeerProfileAvatars.SCALE)) * (lastDiffX >= 0 ? 1 : -1);\n        cancelNextClick();\n        \n        //console.log(addIndex);\n\n        this.avatars.classList.remove('no-transition');\n        fastRaf(() => {\n          this.listLoader.go(addIndex);\n          this.container.classList.remove('is-swiping');\n        });\n      }\n    });\n\n    this.intersectionObserver = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if(!entry.isIntersecting) {\n          return;\n        }\n\n        this.loadNearestToTarget(entry.target);\n      });\n    });\n\n    /* this.listenerSetter.add(rootScope)('avatar_update', (peerId) => {\n      if(this.peerId === peerId) {\n        const photo = appPeersManager.getPeerPhoto(peerId);\n        if(photo) {\n          const id = photo.photo_id;\n          const previous = this.listLoader.previous;\n          for(let i = 0; i < previous.length; ++i) {\n            if(previous[i] === id)\n          }\n          this.listLoader.previous.forEach((_id, idx, arr) => {});\n        }\n      }\n    }); */\n  }\n\n  public setPeer(peerId: PeerId) {\n    this.peerId = peerId;\n\n    const photo = appPeersManager.getPeerPhoto(peerId);\n    if(!photo) {\n      return;\n    }\n\n    const listLoader: PeerProfileAvatars['listLoader'] = this.listLoader = new ListLoader({\n      loadCount: 50,\n      loadMore: (anchor, older, loadCount) => {\n        if(!older) return Promise.resolve({count: undefined, items: []});\n\n        if(peerId.isUser()) {\n          const maxId: Photo.photo['id'] = (anchor || listLoader.current) as any;\n          return appPhotosManager.getUserPhotos(peerId, maxId, loadCount).then(value => {\n            return {\n              count: value.count,\n              items: value.photos\n            };\n          });\n        } else {\n          const promises: [Promise<ChatFull>, ReturnType<AppMessagesManager['getSearch']>] = [] as any;\n          if(!listLoader.current) {\n            promises.push(Promise.resolve(appProfileManager.getChatFull(peerId.toChatId())));\n          }\n          \n          promises.push(appMessagesManager.getSearch({\n            peerId,\n            maxId: Number.MAX_SAFE_INTEGER,\n            inputFilter: {\n              _: 'inputMessagesFilterChatPhotos'\n            },\n            limit: loadCount,\n            backLimit: 0\n          }));\n\n          return Promise.all(promises).then((result) => {\n            const value = result.pop() as typeof result[1];\n\n            filterChatPhotosMessages(value);\n\n            if(!listLoader.current) {\n              const chatFull = result[0];\n              const message = value.history.findAndSplice(m => {\n                return ((m as Message.messageService).action as MessageAction.messageActionChannelEditPhoto).photo.id === chatFull.chat_photo.id;\n              }) as Message.messageService;\n              \n              listLoader.current = message || appMessagesManager.generateFakeAvatarMessage(this.peerId, chatFull.chat_photo);\n            }\n\n            //console.log('avatars loaded:', value);\n            return {\n              count: value.count,\n              items: value.history\n            };\n          });\n        }\n      },\n      processItem: this.processItem,\n      onJump: (item, older) => {\n        const id = this.listLoader.index;\n        //const nextId = Math.max(0, id);\n        const x = 100 * PeerProfileAvatars.SCALE * id;\n        this.avatars.style.transform = PeerProfileAvatars.TRANSLATE_TEMPLATE.replace('{x}', `-${x}%`);\n\n        const activeTab = this.tabs.querySelector('.active');\n        if(activeTab) activeTab.classList.remove('active');\n\n        const tab = this.tabs.children[id] as HTMLElement;\n        tab.classList.add('active');\n\n        this.loadNearestToTarget(this.avatars.children[id]);\n      }\n    });\n\n    if(photo._ === 'userProfilePhoto') {\n      listLoader.current = photo.photo_id;\n    }\n\n    this.processItem(listLoader.current);\n\n    // listLoader.loaded\n    listLoader.load(true);\n  }\n\n  public addTab() {\n    const tab = document.createElement('div');\n    tab.classList.add(PeerProfileAvatars.BASE_CLASS + '-tab');\n    this.tabs.append(tab);\n\n    if(this.tabs.childElementCount === 1) {\n      tab.classList.add('active');\n    }\n\n    this.container.classList.toggle('is-single', this.tabs.childElementCount <= 1);\n  }\n\n  public processItem = (photoId: Photo.photo['id'] | Message.messageService) => {\n    const avatar = document.createElement('div');\n    avatar.classList.add(PeerProfileAvatars.BASE_CLASS + '-avatar', 'media-container');\n\n    let photo: Photo.photo;\n    if(photoId) {\n      photo = typeof(photoId) !== 'object' ? \n        appPhotosManager.getPhoto(photoId) : \n        (photoId.action as MessageAction.messageActionChannelEditPhoto).photo as Photo.photo;\n    }\n\n    const img = new Image();\n    img.classList.add('avatar-photo');\n    img.draggable = false;\n\n    const loadCallback = () => {\n      if(photo) {\n        const res = wrapPhoto({\n          container: avatar,\n          photo,\n          size: appPhotosManager.choosePhotoSize(photo, 420, 420, false),\n          withoutPreloader: true\n        });\n  \n        [res.images.thumb, res.images.full].filter(Boolean).forEach(img => {\n          img.classList.add('avatar-photo');\n        });\n      } else {\n        const photo = appPeersManager.getPeerPhoto(this.peerId);\n        appAvatarsManager.putAvatar(avatar, this.peerId, photo, 'photo_big', img);\n      }\n    };\n\n    if(this.avatars.childElementCount <= LOAD_NEAREST) {\n      loadCallback();\n    } else {\n      this.intersectionObserver.observe(avatar);\n      this.loadCallbacks.set(avatar, loadCallback);\n    }\n\n    this.avatars.append(avatar);\n\n    this.addTab();\n\n    return photoId;\n  };\n\n  private loadNearestToTarget(target: Element) {\n    const children = Array.from(target.parentElement.children);\n    const idx = children.indexOf(target);\n    const slice = children.slice(Math.max(0, idx - LOAD_NEAREST), Math.min(children.length, idx + LOAD_NEAREST));\n\n    slice.forEach(target => {\n      const callback = this.loadCallbacks.get(target);\n      if(callback) {\n        callback();\n        this.loadCallbacks.delete(target);\n        this.intersectionObserver.unobserve(target);\n      }\n    });\n  }\n\n  public cleanup() {\n    this.listenerSetter.removeAll();\n    this.swipeHandler.removeListeners();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport IS_PARALLAX_SUPPORTED from \"../environment/parallaxSupport\";\nimport callbackify from \"../helpers/callbackify\";\nimport { copyTextToClipboard } from \"../helpers/clipboard\";\nimport replaceContent from \"../helpers/dom/replaceContent\";\nimport ListenerSetter from \"../helpers/listenerSetter\";\nimport { fastRaf } from \"../helpers/schedulers\";\nimport { Chat, ChatFull, User } from \"../layer\";\nimport appChatsManager, { Channel } from \"../lib/appManagers/appChatsManager\";\nimport appImManager from \"../lib/appManagers/appImManager\";\nimport appMessagesManager from \"../lib/appManagers/appMessagesManager\";\nimport appNotificationsManager from \"../lib/appManagers/appNotificationsManager\";\nimport appPeersManager from \"../lib/appManagers/appPeersManager\";\nimport appProfileManager from \"../lib/appManagers/appProfileManager\";\nimport appUsersManager from \"../lib/appManagers/appUsersManager\";\nimport I18n from \"../lib/langPack\";\nimport RichTextProcessor from \"../lib/richtextprocessor\";\nimport rootScope from \"../lib/rootScope\";\nimport AvatarElement from \"./avatar\";\nimport CheckboxField from \"./checkboxField\";\nimport generateVerifiedIcon from \"./generateVerifiedIcon\";\nimport PeerProfileAvatars from \"./peerProfileAvatars\";\nimport PeerTitle from \"./peerTitle\";\nimport Row from \"./row\";\nimport Scrollable from \"./scrollable\";\nimport { SettingSection, generateDelimiter } from \"./sidebarLeft\";\nimport { toast } from \"./toast\";\n\nlet setText = (text: string, row: Row) => {\n  //fastRaf(() => {\n    row.title.innerHTML = text || '';\n    row.container.style.display = text ? '' : 'none';\n  //});\n};\n\nexport default class PeerProfile {\n  public element: HTMLElement;\n  private avatars: PeerProfileAvatars;\n  private avatar: AvatarElement;\n  private section: SettingSection;\n  private name: HTMLDivElement;\n  private subtitle: HTMLDivElement;\n  private bio: Row;\n  private username: Row;\n  private phone: Row;\n  private notifications: Row;\n  private location: Row;\n  private link: Row;\n  \n  private cleaned: boolean;\n  private setMoreDetailsTimeout: number;\n  private setPeerStatusInterval: number;\n\n  private peerId: PeerId;\n  private threadId: number;\n\n  constructor(\n    public scrollable: Scrollable, \n    private listenerSetter?: ListenerSetter,\n    private isDialog = true\n  ) {\n    if(!IS_PARALLAX_SUPPORTED) {\n      this.scrollable.container.classList.add('no-parallax');\n    }\n\n    if(!listenerSetter) {\n      this.listenerSetter = new ListenerSetter();\n    }\n  }\n\n  public init() {\n    this.init = null;\n\n\n    this.element = document.createElement('div');\n    this.element.classList.add('profile-content');\n\n    this.section = new SettingSection({\n      noDelimiter: true\n    });\n\n    this.avatar = new AvatarElement();\n    this.avatar.classList.add('profile-avatar', 'avatar-120');\n    this.avatar.setAttribute('dialog', '' + +this.isDialog);\n    this.avatar.setAttribute('clickable', '');\n\n    this.name = document.createElement('div');\n    this.name.classList.add('profile-name');\n\n    this.subtitle = document.createElement('div');\n    this.subtitle.classList.add('profile-subtitle');\n\n    this.bio = new Row({\n      title: ' ',\n      subtitleLangKey: 'UserBio',\n      icon: 'info',\n      clickable: (e) => {\n        if((e.target as HTMLElement).tagName === 'A') {\n          return;\n        }\n        \n        Promise.resolve(appProfileManager.getProfileByPeerId(this.peerId)).then(full => {\n          copyTextToClipboard(full.about);\n          toast(I18n.format('BioCopied', true));\n        });\n      }\n    });\n\n    this.bio.title.classList.add('pre-wrap');\n\n    this.username = new Row({\n      title: ' ',\n      subtitleLangKey: 'Username',\n      icon: 'username',\n      clickable: () => {\n        const peer: Channel | User.user = appPeersManager.getPeer(this.peerId);\n        copyTextToClipboard('@' + peer.username);\n        toast(I18n.format('UsernameCopied', true));\n      }\n    });\n\n    this.phone = new Row({\n      title: ' ',\n      subtitleLangKey: 'Phone',\n      icon: 'phone',\n      clickable: () => {\n        const peer: User = appUsersManager.getUser(this.peerId);\n        copyTextToClipboard('+' + peer.phone);\n        toast(I18n.format('PhoneCopied', true));\n      }\n    });\n\n    this.link = new Row({\n      title: ' ',\n      subtitleLangKey: 'SetUrlPlaceholder',\n      icon: 'link',\n      clickable: () => {\n        copyTextToClipboard(this.link.title.textContent);\n        // Promise.resolve(appProfileManager.getChatFull(this.peerId.toChatId())).then(chatFull => {\n          // copyTextToClipboard(chatFull.exported_invite.link);\n          toast(I18n.format('LinkCopied', true));\n        // });\n      }\n    });\n\n    this.location = new Row({\n      title: ' ',\n      subtitleLangKey: 'ChatLocation',\n      icon: 'location'\n    });\n\n    this.section.content.append(\n      this.phone.container,\n      this.username.container,\n      this.location.container,\n      this.bio.container,\n      this.link.container\n    );\n\n    const {listenerSetter} = this;\n    if(this.isDialog) {\n      this.notifications = new Row({\n        checkboxField: new CheckboxField({toggle: true}),\n        titleLangKey: 'Notifications',\n        icon: 'unmute'\n      });\n\n      listenerSetter.add(this.notifications.checkboxField.input)('change', (e) => {\n        if(!e.isTrusted) {\n          return;\n        }\n  \n        //let checked = this.notificationsCheckbox.checked;\n        appMessagesManager.togglePeerMute(this.peerId);\n      });\n\n      listenerSetter.add(rootScope)('dialog_notify_settings', (dialog) => {\n        if(this.peerId === dialog.peerId) {\n          const muted = appNotificationsManager.isPeerLocalMuted(this.peerId, false);\n          this.notifications.checkboxField.checked = !muted;\n        }\n      });\n\n      this.section.content.append(this.notifications.container);\n    }\n\n    this.element.append(this.section.container);\n\n    if(IS_PARALLAX_SUPPORTED) {\n      this.element.append(generateDelimiter());\n    }\n\n    listenerSetter.add(rootScope)('peer_typings', ({peerId}) => {\n      if(this.peerId === peerId) {\n        this.setPeerStatus();\n      }\n    });\n\n    listenerSetter.add(rootScope)('peer_bio_edit', (peerId) => {\n      if(peerId === this.peerId) {\n        this.setMoreDetails(true);\n      }\n    });\n\n    listenerSetter.add(rootScope)('peer_title_edit', (peerId) => {\n      if(peerId === this.peerId) {\n        this.fillUsername();\n      }\n    });\n\n    listenerSetter.add(rootScope)('user_update', (userId) => {\n      if(this.peerId === userId.toPeerId()) {\n        this.setPeerStatus();\n      }\n    });\n\n    listenerSetter.add(rootScope)('contacts_update', (userId) => {\n      if(this.peerId === userId.toPeerId()) {\n        const user = appUsersManager.getUser(userId);\n        if(!user.pFlags.self || !this.isDialog) {\n          this.fillUserPhone();\n        }\n      }\n    });\n\n    listenerSetter.add(rootScope)('avatar_update', (peerId) => {\n      if(this.peerId === peerId) {\n        // const photo = appPeersManager.getPeerPhoto(peerId);\n        // if(!photo && this.avatars) {\n          this.setAvatar();\n        // }\n      }\n    });\n\n    this.setPeerStatusInterval = window.setInterval(this.setPeerStatus, 60e3);\n  }\n\n  public setPeerStatus = (needClear = false) => {\n    const peerId = this.peerId;\n    if(!peerId || (rootScope.myId === peerId && this.isDialog)) return;\n\n    appImManager.setPeerStatus(this.peerId, this.subtitle, needClear, true, () => peerId === this.peerId, !this.isDialog);\n  };\n\n  public cleanupHTML() {\n    [\n      this.bio,\n      this.phone,\n      this.username,\n      this.location,\n      this.link\n    ].forEach(row => {\n      row.container.style.display = 'none';\n    });\n\n    if(this.notifications) {\n      this.notifications.container.style.display = '';\n      this.notifications.checkboxField.checked = true;\n    }\n\n    if(this.setMoreDetailsTimeout) {\n      window.clearTimeout(this.setMoreDetailsTimeout);\n      this.setMoreDetailsTimeout = 0;\n    }\n  }\n\n  private canBeDetailed() {\n    return this.peerId !== rootScope.myId || !this.isDialog;\n  }\n\n  public setAvatar() {\n    if(this.canBeDetailed()) {\n      const photo = appPeersManager.getPeerPhoto(this.peerId);\n\n      if(photo) {\n        const oldAvatars = this.avatars;\n        this.avatars = new PeerProfileAvatars(this.scrollable);\n        this.avatars.setPeer(this.peerId);\n        this.avatars.info.append(this.name, this.subtitle);\n  \n        this.avatar.remove();\n    \n        if(oldAvatars) oldAvatars.container.replaceWith(this.avatars.container);\n        else this.element.prepend(this.avatars.container);\n\n        if(IS_PARALLAX_SUPPORTED) {\n          this.scrollable.container.classList.add('parallax');\n        }\n\n        return;\n      }\n    }\n\n    if(IS_PARALLAX_SUPPORTED) {\n      this.scrollable.container.classList.remove('parallax');\n    }\n\n    if(this.avatars) {\n      this.avatars.container.remove();\n      this.avatars.cleanup();\n      this.avatars = undefined;\n    }\n\n    this.avatar.setAttribute('peer', '' + this.peerId);\n\n    this.section.content.prepend(this.avatar, this.name, this.subtitle);\n  }\n\n  private fillUsername() {\n    const {peerId} = this;\n    if(peerId.isUser() && this.canBeDetailed()) {\n      const username = appPeersManager.getPeerUsername(peerId);\n      setText(username, this.username);\n    }\n  }\n\n  private fillUserPhone() {\n    const {peerId} = this;\n    if(peerId.isUser() && this.canBeDetailed()) {\n      const user = appUsersManager.getUser(peerId);\n      setText(user.phone ? appUsersManager.formatUserPhone(user.phone) : undefined, this.phone);\n    }\n  }\n\n  private fillNotifications() {\n    const notificationsRow = this.notifications;\n    if(!notificationsRow) {\n      return;\n    }\n\n    if(this.canBeDetailed()) {\n      const muted = appNotificationsManager.isPeerLocalMuted(this.peerId, false);\n      notificationsRow.checkboxField.checked = !muted;\n    } else {\n      fastRaf(() => {\n        notificationsRow.container.style.display = 'none';\n      });\n    }\n  }\n\n  private fillRows() {\n    const peerId = this.peerId;\n\n    this.fillUsername();\n    this.fillUserPhone();\n    this.fillNotifications();\n    this.setMoreDetails();\n\n    replaceContent(this.name, new PeerTitle({\n      peerId,\n      dialog: this.isDialog,\n    }).element);\n\n    const peer = appPeersManager.getPeer(peerId);\n    if(peer?.pFlags?.verified) {\n      this.name.append(generateVerifiedIcon());\n    }\n\n    this.setPeerStatus(true);\n  }\n\n  public fillProfileElements() {\n    if(!this.cleaned) return;\n    this.cleaned = false;\n    \n    this.cleanupHTML();\n    this.setAvatar();\n    this.fillRows();\n  }\n\n  public setMoreDetails(override?: true) {\n    if(this.setMoreDetailsTimeout) {\n      window.clearTimeout(this.setMoreDetailsTimeout);\n      this.setMoreDetailsTimeout = 0;\n    }\n\n    const peerId = this.peerId;\n    const threadId = this.threadId;\n\n    if(!peerId || appPeersManager.isRestricted(peerId) || !this.canBeDetailed()) {\n      return;\n    }\n\n    callbackify(appProfileManager.getProfileByPeerId(peerId, override), (peerFull) => {\n      if(this.peerId !== peerId || this.threadId !== threadId || appPeersManager.isRestricted(peerId)) {\n        //this.log.warn('peer changed');\n        return;\n      }\n      \n      //this.log('chatInfo res 2:', chatFull);\n      \n      // if(peerFull.about) {\n        setText(peerFull.about ? RichTextProcessor.wrapRichText(peerFull.about) : undefined, this.bio);\n      // }\n\n      if(!peerId.isUser()) {\n        const chat: Chat.channel = appChatsManager.getChat(peerId.toChatId());\n        if(chat.username) {\n          setText('https://t.me/' + chat.username, this.link);\n        } else {\n          const exportedInvite = (peerFull as ChatFull.channelFull).exported_invite;\n          if(exportedInvite) {\n            setText(exportedInvite.link, this.link);\n          }\n        }\n      }\n\n      const location = (peerFull as ChatFull.channelFull).location;\n      if(location?._ == 'channelLocation') {\n        setText(location.address, this.location);\n      }\n\n      this.setMoreDetailsTimeout = window.setTimeout(() => this.setMoreDetails(true), 60e3);\n    });\n  }\n\n  public setPeer(peerId: PeerId, threadId = 0) {\n    if(this.peerId === peerId && this.threadId === threadId) return;\n\n    if(this.init) {\n      this.init();\n    }\n\n    this.peerId = peerId;\n    this.threadId = threadId;\n    \n    this.cleaned = true;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appMessagesManager from \"../../../lib/appManagers/appMessagesManager\";\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\nimport rootScope from \"../../../lib/rootScope\";\nimport AppSearchSuper, { SearchSuperType } from \"../../appSearchSuper.\";\nimport SidebarSlider, { SliderSuperTab } from \"../../slider\";\nimport { TransitionSlider } from \"../../transition\";\nimport AppEditChatTab from \"./editChat\";\nimport PeerTitle from \"../../peerTitle\";\nimport AppEditContactTab from \"./editContact\";\nimport appChatsManager from \"../../../lib/appManagers/appChatsManager\";\nimport Button from \"../../button\";\nimport ButtonIcon from \"../../buttonIcon\";\nimport { i18n, LangPackKey } from \"../../../lib/langPack\";\nimport { toastNew } from \"../../toast\";\nimport AppAddMembersTab from \"../../sidebarLeft/tabs/addMembers\";\nimport PopupPickUser from \"../../popups/pickUser\";\nimport PopupPeer, { PopupPeerButtonCallbackCheckboxes, PopupPeerCheckboxOptions } from \"../../popups/peer\";\nimport ButtonCorner from \"../../buttonCorner\";\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\nimport PeerProfile from \"../../peerProfile\";\n\n// TODO: отредактированное сообщение не изменится\nexport default class AppSharedMediaTab extends SliderSuperTab {\n  private editBtn: HTMLElement;\n\n  private peerId: PeerId;\n  private threadId = 0;\n\n  private historiesStorage: {\n    [peerId: PeerId]: Partial<{\n      [type in SearchSuperType]: {mid: number, peerId: PeerId}[]\n    }>\n  } = {};\n\n  private searchSuper: AppSearchSuper;\n\n  private profile: PeerProfile;\n  private peerChanged: boolean;\n\n  constructor(slider: SidebarSlider) {\n    super(slider, false);\n  }\n\n  public init() {\n    //const perf = performance.now();\n\n    this.container.classList.add('shared-media-container', 'profile-container');\n\n    // * header\n    const newCloseBtn = Button('btn-icon sidebar-close-button', {noRipple: true});\n    this.closeBtn.replaceWith(newCloseBtn);\n    this.closeBtn = newCloseBtn;\n\n    const animatedCloseIcon = document.createElement('div');\n    animatedCloseIcon.classList.add('animated-close-icon');\n    newCloseBtn.append(animatedCloseIcon);\n\n    const transitionContainer = document.createElement('div');\n    transitionContainer.className = 'transition slide-fade';\n    \n    const transitionFirstItem = document.createElement('div');\n    transitionFirstItem.classList.add('transition-item');\n\n    this.title.append(i18n('Profile'));\n    this.editBtn = ButtonIcon('edit');\n    //const moreBtn = ButtonIcon('more');\n\n    transitionFirstItem.append(this.title, this.editBtn/* , moreBtn */);\n\n    const transitionLastItem = document.createElement('div');\n    transitionLastItem.classList.add('transition-item');\n\n    const secondTitle: HTMLElement = this.title.cloneNode() as any;\n    secondTitle.append(i18n('PeerInfo.SharedMedia'));\n\n    transitionLastItem.append(secondTitle);\n\n    transitionContainer.append(transitionFirstItem, transitionLastItem);\n\n    this.header.append(transitionContainer);\n\n    // * body\n\n    this.profile = new PeerProfile(this.scrollable);\n    this.profile.init();\n    \n    this.scrollable.append(this.profile.element);\n\n    const HEADER_HEIGHT = 56;\n    this.scrollable.onAdditionalScroll = () => {\n      const rect = this.searchSuper.nav.getBoundingClientRect(); \n      if(!rect.width) return;\n\n      const top = rect.top - 1;\n      const isSharedMedia = top <= HEADER_HEIGHT;\n      animatedCloseIcon.classList.toggle('state-back', isSharedMedia);\n      this.searchSuper.container.classList.toggle('is-full-viewport', isSharedMedia);\n      transition(+isSharedMedia);\n\n      if(!isSharedMedia) {\n        this.searchSuper.cleanScrollPositions();\n      }\n    };\n\n    const transition = TransitionSlider(transitionContainer, 'slide-fade', 400, null, false);\n\n    transition(0);\n\n    attachClickEvent(this.closeBtn, (e) => {\n      if(this.closeBtn.firstElementChild.classList.contains('state-back')) {\n        this.scrollable.scrollIntoViewNew({\n          element: this.scrollable.container.firstElementChild as HTMLElement, \n          position: 'start'\n        });\n        transition(0);\n        animatedCloseIcon.classList.remove('state-back');\n      } else if(!this.scrollable.isHeavyAnimationInProgress) {\n        this.slider.onCloseBtnClick();\n      }\n    });\n\n    attachClickEvent(this.editBtn, (e) => {\n      let tab: AppEditChatTab | AppEditContactTab;\n      if(this.peerId.isAnyChat()) {\n        tab = new AppEditChatTab(this.slider);\n      } else {\n        tab = new AppEditContactTab(this.slider);\n      }\n\n      if(tab) {\n        if(tab instanceof AppEditChatTab) {\n          tab.chatId = this.peerId.toChatId();\n        } else {\n          tab.peerId = this.peerId;\n        }\n        \n        tab.open();\n      }\n    });\n\n    rootScope.addEventListener('contacts_update', (userId) => {\n      if(this.peerId === userId) {\n        this.toggleEditBtn();\n      }\n    });\n\n    rootScope.addEventListener('chat_update', (chatId) => {\n      if(this.peerId === chatId.toPeerId(true)) {\n        this.toggleEditBtn();\n      }\n    });\n\n    rootScope.addEventListener('history_multiappend', (msgIdsByPeer) => {\n      for(const peerId in msgIdsByPeer) {\n        this.renderNewMessages(peerId.toPeerId(), Array.from(msgIdsByPeer[peerId]));\n      }\n    });\n    \n    rootScope.addEventListener('history_delete', ({peerId, msgs}) => {\n      this.deleteDeletedMessages(peerId, Array.from(msgs));\n    });\n\n    // Calls when message successfully sent and we have an id\n    rootScope.addEventListener('message_sent', ({message}) => {\n      this.renderNewMessages(message.peerId, [message.mid]);\n    });\n\n    //this.container.prepend(this.closeBtn.parentElement);\n\n    this.searchSuper = new AppSearchSuper({\n      mediaTabs: [{\n        inputFilter: 'inputMessagesFilterEmpty',\n        name: 'PeerMedia.Members',\n        type: 'members'\n      }, {\n        inputFilter: 'inputMessagesFilterPhotoVideo',\n        name: 'SharedMediaTab2',\n        type: 'media'\n      }, {\n        inputFilter: 'inputMessagesFilterDocument',\n        name: 'SharedFilesTab2',\n        type: 'files'\n      }, {\n        inputFilter: 'inputMessagesFilterUrl',\n        name: 'SharedLinksTab2',\n        type: 'links'\n      }, {\n        inputFilter: 'inputMessagesFilterMusic',\n        name: 'SharedMusicTab2',\n        type: 'music'\n      }, {\n        inputFilter: 'inputMessagesFilterRoundVoice',\n        name: 'SharedVoiceTab2',\n        type: 'voice'\n      }], \n      scrollable: this.scrollable,\n      onChangeTab: (mediaTab) => {\n        let timeout = mediaTab.type === 'members' && rootScope.settings.animationsEnabled ? 250 : 0;\n        setTimeout(() => {\n          btnAddMembers.classList.toggle('is-hidden', mediaTab.type !== 'members');\n        }, timeout);\n      }\n    });\n\n    this.profile.element.append(this.searchSuper.container);\n\n    const btnAddMembers = ButtonCorner({icon: 'addmember_filled'});\n    this.content.append(btnAddMembers);\n\n    btnAddMembers.addEventListener('click', () => {\n      const peerId = this.peerId;\n      const id = this.peerId.toChatId();\n      const isChannel = appChatsManager.isChannel(id);\n\n      const showConfirmation = (peerIds: PeerId[], callback: (checked: PopupPeerButtonCallbackCheckboxes) => void) => {\n        let titleLangKey: LangPackKey, titleLangArgs: any[],\n          descriptionLangKey: LangPackKey, descriptionLangArgs: any[],\n          checkboxes: PopupPeerCheckboxOptions[];\n\n        if(peerIds.length > 1) {\n          titleLangKey = 'AddMembersAlertTitle';\n          titleLangArgs = [i18n('Members', [peerIds.length])];\n          descriptionLangKey = 'AddMembersAlertCountText';\n          descriptionLangArgs = peerIds.map(peerId => {\n            const b = document.createElement('b');\n            b.append(new PeerTitle({peerId}).element);\n            return b;\n          });\n\n          if(!isChannel) {\n            checkboxes = [{\n              text: 'AddMembersForwardMessages',\n              checked: true\n            }];\n          }\n        } else {\n          titleLangKey = 'AddOneMemberAlertTitle';\n          descriptionLangKey = 'AddMembersAlertNamesText';\n          const b = document.createElement('b');\n          b.append(new PeerTitle({\n            peerId: peerIds[0]\n          }).element);\n          descriptionLangArgs = [b];\n\n          if(!isChannel) {\n            checkboxes = [{\n              text: 'AddOneMemberForwardMessages',\n              textArgs: [new PeerTitle({peerId: peerIds[0]}).element],\n              checked: true\n            }];\n          }\n        }\n\n        descriptionLangArgs.push(new PeerTitle({\n          peerId\n        }).element);\n\n        new PopupPeer('popup-add-members', {\n          peerId,\n          titleLangKey,\n          descriptionLangKey,\n          descriptionLangArgs,\n          buttons: [{\n            langKey: 'Add',\n            callback\n          }],\n          checkboxes\n        }).show();\n      };\n\n      const onError = (err: any) => {\n        if(err.type === 'USER_PRIVACY_RESTRICTED') {\n          toastNew({langPackKey: 'InviteToGroupError'});\n        }\n      };\n      \n      if(isChannel) {\n        const tab = new AppAddMembersTab(this.slider);\n        tab.open({\n          type: 'channel',\n          skippable: false,\n          takeOut: (peerIds) => {\n            showConfirmation(peerIds, () => {\n              const promise = appChatsManager.inviteToChannel(id, peerIds);\n              promise.catch(onError);\n              tab.attachToPromise(promise);\n            });\n\n            return false;\n          },\n          title: 'GroupAddMembers',\n          placeholder: 'SendMessageTo'\n        });\n      } else {\n        new PopupPickUser({\n          peerTypes: ['contacts'],\n          placeholder: 'Search',\n          onSelect: (peerId) => {\n            setTimeout(() => {\n              showConfirmation([peerId], (checked) => {\n                appChatsManager.addChatUser(id, peerId, checked.size ? undefined : 0)\n                .catch(onError);\n              });\n            }, 0);\n          },\n        });\n      }\n    });\n\n    //console.log('construct shared media time:', performance.now() - perf);\n  }\n\n  public renderNewMessages(peerId: PeerId, mids: number[]) {\n    if(this.init) return; // * not inited yet\n\n    if(!this.historiesStorage[peerId]) return;\n    \n    mids = mids.slice().reverse(); // ! because it will be ascend sorted array\n    for(const mediaTab of this.searchSuper.mediaTabs) {\n      const inputFilter = mediaTab.inputFilter;\n      const filtered = this.searchSuper.filterMessagesByType(mids.map(mid => appMessagesManager.getMessageByPeer(peerId, mid)), inputFilter);\n      if(filtered.length) {\n        const history = this.historiesStorage[peerId][inputFilter];\n        if(history) {\n          history.unshift(...filtered.map(message => ({mid: message.mid, peerId: message.peerId})));\n        }\n\n        if(this.peerId === peerId && this.searchSuper.usedFromHistory[inputFilter] !== -1) {\n          this.searchSuper.usedFromHistory[inputFilter] += filtered.length;\n          this.searchSuper.performSearchResult(filtered, mediaTab, false);\n        }\n      }\n    }\n  }\n\n  public deleteDeletedMessages(peerId: PeerId, mids: number[]) {\n    if(this.init) return; // * not inited yet\n\n    if(!this.historiesStorage[peerId]) return;\n\n    for(const mid of mids) {\n      for(const type of this.searchSuper.mediaTabs) {\n        const inputFilter = type.inputFilter;\n\n        const history = this.historiesStorage[peerId][inputFilter];\n        if(!history) continue;\n\n        const idx = history.findIndex(m => m.mid === mid);\n        if(idx !== -1) {\n          history.splice(idx, 1);\n\n          if(this.peerId === peerId) {\n            const container = this.searchSuper.tabs[inputFilter];\n            const div = container.querySelector(`div[data-mid=\"${mid}\"][data-peer-id=\"${peerId}\"]`) as HTMLElement;\n            if(div) {\n              if(this.searchSuper.selection.isSelecting) {\n                this.searchSuper.selection.toggleByElement(div);\n              }\n\n              div.remove();\n            }\n  \n            if(this.searchSuper.usedFromHistory[inputFilter] >= (idx + 1)) {\n              this.searchSuper.usedFromHistory[inputFilter]--;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    this.scrollable.onScroll();\n  }\n\n  public cleanupHTML() {\n    // const perf = performance.now();\n    this.profile.cleanupHTML();\n    \n    this.editBtn.classList.add('hide');\n\n    this.searchSuper.cleanupHTML(true);\n\n    this.container.classList.toggle('can-add-members', this.searchSuper.canViewMembers() && appChatsManager.hasRights(this.peerId.toChatId(), 'invite_users'));\n\n    // console.log('cleanupHTML shared media time:', performance.now() - perf);\n  }\n\n  public setLoadMutex(promise: Promise<any>) {\n    this.searchSuper.loadMutex = promise;\n  }\n\n  public setPeer(peerId: PeerId, threadId = 0) {\n    if(this.peerId === peerId && this.threadId === threadId) return false;\n\n    this.peerId = peerId;\n    this.threadId = threadId;\n    this.peerChanged = true;\n\n    if(this.init) {\n      this.init();\n      this.init = null;\n    }\n\n    this.searchSuper.setQuery({\n      peerId, \n      //threadId, \n      historyStorage: this.historiesStorage[peerId] ?? (this.historiesStorage[peerId] = {})\n    });\n\n    this.profile.setPeer(peerId, threadId);\n    \n    return true;\n  }\n\n  public fillProfileElements() {\n    if(!this.peerChanged) {\n      return;\n    }\n\n    this.peerChanged = false;\n\n    this.cleanupHTML();\n\n    this.profile.fillProfileElements();\n\n    this.toggleEditBtn();\n  }\n\n  private toggleEditBtn() {\n    let show: boolean;\n    if(this.peerId.isUser()) {\n      show = this.peerId !== rootScope.myId && appUsersManager.isContact(this.peerId.toUserId());\n    } else {\n      show = appChatsManager.hasRights(this.peerId.toChatId(), 'change_info');\n    }\n\n    this.editBtn.classList.toggle('hide', !show);\n  }\n\n  public loadSidebarMedia(single: boolean, justLoad = false) {\n    this.searchSuper.load(single, justLoad);\n  }\n\n  onOpenAfterTimeout() {\n    this.scrollable.onScroll();\n  }\n}\n\n// MOUNT_CLASS_TO && (MOUNT_CLASS_TO.AppSharedMediaTab = AppSharedMediaTab);\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appImManager from \"../../lib/appManagers/appImManager\";\r\nimport SidebarSlider from \"../slider\";\r\nimport mediaSizes, { ScreenSize } from \"../../helpers/mediaSizes\";\r\nimport AppSharedMediaTab from \"./tabs/sharedMedia\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\n\r\nexport const RIGHT_COLUMN_ACTIVE_CLASSNAME = 'is-right-column-shown';\r\n\r\nexport class AppSidebarRight extends SidebarSlider {\r\n  public sharedMediaTab: AppSharedMediaTab;\r\n  private isColumnProportionSet = false;\r\n\r\n  constructor() {\r\n    super({\r\n      sidebarEl: document.getElementById('column-right') as HTMLElement,\r\n      canHideFirst: true,\r\n      navigationType: 'right'\r\n    });\r\n\r\n    mediaSizes.addEventListener('changeScreen', (from, to) => {\r\n      if(to === ScreenSize.medium && from !== ScreenSize.mobile) {\r\n        this.toggleSidebar(false);\r\n      }\r\n    });\r\n\r\n    mediaSizes.addEventListener('resize', () => {\r\n      this.setColumnProportion();\r\n    });\r\n\r\n    this.sharedMediaTab = new AppSharedMediaTab(this);\r\n  }\r\n\r\n  public onCloseTab(id: number, animate: boolean, isNavigation?: boolean) {\r\n    if(!this.historyTabIds.length) {\r\n      this.toggleSidebar(false, animate);\r\n    }\r\n\r\n    super.onCloseTab(id, animate, isNavigation);\r\n  }\r\n\r\n  /* public selectTab(id: number) {\r\n    const res = super.selectTab(id);\r\n\r\n    if(id !== -1) {\r\n      this.toggleSidebar(true);\r\n    }\r\n\r\n    return res;\r\n  } */\r\n\r\n  private setColumnProportion() {\r\n    const proportion = this.sidebarEl.scrollWidth / this.sidebarEl.previousElementSibling.scrollWidth;\r\n    document.documentElement.style.setProperty('--right-column-proportion', '' + proportion);\r\n  }\r\n\r\n  public toggleSidebar(enable?: boolean, animate?: boolean) {\r\n    /////this.log('sidebarEl', this.sidebarEl, enable, isElementInViewport(this.sidebarEl));\r\n\r\n    const active = document.body.classList.contains(RIGHT_COLUMN_ACTIVE_CLASSNAME);\r\n    let willChange: boolean;\r\n    if(enable !== undefined) {\r\n      if(enable) {\r\n        if(!active) {\r\n          willChange = true;\r\n        }\r\n      } else if(active) {\r\n        willChange = true;\r\n      }\r\n    } else {\r\n      willChange = true;\r\n    }\r\n\r\n    if(!willChange) return Promise.resolve();\r\n\r\n    if(!active && !this.historyTabIds.length) {\r\n      this.sharedMediaTab.open();\r\n      //this.selectTab(this.sharedMediaTab);\r\n    }\r\n\r\n    if(!this.isColumnProportionSet) {\r\n      this.setColumnProportion();\r\n      this.isColumnProportionSet = true;\r\n    }\r\n\r\n    const animationPromise = appImManager.selectTab(active ? 1 : 2, animate);\r\n    document.body.classList.toggle(RIGHT_COLUMN_ACTIVE_CLASSNAME, enable);\r\n    return animationPromise;\r\n\r\n    /* return new Promise((resolve, reject) => {\r\n      const hidden: {element: HTMLDivElement, height: number}[] = [];\r\n      const observer = new IntersectionObserver((entries) => {\r\n        for(const entry of entries) {\r\n          const bubble = entry.target as HTMLDivElement;\r\n          if(!entry.isIntersecting) {\r\n            hidden.push({element: bubble, height: bubble.scrollHeight});\r\n          }\r\n        }\r\n  \r\n        for(const item of hidden) {\r\n          item.element.style.minHeight = item.height + 'px';\r\n          (item.element.firstElementChild as HTMLElement).style.display = 'none';\r\n          item.element.style.width = '1px';\r\n        }\r\n  \r\n        //console.log('hidden', hidden);\r\n        observer.disconnect();\r\n  \r\n        set();\r\n  \r\n        setTimeout(() => {\r\n          for(const item of hidden) {\r\n            item.element.style.minHeight = '';\r\n            item.element.style.width = '';\r\n            (item.element.firstElementChild as HTMLElement).style.display = '';\r\n          }\r\n\r\n          resolve();\r\n        }, 200);\r\n      });\r\n  \r\n      const length = Object.keys(appImManager.bubbles).length;\r\n      if(length) {\r\n        for(const i in appImManager.bubbles) {\r\n          observer.observe(appImManager.bubbles[i]);\r\n        }\r\n      } else {\r\n        set();\r\n        setTimeout(resolve, 200);\r\n      }\r\n    }); */\r\n  }\r\n}\r\n\r\nconst appSidebarRight = new AppSidebarRight();\r\nMOUNT_CLASS_TO.appSidebarRight = appSidebarRight;\r\nexport default appSidebarRight;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport appSidebarRight from \"..\";\r\nimport appPollsManager from \"../../../lib/appManagers/appPollsManager\";\r\nimport { roundPercents } from \"../../poll\";\r\nimport { RichTextProcessor } from \"../../../lib/richtextprocessor\";\r\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\r\nimport { ripple } from \"../../ripple\";\r\nimport { i18n } from \"../../../lib/langPack\";\r\n\r\nexport default class AppPollResultsTab extends SliderSuperTab {\r\n  private resultsDiv: HTMLElement;\r\n\r\n  protected init() {\r\n    this.container.id = 'poll-results-container';\r\n    this.container.classList.add('chatlist-container');\r\n\r\n    this.resultsDiv = document.createElement('div');\r\n    this.resultsDiv.classList.add('poll-results');\r\n    this.scrollable.append(this.resultsDiv);\r\n  }\r\n\r\n  public open(message: any) {\r\n    const ret = super.open();\r\n    const poll = appPollsManager.getPoll(message.media.poll.id);\r\n\r\n    this.setTitle(poll.poll.pFlags.quiz ? 'PollResults.Title.Quiz' : 'PollResults.Title.Poll');\r\n\r\n    const title = document.createElement('h3');\r\n    title.innerHTML = poll.poll.rQuestion;\r\n\r\n    const percents = poll.results.results.map(v => v.voters / poll.results.total_voters * 100);\r\n    roundPercents(percents);\r\n\r\n    const fragment = document.createDocumentFragment();\r\n    poll.results.results.forEach((result, idx) => {\r\n      if(!result.voters) return;\r\n\r\n      const hr = document.createElement('hr');\r\n\r\n      const answer = poll.poll.answers[idx];\r\n\r\n      // Head\r\n      const answerEl = document.createElement('div');\r\n      answerEl.classList.add('poll-results-answer');\r\n\r\n      const answerTitle = document.createElement('div');\r\n      answerTitle.innerHTML = RichTextProcessor.wrapEmojiText(answer.text);\r\n\r\n      const answerPercents = document.createElement('div');\r\n      answerPercents.innerText = Math.round(percents[idx]) + '%';\r\n\r\n      answerEl.append(answerTitle, answerPercents);\r\n\r\n      // Humans\r\n      const list = appDialogsManager.createChatList();\r\n      list.classList.add('poll-results-voters');\r\n\r\n      appDialogsManager.setListClickListener(list, () => {\r\n        appSidebarRight.onCloseBtnClick();\r\n      }, undefined, true);\r\n\r\n      list.style.minHeight = Math.min(result.voters, 4) * 50 + 'px';\r\n\r\n      fragment.append(hr, answerEl, list);\r\n\r\n      let offset: string, limit = 4, loading = false, left = result.voters - 4;\r\n      const load = () => {\r\n        if(loading) return;\r\n        loading = true;\r\n\r\n        appPollsManager.getVotes(message, answer.option, offset, limit).then(votesList => {\r\n          votesList.votes.forEach(vote => {\r\n            const {dom} = appDialogsManager.addDialogNew({\r\n              dialog: vote.user_id.toPeerId(false),\r\n              container: list,\r\n              drawStatus: false,\r\n              rippleEnabled: false, \r\n              meAsSaved: false,\r\n              avatarSize: 32\r\n            });\r\n            dom.lastMessageSpan.parentElement.remove();\r\n          });\r\n\r\n          if(offset) {\r\n            left -= votesList.votes.length;\r\n            (showMore.lastElementChild as HTMLElement).replaceWith(i18n('PollResults.LoadMore', [Math.min(20, left)]));\r\n          }\r\n          \r\n          offset = votesList.next_offset;\r\n          limit = 20;\r\n\r\n          if(!left || !votesList.votes.length) {\r\n            showMore.remove();\r\n          }\r\n        }).finally(() => {\r\n          loading = false;\r\n        });\r\n      };\r\n\r\n      load();\r\n\r\n      if(left <= 0) return;\r\n\r\n      const showMore = document.createElement('div');\r\n      showMore.classList.add('poll-results-more', 'show-more', 'rp-overflow');\r\n      showMore.addEventListener('click', load);\r\n      ripple(showMore);\r\n      const down = document.createElement('div');\r\n      down.classList.add('tgico-down');\r\n      showMore.append(down, i18n('PollResults.LoadMore', [Math.min(20, left)]));\r\n\r\n      fragment.append(showMore);\r\n    });\r\n\r\n    this.resultsDiv.append(title, fragment);\r\n\r\n    appSidebarRight.toggleSidebar(true).then(() => {\r\n      /* appPollsManager.getVotes(mid).then(votes => {\r\n        console.log('gOt VotEs', votes);\r\n      }); */\r\n    });\r\n\r\n    return ret;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport mediaSizes from \"../helpers/mediaSizes\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\r\nimport appImManager from \"../lib/appManagers/appImManager\";\r\nimport appPollsManager from \"../lib/appManagers/appPollsManager\";\r\nimport serverTimeManager from \"../lib/mtproto/serverTimeManager\";\r\nimport { RichTextProcessor } from \"../lib/richtextprocessor\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { ripple } from \"./ripple\";\r\nimport appSidebarRight from \"./sidebarRight\";\r\nimport AppPollResultsTab from \"./sidebarRight/tabs/pollResults\";\r\nimport { i18n, LangPackKey } from \"../lib/langPack\";\r\nimport { fastRaf } from \"../helpers/schedulers\";\r\nimport SetTransition from \"./singleTransition\";\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent, detachClickEvent } from \"../helpers/dom/clickEvent\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\nimport windowSize from \"../helpers/windowSize\";\r\nimport { Poll, PollResults } from \"../layer\";\r\n\r\nlet lineTotalLength = 0;\r\nconst tailLength = 9;\r\nconst times = 10;\r\nconst fullTime = 340;\r\nconst oneTime = fullTime / times;\r\n\r\nexport const roundPercents = (percents: number[]) => {\r\n  //console.log('roundPercents before percents:', percents);\r\n\r\n  const sum = percents.reduce((acc, p) => acc + Math.round(p), 0);\r\n  if(sum > 100) {\r\n    const diff = sum - 100;\r\n    const length = percents.length;\r\n    for(let i = 0; i < diff; ++i) {\r\n      let minIndex = -1, minRemainder = 1;\r\n      for(let k = 0; k < length; ++k) {\r\n        let remainder = percents[k] % 1;\r\n        if(remainder >= 0.5 && remainder < minRemainder) {\r\n          minRemainder = remainder;\r\n          minIndex = k;\r\n        }\r\n      }\r\n\r\n      if(minIndex === -1) {\r\n        //throw new Error('lol chto');\r\n        return;\r\n      }\r\n\r\n      percents[minIndex] -= minRemainder;\r\n    }\r\n  } else if(sum < 100) {\r\n    const diff = 100 - sum;\r\n    const length = percents.length;\r\n    for(let i = 0; i < diff; ++i) {\r\n      let minIndex = -1, maxRemainder = 0;\r\n      for(let k = 0; k < length; ++k) {\r\n        let remainder = percents[k] % 1;\r\n        if(remainder < 0.5 && remainder > maxRemainder) {\r\n          maxRemainder = remainder;\r\n          minIndex = k;\r\n        }\r\n      }\r\n\r\n      if(minIndex === -1) {\r\n        //throw new Error('lol chto');\r\n        return;\r\n      }\r\n\r\n      percents[minIndex] += 1 - maxRemainder;\r\n    }\r\n  }\r\n\r\n  //console.log('roundPercents after percents:', percents);\r\n};\r\n\r\n/* const connectedPolls: {id: string, element: PollElement}[] = [];\r\nrootScope.on('poll_update', (e) => {\r\n  const {poll, results} = e as {poll: Poll, results: PollResults};\r\n\r\n  //console.log('poll_update', poll, results);\r\n  for(const connected of connectedPolls) {\r\n    if(connected.id === poll.id) {\r\n      const pollElement = connected.element;\r\n      pollElement.isClosed = !!poll.pFlags.closed;\r\n      pollElement.performResults(results, poll.chosenIndexes);\r\n    }\r\n  }\r\n}); */\r\n\r\nrootScope.addEventListener('poll_update', ({poll, results}) => {\r\n  const pollElements = Array.from(document.querySelectorAll(`poll-element[poll-id=\"${poll.id}\"]`)) as PollElement[];\r\n  pollElements.forEach(pollElement => {\r\n    //console.log('poll_update', poll, results);\r\n    pollElement.isClosed = !!poll.pFlags.closed;\r\n    pollElement.performResults(results, poll.chosenIndexes);\r\n  });\r\n});\r\n\r\nrootScope.addEventListener('peer_changed', () => {\r\n  if(prevQuizHint) {\r\n    hideQuizHint(prevQuizHint, prevQuizHintOnHide, prevQuizHintTimeout);\r\n  }\r\n});\r\n\r\nmediaSizes.addEventListener('resize', () => {\r\n  PollElement.setMaxLength();\r\n  PollElement.resizePolls();\r\n});\r\n\r\nmediaSizes.addEventListener('changeScreen', () => {\r\n  PollElement.setMaxLength();\r\n});\r\n\r\nconst hideQuizHint = (element: HTMLElement, onHide: () => void, timeout: number) => {\r\n  element.classList.remove('active');\r\n\r\n  clearTimeout(timeout);\r\n  setTimeout(() => {\r\n    onHide();\r\n    element.remove();\r\n\r\n    if(prevQuizHint === element && prevQuizHintOnHide === onHide && prevQuizHintTimeout === timeout) {\r\n      prevQuizHint = prevQuizHintOnHide = null;\r\n      prevQuizHintTimeout = 0;\r\n    }\r\n  }, 200);\r\n};\r\n\r\nlet prevQuizHint: HTMLElement, prevQuizHintOnHide: () => void, prevQuizHintTimeout: number;\r\nconst setQuizHint = (solution: string, solution_entities: any[], onHide: () => void) => {\r\n  if(prevQuizHint) {\r\n    hideQuizHint(prevQuizHint, prevQuizHintOnHide, prevQuizHintTimeout);\r\n  }\r\n\r\n  const element = document.createElement('div');\r\n  element.classList.add('quiz-hint');\r\n\r\n  const container = document.createElement('div');\r\n  container.classList.add('container', 'tgico');\r\n\r\n  const textEl = document.createElement('div');\r\n  textEl.classList.add('text');\r\n\r\n  container.append(textEl);\r\n  element.append(container);\r\n\r\n  textEl.innerHTML = RichTextProcessor.wrapRichText(solution, {entities: solution_entities});\r\n  appImManager.chat.bubbles.bubblesContainer.append(element);\r\n\r\n  void element.offsetLeft; // reflow\r\n  element.classList.add('active');\r\n\r\n  prevQuizHint = element;\r\n  prevQuizHintOnHide = onHide;\r\n  prevQuizHintTimeout = window.setTimeout(() => {\r\n    hideQuizHint(element, onHide, prevQuizHintTimeout);\r\n  }, IS_TOUCH_SUPPORTED ? 5000 : 7000);\r\n};\r\n\r\nexport default class PollElement extends HTMLElement {\r\n  public static MAX_OFFSET = -46.5;\r\n  public static MAX_LENGTH = 0;\r\n  public svgLines: SVGSVGElement[];\r\n  private numberDivs: HTMLDivElement[];\r\n  private answerDivs: HTMLDivElement[];\r\n  private descDiv: HTMLElement;\r\n  private typeDiv: HTMLElement;\r\n  private avatarsDiv: HTMLElement;\r\n  private viewResults: HTMLElement;\r\n  private votersCountDiv: HTMLDivElement;\r\n\r\n  // private maxLength: number;\r\n  // private maxLengths: number[];\r\n  private maxPercents: number[];\r\n\r\n  public isClosed = false;\r\n  private isQuiz = false;\r\n  private isRetracted = false;\r\n  private isPublic = false;\r\n  private isMultiple = false;\r\n  private chosenIndexes: number[] = [];\r\n  private percents: number[];\r\n\r\n  public message: any;\r\n\r\n  private quizInterval: number;\r\n  private quizTimer: SVGSVGElement;\r\n\r\n  private sendVoteBtn: HTMLElement;\r\n  private chosingIndexes: number[] = [];\r\n\r\n  private sendVotePromise: Promise<void>;\r\n  private sentVote = false;\r\n\r\n  constructor() {\r\n    super();\r\n    // элемент создан\r\n  }\r\n\r\n  public static setMaxLength() {\r\n    const width = windowSize.width <= 360 ? windowSize.width - 120 : mediaSizes.active.poll.width;\r\n    this.MAX_LENGTH = width + tailLength + this.MAX_OFFSET + -13.7; // 13 - position left\r\n  }\r\n\r\n  public static resizePolls() {\r\n    if(!this.MAX_LENGTH) return;\r\n    const pollElements = Array.from(document.querySelectorAll('poll-element.is-voted')) as PollElement[];\r\n    pollElements.forEach(pollElement => {\r\n      pollElement.svgLines.forEach((svg, idx) => {\r\n        //void svg.getBoundingClientRect(); // reflow\r\n        pollElement.setLineProgress(idx, 1);\r\n      });\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    // браузер вызывает этот метод при добавлении элемента в документ\r\n    // (может вызываться много раз, если элемент многократно добавляется/удаляется)\r\n\r\n    if(!lineTotalLength) {\r\n      lineTotalLength = (document.getElementById('poll-line') as any as SVGPathElement).getTotalLength();\r\n      //console.log('line total length:', lineTotalLength);\r\n      PollElement.setMaxLength();\r\n    }\r\n\r\n    const pollId = this.message.media.poll.id;\r\n    const {poll, results} = appPollsManager.getPoll(pollId);\r\n\r\n    /* const timestamp = Date.now() / 1000 | 0;\r\n    if(timestamp < this.message.date) { */\r\n    if(this.message.pFlags.is_scheduled) {\r\n      this.classList.add('disable-hover');\r\n    }\r\n\r\n    //console.log('pollElement poll:', poll, results);\r\n\r\n    let descKey: LangPackKey;\r\n    if(poll.pFlags) {\r\n      this.isPublic = !!poll.pFlags.public_voters;\r\n      this.isQuiz = !!poll.pFlags.quiz;\r\n      this.isClosed = !!poll.pFlags.closed;\r\n      this.isMultiple = !!poll.pFlags.multiple_choice;\r\n\r\n      if(this.isClosed) {\r\n        descKey = 'Chat.Poll.Type.Closed';\r\n        this.classList.add('is-closed');\r\n      } else if(this.isQuiz) {\r\n        descKey = this.isPublic ? 'Chat.Poll.Type.Quiz' : 'Chat.Poll.Type.AnonymousQuiz';\r\n      } else {\r\n        descKey = this.isPublic ? 'Chat.Poll.Type.Public' : 'Chat.Poll.Type.Anonymous';\r\n      }\r\n    }\r\n\r\n    this.classList.toggle('is-multiple', this.isMultiple);\r\n\r\n    const multipleSelect = this.isMultiple ? '<span class=\"poll-answer-selected tgico-check\"></span>' : '';\r\n    const votes = poll.answers.map((answer, idx) => {\r\n      return `\r\n        <div class=\"poll-answer\" data-index=\"${idx}\">\r\n          <div class=\"circle-hover\">\r\n            <div class=\"animation-ring\"></div>\r\n            <svg class=\"progress-ring\">\r\n              <circle class=\"progress-ring__circle\" cx=\"13\" cy=\"13\" r=\"9\"></circle>\r\n            </svg>\r\n            ${multipleSelect}\r\n          </div>\r\n          <div class=\"poll-answer-percents\"></div>\r\n          <div class=\"poll-answer-text\">${RichTextProcessor.wrapEmojiText(answer.text)}</div>\r\n          <svg version=\"1.1\" class=\"poll-line\" style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 485.9 35\" xml:space=\"preserve\">\r\n            <use href=\"#poll-line\"></use>\r\n          </svg>\r\n          <span class=\"poll-answer-selected tgico\"></span>\r\n        </div>\r\n      `;\r\n    }).join('');\r\n\r\n    this.innerHTML = `\r\n      <div class=\"poll-title\">${poll.rQuestion}</div>\r\n      <div class=\"poll-desc\">\r\n        <div class=\"poll-type\"></div>\r\n        <div class=\"poll-avatars\"></div>\r\n      </div>\r\n      ${votes}`;\r\n\r\n    this.descDiv = this.firstElementChild.nextElementSibling as HTMLElement;\r\n    this.typeDiv = this.descDiv.firstElementChild as HTMLElement;\r\n    this.avatarsDiv = this.descDiv.lastElementChild as HTMLElement;\r\n\r\n    if(descKey) {\r\n      this.typeDiv.append(i18n(descKey));\r\n    }\r\n\r\n    if(this.isQuiz) {\r\n      this.classList.add('is-quiz');\r\n\r\n      if(poll.close_period && poll.close_date) {\r\n        const timeLeftDiv = document.createElement('div');\r\n        timeLeftDiv.classList.add('poll-time');\r\n        this.descDiv.append(timeLeftDiv);\r\n\r\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        //svg.setAttributeNS(null, 'viewBox', '0 0 15 15');\r\n        svg.classList.add('poll-quiz-timer');\r\n\r\n        this.quizTimer = svg;\r\n\r\n        const strokeWidth = 2;\r\n        const radius = 7;\r\n        const circumference = 2 * Math.PI * radius;\r\n\r\n        const circle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        circle.classList.add('poll-quiz-timer-circle');\r\n        circle.setAttributeNS(null, 'cx', '16');\r\n        circle.setAttributeNS(null, 'cy', '16');\r\n        circle.setAttributeNS(null, 'r', '' + radius);\r\n        circle.setAttributeNS(null, 'stroke-width', '' + strokeWidth);\r\n\r\n        svg.append(circle);\r\n        this.descDiv.append(svg);\r\n        \r\n        const period = poll.close_period * 1000;\r\n        const closeTime = (poll.close_date - serverTimeManager.serverTimeOffset) * 1000;\r\n\r\n        //console.log('closeTime:', poll.close_date, serverTimeManager.serverTimeOffset, Date.now() / 1000 | 0);\r\n\r\n        // let time = Date.now();\r\n        // let percents = (closeTime - time) / period;\r\n\r\n        // timeLeftDiv.innerHTML = String((closeTime - time) / 1000 + 1 | 0).toHHMMSS();\r\n\r\n        // // @ts-ignore\r\n        // circle.style.strokeDashoffset = circumference + percents * circumference;\r\n        // circle.style.strokeDasharray = ${circumference} ${circumference};\r\n\r\n        this.quizInterval = window.setInterval(() => {\r\n          const time = Date.now();\r\n          const percents = (closeTime - time) / period;\r\n          const timeLeft = (closeTime - time) / 1000 + 1 | 0;\r\n          timeLeftDiv.innerHTML = String(timeLeft).toHHMMSS();\r\n          \r\n          if (timeLeft <= 5) {\r\n            timeLeftDiv.style.color = '#ee545c';\r\n            circle.style.stroke = '#ee545c';\r\n          }\r\n          //timeLeftDiv.style.visibility = 'visible';\r\n\r\n          // @ts-ignore\r\n          circle.style.strokeDashoffset = circumference + percents * circumference;\r\n          circle.style.strokeDasharray = `${circumference} ${circumference}`;\r\n\r\n          if(time >= closeTime) {\r\n            clearInterval(this.quizInterval);\r\n            timeLeftDiv.innerHTML = '';\r\n            // @ts-ignore\r\n            circle.style.strokeDashoffset = circumference;\r\n            this.quizInterval = 0;\r\n\r\n            setTimeout(() => {\r\n              // нужно запросить апдейт чтобы опрос обновился\r\n              appPollsManager.getResults(this.message);\r\n            }, 3e3);\r\n          }\r\n        }, 1e3);\r\n      }\r\n    }\r\n    \r\n    this.answerDivs = Array.from(this.querySelectorAll('.poll-answer')) as HTMLDivElement[];\r\n    this.svgLines = Array.from(this.querySelectorAll('.poll-line')) as SVGSVGElement[];\r\n    this.numberDivs = Array.from(this.querySelectorAll('.poll-answer-percents')) as HTMLDivElement[];\r\n\r\n    const footerDiv = document.createElement('div');\r\n    footerDiv.classList.add('poll-footer');\r\n\r\n    this.viewResults = document.createElement('div');\r\n    this.viewResults.className = 'poll-footer-button poll-view-results hide';\r\n    this.viewResults.append(i18n('Chat.Poll.ViewResults'));\r\n\r\n    this.votersCountDiv = document.createElement('div');\r\n    this.votersCountDiv.className = 'poll-votes-count';\r\n\r\n    footerDiv.append(this.viewResults, this.votersCountDiv);\r\n    this.append(footerDiv);\r\n\r\n    this.viewResults.addEventListener('click', (e) => {\r\n      cancelEvent(e);\r\n\r\n      if(!appSidebarRight.isTabExists(AppPollResultsTab)) {\r\n        new AppPollResultsTab(appSidebarRight).open(this.message);\r\n      }\r\n    });\r\n    ripple(this.viewResults);\r\n\r\n    if(this.isMultiple) {\r\n      this.sendVoteBtn = document.createElement('div');\r\n      this.sendVoteBtn.classList.add('poll-footer-button', 'poll-send-vote');\r\n      this.sendVoteBtn.append(i18n('Chat.Poll.SubmitVote'));\r\n      ripple(this.sendVoteBtn);\r\n\r\n      if(!poll.chosenIndexes.length) {\r\n        this.votersCountDiv.classList.add('hide');\r\n      }\r\n\r\n      attachClickEvent(this.sendVoteBtn, (e) => {\r\n        cancelEvent(e);\r\n        /* const indexes = this.answerDivs.filter(el => el.classList.contains('is-chosing')).map(el => +el.dataset.index);\r\n        if(indexes.length) {\r\n          \r\n        } */\r\n        if(this.chosingIndexes.length) {\r\n          this.sendVotes(this.chosingIndexes).then(() => {\r\n            this.chosingIndexes.length = 0;\r\n            this.answerDivs.forEach(el => {\r\n              el.classList.remove('is-chosing');\r\n            });\r\n          });\r\n        }\r\n      });\r\n\r\n      footerDiv.append(this.sendVoteBtn);\r\n    }\r\n\r\n    // const width = this.getBoundingClientRect().width;\r\n    // const width = mediaSizes.active.poll.width;\r\n    // this.maxLength = width + tailLength + this.maxOffset + -13.7; // 13 - position left\r\n\r\n    const canVote = !(poll.chosenIndexes.length || this.isClosed);\r\n    if(!canVote || this.isPublic) {\r\n      this.performResults(results, poll.chosenIndexes, false);\r\n    }\r\n\r\n    if(canVote) {\r\n      this.setVotersCount(results);\r\n      attachClickEvent(this, this.clickHandler);\r\n    }\r\n  }\r\n\r\n  initQuizHint(results: PollResults) {\r\n    if(results.solution && results.solution_entities) {\r\n      const toggleHint = document.createElement('div');\r\n      toggleHint.classList.add('tgico-tip', 'poll-hint');\r\n      this.descDiv.append(toggleHint);\r\n\r\n      //let active = false;\r\n      attachClickEvent(toggleHint, (e) => {\r\n        cancelEvent(e);\r\n\r\n        //active = true;\r\n        toggleHint.classList.add('active');\r\n        setQuizHint(results.solution, results.solution_entities, () => {\r\n          //active = false;\r\n          toggleHint.classList.remove('active');\r\n        });\r\n      });\r\n\r\n      if(this.sentVote) {\r\n        const correctResult = results.results.find(r => r.pFlags.correct);\r\n        if(correctResult && !correctResult.pFlags.chosen) {\r\n          toggleHint.click();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  clickHandler(e: Event) {\r\n    const target = findUpClassName(e.target, 'poll-answer') as HTMLElement;\r\n    if(!target) {\r\n      return;\r\n    }\r\n    \r\n    cancelEvent(e);\r\n    const answerIndex = +target.dataset.index;\r\n    if(this.isMultiple) {\r\n      target.classList.toggle('is-chosing');\r\n\r\n      const foundIndex = this.chosingIndexes.indexOf(answerIndex);\r\n      if(foundIndex !== -1) {\r\n        this.chosingIndexes.splice(foundIndex, 1);\r\n      } else {\r\n        this.chosingIndexes.push(answerIndex);\r\n      }\r\n    } else {\r\n      this.sendVotes([answerIndex]);\r\n    }\r\n    \r\n    /* target.classList.add('is-voting');\r\n    setTimeout(() => { // simulate\r\n      this.setResults([100, 0], answerIndex);\r\n      target.classList.remove('is-voting');\r\n    }, 1000); */\r\n  }\r\n\r\n  sendVotes(indexes: number[]) {\r\n    if(this.sendVotePromise) return this.sendVotePromise;\r\n\r\n    const targets = this.answerDivs.filter((_, idx) => indexes.includes(idx));\r\n    targets.forEach(target => {\r\n      target.classList.add('is-voting');\r\n    });\r\n    \r\n    this.classList.add('disable-hover');\r\n    this.sentVote = true;\r\n    return this.sendVotePromise = appPollsManager.sendVote(this.message, indexes).then(() => {\r\n      targets.forEach(target => {\r\n        target.classList.remove('is-voting');\r\n      });\r\n\r\n      this.classList.remove('disable-hover');\r\n    }).catch(() => {\r\n      this.sentVote = false;\r\n    }).finally(() => {\r\n      this.sendVotePromise = null;\r\n    });\r\n  }\r\n\r\n  performResults(results: PollResults, chosenIndexes: number[], animate = true) {\r\n    if(!rootScope.settings.animationsEnabled) {\r\n      animate = false;\r\n    }\r\n\r\n    if(this.isQuiz && (results.results?.length || this.isClosed)) {\r\n      this.answerDivs.forEach((el, idx) => {\r\n        el.classList.toggle('is-correct', !!results.results[idx].pFlags.correct);\r\n      });\r\n\r\n      if(this.initQuizHint) {\r\n        this.initQuizHint(results);\r\n        this.initQuizHint = null;\r\n      }\r\n\r\n      if(this.quizInterval) {\r\n        clearInterval(this.quizInterval);\r\n        this.quizInterval = 0;\r\n      }\r\n\r\n      if(this.quizTimer?.parentElement) {\r\n        this.quizTimer.remove();\r\n      }\r\n\r\n      const timeEl = this.descDiv.querySelector('.poll-time');\r\n      if(timeEl) {\r\n        timeEl.remove();\r\n      }\r\n    }\r\n\r\n    if(this.isClosed) {\r\n      this.classList.add('is-closed');\r\n      replaceContent(this.typeDiv, i18n('Chat.Poll.Type.Closed'));\r\n    }\r\n\r\n    // set chosen\r\n    if(this.chosenIndexes.length !== chosenIndexes.length || this.isClosed) { // if we voted\r\n      this.isRetracted = this.chosenIndexes.length && !chosenIndexes.length;\r\n      this.chosenIndexes = chosenIndexes.slice();\r\n\r\n      if(this.isRetracted) {\r\n        attachClickEvent(this, this.clickHandler);\r\n      } else {\r\n        detachClickEvent(this, this.clickHandler);\r\n      }\r\n    }\r\n    \r\n    // is need update\r\n    if(this.chosenIndexes.length || this.isRetracted || this.isClosed) {\r\n      const percents = results.results.map(v => results.total_voters ? v.voters / results.total_voters * 100 : 0);\r\n\r\n      this.classList.toggle('no-transition', !animate);\r\n      if(animate) {\r\n        SetTransition(this, '', !this.isRetracted, 340);\r\n      }\r\n\r\n      fastRaf(() => {\r\n        this.setResults(this.isRetracted ? this.percents : percents, this.chosenIndexes, animate);\r\n        this.percents = percents;\r\n        this.isRetracted = false;\r\n      });\r\n    }\r\n    \r\n    this.setVotersCount(results);\r\n\r\n    if(this.isPublic) {\r\n      if(!this.isMultiple) {\r\n        this.viewResults.classList.toggle('hide', !results.total_voters || !this.chosenIndexes.length);\r\n        this.votersCountDiv.classList.toggle('hide', !!this.chosenIndexes.length);\r\n      }\r\n\r\n      let html = '';\r\n      /**\r\n       * MACOS, ANDROID - без реверса\r\n       * WINDOWS DESKTOP - реверс\r\n       * все приложения накладывают аватарку первую на вторую, а в макете зато вторая на первую, ЛОЛ!\r\n       */\r\n      (results.recent_voters || [])/* .slice().reverse() */.forEach((userId, idx) => {\r\n        const style = idx === 0 ? '' : `style=\"transform: translateX(-${idx * 3}px);\"`;\r\n        html += `<avatar-element class=\"avatar-16 poll-avatar\" dialog=\"0\" peer=\"${userId.toPeerId()}\" ${style}></avatar-element>`;\r\n      });\r\n      this.avatarsDiv.innerHTML = html;\r\n    }\r\n\r\n    if(this.isMultiple) {\r\n      const isVoted = !!this.chosenIndexes.length;\r\n\r\n      const hideSendVoteBtn = this.isClosed || isVoted;\r\n      const hideViewResultsBtn = !this.isPublic || !results.total_voters || (!isVoted && !this.isClosed);\r\n      this.sendVoteBtn.classList.toggle('hide', hideSendVoteBtn);\r\n      this.viewResults.classList.toggle('hide', hideViewResultsBtn);\r\n      this.votersCountDiv.classList.toggle('hide', !hideSendVoteBtn || !hideViewResultsBtn);\r\n    }\r\n  }\r\n\r\n  setResults(percents: number[], chosenIndexes: number[], animate: boolean) {\r\n    this.svgLines.forEach(svg => svg.style.display = '');\r\n\r\n    this.answerDivs.forEach((el, idx) => {\r\n      el.classList.toggle('is-chosen', chosenIndexes.includes(idx));\r\n    });\r\n\r\n    const maxValue = Math.max(...percents);\r\n    // this.maxLengths = percents.map(p => p / maxValue * this.maxLength);\r\n    this.maxPercents = percents.map(p => p / maxValue);\r\n\r\n    // line\r\n    if(this.isRetracted) {\r\n      this.svgLines.forEach((svg, idx) => {\r\n        this.setLineProgress(idx, -1);\r\n      });\r\n    } else {\r\n      const cb = () => {\r\n        this.svgLines.forEach((svg, idx) => {\r\n          //void svg.getBoundingClientRect(); // reflow\r\n          this.setLineProgress(idx, 1);\r\n        });\r\n      };\r\n      \r\n      animate ? fastRaf(cb) : cb();\r\n    }\r\n\r\n    percents = percents.slice();\r\n    roundPercents(percents);\r\n    let getPercentValue: (percents: number, index: number) => number;\r\n    const iterate = (i: number) => {\r\n      percents.forEach((percents, idx) => {\r\n        const value = getPercentValue(percents, i);\r\n        this.numberDivs[idx].innerText = value + '%';\r\n      });\r\n    };\r\n    // numbers\r\n    if(this.isRetracted) {\r\n      getPercentValue = (percents, index) => Math.round(percents / times * index);\r\n\r\n      if(animate) {\r\n        for(let i = (times - 1), k = 0; i >= 0; --i, ++k) {\r\n          setTimeout(() => {\r\n            iterate(i);\r\n          }, oneTime * k);\r\n        }\r\n      } else {\r\n        iterate(0);\r\n      }\r\n    } else {\r\n      getPercentValue = (percents, index) => Math.round(percents / times * (index + 1));\r\n\r\n      if(animate) {\r\n        for(let i = 0; i < times; ++i) {\r\n          setTimeout(() => {\r\n            iterate(i);\r\n          }, oneTime * i);\r\n        }\r\n      } else {\r\n        iterate(times - 1);\r\n      }\r\n    }\r\n\r\n    if(this.isRetracted) {\r\n      if(animate) {\r\n        this.classList.add('is-retracting');\r\n      }\r\n\r\n      this.classList.remove('is-voted');\r\n      const cb = () => {\r\n        this.svgLines.forEach(svg => svg.style.display = 'none');\r\n      };\r\n\r\n      if(animate) {\r\n        setTimeout(() => {\r\n          this.classList.remove('is-retracting');\r\n          cb();\r\n        }, fullTime);\r\n      } else {\r\n        cb();\r\n      }\r\n    } else {\r\n      this.classList.add('is-voted');\r\n    }\r\n  }\r\n\r\n  setVotersCount(results: PollResults) {\r\n    const votersCount = results.total_voters || 0;\r\n    let key: LangPackKey, args = [votersCount];\r\n    if(this.isClosed) {\r\n      if(this.isQuiz) key = votersCount ? 'Chat.Quiz.TotalVotes' : 'Chat.Quiz.TotalVotesResultEmpty';\r\n      else key = votersCount ? 'Chat.Poll.TotalVotes1' : 'Chat.Poll.TotalVotesResultEmpty';\r\n    } else {\r\n      if(this.isQuiz) key = votersCount ? 'Chat.Quiz.TotalVotes' : 'Chat.Quiz.TotalVotesEmpty';\r\n      else key = votersCount ? 'Chat.Poll.TotalVotes1' : 'Chat.Poll.TotalVotesEmpty';\r\n    }\r\n    \r\n    replaceContent(this.votersCountDiv, i18n(key, args));\r\n  }\r\n\r\n  setLineProgress(index: number, multiplier: number) {\r\n    const svg = this.svgLines[index];\r\n\r\n    if(multiplier === -1) {\r\n      svg.style.strokeDasharray = '';\r\n      svg.style.strokeDashoffset = '';\r\n    } else {\r\n      // svg.style.strokeDasharray = (multiplier * this.maxLengths[index]) + ', 485.9';\r\n      svg.style.strokeDasharray = (multiplier * this.maxPercents[index] * PollElement.MAX_LENGTH) + ', 485.9';\r\n      // svg.style.strokeDasharray = (multiplier * this.maxPercents[index] * 100) + '%, 485.9';\r\n      svg.style.strokeDashoffset = '' + multiplier * PollElement.MAX_OFFSET;\r\n    }\r\n  }\r\n\r\n  // у элемента могут быть ещё другие методы и свойства\r\n}\r\n\r\ncustomElements.define(\"poll-element\", PollElement);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type Chat from './chat/chat';\r\nimport { getEmojiToneIndex } from '../vendor/emoji';\r\nimport { deferredPromise } from '../helpers/cancellablePromise';\r\nimport { formatFullSentTime } from '../helpers/date';\r\nimport mediaSizes, { ScreenSize } from '../helpers/mediaSizes';\r\nimport { IS_SAFARI } from '../environment/userAgent';\r\nimport { Message, PhotoSize, StickerSet } from '../layer';\r\nimport appDocsManager, { MyDocument } from \"../lib/appManagers/appDocsManager\";\r\nimport appMessagesManager from '../lib/appManagers/appMessagesManager';\r\nimport appPhotosManager, { MyPhoto } from '../lib/appManagers/appPhotosManager';\r\nimport LottieLoader from '../lib/rlottie/lottieLoader';\r\nimport webpWorkerController from '../lib/webp/webpWorkerController';\r\nimport animationIntersector from './animationIntersector';\r\nimport appMediaPlaybackController, { MediaSearchContext } from './appMediaPlaybackController';\r\nimport AudioElement, { findMediaTargets } from './audio';\r\nimport ReplyContainer from './chat/replyContainer';\r\nimport { Layouter, RectPart } from './groupedLayout';\r\nimport LazyLoadQueue from './lazyLoadQueue';\r\nimport PollElement from './poll';\r\nimport ProgressivePreloader from './preloader';\r\nimport './middleEllipsis';\r\nimport RichTextProcessor from '../lib/richtextprocessor';\r\nimport appImManager from '../lib/appManagers/appImManager';\r\nimport rootScope from '../lib/rootScope';\r\nimport { onMediaLoad } from '../helpers/files';\r\nimport { animateSingle } from '../helpers/animation';\r\nimport renderImageFromUrl from '../helpers/dom/renderImageFromUrl';\r\nimport sequentialDom from '../helpers/sequentialDom';\r\nimport { fastRaf } from '../helpers/schedulers';\r\nimport appDownloadManager, { DownloadBlob, ThumbCache } from '../lib/appManagers/appDownloadManager';\r\nimport appStickersManager from '../lib/appManagers/appStickersManager';\r\nimport { cancelEvent } from '../helpers/dom/cancelEvent';\r\nimport { attachClickEvent, simulateClickEvent } from '../helpers/dom/clickEvent';\r\nimport isInDOM from '../helpers/dom/isInDOM';\r\nimport lottieLoader from '../lib/rlottie/lottieLoader';\r\nimport { clearBadCharsAndTrim } from '../helpers/cleanSearchText';\r\nimport blur from '../helpers/blur';\r\nimport IS_WEBP_SUPPORTED from '../environment/webpSupport';\r\nimport MEDIA_MIME_TYPES_SUPPORTED from '../environment/mediaMimeTypesSupport';\r\nimport { MiddleEllipsisElement } from './middleEllipsis';\r\nimport { joinElementsWith } from '../lib/langPack';\r\nimport throttleWithRaf from '../helpers/schedulers/throttleWithRaf';\r\nimport { NULL_PEER_ID } from '../lib/mtproto/mtproto_config';\r\nimport findUpClassName from '../helpers/dom/findUpClassName';\r\nimport RLottiePlayer from '../lib/rlottie/rlottiePlayer';\r\nimport assumeType from '../helpers/assumeType';\r\nimport appMessagesIdsManager from '../lib/appManagers/appMessagesIdsManager';\r\nimport throttle from '../helpers/schedulers/throttle';\r\nimport { SendMessageEmojiInteractionData } from '../types';\r\nimport IS_VIBRATE_SUPPORTED from '../environment/vibrateSupport';\r\nimport Row from './row';\r\nimport { ChatAutoDownloadSettings } from '../helpers/autoDownload';\r\nimport formatBytes from '../helpers/formatBytes';\r\n\r\nconst MAX_VIDEO_AUTOPLAY_SIZE = 50 * 1024 * 1024; // 50 MB\r\n\r\nlet roundVideoCircumference = 0;\r\nmediaSizes.addEventListener('changeScreen', (from, to) => {\r\n  if(to === ScreenSize.mobile || from === ScreenSize.mobile) {\r\n    const elements = Array.from(document.querySelectorAll('.media-round .progress-ring')) as SVGSVGElement[];\r\n    const width = mediaSizes.active.round.width;\r\n    const halfSize = width / 2;\r\n    const radius = halfSize - 7;\r\n    roundVideoCircumference = 2 * Math.PI * radius;\r\n    elements.forEach(element => {\r\n      element.setAttributeNS(null, 'width', '' + width);\r\n      element.setAttributeNS(null, 'height', '' + width);\r\n\r\n      const circle = element.firstElementChild as SVGCircleElement;\r\n      circle.setAttributeNS(null, 'cx', '' + halfSize);\r\n      circle.setAttributeNS(null, 'cy', '' + halfSize);\r\n      circle.setAttributeNS(null, 'r', '' + radius);\r\n\r\n      circle.style.strokeDasharray = roundVideoCircumference + ' ' + roundVideoCircumference;\r\n      circle.style.strokeDashoffset = '' + roundVideoCircumference;\r\n    });\r\n  }\r\n});\r\n\r\nexport function wrapVideo({doc, container, message, boxWidth, boxHeight, withTail, isOut, middleware, lazyLoadQueue, noInfo, group, onlyPreview, withoutPreloader, loadPromises, noPlayButton, size, searchContext, autoDownload}: {\r\n  doc: MyDocument, \r\n  container?: HTMLElement, \r\n  message?: Message.message, \r\n  boxWidth?: number, \r\n  boxHeight?: number, \r\n  withTail?: boolean, \r\n  isOut?: boolean,\r\n  middleware?: () => boolean,\r\n  lazyLoadQueue?: LazyLoadQueue,\r\n  noInfo?: true,\r\n  noPlayButton?: boolean,\r\n  group?: string,\r\n  onlyPreview?: boolean,\r\n  withoutPreloader?: boolean,\r\n  loadPromises?: Promise<any>[],\r\n  autoDownload?: ChatAutoDownloadSettings,\r\n  size?: PhotoSize,\r\n  searchContext?: MediaSearchContext,\r\n}) {\r\n  const autoDownloadSize = autoDownload?.video;\r\n  let noAutoDownload = autoDownloadSize === 0;\r\n  const isAlbumItem = !(boxWidth && boxHeight);\r\n  const canAutoplay = /* doc.sticker ||  */(\r\n    (\r\n      doc.type !== 'video' || (\r\n        doc.size <= MAX_VIDEO_AUTOPLAY_SIZE && \r\n        !isAlbumItem\r\n      )\r\n    ) && (doc.type === 'gif' ? rootScope.settings.autoPlay.gifs : rootScope.settings.autoPlay.videos)\r\n  );\r\n  let spanTime: HTMLElement, spanPlay: HTMLElement;\r\n\r\n  if(!noInfo) {\r\n    spanTime = document.createElement('span');\r\n    spanTime.classList.add('video-time');\r\n    container.append(spanTime);\r\n  \r\n    let needPlayButton = false;\r\n    if(doc.type !== 'gif') {\r\n      spanTime.innerText = (doc.duration + '').toHHMMSS(false);\r\n\r\n      if(!noPlayButton && doc.type !== 'round') {\r\n        if(canAutoplay && !noAutoDownload) {\r\n          spanTime.classList.add('tgico', 'can-autoplay');\r\n        } else {\r\n          needPlayButton = true;\r\n        }\r\n      }\r\n    } else {\r\n      spanTime.innerText = 'GIF';\r\n\r\n      if(!canAutoplay && !noPlayButton) {\r\n        needPlayButton = true;\r\n        noAutoDownload = undefined;\r\n      }\r\n    }\r\n\r\n    if(needPlayButton) {\r\n      spanPlay = document.createElement('span');\r\n      spanPlay.classList.add('video-play', 'tgico-largeplay', 'btn-circle', 'position-center');\r\n      container.append(spanPlay);\r\n    }\r\n  }\r\n\r\n  let res: {\r\n    thumb?: typeof photoRes,\r\n    loadPromise: Promise<any>\r\n  } = {} as any;\r\n\r\n  if(doc.mime_type === 'image/gif') {\r\n    const photoRes = wrapPhoto({\r\n      photo: doc, \r\n      message, \r\n      container, \r\n      boxWidth, \r\n      boxHeight, \r\n      withTail, \r\n      isOut, \r\n      lazyLoadQueue, \r\n      middleware,\r\n      withoutPreloader,\r\n      loadPromises,\r\n      autoDownloadSize,\r\n      size\r\n    });\r\n\r\n    res.thumb = photoRes;\r\n    res.loadPromise = photoRes.loadPromises.full;\r\n    return res;\r\n  }\r\n\r\n  /* const video = doc.type === 'round' ? appMediaPlaybackController.addMedia(doc, message.mid) as HTMLVideoElement : document.createElement('video');\r\n  if(video.parentElement) {\r\n    video.remove();\r\n  } */\r\n\r\n  let preloader: ProgressivePreloader; // it must be here, otherwise will get error before initialization in round onPlay\r\n\r\n  const video = document.createElement('video');\r\n  video.classList.add('media-video');\r\n  video.setAttribute('playsinline', 'true');\r\n  video.muted = true;\r\n  if(doc.type === 'round') {\r\n    const divRound = document.createElement('div');\r\n    divRound.classList.add('media-round', 'z-depth-1');\r\n    divRound.dataset.mid = '' + message.mid;\r\n    divRound.dataset.peerId = '' + message.peerId;\r\n    (divRound as any).message = message;\r\n\r\n    const size = mediaSizes.active.round;\r\n    const halfSize = size.width / 2;\r\n    const strokeWidth = 3.5;\r\n    const radius = halfSize - (strokeWidth * 2);\r\n    divRound.innerHTML = `<svg class=\"progress-ring\" width=\"${size.width}\" height=\"${size.width}\" style=\"transform: rotate(-90deg);\">\r\n      <circle class=\"progress-ring__circle\" stroke=\"white\" stroke-opacity=\"0.3\" stroke-width=\"${strokeWidth}\" cx=\"${halfSize}\" cy=\"${halfSize}\" r=\"${radius}\" fill=\"transparent\"/>\r\n    </svg>`;\r\n\r\n    const circle = divRound.firstElementChild.firstElementChild as SVGCircleElement;\r\n    if(!roundVideoCircumference) {\r\n      roundVideoCircumference = 2 * Math.PI * radius;\r\n    }\r\n    circle.style.strokeDasharray = roundVideoCircumference + ' ' + roundVideoCircumference;\r\n    circle.style.strokeDashoffset = '' + roundVideoCircumference;\r\n    \r\n    spanTime.classList.add('tgico');\r\n\r\n    const isUnread = message.pFlags.media_unread;\r\n    if(isUnread) {\r\n      divRound.classList.add('is-unread');\r\n    }\r\n\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = canvas.height = doc.w/*  * window.devicePixelRatio */;\r\n\r\n    divRound.prepend(canvas, spanTime);\r\n    divRound.append(video);\r\n    container.append(divRound);\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    /* ctx.beginPath();\r\n    ctx.arc(canvas.width / 2, canvas.height / 2, canvas.width / 2, 0, Math.PI * 2);\r\n    ctx.clip(); */\r\n\r\n    const onLoad = () => {\r\n      const message: Message.message = (divRound as any).message;\r\n      const globalVideo = appMediaPlaybackController.addMedia(message, !noAutoDownload) as HTMLVideoElement;\r\n      const clear = () => {\r\n        (appImManager.chat.setPeerPromise || Promise.resolve()).finally(() => {\r\n          if(isInDOM(globalVideo)) {\r\n            return;\r\n          }\r\n  \r\n          globalVideo.removeEventListener('play', onPlay);\r\n          globalVideo.removeEventListener('timeupdate', throttledTimeUpdate);\r\n          globalVideo.removeEventListener('pause', onPaused);\r\n          globalVideo.removeEventListener('ended', onEnded);\r\n        });\r\n      };\r\n  \r\n      const onFrame = () => {\r\n        ctx.drawImage(globalVideo, 0, 0);\r\n  \r\n        const offset = roundVideoCircumference - globalVideo.currentTime / globalVideo.duration * roundVideoCircumference;\r\n        circle.style.strokeDashoffset = '' + offset;\r\n  \r\n        return !globalVideo.paused;\r\n      };\r\n\r\n      const onTimeUpdate = () => {\r\n        if(!globalVideo.duration) {\r\n          return;\r\n        }\r\n  \r\n        if(!isInDOM(globalVideo)) {\r\n          clear();\r\n          return;\r\n        }\r\n\r\n        if(globalVideo.paused) {\r\n          onFrame();\r\n        }\r\n  \r\n        spanTime.innerText = (globalVideo.duration - globalVideo.currentTime + '').toHHMMSS(false);\r\n      };\r\n\r\n      const throttledTimeUpdate = throttleWithRaf(onTimeUpdate);\r\n  \r\n      const onPlay = () => {\r\n        video.classList.add('hide');\r\n        divRound.classList.remove('is-paused');\r\n        animateSingle(onFrame, canvas);\r\n  \r\n        if(preloader && preloader.preloader && preloader.preloader.classList.contains('manual')) {\r\n          preloader.onClick();\r\n        }\r\n      };\r\n  \r\n      const onPaused = () => {\r\n        if(!isInDOM(globalVideo)) {\r\n          clear();\r\n          return;\r\n        }\r\n  \r\n        divRound.classList.add('is-paused');\r\n      };\r\n  \r\n      const onEnded = () => {\r\n        video.classList.remove('hide');\r\n        divRound.classList.add('is-paused');\r\n        \r\n        video.currentTime = 0;\r\n        spanTime.innerText = ('' + globalVideo.duration).toHHMMSS(false);\r\n  \r\n        if(globalVideo.currentTime) {\r\n          globalVideo.currentTime = 0;\r\n        }\r\n      };\r\n  \r\n      globalVideo.addEventListener('play', onPlay);\r\n      globalVideo.addEventListener('timeupdate', throttledTimeUpdate);\r\n      globalVideo.addEventListener('pause', onPaused);\r\n      globalVideo.addEventListener('ended', onEnded);\r\n  \r\n      attachClickEvent(canvas, (e) => {\r\n        cancelEvent(e);\r\n  \r\n        // ! костыль\r\n        if(preloader && !preloader.detached) {\r\n          preloader.onClick();\r\n        }\r\n        \r\n        // ! can't use it here. on Safari iOS video won't start.\r\n        /* if(globalVideo.readyState < 2) {\r\n          return;\r\n        } */\r\n  \r\n        if(globalVideo.paused) {\r\n          const hadSearchContext = !!searchContext;\r\n          if(appMediaPlaybackController.setSearchContext(searchContext || {\r\n            peerId: NULL_PEER_ID, \r\n            inputFilter: {_: 'inputMessagesFilterEmpty'}, \r\n            useSearch: false\r\n          })) {\r\n            const [prev, next] = !hadSearchContext ? [] : findMediaTargets(divRound/* , searchContext.useSearch */);\r\n            appMediaPlaybackController.setTargets({peerId: message.peerId, mid: message.mid}, prev, next);\r\n          }\r\n          \r\n          globalVideo.play();\r\n        } else {\r\n          globalVideo.pause();\r\n        }\r\n      });\r\n  \r\n      if(globalVideo.paused) {\r\n        if(globalVideo.duration && globalVideo.currentTime !== globalVideo.duration && globalVideo.currentTime > 0) {\r\n          onFrame();\r\n          onTimeUpdate();\r\n          video.classList.add('hide');\r\n        } else {\r\n          onPaused();\r\n        }\r\n      } else {\r\n        onPlay();\r\n      }\r\n    };\r\n\r\n    if(message.pFlags.is_outgoing) {\r\n      (divRound as any).onLoad = onLoad;\r\n      divRound.dataset.isOutgoing = '1';\r\n    } else {\r\n      onLoad();\r\n    }\r\n  } else {\r\n    video.autoplay = true; // для safari\r\n  }\r\n\r\n  let photoRes: ReturnType<typeof wrapPhoto>;\r\n  if(message) {\r\n    photoRes = wrapPhoto({\r\n      photo: doc, \r\n      message, \r\n      container, \r\n      boxWidth, \r\n      boxHeight, \r\n      withTail, \r\n      isOut, \r\n      lazyLoadQueue, \r\n      middleware,\r\n      withoutPreloader: true,\r\n      loadPromises,\r\n      autoDownloadSize: autoDownload?.photo,\r\n      size\r\n    });\r\n\r\n    res.thumb = photoRes;\r\n\r\n    if((!canAutoplay && doc.type !== 'gif') || onlyPreview) {\r\n      res.loadPromise = photoRes.loadPromises.full;\r\n      return res;\r\n    }\r\n\r\n    if(withTail) {\r\n      const foreignObject = (photoRes.images.thumb || photoRes.images.full).parentElement;\r\n      video.width = +foreignObject.getAttributeNS(null, 'width');\r\n      video.height = +foreignObject.getAttributeNS(null, 'height');\r\n      foreignObject.append(video);\r\n    }\r\n  } else { // * gifs masonry\r\n    const gotThumb = appDocsManager.getThumb(doc, false);\r\n    if(gotThumb) {\r\n      gotThumb.promise.then(() => {\r\n        video.poster = gotThumb.cacheContext.url;\r\n      });\r\n    }\r\n  }\r\n\r\n  if(!video.parentElement && container) {\r\n    (photoRes?.aspecter || container).append(video);\r\n  }\r\n\r\n  const cacheContext = appDownloadManager.getCacheContext(doc);\r\n\r\n  const isUpload = !!(message?.media as any)?.preloader;\r\n  if(isUpload) { // means upload\r\n    preloader = (message.media as any).preloader as ProgressivePreloader;\r\n    preloader.attach(container, false);\r\n    noAutoDownload = undefined;\r\n  } else if(!cacheContext.downloaded && !doc.supportsStreaming && !withoutPreloader) {\r\n    preloader = new ProgressivePreloader({\r\n      attachMethod: 'prepend'\r\n    });\r\n  } else if(doc.supportsStreaming) {\r\n    preloader = new ProgressivePreloader({\r\n      cancelable: false,\r\n      attachMethod: 'prepend'\r\n    });\r\n  }\r\n\r\n  const renderDeferred = deferredPromise<void>();\r\n  video.addEventListener('error', (e) => {\r\n    if(video.error.code !== 4) {\r\n      console.error(\"Error \" + video.error.code + \"; details: \" + video.error.message);\r\n    }\r\n    \r\n    if(preloader && !isUpload) {\r\n      preloader.detach();\r\n    }\r\n\r\n    if(!renderDeferred.isFulfilled) {\r\n      renderDeferred.resolve();\r\n    }\r\n  }, {once: true});\r\n\r\n  onMediaLoad(video).then(() => {\r\n    if(group) {\r\n      animationIntersector.addAnimation(video, group);\r\n    }\r\n\r\n    if(preloader && !isUpload) {\r\n      preloader.detach();\r\n    }\r\n\r\n    renderDeferred.resolve();\r\n  });\r\n\r\n  if(doc.type === 'video') {\r\n    video.addEventListener('timeupdate', () => {\r\n      spanTime.innerText = (video.duration - video.currentTime + '').toHHMMSS(false);\r\n    });\r\n\r\n    if(spanPlay) {\r\n      video.addEventListener('timeupdate', () => {\r\n        spanPlay.remove();\r\n      }, {once: true});\r\n    }\r\n  }\r\n\r\n  video.muted = true;\r\n  video.loop = true;\r\n  //video.play();\r\n  video.autoplay = true;\r\n\r\n  let loadPhotoThumbFunc = noAutoDownload && photoRes?.preloader?.loadFunc;\r\n  const load = () => {\r\n    if(preloader && noAutoDownload && !withoutPreloader) {\r\n      preloader.construct();\r\n      preloader.setManual();\r\n    }\r\n\r\n    let loadPromise: Promise<any> = Promise.resolve();\r\n    if((preloader && !isUpload) || withoutPreloader) {\r\n      if(!cacheContext.downloaded && !doc.supportsStreaming) {\r\n        const promise = loadPromise = appDocsManager.downloadDoc(doc, lazyLoadQueue?.queueId, noAutoDownload);\r\n        if(preloader) {\r\n          preloader.attach(container, false, promise);\r\n        }\r\n      } else if(doc.supportsStreaming) {\r\n        if(noAutoDownload) {\r\n          loadPromise = Promise.reject();\r\n        } else if(!cacheContext.downloaded && preloader) { // * check for uploading video\r\n          preloader.attach(container, false, null);\r\n          video.addEventListener(IS_SAFARI ? 'timeupdate' : 'canplay', () => {\r\n            preloader.detach();\r\n          }, {once: true});\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!noAutoDownload && loadPhotoThumbFunc) {\r\n      loadPhotoThumbFunc();\r\n      loadPhotoThumbFunc = null;\r\n    }\r\n\r\n    noAutoDownload = undefined;\r\n\r\n    loadPromise.then(() => {\r\n      if(middleware && !middleware()) {\r\n        renderDeferred.resolve();\r\n        return;\r\n      }\r\n\r\n      if(doc.type === 'round') {\r\n        appMediaPlaybackController.resolveWaitingForLoadMedia(message.peerId, message.mid, message.pFlags.is_scheduled);\r\n      }\r\n\r\n      renderImageFromUrl(video, cacheContext.url);\r\n    }, () => {});\r\n\r\n    return {download: loadPromise, render: renderDeferred};\r\n  };\r\n\r\n  if(preloader && !isUpload) {\r\n    preloader.setDownloadFunction(load);\r\n  }\r\n\r\n  /* if(doc.size >= 20e6 && !doc.downloaded) {\r\n    let downloadDiv = document.createElement('div');\r\n    downloadDiv.classList.add('download');\r\n\r\n    let span = document.createElement('span');\r\n    span.classList.add('btn-circle', 'tgico-download');\r\n    downloadDiv.append(span);\r\n\r\n    downloadDiv.addEventListener('click', () => {\r\n      downloadDiv.remove();\r\n      loadVideo();\r\n    });\r\n\r\n    container.prepend(downloadDiv);\r\n\r\n    return;\r\n  } */\r\n\r\n  if(doc.type === 'gif' && !canAutoplay) {\r\n    attachClickEvent(container, (e) => {\r\n      cancelEvent(e);\r\n      spanPlay.remove();\r\n      load();\r\n    }, {capture: true, once: true});\r\n  } else {\r\n    res.loadPromise = !lazyLoadQueue ? load().render : (lazyLoadQueue.push({div: container, load: () => load().render}), Promise.resolve());\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nrootScope.addEventListener('download_start', (docId) => {\r\n  const elements = Array.from(document.querySelectorAll(`.document[data-doc-id=\"${docId}\"]`)) as HTMLElement[];\r\n  elements.forEach(element => {\r\n    if(element.querySelector('.preloader-container.manual')) {\r\n      simulateClickEvent(element);\r\n    }\r\n  });\r\n});\r\n\r\nexport function wrapDocument({message, withTime, fontWeight, voiceAsMusic, showSender, searchContext, loadPromises, autoDownloadSize, lazyLoadQueue}: {\r\n  message: any, \r\n  withTime?: boolean,\r\n  fontWeight?: number,\r\n  voiceAsMusic?: boolean,\r\n  showSender?: boolean,\r\n  searchContext?: MediaSearchContext,\r\n  loadPromises?: Promise<any>[],\r\n  autoDownloadSize?: number,\r\n  lazyLoadQueue?: LazyLoadQueue\r\n}): HTMLElement {\r\n  if(!fontWeight) fontWeight = 500;\r\n  const noAutoDownload = autoDownloadSize === 0;\r\n\r\n  const doc = (message.media.document || message.media.webpage.document) as MyDocument;\r\n  const uploading = message.pFlags.is_outgoing && message.media?.preloader;\r\n  if(doc.type === 'audio' || doc.type === 'voice' || doc.type === 'round') {\r\n    const audioElement = new AudioElement();\r\n    audioElement.withTime = withTime;\r\n    audioElement.message = message;\r\n    audioElement.noAutoDownload = noAutoDownload;\r\n    audioElement.lazyLoadQueue = lazyLoadQueue;\r\n    audioElement.loadPromises = loadPromises;\r\n    \r\n    if(voiceAsMusic) audioElement.voiceAsMusic = voiceAsMusic;\r\n    if(searchContext) audioElement.searchContext = searchContext;\r\n    if(showSender) audioElement.showSender = showSender;\r\n    if(uploading) audioElement.preloader = message.media.preloader;\r\n\r\n    audioElement.dataset.fontWeight = '' + fontWeight;\r\n    audioElement.render();\r\n    return audioElement;\r\n  }\r\n\r\n  let extSplitted = doc.file_name ? doc.file_name.split('.') : '';\r\n  let ext = '';\r\n  ext = extSplitted.length > 1 && Array.isArray(extSplitted) ? \r\n    clearBadCharsAndTrim(extSplitted.pop().split(' ', 1)[0].toLowerCase()) : \r\n    'file';\r\n\r\n  let docDiv = document.createElement('div');\r\n  docDiv.classList.add('document', `ext-${ext}`);\r\n  docDiv.dataset.docId = '' + doc.id;\r\n\r\n  const icoDiv = document.createElement('div');\r\n  icoDiv.classList.add('document-ico');\r\n\r\n  const cacheContext = appDownloadManager.getCacheContext(doc);\r\n  if((doc.thumbs?.length || (message.pFlags.is_outgoing && cacheContext.url && doc.type === 'photo'))/*  && doc.mime_type !== 'image/gif' */) {\r\n    docDiv.classList.add('document-with-thumb');\r\n\r\n    let imgs: HTMLImageElement[] = [];\r\n    if(message.pFlags.is_outgoing) {\r\n      icoDiv.innerHTML = `<img src=\"${cacheContext.url}\">`;\r\n      imgs.push(icoDiv.firstElementChild as HTMLImageElement);\r\n    } else {\r\n      const wrapped = wrapPhoto({\r\n        photo: doc, \r\n        message: null, \r\n        container: icoDiv, \r\n        boxWidth: 54, \r\n        boxHeight: 54,\r\n        loadPromises,\r\n        withoutPreloader: true,\r\n        lazyLoadQueue,\r\n        size: appPhotosManager.choosePhotoSize(doc, 54, 54, true)\r\n      });\r\n      icoDiv.style.width = icoDiv.style.height = '';\r\n      if(wrapped.images.thumb) imgs.push(wrapped.images.thumb);\r\n      if(wrapped.images.full) imgs.push(wrapped.images.full);\r\n    }\r\n\r\n    imgs.forEach(img => img.classList.add('document-thumb'));\r\n  } else {\r\n    icoDiv.innerText = ext;\r\n  }\r\n\r\n  //let fileName = stringMiddleOverflow(doc.file_name || 'Unknown.file', 26);\r\n  let fileName = doc.fileName || 'Unknown.file';\r\n  const descriptionEl = document.createElement('div');\r\n  descriptionEl.classList.add('document-description');\r\n  const descriptionParts: (HTMLElement | string | DocumentFragment)[] = [formatBytes(doc.size)];\r\n  \r\n  if(withTime) {\r\n    descriptionParts.push(formatFullSentTime(message.date));\r\n  }\r\n\r\n  if(showSender) {\r\n    descriptionParts.push(appMessagesManager.wrapSenderToPeer(message));\r\n  }\r\n\r\n  docDiv.innerHTML = `\r\n  ${cacheContext.downloaded && !uploading ? '' : `<div class=\"document-download\"></div>`}\r\n  <div class=\"document-name\"></div>\r\n  <div class=\"document-size\"></div>\r\n  `;\r\n\r\n  const nameDiv = docDiv.querySelector('.document-name') as HTMLElement;\r\n  const middleEllipsisEl = new MiddleEllipsisElement();\r\n  middleEllipsisEl.dataset.fontWeight = '' + fontWeight;\r\n  middleEllipsisEl.innerHTML = fileName;\r\n\r\n  nameDiv.append(middleEllipsisEl);\r\n\r\n  if(showSender) {\r\n    nameDiv.append(appMessagesManager.wrapSentTime(message));\r\n  }\r\n\r\n  const sizeDiv = docDiv.querySelector('.document-size') as HTMLElement;\r\n  sizeDiv.append(...joinElementsWith(descriptionParts, ' · '));\r\n\r\n  docDiv.prepend(icoDiv);\r\n\r\n  if(!uploading && message.pFlags.is_outgoing) {\r\n    return docDiv;\r\n  }\r\n\r\n  let downloadDiv: HTMLElement, preloader: ProgressivePreloader = null;\r\n  const onLoad = () => {\r\n    if(downloadDiv) {\r\n      downloadDiv.classList.add('downloaded');\r\n      const _downloadDiv = downloadDiv;\r\n      setTimeout(() => {\r\n        _downloadDiv.remove();\r\n      }, 200);\r\n      downloadDiv = null;\r\n    }\r\n\r\n    if(preloader) {\r\n      preloader = null;\r\n    }\r\n  };\r\n\r\n  const load = (e?: Event) => {\r\n    const save = !e || e.isTrusted;\r\n    const doc = appDocsManager.getDoc(docDiv.dataset.docId);\r\n    let download: DownloadBlob;\r\n    const queueId = appImManager.chat.bubbles ? appImManager.chat.bubbles.lazyLoadQueue.queueId : undefined;\r\n    if(!save) {\r\n      download = appDocsManager.downloadDoc(doc, queueId);\r\n    } else if(doc.type === 'pdf') {\r\n      const canOpenAfter = appDocsManager.downloading.has(doc.id) || cacheContext.downloaded;\r\n      download = appDocsManager.downloadDoc(doc, queueId);\r\n      if(canOpenAfter) {\r\n        download.then(() => {\r\n          setTimeout(() => { // wait for preloader animation end\r\n            const url = appDownloadManager.getCacheContext(doc).url;\r\n            window.open(url);\r\n          }, rootScope.settings.animationsEnabled ? 250 : 0);\r\n        });\r\n      }\r\n    } else if(MEDIA_MIME_TYPES_SUPPORTED.has(doc.mime_type) && doc.thumbs?.length) {\r\n      download = appDocsManager.downloadDoc(doc, queueId);\r\n    } else {\r\n      download = appDocsManager.saveDocFile(doc, queueId);\r\n    }\r\n\r\n    if(downloadDiv) {\r\n      download.then(onLoad);\r\n      preloader.attach(downloadDiv, true, download);\r\n    }\r\n\r\n    return {download};\r\n  };\r\n\r\n  if(appDocsManager.downloading.has(doc.id)) {\r\n    downloadDiv = docDiv.querySelector('.document-download');\r\n    preloader = new ProgressivePreloader();\r\n    preloader.attach(downloadDiv, false, appDocsManager.downloading.get(doc.id));\r\n  } else if(!cacheContext.downloaded || uploading) {\r\n    downloadDiv = docDiv.querySelector('.document-download');\r\n    preloader = message.media.preloader as ProgressivePreloader;\r\n\r\n    if(!preloader) {\r\n      preloader = new ProgressivePreloader();\r\n\r\n      preloader.construct();\r\n      preloader.setManual();\r\n      preloader.attach(downloadDiv);\r\n      preloader.setDownloadFunction(load);\r\n\r\n      if(autoDownloadSize !== undefined && autoDownloadSize >= doc.size) {\r\n        simulateClickEvent(preloader.preloader);\r\n      }\r\n    } else {\r\n      preloader.attach(downloadDiv);\r\n      message.media.promise.then(onLoad);\r\n    }\r\n  }\r\n\r\n  attachClickEvent(docDiv, (e) => {\r\n    if(preloader) {\r\n      preloader.onClick(e);\r\n    } else {\r\n      load(e);\r\n    }\r\n  });\r\n\r\n  return docDiv;\r\n}\r\n\r\n/* function wrapMediaWithTail(photo: MyPhoto | MyDocument, message: {mid: number, message: string}, container: HTMLElement, boxWidth: number, boxHeight: number, isOut: boolean) {\r\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n  svg.classList.add('bubble__media-container', isOut ? 'is-out' : 'is-in');\r\n  \r\n  const foreignObject = document.createElementNS(\"http://www.w3.org/2000/svg\", 'foreignObject');\r\n\r\n  const gotThumb = appPhotosManager.getStrippedThumbIfNeeded(photo, true);\r\n  if(gotThumb) {\r\n    foreignObject.append(gotThumb.image);\r\n  }\r\n  appPhotosManager.setAttachmentSize(photo, foreignObject, boxWidth, boxHeight);\r\n  \r\n  const width = +foreignObject.getAttributeNS(null, 'width');\r\n  const height = +foreignObject.getAttributeNS(null, 'height');\r\n\r\n  svg.setAttributeNS(null, 'width', '' + width);\r\n  svg.setAttributeNS(null, 'height', '' + height);\r\n\r\n  svg.setAttributeNS(null, 'viewBox', '0 0 ' + width + ' ' + height);\r\n  svg.setAttributeNS(null, 'preserveAspectRatio', 'none');\r\n\r\n  const clipId = 'clip' + message.mid + '_' + nextRandomInt(9999);\r\n  svg.dataset.clipId = clipId;\r\n  \r\n  const defs = document.createElementNS(\"http://www.w3.org/2000/svg\", 'defs');\r\n  let clipPathHTML: string = '';\r\n  \r\n  if(message.message) {\r\n    //clipPathHTML += `<rect width=\"${width}\" height=\"${height}\"></rect>`;\r\n  } else {\r\n    if(isOut) {\r\n      clipPathHTML += `\r\n      <use href=\"#message-tail\" transform=\"translate(${width - 2}, ${height}) scale(-1, -1)\"></use>\r\n      <path />\r\n      `;\r\n    } else {\r\n      clipPathHTML += `\r\n      <use href=\"#message-tail\" transform=\"translate(2, ${height}) scale(1, -1)\"></use>\r\n      <path />\r\n      `;\r\n    }\r\n  }\r\n\r\n  defs.innerHTML = `<clipPath id=\"${clipId}\">${clipPathHTML}</clipPath>`;\r\n  \r\n  container.style.width = parseInt(container.style.width) - 9 + 'px';\r\n  container.classList.add('with-tail');\r\n\r\n  svg.append(defs, foreignObject);\r\n  container.append(svg);\r\n\r\n  let img = foreignObject.firstElementChild as HTMLImageElement;\r\n  if(!img) {\r\n    foreignObject.append(img = new Image());\r\n  }\r\n\r\n  return img;\r\n} */\r\n\r\nexport function wrapPhoto({photo, message, container, boxWidth, boxHeight, withTail, isOut, lazyLoadQueue, middleware, size, withoutPreloader, loadPromises, autoDownloadSize, noBlur, noThumb, noFadeIn, blurAfter}: {\r\n  photo: MyPhoto | MyDocument, \r\n  message?: any, \r\n  container: HTMLElement, \r\n  boxWidth?: number, \r\n  boxHeight?: number, \r\n  withTail?: boolean, \r\n  isOut?: boolean, \r\n  lazyLoadQueue?: LazyLoadQueue, \r\n  middleware?: () => boolean, \r\n  size?: PhotoSize,\r\n  withoutPreloader?: boolean,\r\n  loadPromises?: Promise<any>[],\r\n  autoDownloadSize?: number,\r\n  noBlur?: boolean,\r\n  noThumb?: boolean,\r\n  noFadeIn?: boolean,\r\n  blurAfter?: boolean,\r\n}) {\r\n  if(!((photo as MyPhoto).sizes || (photo as MyDocument).thumbs)) {\r\n    if(boxWidth && boxHeight && !size && photo._ === 'document') {\r\n      appPhotosManager.setAttachmentSize(photo, container, boxWidth, boxHeight, undefined, message);\r\n    }\r\n\r\n    return {\r\n      loadPromises: {\r\n        thumb: Promise.resolve(),\r\n        full: Promise.resolve()\r\n      },\r\n      images: {\r\n        thumb: null,\r\n        full: null\r\n      },\r\n      preloader: null,\r\n      aspecter: null\r\n    };\r\n  }\r\n\r\n  let noAutoDownload = autoDownloadSize === 0;\r\n\r\n  if(!size) {\r\n    if(boxWidth === undefined) boxWidth = mediaSizes.active.regular.width;\r\n    if(boxHeight === undefined) boxHeight = mediaSizes.active.regular.height;\r\n  }\r\n\r\n  container.classList.add('media-container');\r\n  let aspecter = container;\r\n\r\n  let isFit = true;\r\n  let loadThumbPromise: Promise<any> = Promise.resolve();\r\n  let thumbImage: HTMLImageElement;\r\n  let image: HTMLImageElement;\r\n  let cacheContext: ThumbCache;\r\n  const isGif = photo._ === 'document' && photo.mime_type === 'image/gif' && !size;\r\n  // if(withTail) {\r\n  //   image = wrapMediaWithTail(photo, message, container, boxWidth, boxHeight, isOut);\r\n  // } else {\r\n    image = new Image();\r\n\r\n    if(boxWidth && boxHeight && !size) { // !album\r\n      const set = appPhotosManager.setAttachmentSize(photo, container, boxWidth, boxHeight, undefined, message, undefined, isGif ? {\r\n        _: 'photoSize',\r\n        w: photo.w,\r\n        h: photo.h,\r\n        size: photo.size,\r\n        type: 'full'\r\n      } : undefined);\r\n      size = set.photoSize;\r\n      isFit = set.isFit;\r\n      cacheContext = appDownloadManager.getCacheContext(photo, size.type);\r\n\r\n      if(!isFit) {\r\n        aspecter = document.createElement('div');\r\n        aspecter.classList.add('media-container-aspecter');\r\n        aspecter.style.width = set.size.width + 'px';\r\n        aspecter.style.height = set.size.height + 'px';\r\n\r\n        const gotThumb = appPhotosManager.getStrippedThumbIfNeeded(photo, cacheContext, !noBlur, true);\r\n        if(gotThumb) {\r\n          loadThumbPromise = gotThumb.loadPromise;\r\n          const thumbImage = gotThumb.image; // local scope\r\n          thumbImage.classList.add('media-photo');\r\n          container.append(thumbImage);\r\n        } else {\r\n          const res = wrapPhoto({\r\n            container,\r\n            message,\r\n            photo,\r\n            boxWidth: 0,\r\n            boxHeight: 0,\r\n            size,\r\n            lazyLoadQueue,\r\n            isOut,\r\n            loadPromises,\r\n            middleware,\r\n            withoutPreloader,\r\n            withTail,\r\n            autoDownloadSize,\r\n            noBlur,\r\n            noThumb: true,\r\n            blurAfter: true\r\n            //noFadeIn: true\r\n          });\r\n          const thumbImage = res.images.full;\r\n          thumbImage.classList.add('media-photo', 'thumbnail');\r\n          //container.append(thumbImage);\r\n        }\r\n\r\n        container.classList.add('media-container-fitted');\r\n        container.append(aspecter);\r\n      }\r\n    } else {\r\n      if(!size) {\r\n        size = appPhotosManager.choosePhotoSize(photo, boxWidth, boxHeight, true);\r\n      }\r\n      \r\n      cacheContext = appDownloadManager.getCacheContext(photo, size?.type);\r\n    }\r\n\r\n    if(!noThumb) {\r\n      const gotThumb = appPhotosManager.getStrippedThumbIfNeeded(photo, cacheContext, !noBlur);\r\n      if(gotThumb) {\r\n        loadThumbPromise = Promise.all([loadThumbPromise, gotThumb.loadPromise]);\r\n        thumbImage = gotThumb.image;\r\n        thumbImage.classList.add('media-photo');\r\n        aspecter.append(thumbImage);\r\n      }\r\n    }\r\n  // }\r\n\r\n  image.classList.add('media-photo');\r\n  \r\n  //console.log('wrapPhoto downloaded:', photo, photo.downloaded, container);\r\n\r\n  const needFadeIn = (thumbImage || !cacheContext.downloaded) && rootScope.settings.animationsEnabled && !noFadeIn;\r\n\r\n  let preloader: ProgressivePreloader;\r\n  if(message?.media?.preloader && !withoutPreloader) { // means upload\r\n    preloader = message.media.preloader;\r\n    preloader.attach(container);\r\n    noAutoDownload = undefined;\r\n  } else if(!cacheContext.downloaded) {\r\n    preloader = new ProgressivePreloader({\r\n      attachMethod: 'prepend'\r\n    });\r\n  }\r\n\r\n  const getDownloadPromise = () => {\r\n    const promise = isGif && !size ? \r\n      appDocsManager.downloadDoc(photo, /* undefined,  */lazyLoadQueue?.queueId) : \r\n      appPhotosManager.preloadPhoto(photo, size, lazyLoadQueue?.queueId, noAutoDownload);\r\n\r\n    return promise;\r\n  };\r\n\r\n  const renderOnLoad = (url: string) => {\r\n    return renderImageWithFadeIn(container, image, url, needFadeIn, aspecter, thumbImage);\r\n  };\r\n\r\n  const onLoad = (): Promise<void> => {\r\n    if(middleware && !middleware()) return Promise.resolve();\r\n\r\n    if(blurAfter) {\r\n      return blur(cacheContext.url, 12).then(url => {\r\n        return renderOnLoad(url);\r\n      });\r\n    }\r\n\r\n    return renderOnLoad(cacheContext.url);\r\n  };\r\n\r\n  let loadPromise: Promise<any>;\r\n  const canAttachPreloader = (\r\n    (size as PhotoSize.photoSize).w >= 150 && \r\n    (size as PhotoSize.photoSize).h >= 150\r\n    ) || noAutoDownload;\r\n  const load = () => {\r\n    if(noAutoDownload && !withoutPreloader && preloader) {\r\n      preloader.construct();\r\n      preloader.setManual();\r\n    }\r\n\r\n    const promise = getDownloadPromise();\r\n\r\n    if(preloader && \r\n      !cacheContext.downloaded && \r\n      !withoutPreloader && \r\n      canAttachPreloader\r\n    ) {\r\n      preloader.attach(container, false, promise);\r\n    }\r\n\r\n    noAutoDownload = undefined;\r\n\r\n    const renderPromise = promise.then(onLoad);\r\n    renderPromise.catch(() => {});\r\n    return {download: promise, render: renderPromise};\r\n  };\r\n\r\n  if(preloader) {\r\n    preloader.setDownloadFunction(load);\r\n  }\r\n  \r\n  if(cacheContext.downloaded) {\r\n    loadThumbPromise = loadPromise = load().render;\r\n  } else {\r\n    if(!lazyLoadQueue) loadPromise = load().render;\r\n    /* else if(noAutoDownload) {\r\n      preloader.construct();\r\n      preloader.setManual();\r\n      preloader.attach(container);\r\n    } */ else lazyLoadQueue.push({div: container, load: () => load().download});\r\n  }\r\n\r\n  if(loadPromises && loadThumbPromise) {\r\n    loadPromises.push(loadThumbPromise);\r\n  }\r\n\r\n  return {\r\n    loadPromises: {\r\n      thumb: loadThumbPromise,\r\n      full: loadPromise || Promise.resolve()\r\n    },\r\n    images: {\r\n      thumb: thumbImage,\r\n      full: image\r\n    },\r\n    preloader,\r\n    aspecter\r\n  };\r\n}\r\n\r\nexport function renderImageWithFadeIn(container: HTMLElement, \r\n  image: HTMLImageElement, \r\n  url: string, \r\n  needFadeIn: boolean, \r\n  aspecter = container,\r\n  thumbImage?: HTMLImageElement\r\n) {\r\n  if(needFadeIn) {\r\n    image.classList.add('fade-in');\r\n  }\r\n\r\n  return new Promise<void>((resolve) => {\r\n    /* if(photo._ === 'document') {\r\n      console.error('wrapPhoto: will render document', photo, size, cacheContext);\r\n      return resolve();\r\n    } */\r\n\r\n    renderImageFromUrl(image, url, () => {\r\n      sequentialDom.mutateElement(container, () => {\r\n        aspecter.append(image);\r\n\r\n        fastRaf(() => {\r\n          resolve();\r\n        });\r\n\r\n        if(needFadeIn) {\r\n          image.addEventListener('animationend', () => {\r\n            sequentialDom.mutate(() => {\r\n              image.classList.remove('fade-in');\r\n  \r\n              if(thumbImage) {\r\n                thumbImage.remove();\r\n              }\r\n            });\r\n          }, {once: true});\r\n        }\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\n// export function renderImageWithFadeIn(container: HTMLElement, \r\n//   image: HTMLImageElement, \r\n//   url: string, \r\n//   needFadeIn: boolean, \r\n//   aspecter = container,\r\n//   thumbImage?: HTMLImageElement\r\n// ) {\r\n//   if(needFadeIn) {\r\n//     // image.classList.add('fade-in-new', 'not-yet');\r\n//     image.classList.add('fade-in');\r\n//   }\r\n\r\n//   return new Promise<void>((resolve) => {\r\n//     /* if(photo._ === 'document') {\r\n//       console.error('wrapPhoto: will render document', photo, size, cacheContext);\r\n//       return resolve();\r\n//     } */\r\n\r\n//     renderImageFromUrl(image, url, () => {\r\n//       sequentialDom.mutateElement(container, () => {\r\n//         aspecter.append(image);\r\n//         // (needFadeIn ? getHeavyAnimationPromise() : Promise.resolve()).then(() => {\r\n\r\n//         // fastRaf(() => {\r\n//           resolve();\r\n//         // });\r\n\r\n//         if(needFadeIn) {\r\n//           fastRaf(() => {\r\n//             /* if(!image.isConnected) {\r\n//               alert('aaaa');\r\n//             } */\r\n//             // fastRaf(() => {\r\n//               image.classList.remove('not-yet');\r\n//             // });\r\n//           });\r\n\r\n//           image.addEventListener('transitionend', () => {\r\n//             sequentialDom.mutate(() => {\r\n//               image.classList.remove('fade-in-new');\r\n  \r\n//               if(thumbImage) {\r\n//                 thumbImage.remove();\r\n//               }\r\n//             });\r\n//           }, {once: true});\r\n//         }\r\n//       // });\r\n//       });\r\n//     });\r\n//   });\r\n// }\r\n\r\nexport function wrapStickerAnimation({\r\n  size,\r\n  doc,\r\n  middleware,\r\n  target,\r\n  side,\r\n  skipRatio,\r\n  play\r\n}: {\r\n  size: number,\r\n  doc: MyDocument,\r\n  middleware?: () => boolean,\r\n  target: HTMLElement,\r\n  side: 'left' | 'center' | 'right',\r\n  skipRatio?: number,\r\n  play: boolean\r\n}) {\r\n  const animationDiv = document.createElement('div');\r\n  animationDiv.classList.add('emoji-animation');\r\n\r\n  // const size = 280;\r\n  animationDiv.style.width = size + 'px';\r\n  animationDiv.style.height = size + 'px';\r\n\r\n  const stickerPromise = wrapSticker({\r\n    div: animationDiv,\r\n    doc,\r\n    middleware,\r\n    withThumb: false,\r\n    needFadeIn: false,\r\n    loop: false,\r\n    width: size,\r\n    height: size,\r\n    play,\r\n    group: 'none',\r\n    skipRatio\r\n  }).then(animation => {\r\n    assumeType<RLottiePlayer>(animation);\r\n    animation.addEventListener('enterFrame', (frameNo) => {\r\n      if(frameNo === animation.maxFrame) {\r\n        animation.remove();\r\n        animationDiv.remove();\r\n        appImManager.chat.bubbles.scrollable.container.removeEventListener('scroll', onScroll);\r\n      }\r\n    });\r\n\r\n    if(IS_VIBRATE_SUPPORTED) {\r\n      animation.addEventListener('firstFrame', () => {\r\n        navigator.vibrate(100);\r\n      }, {once: true});\r\n    }\r\n\r\n    return animation;\r\n  });\r\n\r\n  const generateRandomSigned = (max: number) => {\r\n    const r = Math.random() * max * 2;\r\n    return r > max ? -r % max : r;\r\n  };\r\n\r\n  const randomOffsetX = generateRandomSigned(16);\r\n  const randomOffsetY = generateRandomSigned(4);\r\n  const stableOffsetX = size / 8 * (side === 'right' ? 1 : -1);\r\n  const setPosition = () => {\r\n    if(!isInDOM(target)) {\r\n      return;\r\n    }\r\n    \r\n    const rect = target.getBoundingClientRect();\r\n    /* const boxWidth = Math.max(rect.width, rect.height);\r\n    const boxHeight = Math.max(rect.width, rect.height);\r\n    const x = rect.left + ((boxWidth - size) / 2);\r\n    const y = rect.top + ((boxHeight - size) / 2); */\r\n\r\n    const rectX = side === 'right' ? rect.right : rect.left;\r\n\r\n    const addOffsetX = side === 'center' ? (rect.width - size) / 2 : (side === 'right' ? -size : 0) + stableOffsetX + randomOffsetX;\r\n    const x = rectX + addOffsetX;\r\n    // const y = rect.bottom - size + size / 4;\r\n    const y = rect.top + ((rect.height - size) / 2) + (side === 'center' ? 0 : randomOffsetY);\r\n    // animationDiv.style.transform = `translate(${x}px, ${y}px)`;\r\n    animationDiv.style.top = y + 'px';\r\n    animationDiv.style.left = x + 'px';\r\n  };\r\n\r\n  const onScroll = throttleWithRaf(setPosition);\r\n\r\n  appImManager.chat.bubbles.scrollable.container.addEventListener('scroll', onScroll);\r\n\r\n  setPosition();\r\n\r\n  appImManager.emojiAnimationContainer.append(animationDiv);\r\n\r\n  return {animationDiv, stickerPromise};\r\n}\r\n\r\nexport function wrapSticker({doc, div, middleware, lazyLoadQueue, group, play, onlyThumb, emoji, width, height, withThumb, loop, loadPromises, needFadeIn, needUpscale, skipRatio, static: asStatic}: {\r\n  doc: MyDocument, \r\n  div: HTMLElement, \r\n  middleware?: () => boolean, \r\n  lazyLoadQueue?: LazyLoadQueue, \r\n  group?: string, \r\n  play?: boolean, \r\n  onlyThumb?: boolean,\r\n  emoji?: string,\r\n  width?: number,\r\n  height?: number,\r\n  withThumb?: boolean,\r\n  loop?: boolean,\r\n  loadPromises?: Promise<any>[],\r\n  needFadeIn?: boolean,\r\n  needUpscale?: boolean,\r\n  skipRatio?: number,\r\n  static?: boolean\r\n}): Promise<RLottiePlayer | void> {\r\n  const stickerType = doc.sticker;\r\n  if(stickerType === 1) {\r\n    asStatic = true;\r\n  }\r\n\r\n  if(!width) {\r\n    width = !emoji ? 200 : undefined;\r\n  }\r\n\r\n  if(!height) {\r\n    height = !emoji ? 200 : undefined;\r\n  }\r\n\r\n  if(stickerType === 2) {\r\n    //LottieLoader.loadLottie();\r\n    LottieLoader.loadLottieWorkers();\r\n  }\r\n  \r\n  if(!stickerType) {\r\n    console.error('wrong doc for wrapSticker!', doc);\r\n    throw new Error('wrong doc for wrapSticker!');\r\n  }\r\n\r\n  div.dataset.docId = '' + doc.id;\r\n  div.classList.add('media-sticker-wrapper');\r\n\r\n  /* if(stickerType === 3) {\r\n    const videoRes = wrapVideo({\r\n      doc,\r\n      boxWidth: width,\r\n      boxHeight: height,\r\n      container: div,\r\n      group,\r\n      lazyLoadQueue,\r\n      middleware,\r\n      withoutPreloader: true,\r\n      loadPromises,\r\n      noPlayButton: true,\r\n      noInfo: true\r\n    });\r\n\r\n    if(videoRes.thumb) {\r\n      if(videoRes.thumb.images.thumb) {\r\n        videoRes.thumb.images.thumb.classList.add('media-sticker', 'thumbnail');\r\n      }\r\n\r\n      if(videoRes.thumb.images.full) {\r\n        videoRes.thumb.images.full.classList.add('media-sticker');\r\n      }\r\n    }\r\n\r\n    return videoRes.loadPromise;\r\n  } */\r\n  \r\n  //console.log('wrap sticker', doc, div, onlyThumb);\r\n\r\n  let cacheContext: ThumbCache;\r\n  if(asStatic && stickerType !== 1) {\r\n    const thumb = appPhotosManager.choosePhotoSize(doc, width, height, false) as PhotoSize.photoSize;\r\n    cacheContext = appDownloadManager.getCacheContext(doc, thumb.type);\r\n  } else {\r\n    cacheContext = appDownloadManager.getCacheContext(doc);\r\n  }\r\n\r\n  const toneIndex = emoji ? getEmojiToneIndex(emoji) : -1;\r\n  const downloaded = cacheContext.downloaded && !needFadeIn;\r\n\r\n  const isAnimated = !asStatic && (stickerType === 2 || stickerType === 3);\r\n  const isThumbNeededForType = isAnimated;\r\n  \r\n  let loadThumbPromise = deferredPromise<void>();\r\n  let haveThumbCached = false;\r\n  if((\r\n      doc.thumbs?.length || \r\n      doc.stickerCachedThumbs\r\n    ) && \r\n    !div.firstElementChild && (\r\n      !downloaded || \r\n      isThumbNeededForType ||  \r\n      onlyThumb\r\n    ) && withThumb !== false/*  && doc.thumbs[0]._ !== 'photoSizeEmpty' */\r\n  ) {\r\n    let thumb = doc.stickerCachedThumbs && doc.stickerCachedThumbs[toneIndex] || doc.thumbs[0];\r\n    \r\n    //console.log('wrap sticker', thumb, div);\r\n\r\n    let thumbImage: HTMLImageElement;\r\n    const afterRender = () => {\r\n      if(!div.childElementCount) {\r\n        thumbImage.classList.add('media-sticker', 'thumbnail');\r\n        \r\n        sequentialDom.mutateElement(div, () => {\r\n          div.append(thumbImage);\r\n          loadThumbPromise.resolve();\r\n        });\r\n      }\r\n    };\r\n\r\n    if('url' in thumb) {\r\n      thumbImage = new Image();\r\n      renderImageFromUrl(thumbImage, thumb.url, afterRender);\r\n      haveThumbCached = true;\r\n    } else if('bytes' in thumb) {\r\n      if(thumb._ === 'photoPathSize') {\r\n        if(thumb.bytes.length) {\r\n          const d = appPhotosManager.getPathFromPhotoPathSize(thumb);\r\n          div.innerHTML = `<svg class=\"rlottie-vector media-sticker thumbnail\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 ${doc.w || 512} ${doc.h || 512}\" xml:space=\"preserve\">\r\n            <path d=\"${d}\"/>\r\n          </svg>`;\r\n        } else {\r\n          thumb = doc.thumbs.find(t => (t as PhotoSize.photoStrippedSize).bytes?.length) || thumb;\r\n        }\r\n      } \r\n      \r\n      if(thumb && thumb._ !== 'photoPathSize' && toneIndex <= 0) {\r\n        thumbImage = new Image();\r\n\r\n        if((IS_WEBP_SUPPORTED || doc.pFlags.stickerThumbConverted || cacheContext.url)/*  && false */) {\r\n          renderImageFromUrl(thumbImage, appPhotosManager.getPreviewURLFromThumb(doc, thumb as PhotoSize.photoStrippedSize, true), afterRender);\r\n          haveThumbCached = true;\r\n        } else {\r\n          webpWorkerController.convert('' + doc.id, (thumb as PhotoSize.photoStrippedSize).bytes as Uint8Array).then(bytes => {\r\n            (thumb as PhotoSize.photoStrippedSize).bytes = bytes;\r\n            doc.pFlags.stickerThumbConverted = true;\r\n            \r\n            if(middleware && !middleware()) return;\r\n  \r\n            if(!div.childElementCount) {\r\n              renderImageFromUrl(thumbImage, appPhotosManager.getPreviewURLFromThumb(doc, thumb as PhotoSize.photoStrippedSize, true), afterRender);\r\n            }\r\n          }).catch(() => {});\r\n        }\r\n      }\r\n    } else if(((stickerType === 2 && toneIndex <= 0) || stickerType === 3) && (withThumb || onlyThumb)) {\r\n      thumbImage = new Image();\r\n\r\n      const load = () => {\r\n        if(div.childElementCount || (middleware && !middleware())) return;\r\n\r\n        const r = () => {\r\n          if(div.childElementCount || (middleware && !middleware())) return;\r\n          renderImageFromUrl(thumbImage, cacheContext.url, afterRender);\r\n        };\r\n  \r\n        if(cacheContext.url) {\r\n          r();\r\n          return Promise.resolve();\r\n        } else {\r\n          return appDocsManager.getThumbURL(doc, thumb as PhotoSize.photoStrippedSize).promise.then(r);\r\n        }\r\n      };\r\n      \r\n      if(lazyLoadQueue && onlyThumb) {\r\n        lazyLoadQueue.push({div, load});\r\n        return Promise.resolve();\r\n      } else {\r\n        load();\r\n\r\n        if((thumb as any).url) {\r\n          haveThumbCached = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if(loadPromises && haveThumbCached) {\r\n    loadPromises.push(loadThumbPromise);\r\n  }\r\n\r\n  if(onlyThumb) { // for sticker panel\r\n    return Promise.resolve();\r\n  }\r\n  \r\n  const load = async() => {\r\n    if(middleware && !middleware()) return;\r\n\r\n    if(stickerType === 2 && !asStatic) {\r\n      /* if(doc.id === '1860749763008266301') {\r\n        console.log('loaded sticker:', doc, div);\r\n      } */\r\n\r\n      //await new Promise((resolve) => setTimeout(resolve, 500));\r\n      //return;\r\n\r\n      //console.time('download sticker' + doc.id);\r\n\r\n      //appDocsManager.downloadDocNew(doc.id).promise.then(res => res.json()).then(async(json) => {\r\n      //fetch(doc.url).then(res => res.json()).then(async(json) => {\r\n      return await appDocsManager.downloadDoc(doc, /* undefined,  */lazyLoadQueue?.queueId)\r\n      .then(async(blob) => {\r\n        //console.timeEnd('download sticker' + doc.id);\r\n        //console.log('loaded sticker:', doc, div/* , blob */);\r\n        if(middleware && !middleware()) {\r\n          throw new Error('wrapSticker 2 middleware');\r\n        }\r\n\r\n        let animation = await LottieLoader.loadAnimationWorker({\r\n          container: div,\r\n          loop: loop && !emoji,\r\n          autoplay: play,\r\n          animationData: blob,\r\n          width,\r\n          height,\r\n          name: 'doc' + doc.id,\r\n          needUpscale,\r\n          skipRatio,\r\n          toneIndex\r\n        }, group, middleware);\r\n\r\n        //const deferred = deferredPromise<void>();\r\n  \r\n        animation.addEventListener('firstFrame', () => {\r\n          const element = div.firstElementChild;\r\n          if(needFadeIn !== false) {\r\n            needFadeIn = (needFadeIn || !element || element.tagName === 'svg') && rootScope.settings.animationsEnabled;\r\n          }\r\n\r\n          const cb = () => {\r\n            if(element && element !== animation.canvas) {\r\n              element.remove();\r\n            }\r\n          };\r\n\r\n          if(!needFadeIn) {\r\n            if(element) {\r\n              sequentialDom.mutate(cb);\r\n            }\r\n          } else {\r\n            sequentialDom.mutate(() => {\r\n              animation.canvas.classList.add('fade-in');\r\n              if(element) {\r\n                element.classList.add('fade-out');\r\n              }\r\n  \r\n              animation.canvas.addEventListener('animationend', () => {\r\n                sequentialDom.mutate(() => {\r\n                  animation.canvas.classList.remove('fade-in');\r\n                  cb();\r\n                });\r\n              }, {once: true});\r\n            });\r\n          }\r\n\r\n          if(withThumb !== false) {\r\n            appDocsManager.saveLottiePreview(doc, animation.canvas, toneIndex);\r\n          }\r\n\r\n          //deferred.resolve();\r\n        }, {once: true});\r\n  \r\n        if(emoji) {\r\n          const data: SendMessageEmojiInteractionData = {\r\n            a: [],\r\n            v: 1\r\n          };\r\n\r\n          let sendInteractionThrottled: () => void;\r\n\r\n          appStickersManager.preloadAnimatedEmojiStickerAnimation(emoji);\r\n\r\n          attachClickEvent(div, async(e) => {\r\n            cancelEvent(e);\r\n            const animation = LottieLoader.getAnimation(div);\r\n  \r\n            if(animation.paused) {\r\n              const doc = appStickersManager.getAnimatedEmojiSoundDocument(emoji);\r\n              if(doc) {\r\n                const audio = document.createElement('audio');\r\n                audio.style.display = 'none';\r\n                div.parentElement.append(audio);\r\n\r\n                try {\r\n                  await appDocsManager.downloadDoc(doc);\r\n\r\n                  const cacheContext = appDownloadManager.getCacheContext(doc);\r\n                  audio.src = cacheContext.url;\r\n                  audio.play();\r\n                  await onMediaLoad(audio, undefined, true);\r\n                  \r\n                  audio.addEventListener('ended', () => {\r\n                    audio.src = '';\r\n                    audio.remove();\r\n                  }, {once: true});\r\n                } catch(err) {\r\n                  \r\n                }\r\n              }\r\n\r\n              animation.autoplay = true;\r\n              animation.restart();\r\n            }\r\n\r\n            const peerId = appImManager.chat.peerId;\r\n            if(!peerId.isUser()) {\r\n              return;\r\n            }\r\n\r\n            const doc = appStickersManager.getAnimatedEmojiSticker(emoji, true);\r\n            if(!doc) {\r\n              return;\r\n            }\r\n            \r\n            const bubble = findUpClassName(div, 'bubble');\r\n            const isOut = bubble.classList.contains('is-out');\r\n\r\n            const {animationDiv} = wrapStickerAnimation({\r\n              doc,\r\n              middleware,\r\n              side: isOut ? 'right' : 'left',\r\n              size: 280,\r\n              target: div,\r\n              play: true\r\n            });\r\n\r\n            if(bubble) {\r\n              if(isOut) {\r\n                animationDiv.classList.add('is-out');\r\n              } else {\r\n                animationDiv.classList.add('is-in');\r\n              }\r\n            }\r\n\r\n            if(!sendInteractionThrottled) {\r\n              sendInteractionThrottled = throttle(() => {\r\n                const length = data.a.length;\r\n                if(!length) {\r\n                  return;\r\n                }\r\n      \r\n                const firstTime = data.a[0].t;\r\n      \r\n                data.a.forEach((a) => {\r\n                  a.t = (a.t - firstTime) / 1000;\r\n                });\r\n      \r\n                const bubble = findUpClassName(div, 'bubble');\r\n                appMessagesManager.setTyping(appImManager.chat.peerId, {\r\n                  _: 'sendMessageEmojiInteraction',\r\n                  msg_id: appMessagesIdsManager.getServerMessageId(+bubble.dataset.mid),\r\n                  emoticon: emoji,\r\n                  interaction: {\r\n                    _: 'dataJSON',\r\n                    data: JSON.stringify(data)\r\n                  }\r\n                }, true);\r\n      \r\n                data.a.length = 0;\r\n              }, 1000, false);\r\n            }\r\n\r\n            // using a trick here: simulated event from interlocutor's interaction won't fire ours\r\n            if(e.isTrusted) {\r\n              data.a.push({\r\n                i: 1,\r\n                t: Date.now()\r\n              });\r\n    \r\n              sendInteractionThrottled();\r\n            }\r\n          });\r\n        }\r\n\r\n        return animation;\r\n\r\n        //return deferred;\r\n        //await new Promise((resolve) => setTimeout(resolve, 5e3));\r\n      });\r\n\r\n      //console.timeEnd('render sticker' + doc.id);\r\n    } else if(asStatic || stickerType === 3) {\r\n      let media: HTMLElement;\r\n      if(asStatic) {\r\n        media = new Image();\r\n      } else {\r\n        media = document.createElement('video');\r\n        media.setAttribute('playsinline', 'true');\r\n        (media as HTMLVideoElement).muted = true;\r\n\r\n        if(play) {\r\n          (media as HTMLVideoElement).autoplay = true;\r\n          (media as HTMLVideoElement).loop = true;\r\n        }\r\n      }\r\n\r\n      const thumbImage = div.firstElementChild !== media && div.firstElementChild;\r\n      if(needFadeIn !== false) {\r\n        needFadeIn = (needFadeIn || !downloaded || (asStatic ? thumbImage : (!thumbImage || thumbImage.tagName === 'svg'))) && rootScope.settings.animationsEnabled;\r\n      }\r\n\r\n      media.classList.add('media-sticker');\r\n\r\n      if(needFadeIn) {\r\n        media.classList.add('fade-in');\r\n      }\r\n\r\n      return new Promise<void>((resolve, reject) => {\r\n        const r = () => {\r\n          if(middleware && !middleware()) return resolve();\r\n  \r\n          const onLoad = () => {\r\n            sequentialDom.mutateElement(div, () => {\r\n              div.append(media);\r\n              if(thumbImage) {\r\n                thumbImage.classList.add('fade-out');\r\n              }\r\n\r\n              if(stickerType === 3 && !appDocsManager.isSavingLottiePreview(doc, toneIndex)) {\r\n                // const perf = performance.now();\r\n                assumeType<HTMLVideoElement>(media);\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = width * window.devicePixelRatio;\r\n                canvas.height = height * window.devicePixelRatio;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(media, 0, 0, canvas.width, canvas.height);\r\n                appDocsManager.saveLottiePreview(doc, canvas, toneIndex);\r\n                // console.log('perf', performance.now() - perf);\r\n              }\r\n\r\n              if(stickerType === 3 && group) {\r\n                animationIntersector.addAnimation(media as HTMLVideoElement, group);\r\n              }\r\n\r\n              resolve();\r\n\r\n              if(needFadeIn) {\r\n                media.addEventListener('animationend', () => {\r\n                  media.classList.remove('fade-in');\r\n                  if(thumbImage) {\r\n                    thumbImage.remove();\r\n                  }\r\n                }, {once: true});\r\n              }\r\n            });\r\n          };\r\n\r\n          if(asStatic) {\r\n            renderImageFromUrl(media, cacheContext.url, onLoad);\r\n          } else {\r\n            (media as HTMLVideoElement).src = cacheContext.url;\r\n            onMediaLoad(media as HTMLVideoElement).then(onLoad);\r\n          }\r\n        };\r\n\r\n        if(cacheContext.url) r();\r\n        else {\r\n          let promise: Promise<any>;\r\n          if(stickerType === 2 && asStatic) {\r\n            const thumb = appPhotosManager.choosePhotoSize(doc, width, height, false) as PhotoSize.photoSize;\r\n            promise = appDocsManager.getThumbURL(doc, thumb).promise\r\n          } else {\r\n            promise = appDocsManager.downloadDoc(doc, /* undefined,  */lazyLoadQueue?.queueId);\r\n          }\r\n            \r\n          promise.then(r, resolve);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const loadPromise: Promise<RLottiePlayer | void> = lazyLoadQueue && (!downloaded || isAnimated) ? \r\n    (lazyLoadQueue.push({div, load}), Promise.resolve()) : \r\n    load();\r\n\r\n  if(downloaded && (asStatic/*  || stickerType === 3 */)) {\r\n    loadThumbPromise = loadPromise as any;\r\n    if(loadPromises) {\r\n      loadPromises.push(loadThumbPromise);\r\n    }\r\n  }\r\n\r\n  return loadPromise;\r\n}\r\n\r\nexport async function wrapStickerSetThumb({set, lazyLoadQueue, container, group, autoplay, width, height}: {\r\n  set: StickerSet.stickerSet,\r\n  lazyLoadQueue: LazyLoadQueue,\r\n  container: HTMLElement,\r\n  group: string,\r\n  autoplay: boolean,\r\n  width: number,\r\n  height: number\r\n}) {\r\n  if(set.thumbs?.length) {\r\n    container.classList.add('media-sticker-wrapper');\r\n    lazyLoadQueue.push({\r\n      div: container,\r\n      load: () => {\r\n        const downloadOptions = appStickersManager.getStickerSetThumbDownloadOptions(set);\r\n        const promise = appDownloadManager.download(downloadOptions);\r\n\r\n        if(set.pFlags.animated && !set.pFlags.videos) {\r\n          return promise\r\n          .then((blob) => {\r\n            lottieLoader.loadAnimationWorker({\r\n              container,\r\n              loop: true,\r\n              autoplay,\r\n              animationData: blob,\r\n              width,\r\n              height,\r\n              needUpscale: true,\r\n              name: 'setThumb' + set.id\r\n            }, group);\r\n          });\r\n        } else {\r\n          let media: HTMLElement;\r\n          if(set.pFlags.videos) {\r\n            media = document.createElement('video');\r\n            media.setAttribute('playsinline', 'true');\r\n            (media as HTMLVideoElement).autoplay = true;\r\n            (media as HTMLVideoElement).muted = true;\r\n            (media as HTMLVideoElement).loop = true;\r\n          } else {\r\n            media = new Image();\r\n          }\r\n\r\n          media.classList.add('media-sticker');\r\n  \r\n          return promise.then(blob => {\r\n            renderImageFromUrl(media, URL.createObjectURL(blob), () => {\r\n              container.append(media);\r\n            });\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  const promise = appStickersManager.getStickerSet(set);\r\n  const stickerSet = await promise;\r\n  if(stickerSet.documents[0]._ !== 'documentEmpty') { // as thumb will be used first sticker\r\n    wrapSticker({\r\n      doc: stickerSet.documents[0],\r\n      div: container, \r\n      group: group,\r\n      lazyLoadQueue\r\n    }); // kostil\r\n  }\r\n}\r\n\r\nexport function wrapStickerToRow({doc, row, size}: {\r\n  doc: MyDocument,\r\n  row: Row,\r\n  size?: 'small' | 'large',\r\n}) {\r\n  const previousMedia = row.media;\r\n  const media = row.createMedia('small');\r\n\r\n  if(previousMedia) {\r\n    media.classList.add('hide');\r\n  }\r\n\r\n  const loadPromises: Promise<any>[] = previousMedia ? [] : undefined;\r\n\r\n  const _size = size === 'small' ? 32 : 48;\r\n  const result = wrapSticker({\r\n    div: media,\r\n    doc: doc,\r\n    width: _size,\r\n    height: _size,\r\n    loadPromises\r\n  });\r\n\r\n  loadPromises && Promise.all(loadPromises).then(() => {\r\n    media.classList.remove('hide');\r\n    previousMedia.remove();\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nexport function wrapLocalSticker({emoji, width, height}: {\r\n  doc?: MyDocument,\r\n  url?: string,\r\n  emoji?: string,\r\n  width: number,\r\n  height: number,\r\n}) {\r\n  const container = document.createElement('div');\r\n\r\n  const doc = appStickersManager.getAnimatedEmojiSticker(emoji);\r\n  if(doc) {\r\n    wrapSticker({\r\n      doc,\r\n      div: container,\r\n      loop: false,\r\n      play: true,\r\n      width,\r\n      height,\r\n      emoji\r\n    }).then(() => {\r\n      // this.animation = player;\r\n    });\r\n  } else {\r\n    container.classList.add('media-sticker-wrapper');\r\n  }\r\n\r\n  return {container};\r\n}\r\n\r\nexport function wrapReply(title: Parameters<ReplyContainer['fill']>[0], subtitle: Parameters<ReplyContainer['fill']>[1], message?: any) {\r\n  const replyContainer = new ReplyContainer('reply');\r\n  replyContainer.fill(title, subtitle, message);\r\n  /////////console.log('wrapReply', title, subtitle, media);\r\n  return replyContainer.container;\r\n}\r\n\r\nexport function prepareAlbum(options: {\r\n  container: HTMLElement,\r\n  items: {w: number, h: number}[],\r\n  maxWidth: number,\r\n  minWidth: number,\r\n  spacing: number,\r\n  maxHeight?: number,\r\n  forMedia?: true\r\n}) {\r\n  const layouter = new Layouter(options.items, options.maxWidth, options.minWidth, options.spacing, options.maxHeight);\r\n  const layout = layouter.layout();\r\n\r\n  const widthItem = layout.find(item => item.sides & RectPart.Right);\r\n  const width = widthItem.geometry.width + widthItem.geometry.x;\r\n\r\n  const heightItem = layout.find(item => item.sides & RectPart.Bottom);\r\n  const height = heightItem.geometry.height + heightItem.geometry.y;\r\n\r\n  const container = options.container;\r\n  container.style.width = width + 'px';\r\n  container.style.height = height + 'px';\r\n  const children = container.children;\r\n\r\n  layout.forEach(({geometry, sides}, idx) => {\r\n    let div: HTMLElement;\r\n    div = children[idx] as HTMLElement;\r\n    if(!div) {\r\n      div = document.createElement('div');\r\n      container.append(div);\r\n    }\r\n\r\n    div.classList.add('album-item', 'grouped-item');\r\n\r\n    div.style.width = (geometry.width / width * 100) + '%';\r\n    div.style.height = (geometry.height / height * 100) + '%';\r\n    div.style.top = (geometry.y / height * 100) + '%';\r\n    div.style.left = (geometry.x / width * 100) + '%';\r\n\r\n    if(sides & RectPart.Left && sides & RectPart.Top) {\r\n      div.style.borderTopLeftRadius = 'inherit';\r\n    }\r\n\r\n    if(sides & RectPart.Left && sides & RectPart.Bottom) {\r\n      div.style.borderBottomLeftRadius = 'inherit';\r\n    }\r\n\r\n    if(sides & RectPart.Right && sides & RectPart.Top) {\r\n      div.style.borderTopRightRadius = 'inherit';\r\n    }\r\n\r\n    if(sides & RectPart.Right && sides & RectPart.Bottom) {\r\n      div.style.borderBottomRightRadius = 'inherit';\r\n    }\r\n\r\n    if(options.forMedia) {\r\n      const mediaDiv = document.createElement('div');\r\n      mediaDiv.classList.add('album-item-media');\r\n  \r\n      div.append(mediaDiv);\r\n    }\r\n\r\n    // @ts-ignore\r\n    //div.style.backgroundColor = '#' + Math.floor(Math.random() * (2 ** 24 - 1)).toString(16).padStart(6, '0');\r\n  });\r\n\r\n  /* if(options.forMedia) {\r\n    layout.forEach((_, i) => {\r\n      const mediaDiv = document.createElement('div');\r\n      mediaDiv.classList.add('album-item-media');\r\n  \r\n      options.container.children[i].append(mediaDiv);\r\n    });\r\n  } */\r\n}\r\n\r\nexport function wrapAlbum({groupId, attachmentDiv, middleware, uploading, lazyLoadQueue, isOut, chat, loadPromises, autoDownload}: {\r\n  groupId: string, \r\n  attachmentDiv: HTMLElement,\r\n  middleware?: () => boolean,\r\n  lazyLoadQueue?: LazyLoadQueue,\r\n  uploading?: boolean,\r\n  isOut: boolean,\r\n  chat: Chat,\r\n  loadPromises?: Promise<any>[],\r\n  autoDownload?: ChatAutoDownloadSettings,\r\n}) {\r\n  const items: {size: PhotoSize.photoSize, media: any, message: any}[] = [];\r\n\r\n  // !lowest msgID will be the FIRST in album\r\n  const storage = appMessagesManager.getMidsByAlbum(groupId);\r\n  for(const mid of storage) {\r\n    const m = chat.getMessage(mid);\r\n    const media = m.media.photo || m.media.document;\r\n\r\n    const size: any = media._ === 'photo' ? appPhotosManager.choosePhotoSize(media, 480, 480) : {w: media.w, h: media.h};\r\n    items.push({size, media, message: m});\r\n  }\r\n\r\n  /* // * pending\r\n  if(storage[0] < 0) {\r\n    items.reverse();\r\n  } */\r\n\r\n  prepareAlbum({\r\n    container: attachmentDiv,\r\n    items: items.map(i => ({w: i.size.w, h: i.size.h})),\r\n    maxWidth: mediaSizes.active.album.width,\r\n    minWidth: 100,\r\n    spacing: 2,\r\n    forMedia: true\r\n  });\r\n\r\n  items.forEach((item, idx) => {\r\n    const {size, media, message} = item;\r\n\r\n    const div = attachmentDiv.children[idx] as HTMLElement;\r\n    div.dataset.mid = '' + message.mid;\r\n    div.dataset.peerId = '' + message.peerId;\r\n    const mediaDiv = div.firstElementChild as HTMLElement;\r\n    const isPhoto = media._ === 'photo';\r\n    if(isPhoto) {\r\n      wrapPhoto({\r\n        photo: media,\r\n        message,\r\n        container: mediaDiv,\r\n        boxWidth: 0,\r\n        boxHeight: 0,\r\n        isOut,\r\n        lazyLoadQueue,\r\n        middleware,\r\n        size,\r\n        loadPromises,\r\n        autoDownloadSize: autoDownload.photo\r\n      });\r\n    } else {\r\n      wrapVideo({\r\n        doc: message.media.document,\r\n        container: mediaDiv,\r\n        message,\r\n        boxWidth: 0,\r\n        boxHeight: 0,\r\n        withTail: false,\r\n        isOut,\r\n        lazyLoadQueue,\r\n        middleware,\r\n        loadPromises,\r\n        autoDownload\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nexport function wrapGroupedDocuments({albumMustBeRenderedFull, message, bubble, messageDiv, chat, loadPromises, autoDownloadSize, lazyLoadQueue, searchContext, useSearch}: {\r\n  albumMustBeRenderedFull: boolean,\r\n  message: any,\r\n  messageDiv: HTMLElement,\r\n  bubble: HTMLElement,\r\n  uploading?: boolean,\r\n  chat: Chat,\r\n  loadPromises?: Promise<any>[],\r\n  autoDownloadSize?: number,\r\n  lazyLoadQueue?: LazyLoadQueue,\r\n  searchContext?: MediaSearchContext,\r\n  useSearch?: boolean,\r\n}) {\r\n  let nameContainer: HTMLElement;\r\n  const mids = albumMustBeRenderedFull ? chat.getMidsByMid(message.mid) : [message.mid];\r\n  /* if(isPending) {\r\n    mids.reverse();\r\n  } */\r\n\r\n  mids.forEach((mid, idx) => {\r\n    const message = chat.getMessage(mid);\r\n    const div = wrapDocument({\r\n      message,\r\n      loadPromises,\r\n      autoDownloadSize,\r\n      lazyLoadQueue,\r\n      searchContext\r\n    });\r\n\r\n    const container = document.createElement('div');\r\n    container.classList.add('document-container');\r\n    container.dataset.mid = '' + mid;\r\n    container.dataset.peerId = '' + message.peerId;\r\n\r\n    const wrapper = document.createElement('div');\r\n    wrapper.classList.add('document-wrapper');\r\n    \r\n    if(message.message) {\r\n      const messageDiv = document.createElement('div');\r\n      messageDiv.classList.add('document-message');\r\n\r\n      const richText = RichTextProcessor.wrapRichText(message.message, {\r\n        entities: message.totalEntities\r\n      });\r\n\r\n      messageDiv.innerHTML = richText;\r\n      wrapper.append(messageDiv);\r\n    }\r\n\r\n    if(mids.length > 1) {\r\n      const selection = document.createElement('div');\r\n      selection.classList.add('document-selection');\r\n      container.append(selection);\r\n      \r\n      container.classList.add('grouped-item');\r\n\r\n      if(idx === 0) {\r\n        nameContainer = wrapper;\r\n      }\r\n    }\r\n\r\n    wrapper.append(div);\r\n    container.append(wrapper);\r\n    messageDiv.append(container);\r\n  });\r\n\r\n  if(mids.length > 1) {\r\n    bubble.classList.add('is-multiple-documents', 'is-grouped');\r\n  }\r\n\r\n  return nameContainer;\r\n}\r\n\r\nexport function wrapPoll(message: any) {\r\n  const elem = new PollElement();\r\n  elem.message = message;\r\n  elem.setAttribute('peer-id', '' + message.peerId);\r\n  elem.setAttribute('poll-id', message.media.poll.id);\r\n  elem.setAttribute('message-id', '' + message.mid);\r\n  elem.render();\r\n  return elem;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport whichChild from \"./whichChild\";\r\n\r\nexport default function positionElementByIndex(element: HTMLElement, container: HTMLElement, pos: number, prevPos?: number) {\r\n  if(prevPos === undefined) {\r\n    prevPos = element.parentElement === container ? whichChild(element) : -1;\r\n  }\r\n\r\n  if(prevPos === pos) {\r\n    return false;\r\n  } else if(prevPos !== -1 && prevPos < pos) { // was higher\r\n    pos += 1;\r\n  }\r\n\r\n  if(!pos) {\r\n    container.prepend(element);\r\n  } else if(container.childElementCount > pos) {\r\n    container.insertBefore(element, container.children[pos]);\r\n  } else {\r\n    container.append(element);\r\n  }\r\n\r\n  return true;\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport insertInDescendSortedArray from \"./array/insertInDescendSortedArray\";\nimport { getMiddleware } from \"./middleware\";\nimport safeAssign from \"./object/safeAssign\";\n\nexport type SortedElementId = PeerId;\nexport type SortedElementBase = {\n  id: SortedElementId, \n  index: number\n};\n\nexport default class SortedList<SortedElement extends SortedElementBase> {\n  protected elements: Map<SortedElementId, SortedElement>;\n  protected sorted: Array<SortedElement>;\n\n  protected getIndex: (element: SortedElement) => number;\n  protected onDelete: (element: SortedElement) => void;\n  protected onUpdate: (element: SortedElement) => void;\n  protected onSort: (element: SortedElement, idx: number) => void;\n  protected onElementCreate: (base: SortedElementBase, batch: boolean) => SortedElement;\n\n  protected updateElementWith = (callback: () => void) => callback();\n  protected updateListWith = (callback: (canUpdate: boolean | undefined) => void) => callback(true);\n\n  protected middleware = getMiddleware();\n\n  constructor(options: {\n    getIndex: SortedList<SortedElement>['getIndex'],\n    onDelete?: SortedList<SortedElement>['onDelete'],\n    onUpdate?: SortedList<SortedElement>['onUpdate'],\n    onSort?: SortedList<SortedElement>['onSort'],\n    onElementCreate: SortedList<SortedElement>['onElementCreate'],\n\n    updateElementWith?: SortedList<SortedElement>['updateElementWith'],\n    updateListWith?: SortedList<SortedElement>['updateListWith']\n  }) {\n    safeAssign(this, options);\n\n    this.elements = new Map();\n    this.sorted = [];\n  }\n\n  public clear() {\n    this.middleware.clean();\n    this.elements.clear();\n    this.sorted.length = 0;\n  }\n\n  protected _updateList() {\n    this.elements.forEach(element => {\n      this.update(element.id, true);\n    });\n\n    if(this.onSort) {\n      this.sorted.forEach((element, idx) => {\n        this.onSort(element, idx);\n      });\n    }\n  }\n\n  public updateList(callback: (updated: boolean) => void) {\n    const middleware = this.middleware.get();\n    this.updateListWith((canUpdate) => {\n      if(!middleware() || (canUpdate !== undefined && !canUpdate)) {\n        return callback(false);\n      }\n\n      this._updateList();\n  \n      callback(true);\n    });\n  }\n\n  public has(id: SortedElementId) {\n    return this.elements.has(id);\n  }\n\n  public get(id: SortedElementId) {\n    return this.elements.get(id);\n  }\n\n  public getAll() {\n    return this.elements;\n  }\n\n  public add(id: SortedElementId, batch = false, updateElementWith?: SortedList<SortedElement>['updateElementWith'], updateBatch = batch) {\n    let element = this.get(id);\n    if(element) {\n      return element;\n    }\n\n    const base: SortedElementBase = {\n      id,\n      index: 0\n    };\n\n    element = this.onElementCreate(base, batch);\n    this.elements.set(id, element);\n    this.update(id, updateBatch, element, updateElementWith);\n\n    return element;\n  }\n\n  public delete(id: SortedElementId, noScheduler?: boolean) {\n    const element = this.elements.get(id);\n    if(!element) {\n      return false;\n    }\n    \n    this.elements.delete(id);\n    \n    const idx = this.sorted.indexOf(element);\n    if(idx !== -1) {\n      this.sorted.splice(idx, 1);\n    }\n\n    if(this.onDelete) {\n      if(noScheduler) {\n        this.onDelete(element);\n      } else {\n        const middleware = this.middleware.get();\n        this.updateElementWith(() => {\n          if(!middleware()) {\n            return;\n          }\n\n          this.onDelete(element);\n        });\n      }\n    }\n\n    return true;\n  }\n\n  public update(id: SortedElementId, batch = false, element = this.get(id), updateElementWith?: SortedList<SortedElement>['updateElementWith']) {\n    if(!element) {\n      return;\n    }\n\n    element.index = this.getIndex(element);\n    this.onUpdate && this.onUpdate(element);\n\n    const idx = insertInDescendSortedArray(this.sorted, element, 'index');\n    if(!batch && this.onSort) {\n      const middleware = this.middleware.get();\n      (updateElementWith || this.updateElementWith)(() => {\n        if(!middleware()) {\n          return;\n        }\n\n        // * в случае пересортировки этого же элемента во время ожидания вызовется вторая такая же. нужно соблюдать последовательность событий\n        this.onSort(element, idx);\n        /* if(this.get(id) === element) {\n          this.onSort(element, this.sorted.indexOf(element));\n        } */\n      });\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { LazyLoadQueueIntersector } from \"./lazyLoadQueue\";\nimport appDialogsManager, { AppDialogsManager, DialogDom } from \"../lib/appManagers/appDialogsManager\";\nimport { getHeavyAnimationPromise } from \"../hooks/useHeavyAnimationCheck\";\nimport appUsersManager from \"../lib/appManagers/appUsersManager\";\nimport isInDOM from \"../helpers/dom/isInDOM\";\nimport positionElementByIndex from \"../helpers/dom/positionElementByIndex\";\nimport replaceContent from \"../helpers/dom/replaceContent\";\nimport { fastRaf } from \"../helpers/schedulers\";\nimport SortedList, { SortedElementBase } from \"../helpers/sortedList\";\nimport safeAssign from \"../helpers/object/safeAssign\";\n\ninterface SortedUser extends SortedElementBase {\n  dom: DialogDom\n}\n\nexport default class SortedUserList extends SortedList<SortedUser> {\n  protected static SORT_INTERVAL = 30e3;\n  public list: HTMLUListElement;\n  \n  protected lazyLoadQueue: LazyLoadQueueIntersector;\n  protected avatarSize = 48;\n  protected rippleEnabled = true;\n  protected autonomous = true;\n  protected createChatListOptions: Parameters<AppDialogsManager['createChatList']>[0];\n  protected onListLengthChange: () => void;\n  protected getIndex: (element: SortedUser) => number;\n  protected onUpdate: (element: SortedUser) => void;\n\n  constructor(options: Partial<{\n    lazyLoadQueue: SortedUserList['lazyLoadQueue'],\n    avatarSize: SortedUserList['avatarSize'],\n    rippleEnabled: SortedUserList['rippleEnabled'],\n    createChatListOptions: SortedUserList['createChatListOptions'],\n    autonomous: SortedUserList['autonomous'],\n    onListLengthChange: SortedUserList['onListLengthChange'],\n    getIndex: SortedUserList['getIndex'],\n    onUpdate: SortedUserList['onUpdate']\n  }> = {}) {\n    super({\n      getIndex: options.getIndex || ((element) => appUsersManager.getUserStatusForSort(element.id)),\n      onDelete: (element) => {\n        element.dom.listEl.remove();\n        this.onListLengthChange && this.onListLengthChange();\n      },\n      onUpdate: options.onUpdate || ((element) => {\n        const status = appUsersManager.getUserStatusString(element.id);\n        replaceContent(element.dom.lastMessageSpan, status);\n      }),\n      onSort: (element, idx) => {\n        const willChangeLength = element.dom.listEl.parentElement !== this.list;\n        positionElementByIndex(element.dom.listEl, this.list, idx);\n\n        if(willChangeLength && this.onListLengthChange) {\n          this.onListLengthChange();\n        }\n      },\n      onElementCreate: (base) => {\n        const {dom} = appDialogsManager.addDialogNew({\n          dialog: base.id,\n          container: false,\n          drawStatus: false,\n          avatarSize: this.avatarSize,\n          autonomous: this.autonomous,\n          meAsSaved: false,\n          rippleEnabled: this.rippleEnabled,\n          lazyLoadQueue: this.lazyLoadQueue\n        });\n\n        (base as SortedUser).dom = dom;\n        return base as SortedUser;\n      },\n      updateElementWith: fastRaf,\n      updateListWith: async(callback) => {\n        if(!isInDOM(this.list)) {\n          return callback(false);\n        }\n    \n        await getHeavyAnimationPromise();\n    \n        if(!isInDOM(this.list)) {\n          return callback(false);\n        }\n\n        callback(true);\n      }\n    });\n\n    safeAssign(this, options);\n\n    this.list = appDialogsManager.createChatList(this.createChatListOptions);\n\n    let timeout: number;\n    const doTimeout = () => {\n      timeout = window.setTimeout(() => {\n        this.updateList((good) => {\n          if(good) {\n            doTimeout();\n          }\n        });\n      }, SortedUserList.SORT_INTERVAL);\n    };\n\n    doTimeout();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport SwipeHandler, { SwipeHandlerOptions } from \"../../components/swipeHandler\";\nimport { cancelEvent } from \"./cancelEvent\";\nimport findUpClassName from \"./findUpClassName\";\nimport isSwipingBackSafari from \"./isSwipingBackSafari\";\n\nexport type SwipeHandlerHorizontalOptions = SwipeHandlerOptions & {\n  // xThreshold?: number\n};\n\nexport default function handleHorizontalSwipe(options: SwipeHandlerHorizontalOptions) {\n  let cancelY = false;\n  return new SwipeHandler({\n    ...options,\n    verifyTouchTarget: (e) => {\n      return !findUpClassName(e.target, 'progress-line') && \n        !isSwipingBackSafari(e) && \n        (options.verifyTouchTarget ? options.verifyTouchTarget(e) : true);\n    },\n    onSwipe: (xDiff, yDiff, e) => {\n      if(!cancelY && Math.abs(yDiff) > 20) {\n        return true;\n      }\n\n      if(Math.abs(xDiff) > Math.abs(yDiff)) {\n        cancelEvent(e);\n        cancelY = true;\n      } else if(!cancelY && Math.abs(yDiff) > Math.abs(xDiff)/*  || Math.abs(yDiff) > 20 */) {\n        return true;\n      }\n\n      /* if(!cancelY && options.xThreshold !== undefined && xDiff >= options.xThreshold) {\n        cancelY = true;\n      } */\n\n      return options.onSwipe(xDiff, yDiff, e);\n    },\n    onReset: () => {\n      cancelY = false;\n      options.onReset && options.onReset();\n    },\n    cancelEvent: false // cannot use cancelEvent on Safari iOS because scroll will be canceled too\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { cancelContextMenuOpening } from \"../../components/misc\";\nimport handleHorizontalSwipe, { SwipeHandlerHorizontalOptions } from \"./handleHorizontalSwipe\";\n\nexport default function handleTabSwipe(options: SwipeHandlerHorizontalOptions) {\n  return handleHorizontalSwipe({\n    ...options,\n    onSwipe: (xDiff, yDiff, e) => {\n      if(Math.abs(xDiff) > 50) {\n        options.onSwipe(xDiff, yDiff, e);\n        cancelContextMenuOpening();\n\n        return true;\n      }\n    }\n  });\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appImManager from \"../../lib/appManagers/appImManager\";\r\nimport PopupPickUser from \"./pickUser\";\r\n\r\nexport default class PopupForward extends PopupPickUser {\r\n  constructor(\r\n    peerIdMids: {[fromPeerId: PeerId]: number[]}, \r\n    onSelect?: (peerId: PeerId) => Promise<void> | void, \r\n    overrideOnSelect = false\r\n  ) {\r\n    super({\r\n      peerTypes: ['dialogs', 'contacts'],\r\n      onSelect: overrideOnSelect ? onSelect : async(peerId) => {\r\n        if(onSelect) {\r\n          const res = onSelect(peerId);\r\n          if(res instanceof Promise) {\r\n            await res;\r\n          }\r\n        }\r\n\r\n        appImManager.setInnerPeer({peerId});\r\n        appImManager.chat.input.initMessagesForward(peerIdMids);\r\n      },\r\n      placeholder: 'ShareModal.Search.ForwardPlaceholder',\r\n      chatRightsAction: 'send_messages',\r\n      selfPresence: 'ChatYourSelf'\r\n    });\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appChatsManager from \"../../lib/appManagers/appChatsManager\";\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\nimport rootScope from \"../../lib/rootScope\";\nimport { addCancelButton } from \".\";\nimport PopupPeer, { PopupPeerButtonCallbackCheckboxes, PopupPeerOptions } from \"./peer\";\nimport { ChatType } from \"../chat/chat\";\nimport { i18n, LangPackKey } from \"../../lib/langPack\";\nimport PeerTitle from \"../peerTitle\";\nimport appPeersManager from \"../../lib/appManagers/appPeersManager\";\n\nexport default class PopupDeleteMessages {\n  constructor(peerId: PeerId, mids: number[], type: ChatType, onConfirm?: () => void) {\n    const peerTitleElement = new PeerTitle({peerId}).element;\n\n    mids = mids.slice();\n    const callback = (checked: PopupPeerButtonCallbackCheckboxes, revoke?: boolean) => {\n      onConfirm && onConfirm();\n      if(type === 'scheduled') {\n        appMessagesManager.deleteScheduledMessages(peerId, mids);\n      } else {\n        appMessagesManager.deleteMessages(peerId, mids, !!checked.size || revoke);\n      }\n    };\n\n    let title: LangPackKey, titleArgs: any[], description: LangPackKey, descriptionArgs: any[], buttons: PopupPeerOptions['buttons'], checkboxes: PopupPeerOptions['checkboxes'] = [];\n    if(mids.length === 1) {\n      title = 'DeleteSingleMessagesTitle';\n    } else {\n      title = 'DeleteMessagesTitle';\n      titleArgs = [i18n('messages', [mids.length])];\n    }\n    \n    if(appPeersManager.isMegagroup(peerId)) {\n      description = mids.length === 1 ? 'AreYouSureDeleteSingleMessageMega' : 'AreYouSureDeleteFewMessagesMega';\n    } else {\n      description = mids.length === 1 ? 'AreYouSureDeleteSingleMessage' : 'AreYouSureDeleteFewMessages';\n    }\n\n    buttons = [{\n      langKey: 'Delete',\n      isDanger: true,\n      callback\n    }];\n\n    if(peerId === rootScope.myId || type === 'scheduled') {\n      \n    } else {\n      if(peerId.isUser()) {\n        checkboxes.push({\n          text: 'DeleteMessagesOptionAlso',\n          textArgs: [peerTitleElement]\n        });\n      } else {\n        const chat = appChatsManager.getChat(peerId.toChatId());\n\n        const hasRights = appChatsManager.hasRights(peerId.toChatId(), 'delete_messages');\n        if(chat._ === 'chat') {\n          const canRevoke = hasRights ? mids.slice() : mids.filter(mid => {\n            const message = appMessagesManager.getMessageByPeer(peerId, mid);\n            return message.fromId === rootScope.myId;\n          });\n\n          if(canRevoke.length) {\n            if(canRevoke.length === mids.length) {\n              checkboxes.push({\n                text: 'DeleteForAll'\n              });\n            } else {\n              checkboxes.push({\n                text: 'DeleteMessagesOption'\n              });\n\n              description = 'DeleteMessagesTextGroup';\n              descriptionArgs = [i18n('messages', [canRevoke.length])];\n              //description = `You can also delete the ${canRevoke.length} message${canRevoke.length > 1 ? 's' : ''} you sent from the inboxes of other group members by pressing \"${buttonText}\".`;\n            }\n          }\n        } else {\n          buttons[0].callback = (checked) => callback(checked, true);\n        }\n      }\n    }\n\n    addCancelButton(buttons);\n\n    const popup = new PopupPeer('popup-delete-chat', {\n      peerId,\n      titleLangKey: title,\n      titleLangArgs: titleArgs,\n      descriptionLangKey: description,\n      descriptionLangArgs: descriptionArgs,\n      buttons,\n      checkboxes\n    });\n\n    popup.show();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\nimport { PopupButton } from \".\";\nimport PopupPeer from \"./peer\";\n\nexport default class PopupSendNow {\n  constructor(peerId: PeerId, mids: number[], onConfirm?: () => void) {\n    let title: string, description: string, buttons: PopupButton[] = [];\n\n    title = `Send Message${mids.length > 1 ? 's' : ''} Now`;\n    description = mids.length > 1 ? 'Send ' + mids.length + ' messages now?' : 'Send message now?';\n\n    const callback = () => {\n      onConfirm && onConfirm();\n      appMessagesManager.sendScheduledMessages(peerId, mids);\n    };\n\n    buttons.push({\n      langKey: 'Send',\n      callback\n    });\n\n    const popup = new PopupPeer('popup-delete-chat', {\n      peerId,\n      title,\n      description,\n      buttons\n    });\n\n    popup.show();\n  }\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function cancelSelection() {\r\n  if(window.getSelection) {\r\n    if(window.getSelection().empty) {  // Chrome\r\n      window.getSelection().empty();\r\n    } else if(window.getSelection().removeAllRanges) {  // Firefox\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n    // @ts-ignore\r\n  } else if(document.selection) {  // IE?\r\n    // @ts-ignore\r\n    document.selection.empty();\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\nimport type ChatBubbles from \"./bubbles\";\nimport type ChatInput from \"./input\";\nimport type Chat from \"./chat\";\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\nimport Button from \"../button\";\nimport ButtonIcon from \"../buttonIcon\";\nimport CheckboxField from \"../checkboxField\";\nimport PopupDeleteMessages from \"../popups/deleteMessages\";\nimport PopupForward from \"../popups/forward\";\nimport { toast } from \"../toast\";\nimport SetTransition from \"../singleTransition\";\nimport ListenerSetter from \"../../helpers/listenerSetter\";\nimport PopupSendNow from \"../popups/sendNow\";\nimport appNavigationController, { NavigationItem } from \"../appNavigationController\";\nimport { IS_MOBILE_SAFARI } from \"../../environment/userAgent\";\nimport I18n, { i18n, _i18n } from \"../../lib/langPack\";\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\nimport blurActiveElement from \"../../helpers/dom/blurActiveElement\";\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\nimport cancelSelection from \"../../helpers/dom/cancelSelection\";\nimport getSelectedText from \"../../helpers/dom/getSelectedText\";\nimport rootScope from \"../../lib/rootScope\";\nimport { fastRaf } from \"../../helpers/schedulers\";\nimport replaceContent from \"../../helpers/dom/replaceContent\";\nimport AppSearchSuper from \"../appSearchSuper.\";\nimport isInDOM from \"../../helpers/dom/isInDOM\";\nimport { randomLong } from \"../../helpers/random\";\nimport { attachContextMenuListener } from \"../misc\";\nimport { attachClickEvent, AttachClickOptions } from \"../../helpers/dom/clickEvent\";\nimport findUpAsChild from \"../../helpers/dom/findUpAsChild\";\nimport EventListenerBase from \"../../helpers/eventListenerBase\";\nimport safeAssign from \"../../helpers/object/safeAssign\";\n\nconst accumulateMapSet = (map: Map<any, Set<number>>) => {\n  return [...map.values()].reduce((acc, v) => acc + v.size, 0);\n};\n\n//const MIN_CLICK_MOVE = 32; // minimum bubble height\n\nclass AppSelection extends EventListenerBase<{\n  toggle: (isSelecting: boolean) => void\n}> {\n  public selectedMids: Map<PeerId, Set<number>> = new Map();\n  public isSelecting = false;\n\n  public selectedText: string;\n\n  protected listenerSetter: ListenerSetter;\n  protected appMessagesManager: AppMessagesManager;\n  protected isScheduled: boolean;\n  protected listenElement: HTMLElement;\n\n  protected onToggleSelection: (forwards: boolean, animate: boolean) => void;\n  protected onUpdateContainer: (cantForward: boolean, cantDelete: boolean, cantSend: boolean) => void;\n  protected onCancelSelection: () => void;\n  protected toggleByMid: (peerId: PeerId, mid: number) => void;\n  protected toggleByElement: (bubble: HTMLElement) => void;\n\n  protected navigationType: NavigationItem['type'];\n\n  protected getElementFromTarget: (target: HTMLElement) => HTMLElement;\n  protected verifyTarget: (e: MouseEvent, target: HTMLElement) => boolean;\n  protected verifyMouseMoveTarget: (e: MouseEvent, element: HTMLElement, selecting: boolean) => boolean;\n  protected verifyTouchLongPress: () => boolean;\n  protected targetLookupClassName: string;\n  protected lookupBetweenParentClassName: string;\n  protected lookupBetweenElementsQuery: string;\n\n  protected doNotAnimate: boolean;\n\n  constructor(options: {\n    appMessagesManager: AppMessagesManager,\n    listenElement: HTMLElement,\n    listenerSetter: ListenerSetter,\n    getElementFromTarget: AppSelection['getElementFromTarget'],\n    verifyTarget?: AppSelection['verifyTarget'],\n    verifyMouseMoveTarget?: AppSelection['verifyMouseMoveTarget'],\n    verifyTouchLongPress?: AppSelection['verifyTouchLongPress'],\n    targetLookupClassName: string,\n    lookupBetweenParentClassName: string,\n    lookupBetweenElementsQuery: string,\n    isScheduled?: AppSelection['isScheduled']\n  }) {\n    super(false);\n\n    safeAssign(this, options);\n\n    this.navigationType = 'multiselect-' + randomLong() as any;\n\n    if(IS_TOUCH_SUPPORTED) {\n      this.listenerSetter.add(this.listenElement)('touchend', () => {\n        if(!this.isSelecting) return;\n        this.selectedText = getSelectedText();\n      });\n\n      attachContextMenuListener(this.listenElement, (e) => {\n        if(this.isSelecting || (this.verifyTouchLongPress && !this.verifyTouchLongPress())) return;\n\n        // * these two lines will fix instant text selection on iOS Safari\n        document.body.classList.add('no-select'); // * need no-select on body because chat-input transforms in channels\n        this.listenElement.addEventListener('touchend', (e) => {\n          cancelEvent(e); // ! this one will fix propagation to document loader button, etc\n          document.body.classList.remove('no-select');\n\n          //this.chat.bubbles.onBubblesClick(e);\n        }, {once: true, capture: true});\n\n        cancelSelection();\n        //cancelEvent(e as any);\n        const element = this.getElementFromTarget(e.target as HTMLElement);\n        if(element) {\n          this.toggleByElement(element);\n        }\n      }, this.listenerSetter);\n\n      return;\n    }\n\n    const getElementsBetween = (first: HTMLElement, last: HTMLElement) => { \n      if(first === last) {\n        return [];\n      }\n\n      const firstRect = first.getBoundingClientRect();\n      const lastRect = last.getBoundingClientRect();\n      const difference = (firstRect.top - lastRect.top) || (firstRect.left - lastRect.left);\n      const isHigher = difference < 0;\n\n      const parent = findUpClassName(first, this.lookupBetweenParentClassName);\n      if(!parent) {\n        return [];\n      }\n\n      const elements = Array.from(parent.querySelectorAll(this.lookupBetweenElementsQuery)) as HTMLElement[];\n      let firstIndex = elements.indexOf(first);\n      let lastIndex = elements.indexOf(last);\n\n      if(!isHigher) {\n        [lastIndex, firstIndex] = [firstIndex, lastIndex];\n      }\n\n      const slice = elements.slice(firstIndex + 1, lastIndex);\n\n      // console.log('getElementsBetween', first, last, slice, firstIndex, lastIndex, isHigher);\n\n      return slice;\n    };\n\n    this.listenerSetter.add(this.listenElement)('mousedown', (e) => {\n      //console.log('selection mousedown', e);\n      const element = findUpClassName(e.target, this.targetLookupClassName);\n      if(e.button !== 0) {\n        return;\n      }\n\n      if(this.verifyTarget && !this.verifyTarget(e, element)) {\n        return;\n      }\n      \n      const seen: AppSelection['selectedMids'] = new Map();\n      let selecting: boolean;\n\n      /* let good = false;\n      const {x, y} = e; */\n\n      /* const bubbles = appImManager.bubbles;\n      for(const mid in bubbles) {\n        const bubble = bubbles[mid];\n        bubble.addEventListener('mouseover', () => {\n          console.log('mouseover');\n        }, {once: true});\n      } */\n\n      let firstTarget = element;\n\n      const processElement = (element: HTMLElement, checkBetween = true) => {\n        const mid = +element.dataset.mid;\n        if(!mid || !element.dataset.peerId) return;\n        const peerId = element.dataset.peerId.toPeerId();\n\n        if(!isInDOM(firstTarget)) {\n          firstTarget = element;\n        }\n\n        let seenSet = seen.get(peerId);\n        if(!seenSet) {\n          seen.set(peerId, seenSet = new Set());\n        }\n\n        if(!seenSet.has(mid)) {\n          const isSelected = this.isMidSelected(peerId, mid);\n          if(selecting === undefined) {\n            //bubblesContainer.classList.add('no-select');\n            selecting = !isSelected;\n          }\n\n          seenSet.add(mid);\n\n          if((selecting && !isSelected) || (!selecting && isSelected)) {\n            const seenLength = accumulateMapSet(seen);\n            if(this.toggleByElement && checkBetween) {\n              if(seenLength < 2) {\n                if(findUpAsChild(element, firstTarget)) {\n                  firstTarget = element;\n                }\n              }\n\n              const elementsBetween = getElementsBetween(firstTarget, element);\n              // console.log(elementsBetween);\n              if(elementsBetween.length) {\n                elementsBetween.forEach(element => {\n                  processElement(element, false);\n                });\n              }\n            }\n\n            if(!this.selectedMids.size) {\n              if(seenLength === 2 && this.toggleByMid) {\n                for(const [peerId, mids] of seen) {\n                  for(const mid of mids) {\n                    this.toggleByMid(peerId, mid);\n                  }\n                }\n              }\n            } else if(this.toggleByElement) {\n              this.toggleByElement(element);\n            }\n          }\n        }\n      };\n\n      //const foundTargets: Map<HTMLElement, true> = new Map();\n      let canceledSelection = false;\n      const onMouseMove = (e: MouseEvent) => {\n        if(!canceledSelection) {\n          cancelSelection();\n          canceledSelection = true;\n        }\n        /* if(!good) {\n          if(Math.abs(e.x - x) > MIN_CLICK_MOVE || Math.abs(e.y - y) > MIN_CLICK_MOVE) {\n            good = true;\n          } else {\n            return;\n          }\n        } */\n\n        /* if(foundTargets.has(e.target as HTMLElement)) return;\n        foundTargets.set(e.target as HTMLElement, true); */\n        const element = this.getElementFromTarget(e.target as HTMLElement);\n        if(!element) {\n          //console.error('found no bubble', e);\n          return;\n        }\n\n        if(this.verifyMouseMoveTarget && !this.verifyMouseMoveTarget(e, element, selecting)) {\n          this.listenerSetter.removeManual(this.listenElement, 'mousemove', onMouseMove);\n          this.listenerSetter.removeManual(document, 'mouseup', onMouseUp, documentListenerOptions);\n          return;\n        }\n\n        processElement(element);\n      };\n\n      const onMouseUp = (e: MouseEvent) => {\n        if(seen.size) {\n          attachClickEvent(window, cancelEvent, {capture: true, once: true, passive: false});\n        }\n\n        this.listenerSetter.removeManual(this.listenElement, 'mousemove', onMouseMove);\n        //bubblesContainer.classList.remove('no-select');\n\n        // ! CANCEL USER SELECTION !\n        cancelSelection();\n      };\n\n      const documentListenerOptions = {once: true};\n      this.listenerSetter.add(this.listenElement)('mousemove', onMouseMove);\n      this.listenerSetter.add(document)('mouseup', onMouseUp, documentListenerOptions);\n    });\n  }\n\n  protected isElementShouldBeSelected(element: HTMLElement) {\n    return this.isMidSelected(element.dataset.peerId.toPeerId(), +element.dataset.mid);\n  }\n\n  protected appendCheckbox(element: HTMLElement, checkboxField: CheckboxField) {\n    element.prepend(checkboxField.label);\n  }\n\n  public toggleElementCheckbox(element: HTMLElement, show: boolean) {\n    const hasCheckbox = !!this.getCheckboxInputFromElement(element);\n    if(show) {\n      if(hasCheckbox) {\n        return false;\n      }\n      \n      const checkboxField = new CheckboxField({\n        name: element.dataset.mid, \n        round: true\n      });\n      \n      // * if it is a render of new message\n      if(this.isSelecting) { // ! avoid breaking animation on start\n        if(this.isElementShouldBeSelected(element)) {\n          checkboxField.input.checked = true;\n          element.classList.add('is-selected');\n        }\n      }\n      \n      this.appendCheckbox(element, checkboxField);\n    } else if(hasCheckbox) {\n      this.getCheckboxInputFromElement(element).parentElement.remove();\n    }\n\n    return true;\n  }\n\n  protected getCheckboxInputFromElement(element: HTMLElement): HTMLInputElement {\n    return element.firstElementChild?.tagName === 'LABEL' && \n      element.firstElementChild.firstElementChild as HTMLInputElement;\n  }\n\n  protected updateContainer(forceSelection = false) {\n    const size = this.selectedMids.size;\n    if(!size && !forceSelection) return;\n    \n    let cantForward = !size, \n      cantDelete = !size, \n      cantSend = !size;\n    for(const [peerId, mids] of this.selectedMids) {\n      const storage = this.isScheduled ? this.appMessagesManager.getScheduledMessagesStorage(peerId) : this.appMessagesManager.getMessagesStorage(peerId);\n      for(const mid of mids) {\n        const message = this.appMessagesManager.getMessageFromStorage(storage, mid);\n        if(!cantForward) {\n          cantForward = !this.appMessagesManager.canForward(message);\n        }\n        \n        if(!cantDelete) {\n          cantDelete = !this.appMessagesManager.canDeleteMessage(message);\n        }\n\n        if(cantForward && cantDelete) break;\n      }\n\n      if(cantForward && cantDelete) break;\n    }\n    \n    this.onUpdateContainer && this.onUpdateContainer(cantForward, cantDelete, cantSend);\n  }\n\n  public toggleSelection(toggleCheckboxes = true, forceSelection = false) {\n    const wasSelecting = this.isSelecting;\n    const size = this.selectedMids.size;\n    this.isSelecting = !!size || forceSelection;\n\n    if(wasSelecting === this.isSelecting) return false;\n\n    this.dispatchEvent('toggle', this.isSelecting);\n    \n    // const bubblesContainer = this.bubbles.bubblesContainer;\n    //bubblesContainer.classList.toggle('is-selecting', !!size);\n\n    /* if(bubblesContainer.classList.contains('is-chat-input-hidden')) {\n      const scrollable = this.appImManager.scrollable;\n      if(scrollable.isScrolledDown) {\n        scrollable.scrollTo(scrollable.scrollHeight, 'top', true, true, 200);\n      }\n    } */\n\n    if(!IS_TOUCH_SUPPORTED) {\n      this.listenElement.classList.toggle('no-select', this.isSelecting);\n\n      if(wasSelecting) {\n        // ! CANCEL USER SELECTION !\n        cancelSelection();\n      }\n    }/*  else {\n      if(!wasSelecting) {\n        bubblesContainer.classList.add('no-select');\n        setTimeout(() => {\n          cancelSelection();\n          bubblesContainer.classList.remove('no-select');\n          cancelSelection();\n        }, 100);\n      }\n    } */\n\n    blurActiveElement();\n\n    const forwards = !!size || forceSelection;\n    this.onToggleSelection && this.onToggleSelection(forwards, !this.doNotAnimate);\n\n    if(!IS_MOBILE_SAFARI) {\n      if(forwards) {\n        appNavigationController.pushItem({\n          type: this.navigationType,\n          onPop: () => {\n            this.cancelSelection();\n          }\n        });\n      } else {\n        appNavigationController.removeByType(this.navigationType);\n      }\n    }\n\n    if(forceSelection) {\n      this.updateContainer(forceSelection);\n    }\n\n    return true;\n  }\n\n  public cancelSelection = (doNotAnimate?: boolean) => {\n    if(doNotAnimate) this.doNotAnimate = true;\n    this.onCancelSelection && this.onCancelSelection();\n    this.selectedMids.clear();\n    this.toggleSelection();\n    cancelSelection();\n    if(doNotAnimate) this.doNotAnimate = undefined;\n  };\n\n  public cleanup() {\n    this.doNotAnimate = true;\n    this.selectedMids.clear();\n    this.toggleSelection(false);\n    this.doNotAnimate = undefined;\n  }\n\n  protected updateElementSelection(element: HTMLElement, isSelected: boolean) {\n    this.toggleElementCheckbox(element, true);\n    const input = this.getCheckboxInputFromElement(element);\n    input.checked = isSelected;\n\n    this.toggleSelection();\n    this.updateContainer();\n    SetTransition(element, 'is-selected', isSelected, 200);\n  }\n\n  public isMidSelected(peerId: PeerId, mid: number) {\n    const set = this.selectedMids.get(peerId);\n    return set?.has(mid);\n  }\n\n  public length() {\n    return accumulateMapSet(this.selectedMids);\n  }\n\n  protected toggleMid(peerId: PeerId, mid: number, unselect?: boolean) {\n    let set = this.selectedMids.get(peerId);\n    if(unselect || (unselect === undefined && set?.has(mid))) {\n      if(set) {\n        set.delete(mid);\n\n        if(!set.size) {\n          this.selectedMids.delete(peerId);\n        }\n      }\n    } else {\n      const diff = rootScope.config.forwarded_count_max - this.length() - 1;\n      if(diff < 0) {\n        toast(I18n.format('Chat.Selection.LimitToast', true));\n        return false;\n        /* const it = this.selectedMids.values();\n        do {\n          const mid = it.next().value;\n          const mounted = this.appImManager.getMountedBubble(mid);\n          if(mounted) {\n            this.toggleByBubble(mounted.bubble);\n          } else {\n            const mids = this.appMessagesManager.getMidsByMid(mid);\n            for(const mid of mids) {\n              this.selectedMids.delete(mid);\n            }\n          }\n        } while(this.selectedMids.size > MAX_SELECTION_LENGTH); */\n      }\n\n      if(!set) {\n        set = new Set();\n        this.selectedMids.set(peerId, set);\n      }\n\n      set.add(mid);\n    }\n\n    return true;\n  }\n\n  /**\n   * ! Call this method only to handle deleted messages\n   */\n  public deleteSelectedMids(peerId: PeerId, mids: number[]) {\n    const set = this.selectedMids.get(peerId);\n    if(!set) {\n      return;\n    }\n\n    mids.forEach(mid => {\n      set.delete(mid);\n    });\n\n    if(!set.size) {\n      this.selectedMids.delete(peerId);\n    }\n\n    this.updateContainer();\n    this.toggleSelection();\n  }\n}\n\nexport class SearchSelection extends AppSelection {\n  protected selectionContainer: HTMLElement;\n  protected selectionCountEl: HTMLElement;\n  public selectionForwardBtn: HTMLElement;\n  public selectionDeleteBtn: HTMLElement;\n  public selectionGotoBtn: HTMLElement;\n\n  private isPrivate: boolean;\n\n  constructor(private searchSuper: AppSearchSuper, appMessagesManager: AppMessagesManager) {\n    super({\n      appMessagesManager,\n      listenElement: searchSuper.container,\n      listenerSetter: new ListenerSetter(),\n      verifyTarget: (e, target) => !!target && this.isSelecting,\n      getElementFromTarget: (target) => findUpClassName(target, 'search-super-item'),\n      targetLookupClassName: 'search-super-item',\n      lookupBetweenParentClassName: 'tabs-tab',\n      lookupBetweenElementsQuery: '.search-super-item'\n    });\n\n    this.isPrivate = !searchSuper.showSender;\n  }\n\n  /* public appendCheckbox(element: HTMLElement, checkboxField: CheckboxField) {\n    checkboxField.label.classList.add('bubble-select-checkbox');\n\n    if(element.classList.contains('document') || element.tagName === 'AUDIO-ELEMENT') {\n      element.querySelector('.document, audio-element').append(checkboxField.label);\n    } else {\n      super.appendCheckbox(bubble, checkboxField);\n    }\n  } */\n\n  public toggleSelection(toggleCheckboxes = true, forceSelection = false) {\n    const ret = super.toggleSelection(toggleCheckboxes, forceSelection);\n\n    if(ret && toggleCheckboxes) {\n      const elements = Array.from(this.searchSuper.tabsContainer.querySelectorAll('.search-super-item')) as HTMLElement[];\n      elements.forEach(element => {\n        this.toggleElementCheckbox(element, this.isSelecting);\n      });\n    }\n\n    return ret;\n  }\n\n  public toggleByElement = (element: HTMLElement) => {\n    const mid = +element.dataset.mid;\n    const peerId = element.dataset.peerId.toPeerId();\n\n    if(!this.toggleMid(peerId, mid)) {\n      return;\n    }\n\n    this.updateElementSelection(element, this.isMidSelected(peerId, mid));\n  };\n\n  public toggleByMid = (peerId: PeerId, mid: number) => {\n    const element = this.searchSuper.mediaTab.contentTab.querySelector(`.search-super-item[data-peer-id=\"${peerId}\"][data-mid=\"${mid}\"]`) as HTMLElement;\n    this.toggleByElement(element);\n  };\n\n  protected onUpdateContainer = (cantForward: boolean, cantDelete: boolean, cantSend: boolean) => {\n    const length = this.length();\n    replaceContent(this.selectionCountEl, i18n('messages', [length]));\n    this.selectionGotoBtn.classList.toggle('hide', length !== 1);\n    this.selectionForwardBtn.classList.toggle('hide', cantForward);\n    this.selectionDeleteBtn && this.selectionDeleteBtn.classList.toggle('hide', cantDelete);\n  };\n\n  protected onToggleSelection = (forwards: boolean, animate: boolean) => {\n    SetTransition(this.searchSuper.navScrollableContainer, 'is-selecting', forwards, animate ? 200 : 0, () => {\n      if(!this.isSelecting) {\n        this.selectionContainer.remove();\n        this.selectionContainer = \n          this.selectionForwardBtn = \n          this.selectionDeleteBtn = \n          null;\n        this.selectedText = undefined;\n      }\n    });\n\n    SetTransition(this.searchSuper.container, 'is-selecting', forwards, 200);\n\n    if(this.isSelecting) {\n      if(!this.selectionContainer) {\n        const BASE_CLASS = 'search-super-selection';\n        this.selectionContainer = document.createElement('div');\n        this.selectionContainer.classList.add(BASE_CLASS + '-container');\n\n        const btnCancel = ButtonIcon(`close ${BASE_CLASS}-cancel`, {noRipple: true});\n        this.listenerSetter.add(btnCancel)('click', () => this.cancelSelection(), {once: true});\n\n        this.selectionCountEl = document.createElement('div');\n        this.selectionCountEl.classList.add(BASE_CLASS + '-count');\n\n        this.selectionGotoBtn = ButtonIcon(`message ${BASE_CLASS}-goto`);\n\n        const attachClickOptions: AttachClickOptions = {listenerSetter: this.listenerSetter};\n        attachClickEvent(this.selectionGotoBtn, () => {\n          const peerId = [...this.selectedMids.keys()][0];\n          const mid = [...this.selectedMids.get(peerId)][0];\n          this.cancelSelection();\n\n          rootScope.dispatchEvent('history_focus', {\n            peerId,\n            mid\n          });\n        }, attachClickOptions);\n\n        this.selectionForwardBtn = ButtonIcon(`forward ${BASE_CLASS}-forward`);\n        attachClickEvent(this.selectionForwardBtn, () => {\n          const obj: {[fromPeerId: PeerId]: number[]} = {};\n          for(const [fromPeerId, mids] of this.selectedMids) {\n            obj[fromPeerId] = Array.from(mids).sort((a, b) => a - b);\n          }\n\n          new PopupForward(obj, () => {\n            this.cancelSelection();\n          });\n        }, attachClickOptions);\n\n        if(this.isPrivate) {\n          this.selectionDeleteBtn = ButtonIcon(`delete danger ${BASE_CLASS}-delete`);\n          attachClickEvent(this.selectionDeleteBtn, () => {\n            const peerId = [...this.selectedMids.keys()][0];\n            new PopupDeleteMessages(peerId, [...this.selectedMids.get(peerId)], 'chat', () => {\n              this.cancelSelection();\n            });\n          }, attachClickOptions);\n        }\n\n        this.selectionContainer.append(...[\n          btnCancel, \n          this.selectionCountEl, \n          this.selectionGotoBtn, \n          this.selectionForwardBtn, \n          this.selectionDeleteBtn\n        ].filter(Boolean));\n\n        const transitionElement = this.selectionContainer;\n        transitionElement.style.opacity = '0';\n        this.searchSuper.navScrollableContainer.append(transitionElement);\n\n        void transitionElement.offsetLeft; // reflow\n        transitionElement.style.opacity = '';\n      }\n    }\n  };\n}\n\nexport default class ChatSelection extends AppSelection {\n  protected selectionInputWrapper: HTMLElement;\n  protected selectionContainer: HTMLElement;\n  protected selectionCountEl: HTMLElement;\n  public selectionSendNowBtn: HTMLElement;\n  public selectionForwardBtn: HTMLElement;\n  public selectionDeleteBtn: HTMLElement;\n  private selectionLeft: HTMLDivElement;\n  private selectionRight: HTMLDivElement;\n\n  constructor(private chat: Chat, private bubbles: ChatBubbles, private input: ChatInput, appMessagesManager: AppMessagesManager) {\n    super({\n      appMessagesManager,\n      listenElement: bubbles.bubblesContainer,\n      listenerSetter: bubbles.listenerSetter,\n      getElementFromTarget: (target) => findUpClassName(target, 'grouped-item') || findUpClassName(target, 'bubble'),\n      verifyTarget: (e, target) => {\n        // LEFT BUTTON\n        // проверка внизу нужна для того, чтобы не активировать селект если target потомок .bubble\n        const bad = !this.selectedMids.size \n          && !(e.target as HTMLElement).classList.contains('bubble')\n          && !(e.target as HTMLElement).classList.contains('document-selection')\n          && target;\n\n        return !bad;\n      },\n      verifyMouseMoveTarget: (e, element, selecting) => {\n        const bad = e.target !== element && \n          !(e.target as HTMLElement).classList.contains('document-selection') && \n          selecting === undefined && \n          !this.selectedMids.size;\n        return !bad;\n      },\n      verifyTouchLongPress: () => !this.chat.input.recording,\n      targetLookupClassName: 'bubble',\n      lookupBetweenParentClassName: 'bubbles-inner',\n      lookupBetweenElementsQuery: '.bubble:not(.is-multiple-documents), .grouped-item',\n      isScheduled: chat.type === 'scheduled'\n    });\n  }\n\n  public appendCheckbox(bubble: HTMLElement, checkboxField: CheckboxField) {\n    checkboxField.label.classList.add('bubble-select-checkbox');\n\n    if(bubble.classList.contains('document-container')) {\n      bubble.querySelector('.document, audio-element').append(checkboxField.label);\n    } else {\n      super.appendCheckbox(bubble, checkboxField);\n    }\n  }\n\n  public toggleSelection(toggleCheckboxes = true, forceSelection = false) {\n    const ret = super.toggleSelection(toggleCheckboxes, forceSelection);\n\n    if(ret && toggleCheckboxes) {\n      for(const mid in this.bubbles.bubbles) {\n        const bubble = this.bubbles.bubbles[mid];\n        this.toggleElementCheckbox(bubble, this.isSelecting);\n      }\n    }\n\n    return ret;\n  }\n\n  public toggleElementCheckbox(bubble: HTMLElement, show: boolean) {\n    if(!this.canSelectBubble(bubble)) return;\n\n    const ret = super.toggleElementCheckbox(bubble, show);\n    if(ret) {\n      const isGrouped = bubble.classList.contains('is-grouped');\n      if(isGrouped) {\n        this.bubbles.getBubbleGroupedItems(bubble).forEach(item => this.toggleElementCheckbox(item, show));\n      }\n    }\n    \n    return ret;\n  }\n\n  public toggleByElement = (bubble: HTMLElement) => {\n    if(!this.canSelectBubble(bubble)) return;\n\n    const mid = +bubble.dataset.mid;\n\n    const isGrouped = bubble.classList.contains('is-grouped');\n    if(isGrouped) {\n      if(!this.isGroupedBubbleSelected(bubble)) {\n        const set = this.selectedMids.get(this.bubbles.peerId);\n        if(set) {\n          const mids = this.chat.getMidsByMid(mid);\n          mids.forEach(mid => set.delete(mid));\n        }\n      }\n\n      this.bubbles.getBubbleGroupedItems(bubble).forEach(this.toggleByElement);\n      return;\n    }\n\n    if(!this.toggleMid(this.bubbles.peerId, mid)) {\n      return;\n    }\n\n    const isGroupedItem = bubble.classList.contains('grouped-item');\n    if(isGroupedItem) {\n      const groupContainer = findUpClassName(bubble, 'bubble');\n      const isGroupedSelected = this.isGroupedBubbleSelected(groupContainer);\n      const isGroupedMidsSelected = this.isGroupedMidsSelected(mid);\n\n      const willChange = isGroupedMidsSelected || isGroupedSelected;\n      if(willChange) {\n        this.updateElementSelection(groupContainer, isGroupedMidsSelected);\n      }\n    }\n\n    this.updateElementSelection(bubble, this.isMidSelected(this.bubbles.peerId, mid));\n  };\n\n  protected toggleByMid = (peerId: PeerId, mid: number) => {\n    const mounted = this.bubbles.getMountedBubble(mid);\n    if(mounted) {\n      this.toggleByElement(mounted.bubble);\n    }\n  };\n\n  public isElementShouldBeSelected(element: HTMLElement) {\n    const isGrouped = element.classList.contains('is-grouped');\n    return super.isElementShouldBeSelected(element) && (!isGrouped || this.isGroupedMidsSelected(+element.dataset.mid));\n  }\n\n  protected isGroupedBubbleSelected(bubble: HTMLElement) {\n    const groupedCheckboxInput = this.getCheckboxInputFromElement(bubble);\n    return groupedCheckboxInput?.checked;\n  }\n\n  protected isGroupedMidsSelected(mid: number) {\n    const mids = this.chat.getMidsByMid(mid);\n    const selectedMids = mids.filter(mid => this.isMidSelected(this.bubbles.peerId, mid));\n    return mids.length === selectedMids.length;\n  }\n\n  protected getCheckboxInputFromElement(bubble: HTMLElement) {\n    /* let perf = performance.now();\n    let checkbox = bubble.firstElementChild.tagName === 'LABEL' && bubble.firstElementChild.firstElementChild as HTMLInputElement;\n    console.log('getCheckboxInputFromBubble firstElementChild time:', performance.now() - perf);\n  \n    perf = performance.now();\n    checkbox = bubble.querySelector('label input');\n    console.log('getCheckboxInputFromBubble querySelector time:', performance.now() - perf); */\n    /* let perf = performance.now();\n    let contains = bubble.classList.contains('document-container');\n    console.log('getCheckboxInputFromBubble classList time:', performance.now() - perf);\n  \n    perf = performance.now();\n    contains = bubble.className.includes('document-container');\n    console.log('getCheckboxInputFromBubble className time:', performance.now() - perf); */\n  \n    return bubble.classList.contains('document-container') ? \n      bubble.querySelector('label input') as HTMLInputElement : \n      super.getCheckboxInputFromElement(bubble);\n  }\n\n  public canSelectBubble(bubble: HTMLElement) {\n    return !bubble.classList.contains('service') && \n      !bubble.classList.contains('is-outgoing') && \n      !bubble.classList.contains('bubble-first') && \n      !bubble.classList.contains('avoid-selection');\n  }\n\n  protected onToggleSelection = (forwards: boolean, animate: boolean) => {\n    const {needTranslateX, widthFrom, widthTo} = this.chat.input.center(animate);\n\n    SetTransition(this.listenElement, 'is-selecting', forwards, animate ? 200 : 0, () => {\n      if(!this.isSelecting) {\n        this.selectionInputWrapper.remove();\n        this.selectionInputWrapper = \n          this.selectionContainer = \n          this.selectionSendNowBtn = \n          this.selectionForwardBtn = \n          this.selectionDeleteBtn = \n          this.selectionLeft = \n          this.selectionRight = \n          null;\n        this.selectedText = undefined;\n      }\n      \n      /* fastRaf(() => {\n        this.bubbles.onScroll();\n      }); */\n    });\n\n    //const chatInput = this.appImManager.chatInput;\n\n    const translateButtonsX = widthFrom < widthTo ? undefined : needTranslateX * 2;\n    if(this.isSelecting) {\n      if(!this.selectionContainer) {\n        this.selectionInputWrapper = document.createElement('div');\n        this.selectionInputWrapper.classList.add('chat-input-wrapper', 'selection-wrapper');\n\n        // const background = document.createElement('div');\n        // background.classList.add('chat-input-wrapper-background');\n\n        this.selectionContainer = document.createElement('div');\n        this.selectionContainer.classList.add('selection-container');\n\n        const attachClickOptions: AttachClickOptions = {listenerSetter: this.listenerSetter};\n        const btnCancel = ButtonIcon('close', {noRipple: true});\n        attachClickEvent(btnCancel, () => this.cancelSelection(), {once: true, listenerSetter: this.listenerSetter});\n\n        this.selectionCountEl = document.createElement('div');\n        this.selectionCountEl.classList.add('selection-container-count');\n\n        if(this.chat.type === 'scheduled') {\n          this.selectionSendNowBtn = Button('btn-primary btn-transparent btn-short text-bold selection-container-send', {icon: 'send2'});\n          this.selectionSendNowBtn.append(i18n('MessageScheduleSend'));\n          attachClickEvent(this.selectionSendNowBtn, () => {\n            new PopupSendNow(this.bubbles.peerId, [...this.selectedMids.get(this.bubbles.peerId)], () => {\n              this.cancelSelection();\n            });\n          }, attachClickOptions);\n        } else {\n          this.selectionForwardBtn = Button('btn-primary btn-transparent text-bold selection-container-forward', {icon: 'forward'});\n          this.selectionForwardBtn.append(i18n('Forward'));\n          attachClickEvent(this.selectionForwardBtn, () => {\n            const obj: {[fromPeerId: PeerId]: number[]} = {};\n            for(const [fromPeerId, mids] of this.selectedMids) {\n              obj[fromPeerId] = Array.from(mids).sort((a, b) => a - b);\n            }\n\n            new PopupForward(obj, () => {\n              this.cancelSelection();\n            });\n          }, attachClickOptions);\n        }\n\n        this.selectionDeleteBtn = Button('btn-primary btn-transparent danger text-bold selection-container-delete', {icon: 'delete'});\n        this.selectionDeleteBtn.append(i18n('Delete'));\n        attachClickEvent(this.selectionDeleteBtn, () => {\n          new PopupDeleteMessages(this.bubbles.peerId, [...this.selectedMids.get(this.bubbles.peerId)], this.chat.type, () => {\n            this.cancelSelection();\n          });\n        }, attachClickOptions);\n\n        const left = this.selectionLeft = document.createElement('div');\n        left.classList.add('selection-container-left');\n        left.append(btnCancel, this.selectionCountEl);\n\n        const right = this.selectionRight = document.createElement('div');\n        right.classList.add('selection-container-right');\n        right.append(...[\n          this.selectionSendNowBtn, \n          this.selectionForwardBtn, \n          this.selectionDeleteBtn\n        ].filter(Boolean))\n\n        if(translateButtonsX !== undefined) {\n          left.style.transform = `translateX(${-translateButtonsX}px)`;\n          right.style.transform = `translateX(${translateButtonsX}px)`;\n        }\n\n        this.selectionContainer.append(left, right);\n\n        // background.style.opacity = '0';\n        this.selectionInputWrapper.style.opacity = '0';\n        this.selectionInputWrapper.append(/* background,  */this.selectionContainer);\n        this.input.inputContainer.append(this.selectionInputWrapper);\n        \n        void this.selectionInputWrapper.offsetLeft; // reflow\n        // background.style.opacity = '';\n        this.selectionInputWrapper.style.opacity = '';\n        left.style.transform = '';\n        right.style.transform = '';\n      }\n    } else if(this.selectionLeft && translateButtonsX !== undefined) {\n      this.selectionLeft.style.transform = `translateX(-${translateButtonsX}px)`;\n      this.selectionRight.style.transform = `translateX(${translateButtonsX}px)`;\n    }\n  };\n\n  protected onUpdateContainer = (cantForward: boolean, cantDelete: boolean, cantSend: boolean) => {\n    replaceContent(this.selectionCountEl, i18n('messages', [this.length()]));\n    this.selectionSendNowBtn && this.selectionSendNowBtn.toggleAttribute('disabled', cantSend);\n    this.selectionForwardBtn && this.selectionForwardBtn.toggleAttribute('disabled', cantForward);\n    this.selectionDeleteBtn.toggleAttribute('disabled', cantDelete);\n  };\n\n  protected onCancelSelection = () => {\n    for(const [peerId, mids] of this.selectedMids) {\n      for(const mid of mids) {\n        const mounted = this.bubbles.getMountedBubble(mid);\n        if(mounted) {\n          //this.toggleByBubble(mounted.message.grouped_id ? mounted.bubble.querySelector(`.grouped-item[data-mid=\"${mid}\"]`) : mounted.bubble);\n          this.toggleByElement(mounted.bubble);\n        }\n        /* const bubble = this.appImManager.bubbles[mid];\n        if(bubble) {\n          this.toggleByBubble(bubble);\n        } */\n      }\n    }\n  };\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function getSelectedText(): string {\r\n  if(window.getSelection) {\r\n    return window.getSelection().toString();\r\n    // @ts-ignore\r\n  } else if(document.selection) {\r\n    // @ts-ignore\r\n    return document.selection.createRange().text;\r\n  }\r\n  \r\n  return '';\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appChatsManager from \"../lib/appManagers/appChatsManager\";\nimport appDialogsManager from \"../lib/appManagers/appDialogsManager\";\nimport appMessagesManager, { MyInputMessagesFilter, MyMessage } from \"../lib/appManagers/appMessagesManager\";\nimport appPeersManager from \"../lib/appManagers/appPeersManager\";\nimport appPhotosManager from \"../lib/appManagers/appPhotosManager\";\nimport appStateManager from \"../lib/appManagers/appStateManager\";\nimport appUsersManager from \"../lib/appManagers/appUsersManager\";\nimport { logger } from \"../lib/logger\";\nimport RichTextProcessor from \"../lib/richtextprocessor\";\nimport rootScope from \"../lib/rootScope\";\nimport { SearchGroup, SearchGroupType } from \"./appSearch\";\nimport { horizontalMenu } from \"./horizontalMenu\";\nimport LazyLoadQueue from \"./lazyLoadQueue\";\nimport { attachContextMenuListener, openBtnMenu, positionMenu, putPreloader } from \"./misc\";\nimport { ripple } from \"./ripple\";\nimport Scrollable, { ScrollableX } from \"./scrollable\";\nimport { wrapDocument, wrapPhoto, wrapVideo } from \"./wrappers\";\nimport useHeavyAnimationCheck, { getHeavyAnimationPromise } from \"../hooks/useHeavyAnimationCheck\";\nimport I18n, { LangPackKey, i18n } from \"../lib/langPack\";\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\nimport { getMiddleware } from \"../helpers/middleware\";\nimport appProfileManager from \"../lib/appManagers/appProfileManager\";\nimport { ChannelParticipant, ChatFull, ChatParticipant, ChatParticipants, Message, MessageMedia, Photo, WebPage } from \"../layer\";\nimport SortedUserList from \"./sortedUserList\";\nimport findUpTag from \"../helpers/dom/findUpTag\";\nimport appSidebarRight from \"./sidebarRight\";\nimport mediaSizes from \"../helpers/mediaSizes\";\nimport appImManager from \"../lib/appManagers/appImManager\";\nimport positionElementByIndex from \"../helpers/dom/positionElementByIndex\";\nimport cleanSearchText from \"../helpers/cleanSearchText\";\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\nimport handleTabSwipe from \"../helpers/dom/handleTabSwipe\";\nimport windowSize from \"../helpers/windowSize\";\nimport { formatPhoneNumber } from \"../helpers/formatPhoneNumber\";\nimport ButtonMenu, { ButtonMenuItemOptions } from \"./buttonMenu\";\nimport PopupForward from \"./popups/forward\";\nimport PopupDeleteMessages from \"./popups/deleteMessages\";\nimport Row from \"./row\";\nimport htmlToDocumentFragment from \"../helpers/dom/htmlToDocumentFragment\";\nimport { SearchSelection } from \"./chat/selection\";\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport { attachClickEvent, simulateClickEvent } from \"../helpers/dom/clickEvent\";\nimport { MyDocument } from \"../lib/appManagers/appDocsManager\";\nimport AppMediaViewer from \"./appMediaViewer\";\nimport lockTouchScroll from \"../helpers/dom/lockTouchScroll\";\nimport copy from \"../helpers/object/copy\";\nimport getObjectKeysAndSort from \"../helpers/object/getObjectKeysAndSort\";\nimport safeAssign from \"../helpers/object/safeAssign\";\nimport escapeRegExp from \"../helpers/string/escapeRegExp\";\nimport limitSymbols from \"../helpers/string/limitSymbols\";\n\n//const testScroll = false;\n\nexport type SearchSuperType = MyInputMessagesFilter/*  | 'members' */;\nexport type SearchSuperContext = {\n  peerId: PeerId,\n  inputFilter: {_: MyInputMessagesFilter},\n  query?: string,\n  maxId?: number,\n  folderId?: number,\n  threadId?: number,\n  date?: number,\n  nextRate?: number,\n  minDate?: number,\n  maxDate?: number\n};\n\nexport type SearchSuperMediaType = 'members' | 'media' | 'files' | 'links' | 'music' | 'chats' | 'voice';\nexport type SearchSuperMediaTab = {\n  inputFilter: SearchSuperType,\n  name: LangPackKey,\n  type: SearchSuperMediaType,\n  contentTab?: HTMLElement,\n  menuTab?: HTMLElement,\n  scroll?: {scrollTop: number, scrollHeight: number}\n};\n\nclass SearchContextMenu {\n  private buttons: (ButtonMenuItemOptions & {verify?: () => boolean, withSelection?: true})[];\n  private element: HTMLElement;\n  private target: HTMLElement;\n  private peerId: PeerId;\n  private mid: number;\n  private isSelected: boolean;\n\n  constructor(\n    private attachTo: HTMLElement,\n    private searchSuper: AppSearchSuper\n  ) {\n    const onContextMenu = (e: MouseEvent) => {\n      if(this.init) {\n        this.init();\n        this.init = null;\n      }\n\n      let item: HTMLElement;\n      try {\n        item = findUpClassName(e.target, 'search-super-item');\n      } catch(e) {}\n\n      if(!item) return;\n\n      if(e instanceof MouseEvent) e.preventDefault();\n      if(this.element.classList.contains('active')) {\n        return false;\n      }\n      if(e instanceof MouseEvent) e.cancelBubble = true;\n\n      this.target = item;\n      this.peerId = item.dataset.peerId.toPeerId();\n      this.mid = +item.dataset.mid;\n      this.isSelected = searchSuper.selection.isMidSelected(this.peerId, this.mid);\n\n      this.buttons.forEach(button => {\n        let good: boolean;\n\n        if(this.isSelected && !button.withSelection) {\n          good = false;\n        } else {\n          good = button.verify ? button.verify() : true;\n        }\n\n        button.element.classList.toggle('hide', !good);\n      });\n\n      item.classList.add('menu-open');\n\n      positionMenu(e, this.element);\n      openBtnMenu(this.element, () => {\n        item.classList.remove('menu-open');\n      });\n    };\n\n    if(IS_TOUCH_SUPPORTED) {\n\n    } else {\n      attachContextMenuListener(attachTo, onContextMenu as any);\n    }\n  }\n\n  private init() {\n    this.buttons = [{\n      icon: 'forward',\n      text: 'Forward',\n      onClick: this.onForwardClick,\n      verify: () => appMessagesManager.canForward(appMessagesManager.getMessageByPeer(this.peerId, this.mid))\n    }, {\n      icon: 'forward',\n      text: 'Message.Context.Selection.Forward',\n      onClick: this.onForwardClick,\n      verify: () => this.isSelected && \n        !this.searchSuper.selection.selectionForwardBtn.classList.contains('hide'),\n      withSelection: true\n    }, {\n      icon: 'message',\n      text: 'Message.Context.Goto',\n      onClick: this.onGotoClick,\n      withSelection: true\n    }, {\n      icon: 'select',\n      text: 'Message.Context.Select',\n      onClick: this.onSelectClick\n    }, {\n      icon: 'select',\n      text: 'Message.Context.Selection.Clear',\n      onClick: this.onClearSelectionClick,\n      verify: () => this.isSelected,\n      withSelection: true\n    }, {\n      icon: 'delete danger',\n      text: 'Delete',\n      onClick: this.onDeleteClick,\n      verify: () => appMessagesManager.canDeleteMessage(appMessagesManager.getMessageByPeer(this.peerId, this.mid))\n    }, {\n      icon: 'delete danger',\n      text: 'Message.Context.Selection.Delete',\n      onClick: this.onDeleteClick,\n      verify: () => this.isSelected && !this.searchSuper.selection.selectionDeleteBtn.classList.contains('hide'),\n      withSelection: true\n    }];\n\n    this.element = ButtonMenu(this.buttons);\n    this.element.classList.add('search-contextmenu', 'contextmenu');\n    document.getElementById('page-chats').append(this.element);\n  }\n\n  private onGotoClick = () => {\n    rootScope.dispatchEvent('history_focus', {\n      peerId: this.peerId,\n      mid: this.mid,\n      threadId: this.searchSuper.searchContext.threadId\n    });\n  };\n\n  private onForwardClick = () => {\n    if(this.searchSuper.selection.isSelecting) {\n      simulateClickEvent(this.searchSuper.selection.selectionForwardBtn);\n    } else {\n      new PopupForward({\n        [this.peerId]: [this.mid]\n      });\n    }\n  };\n\n  private onSelectClick = () => {\n    this.searchSuper.selection.toggleByElement(this.target);\n  };\n\n  private onClearSelectionClick = () => {\n    this.searchSuper.selection.cancelSelection();\n  };\n\n  private onDeleteClick = () => {\n    if(this.searchSuper.selection.isSelecting) {\n      simulateClickEvent(this.searchSuper.selection.selectionDeleteBtn);\n    } else {\n      new PopupDeleteMessages(this.peerId, [this.mid], 'chat');\n    }\n  };\n}\n\nexport type ProcessSearchSuperResult = {\n  message: Message.message, \n  middleware: () => boolean, \n  promises: Promise<any>[], \n  elemsToAppend: {element: HTMLElement, message: any}[],\n  inputFilter: MyInputMessagesFilter,\n  searchGroup?: SearchGroup\n};\n\nexport default class AppSearchSuper {\n  public tabs: {[t in SearchSuperType]: HTMLDivElement} = {} as any;\n\n  public mediaTab: SearchSuperMediaTab;\n\n  public container: HTMLElement;\n  public nav: HTMLElement;\n  public navScrollableContainer: HTMLDivElement;\n  public tabsContainer: HTMLElement;\n  public navScrollable: ScrollableX;\n  private tabsMenu: HTMLElement;\n  private prevTabId = -1;\n  \n  private lazyLoadQueue = new LazyLoadQueue();\n  public middleware = getMiddleware();\n\n  public historyStorage: Partial<{[type in SearchSuperType]: {mid: number, peerId: PeerId}[]}> = {};\n  public usedFromHistory: Partial<{[type in SearchSuperType]: number}> = {};\n  public urlsToRevoke: string[] = [];\n\n  public searchContext: SearchSuperContext;\n  public loadMutex: Promise<any> = Promise.resolve();\n\n  private nextRates: Partial<{[type in SearchSuperType]: number}> = {};\n  private loadPromises: Partial<{[type in SearchSuperType]: Promise<void>}> = {};\n  private loaded: Partial<{[type in SearchSuperType]: boolean}> = {};\n  private loadedChats = false;\n  private firstLoad = true;\n\n  private log = logger('SEARCH-SUPER');\n  public selectTab: ReturnType<typeof horizontalMenu>;\n  \n  private monthContainers: Partial<{\n    [type in SearchSuperType]: {\n      [timestamp: number]: {\n        container: HTMLElement,\n        items: HTMLElement\n      }\n    }\n  }> = {};\n\n  private searchGroupMedia: SearchGroup;\n\n  public mediaTabsMap: Map<SearchSuperMediaType, SearchSuperMediaTab> = new Map();\n\n  private membersList: SortedUserList;\n\n  private skipScroll: boolean;\n\n  // * arguments\n  public mediaTabs: SearchSuperMediaTab[];\n  public scrollable: Scrollable;\n  public searchGroups?: {[group in SearchGroupType]: SearchGroup};\n  public asChatList? = false;\n  public groupByMonth? = true;\n  public hideEmptyTabs? = true;\n  public onChangeTab?: (mediaTab: SearchSuperMediaTab) => void;\n  public showSender? = false;\n\n  private searchContextMenu: SearchContextMenu;\n  public selection: SearchSelection;\n\n  constructor(options: Pick<AppSearchSuper, 'mediaTabs' | 'scrollable' | 'searchGroups' | 'asChatList' | 'groupByMonth' | 'hideEmptyTabs' | 'onChangeTab' | 'showSender'>) {\n    safeAssign(this, options);\n\n    this.container = document.createElement('div');\n    this.container.classList.add('search-super');\n\n    this.searchContextMenu = new SearchContextMenu(this.container, this);\n    this.selection = new SearchSelection(this, appMessagesManager);\n\n    const navScrollableContainer = this.navScrollableContainer = document.createElement('div');\n    navScrollableContainer.classList.add('search-super-tabs-scrollable', 'menu-horizontal-scrollable', 'sticky');\n\n    const navScrollable = this.navScrollable = new ScrollableX(navScrollableContainer);\n    navScrollable.container.classList.add('search-super-nav-scrollable');\n\n    const nav = this.nav = document.createElement('nav');\n    nav.classList.add('search-super-tabs', 'menu-horizontal-div');\n    this.tabsMenu = nav;\n\n    navScrollable.container.append(nav);\n\n    for(const mediaTab of this.mediaTabs) {\n      const menuTab = document.createElement('div');\n      menuTab.classList.add('menu-horizontal-div-item');\n      const span = document.createElement('span');\n      const i = document.createElement('i');\n\n      span.append(i18n(mediaTab.name));\n      span.append(i);\n\n      menuTab.append(span);\n\n      ripple(menuTab);\n\n      this.tabsMenu.append(menuTab);\n\n      this.mediaTabsMap.set(mediaTab.type, mediaTab);\n\n      mediaTab.menuTab = menuTab;\n    }\n\n    this.tabsContainer = document.createElement('div');\n    this.tabsContainer.classList.add('search-super-tabs-container', 'tabs-container');\n\n    let unlockScroll: ReturnType<typeof lockTouchScroll>;\n    if(IS_TOUCH_SUPPORTED) {\n      handleTabSwipe({\n        element: this.tabsContainer, \n        onSwipe: (xDiff, yDiff, e) => {\n          const prevId = this.selectTab.prevId();\n          const children = Array.from(this.tabsMenu.children) as HTMLElement[];\n          let idx: number;\n          if(xDiff > 0) {\n            for(let i = prevId + 1; i < children.length; ++i) {\n              if(!children[i].classList.contains('hide')) {\n                idx = i;\n                break;\n              }\n            }\n          } else {\n            for(let i = prevId - 1; i >= 0; --i) {\n              if(!children[i].classList.contains('hide')) {\n                idx = i;\n                break;\n              }\n            }\n          }\n\n          if(idx !== undefined) {\n            unlockScroll = lockTouchScroll(this.tabsContainer);\n            this.selectTab(idx);\n          }\n        }\n      });\n    }\n\n    for(const mediaTab of this.mediaTabs) {\n      const container = document.createElement('div');\n      container.classList.add('search-super-container-' + mediaTab.type, 'tabs-tab');\n\n      const content = document.createElement('div');\n      content.classList.add('search-super-content-' + mediaTab.type);\n\n      container.append(content);\n\n      this.tabsContainer.append(container);\n\n      this.tabs[mediaTab.inputFilter] = content;\n\n      mediaTab.contentTab = content;\n    }\n\n    this.container.append(navScrollableContainer, this.tabsContainer);\n\n    // * construct end\n\n    this.searchGroupMedia = new SearchGroup(false, 'messages', true);\n\n    this.scrollable.onScrolledBottom = () => {\n      if(this.mediaTab.contentTab && !this.loaded[this.mediaTab.inputFilter]/* && false */) {\n        //this.log('onScrolledBottom will load media');\n        this.load(true);\n      }\n    };\n    //this.scroll.attachSentinels(undefined, 400);\n\n    this.selectTab = horizontalMenu(this.tabsMenu, this.tabsContainer, (id, tabContent, animate) => {\n      if(this.prevTabId === id && !this.skipScroll) {\n        this.scrollable.scrollIntoViewNew({\n          element: this.container, \n          position: 'start'\n        });\n        return;\n      }\n      \n      const newMediaTab = this.mediaTabs[id];\n      if(this.onChangeTab) {\n        this.onChangeTab(newMediaTab);\n      }\n      \n      const fromMediaTab = this.mediaTab;\n      this.mediaTab = newMediaTab;\n\n      if(this.prevTabId !== -1 && animate) {\n        this.onTransitionStart();\n      }\n\n      if(this.skipScroll) {\n        this.skipScroll = false;\n      } else {\n        const offsetTop = this.container.offsetTop;\n        let scrollTop = this.scrollable.scrollTop;\n        if(scrollTop < offsetTop) {\n          this.scrollable.scrollIntoViewNew({\n            element: this.container, \n            position: 'start'\n          });\n          scrollTop = offsetTop;\n        }\n        \n        fromMediaTab.scroll = {scrollTop: scrollTop, scrollHeight: this.scrollable.scrollHeight};\n  \n        if(newMediaTab.scroll === undefined) {\n          const rect = this.container.getBoundingClientRect();\n          const rect2 = this.container.parentElement.getBoundingClientRect();\n          const diff = rect.y - rect2.y;\n  \n          if(scrollTop > diff) {\n            newMediaTab.scroll = {scrollTop: diff, scrollHeight: 0};\n          }\n        }\n  \n        if(newMediaTab.scroll) {\n          const diff = fromMediaTab.scroll.scrollTop - newMediaTab.scroll.scrollTop;\n          //console.log('what you gonna do', this.goingHard, diff);\n  \n          //this.scrollable.scrollTop = scrollTop;\n          if(diff/*  && diff < 0 */) {\n            /* if(diff > -(fromMediaTab.contentTab.scrollHeight + this.nav.scrollHeight)) {\n              fromMediaTab.contentTab.style.transform = `translateY(${diff}px)`;\n              this.scrollable.scrollTop = scrollTop - diff;\n            } else { */\n              newMediaTab.contentTab.style.transform = `translateY(${diff}px)`;\n            //}\n          }\n        }\n      }\n      \n      /* if(this.prevTabId !== -1 && nav.offsetTop) {\n        this.scrollable.scrollTop -= nav.offsetTop;\n      } */\n\n      /* this.log('setVirtualContainer', id, this.sharedMediaSelected, this.sharedMediaSelected.childElementCount);\n      this.scroll.setVirtualContainer(this.sharedMediaSelected); */\n\n      if(this.prevTabId !== -1 && !newMediaTab.contentTab.childElementCount) { // quick brown fix\n        //this.contentContainer.classList.remove('loaded');\n        this.load(true);\n      }\n\n      this.prevTabId = id;\n    }, () => {\n      this.scrollable.onScroll();\n      \n      //console.log('what y', this.tabSelected.style.transform);\n      if(this.mediaTab.scroll !== undefined) {\n        this.mediaTab.contentTab.style.transform = '';\n        this.scrollable.scrollTop = this.mediaTab.scroll.scrollTop;\n      }\n\n      if(unlockScroll) {\n        unlockScroll();\n        unlockScroll = undefined;\n      }\n\n      this.onTransitionEnd();\n    }, undefined, navScrollable);\n\n    attachClickEvent(this.tabsContainer, (e) => {\n      if(this.selection.isSelecting) {\n        cancelEvent(e);\n        this.selection.toggleByElement(findUpClassName(e.target, 'search-super-item'));\n      }\n    }, {capture: true, passive: false});\n    \n    const onMediaClick = (className: string, targetClassName: string, inputFilter: MyInputMessagesFilter, e: MouseEvent) => {\n      const target = findUpClassName(e.target as HTMLDivElement, className);\n      if(!target) return;\n      \n      const mid = +target.dataset.mid;\n      if(!mid) {\n        this.log.warn('no messageId by click on target:', target);\n        return;\n      }\n\n      const peerId = target.dataset.peerId.toPeerId();\n\n      const targets = (Array.from(this.tabs[inputFilter].querySelectorAll('.' + targetClassName)) as HTMLElement[]).map(el => {\n        const containerEl = findUpClassName(el, className);\n        return {\n          element: el, \n          mid: +containerEl.dataset.mid, \n          peerId: containerEl.dataset.peerId.toPeerId()\n        };\n      });\n\n      //const ids = Object.keys(this.mediaDivsByIds).map(k => +k).sort((a, b) => a - b);\n      const idx = targets.findIndex(item => item.mid === mid && item.peerId === peerId);\n      \n      const message = appMessagesManager.getMessageByPeer(peerId, mid);\n      new AppMediaViewer()\n      .setSearchContext(this.copySearchContext(inputFilter))\n      .openMedia(message, targets[idx].element, 0, false, targets.slice(0, idx), targets.slice(idx + 1));\n    };\n\n    attachClickEvent(this.tabs.inputMessagesFilterPhotoVideo, onMediaClick.bind(null, 'grid-item', 'grid-item', 'inputMessagesFilterPhotoVideo'));\n    attachClickEvent(this.tabs.inputMessagesFilterDocument, onMediaClick.bind(null, 'document-with-thumb', 'media-container', 'inputMessagesFilterDocument'));\n\n    /* attachClickEvent(this.tabs.inputMessagesFilterUrl, (e) => {\n      const target = e.target as HTMLElement;\n      if(target.tagName === 'A') {\n        return;\n      }\n\n      try {\n        const a = findUpClassName(target, 'row').querySelector('.anchor-url:last-child') as HTMLAnchorElement;\n        a.click();\n      } catch(err) {}\n    }); */\n\n    this.mediaTab = this.mediaTabs[0];\n\n    useHeavyAnimationCheck(() => {\n      this.lazyLoadQueue.lock();\n    }, () => {\n      this.lazyLoadQueue.unlockAndRefresh(); // ! maybe not so efficient\n    });\n  }\n\n  private onTransitionStart = () => {\n    this.container.classList.add('sliding');\n  };\n\n  private onTransitionEnd = () => {\n    this.container.classList.remove('sliding');\n  };\n\n  public filterMessagesByType(messages: any[], type: SearchSuperType): MyMessage[] {\n    if(type === 'inputMessagesFilterEmpty') return messages;\n\n    if(type !== 'inputMessagesFilterUrl') {\n      messages = messages.filter(message => !!message.media);\n    }\n\n    /* if(!this.peerId) {\n      messages = messages.filter(message => {\n        if(message.peerId === rootScope.myId) {\n          return true;\n        }\n\n        const dialog = appMessagesManager.getDialogByPeerId(message.fromId)[0];\n        return dialog && dialog.folder_id === 0;\n      });\n    } */\n\n    let filtered: any[] = [];\n\n    switch(type) {\n      case 'inputMessagesFilterPhotoVideo': {\n        for(let message of messages) {\n          let media = message.media.photo || message.media.document || (message.media.webpage && message.media.webpage.document);\n          if(!media) {\n            //this.log('no media!', message);\n            continue;\n          }\n          \n          if(media._ === 'document' && media.type !== 'video'/*  && media.type !== 'gif' */) {\n            //this.log('broken video', media);\n            continue;\n          }\n\n          filtered.push(message);\n        }\n        \n        break;\n      }\n\n      case 'inputMessagesFilterDocument': {\n        for(let message of messages) {\n          if(!message.media.document || ['voice', 'audio', 'gif', 'sticker', 'round'].includes(message.media.document.type)) {\n            continue;\n          }\n          \n          filtered.push(message);\n        }\n        break;\n      }\n\n      case 'inputMessagesFilterUrl': {\n        //this.log('inputMessagesFilterUrl', messages);\n        for(let message of messages) {\n          //if((message.media.webpage && message.media.webpage._ !== 'webPageEmpty')) {\n            filtered.push(message);\n          //}\n        }\n        \n        break;\n      }\n\n      case 'inputMessagesFilterMusic': {\n        for(let message of messages) {\n          if(!message.media.document || message.media.document.type !== 'audio') {\n            continue;\n          }\n\n          filtered.push(message);\n        }\n\n        break;\n      }\n\n      case 'inputMessagesFilterVoice': {\n        for(let message of messages) {\n          if(!message.media.document || message.media.document.type !== 'voice') {\n            continue;\n          }\n\n          filtered.push(message);\n        }\n\n        break;\n      }\n\n      case 'inputMessagesFilterRoundVoice': {\n        for(let message of messages) {\n          if(!message.media.document || !(['voice', 'round'] as MyDocument['type'][]).includes(message.media.document.type)) {\n            continue;\n          }\n\n          filtered.push(message);\n        }\n\n        break;\n      }\n\n      default:\n        break;\n    }\n\n    return filtered;\n  }\n\n  private processEmptyFilter({message, searchGroup}: ProcessSearchSuperResult) {\n    const {dialog, dom} = appDialogsManager.addDialogNew({\n      dialog: message.peerId, \n      container: searchGroup.list, \n      drawStatus: false,\n      avatarSize: 54\n    });\n\n    appDialogsManager.setLastMessage(dialog, message, dom, this.searchContext.query);\n  }\n\n  private processPhotoVideoFilter({message, promises, middleware, elemsToAppend}: ProcessSearchSuperResult) {\n    const media = appMessagesManager.getMediaFromMessage(message);\n\n    const div = document.createElement('div');\n    div.classList.add('grid-item');\n    //this.log(message, photo);\n\n    let wrapped: ReturnType<typeof wrapPhoto>;\n    const size = appPhotosManager.choosePhotoSize(media, 200, 200);\n    if(media._ !== 'photo') {\n      wrapped = wrapVideo({\n        doc: media,\n        message,\n        container: div,\n        boxWidth: 0,\n        boxHeight: 0,\n        lazyLoadQueue: this.lazyLoadQueue,\n        middleware,\n        onlyPreview: true,\n        withoutPreloader: true,\n        noPlayButton: true,\n        size\n      }).thumb;\n    } else {\n      wrapped = wrapPhoto({\n        photo: media,\n        message,\n        container: div,\n        boxWidth: 0,\n        boxHeight: 0,\n        lazyLoadQueue: this.lazyLoadQueue,\n        middleware,\n        withoutPreloader: true,\n        noBlur: true,\n        size\n      });\n    }\n\n    [wrapped.images.thumb, wrapped.images.full].filter(Boolean).forEach(image => {\n      image.classList.add('grid-item-media');\n    });\n\n    promises.push(wrapped.loadPromises.thumb);\n\n    elemsToAppend.push({element: div, message});\n  }\n\n  private processDocumentFilter({message, elemsToAppend, inputFilter}: ProcessSearchSuperResult) {\n    const document = appMessagesManager.getMediaFromMessage(message);\n    const showSender = this.showSender || (['voice', 'round'] as MyDocument['type'][]).includes(document.type);\n    const div = wrapDocument({\n      message,\n      withTime: !showSender,\n      fontWeight: 400,\n      voiceAsMusic: true,\n      showSender,\n      searchContext: this.copySearchContext(inputFilter),\n      lazyLoadQueue: this.lazyLoadQueue,\n      autoDownloadSize: 0\n    });\n\n    if((['audio', 'voice', 'round'] as MyDocument['type'][]).includes(document.type)) {\n      div.classList.add('audio-48');\n    }\n\n    elemsToAppend.push({element: div, message});\n  }\n\n  private processUrlFilter({message, promises, middleware, elemsToAppend}: ProcessSearchSuperResult) {\n    let webpage = (message.media as MessageMedia.messageMediaWebPage)?.webpage as WebPage.webPage;\n\n    if(!webpage) {\n      const entity = message.totalEntities ? message.totalEntities.find((e: any) => e._ === 'messageEntityUrl' || e._ === 'messageEntityTextUrl') : null;\n      let url: string, display_url: string, sliced: string;\n\n      if(!entity) {\n        //this.log.error('NO ENTITY:', message);\n        const match = RichTextProcessor.matchUrl(message.message);\n        if(!match) {\n          //this.log.error('NO ENTITY AND NO MATCH:', message);\n          return;\n        }\n\n        url = match[0];\n      } else {\n        sliced = message.message.slice(entity.offset, entity.offset + entity.length);\n      }\n\n      if(entity?._ === 'messageEntityTextUrl') {\n        url = entity.url;\n        //display_url = sliced;\n      } else {\n        url = url || sliced;\n      }\n\n      display_url = url;\n\n      const same = message.message === url;\n      if(!url.match(/^(ftp|http|https):\\/\\//)) {\n        display_url = 'https://' + url;\n        url = url.includes('@') ? url : 'https://' + url;\n      }\n\n      display_url = new URL(display_url).hostname;\n\n      webpage = {\n        _: 'webPage',\n        url,\n        display_url,\n        id: '',\n        hash: 0\n      };\n\n      if(!same) {\n        webpage.description = message.message;\n        webpage.rDescription = RichTextProcessor.wrapRichText(limitSymbols(message.message, 150, 180));\n      }\n    }\n\n    let previewDiv = document.createElement('div');\n    previewDiv.classList.add('preview', 'row-media');\n    \n    //this.log('wrapping webpage', webpage);\n    \n    if(webpage.photo) {\n      const res = wrapPhoto({\n        container: previewDiv,\n        message: null,\n        photo: webpage.photo as Photo.photo,\n        boxWidth: 0,\n        boxHeight: 0,\n        withoutPreloader: true,\n        lazyLoadQueue: this.lazyLoadQueue,\n        middleware,\n        size: appPhotosManager.choosePhotoSize(webpage.photo as Photo.photo, 60, 60, false),\n        loadPromises: promises,\n        noBlur: true\n      });\n    } else {\n      previewDiv.classList.add('empty');\n      previewDiv.innerHTML = RichTextProcessor.getAbbreviation(webpage.title || webpage.display_url || webpage.description || webpage.url, true);\n    }\n    \n    let title = webpage.rTitle || '';\n    let subtitle = webpage.rDescription || '';\n\n    const subtitleFragment = htmlToDocumentFragment(subtitle);\n    const aFragment = htmlToDocumentFragment(RichTextProcessor.wrapRichText(webpage.url || ''));\n    const a = aFragment.firstElementChild;\n    if(a instanceof HTMLAnchorElement) {\n      try { // can have 'URIError: URI malformed'\n        a.innerText = decodeURIComponent(a.href);\n      } catch(err) {\n\n      }\n    }\n\n    if(subtitleFragment.firstChild) {\n      subtitleFragment.append('\\n');\n    }\n\n    subtitleFragment.append(a);\n\n    if(this.showSender) {\n      subtitleFragment.append('\\n', appMessagesManager.wrapSenderToPeer(message));\n    }\n    \n    if(!title) {\n      //title = new URL(webpage.url).hostname;\n      title = RichTextProcessor.wrapPlainText(webpage.display_url.split('/', 1)[0]);\n    }\n\n    const row = new Row({\n      title,\n      titleRight: appMessagesManager.wrapSentTime(message),\n      subtitle: subtitleFragment,\n      havePadding: true,\n      clickable: true,\n      noRipple: true\n    });\n\n    /* const mediaDiv = document.createElement('div');\n    mediaDiv.classList.add('row-media'); */\n\n    row.container.append(previewDiv);\n    \n    /* ripple(div);\n    div.append(previewDiv);\n    div.insertAdjacentHTML('beforeend', `\n    <div class=\"title\">${title}${titleAdditionHTML}</div>\n    <div class=\"subtitle\">${subtitle}</div>\n    <div class=\"url\">${url}</div>\n    ${sender}\n    `); */\n    \n    if(row.container.innerText.trim().length) {\n      elemsToAppend.push({element: row.container, message});\n    }\n  }\n  \n  public async performSearchResult(messages: any[], mediaTab: SearchSuperMediaTab, append = true) {\n    const elemsToAppend: {element: HTMLElement, message: any}[] = [];\n    const sharedMediaDiv: HTMLElement = mediaTab.contentTab;\n    const promises: Promise<any>[] = [];\n    const middleware = this.middleware.get();\n    let inputFilter = mediaTab.inputFilter;\n\n    await getHeavyAnimationPromise();\n    \n    let searchGroup: SearchGroup;\n    if(inputFilter === 'inputMessagesFilterPhotoVideo' && !!this.searchContext.query.trim()) {\n      inputFilter = 'inputMessagesFilterEmpty';\n      searchGroup = this.searchGroupMedia;\n      sharedMediaDiv.append(searchGroup.container);\n    } else if(inputFilter === 'inputMessagesFilterEmpty') {\n      searchGroup = this.searchGroups.messages;\n    }\n\n    const options: ProcessSearchSuperResult = {\n      elemsToAppend,\n      inputFilter,\n      message: undefined,\n      middleware,\n      promises,\n      searchGroup\n    };\n\n    let processCallback: (options: ProcessSearchSuperResult) => any;\n\n    // https://core.telegram.org/type/MessagesFilter\n    switch(inputFilter) {\n      case 'inputMessagesFilterEmpty': {\n        processCallback = this.processEmptyFilter;\n        break;\n      }\n\n      case 'inputMessagesFilterPhotoVideo': {\n        processCallback = this.processPhotoVideoFilter;\n        break;\n      }\n      \n      case 'inputMessagesFilterVoice':\n      case 'inputMessagesFilterRoundVoice':\n      case 'inputMessagesFilterMusic':\n      case 'inputMessagesFilterDocument': {\n        processCallback = this.processDocumentFilter;\n        break;\n      }\n      \n      case 'inputMessagesFilterUrl': {\n        processCallback = this.processUrlFilter;\n        break;\n      }\n\n      default:\n        //this.log.warn('death is my friend', messages);\n        break;\n    }\n\n    if(processCallback) {\n      processCallback = processCallback.bind(this);\n\n      for(const message of messages) {\n        try {\n          options.message = message;\n          processCallback(options);\n        } catch(err) {\n          this.log.error('error rendering filter', inputFilter, options, message, err);\n        }\n      }\n    }\n    \n    if(searchGroup && searchGroup.list.childElementCount) {\n      searchGroup.setActive();\n    }\n\n    if(this.loadMutex) {\n      promises.push(this.loadMutex);\n    }\n\n    if(promises.length) {\n      await Promise.all(promises);\n      if(!middleware()) {\n        //this.log.warn('peer changed');\n        return;\n      }\n    }\n    \n    if(elemsToAppend.length) {\n      const method = append ? 'append' : 'prepend';\n      elemsToAppend.forEach(details => {\n        const {element, message} = details;\n        const monthContainer = this.getMonthContainerByTimestamp(this.groupByMonth ? message.date : 0, inputFilter);\n        element.classList.add('search-super-item');\n        element.dataset.mid = '' + message.mid;\n        element.dataset.peerId = '' + message.peerId;\n        monthContainer.items[method](element);\n\n        if(this.selection.isSelecting) {\n          this.selection.toggleElementCheckbox(element, true);\n        }\n      });\n    }\n    \n    //if(type !== 'inputMessagesFilterEmpty') {\n      this.afterPerforming(inputFilter === 'inputMessagesFilterEmpty' ? 1 : messages.length, sharedMediaDiv);\n    //}\n  }\n\n  private afterPerforming(length: number, contentTab: HTMLElement) {\n    if(contentTab) {\n      const parent = contentTab.parentElement;\n      Array.from(parent.children).slice(1).forEach(child => {\n        child.remove();\n      });\n\n      //this.contentContainer.classList.add('loaded');\n\n      if(!length && !contentTab.childElementCount) {\n        const div = document.createElement('div');\n        div.innerText = 'Nothing interesting here yet...';\n        div.classList.add('position-center', 'text-center', 'content-empty', 'no-select');\n\n        parent.append(div);\n      }\n    }\n  }\n\n  private loadChats() {\n    const renderedPeerIds: Set<PeerId> = new Set();\n    const middleware = this.middleware.get();\n\n    for(let i in this.searchGroups) {\n      const group = this.searchGroups[i as SearchGroupType];\n      this.tabs.inputMessagesFilterEmpty.append(group.container);\n      group.clear();\n    }\n\n    const query = this.searchContext.query;\n    if(query) {\n      const setResults = (results: PeerId[], group: SearchGroup, showMembersCount = false) => {\n        results.forEach((peerId) => {\n          if(renderedPeerIds.has(peerId)) {\n            return;\n          }\n  \n          renderedPeerIds.add(peerId);\n  \n          const peer = appPeersManager.getPeer(peerId);\n  \n          //////////this.log('contacts peer', peer);\n  \n          const {dom} = appDialogsManager.addDialogNew({\n            dialog: peerId, \n            container: group.list, \n            drawStatus: false,\n            avatarSize: 48,\n            autonomous: group.autonomous\n          });\n  \n          if(showMembersCount && (peer.participants_count || peer.participants)) {\n            const regExp = new RegExp(`(${escapeRegExp(query)}|${escapeRegExp(cleanSearchText(query))})`, 'gi');\n            dom.titleSpan.innerHTML = dom.titleSpan.innerHTML.replace(regExp, '<i>$1</i>');\n            dom.lastMessageSpan.append(appProfileManager.getChatMembersString(peerId.toChatId()));\n          } else if(peerId === rootScope.myId) {\n            dom.lastMessageSpan.append(i18n('Presence.YourChat'));\n          } else {\n            let username = appPeersManager.getPeerUsername(peerId);\n            if(!username) {\n              const user = appUsersManager.getUser(peerId);\n              if(user && user.phone) {\n                username = '+' + formatPhoneNumber(user.phone).formatted;\n              }\n            } else {\n              username = '@' + username;\n            }\n  \n            dom.lastMessageSpan.innerHTML = '<i>' + username + '</i>';\n          }\n        });\n  \n        group.toggle();\n      };\n  \n      const onLoad = <T>(arg: T) => {\n        if(!middleware()) {\n          return;\n        }\n  \n        //this.loadedContacts = true;\n  \n        return arg;\n      };\n  \n      return Promise.all([\n        appUsersManager.getContactsPeerIds(query, true)\n        .then(onLoad)\n        .then((contacts) => {\n          if(contacts) {\n            setResults(contacts, this.searchGroups.contacts, true);\n          }\n        }),\n  \n        appUsersManager.searchContacts(query, 20)\n        .then(onLoad)\n        .then((contacts) => {\n          if(contacts) {\n            setResults(contacts.my_results, this.searchGroups.contacts, true);\n            setResults(contacts.results/* .concat(contacts.results, contacts.results, contacts.results) */, this.searchGroups.globalContacts);\n\n            this.searchGroups.globalContacts.container.classList.add('is-short');\n\n            if(this.searchGroups.globalContacts.nameEl.lastElementChild !== this.searchGroups.globalContacts.nameEl.firstElementChild) {\n              this.searchGroups.globalContacts.nameEl.lastElementChild.remove();\n            }\n            \n            if(this.searchGroups.globalContacts.list.childElementCount > 3) {\n              const showMore = document.createElement('div');\n              showMore.classList.add('search-group__show-more');\n              const intlElement = new I18n.IntlElement({\n                key: 'Separator.ShowMore'\n              });\n              showMore.append(intlElement.element);\n              this.searchGroups.globalContacts.nameEl.append(showMore);\n              attachClickEvent(showMore, () => {\n                const isShort = this.searchGroups.globalContacts.container.classList.toggle('is-short');\n                intlElement.key = isShort ? 'Separator.ShowMore' : 'Separator.ShowLess';\n                intlElement.update();\n              });\n            }\n          }\n        }),\n  \n        appMessagesManager.getConversations(query, 0, 20, 0).promise\n        .then(onLoad)\n        .then(value => {\n          if(value) {\n            setResults(value.dialogs.map(d => d.peerId), this.searchGroups.contacts, true);\n          }\n        })\n      ]);\n    } else if(!this.searchContext.peerId && !this.searchContext.minDate) {\n      const renderRecentSearch = (setActive = true) => {\n        return appStateManager.getState().then(state => {\n          if(!middleware()) {\n            return;\n          }\n    \n          this.searchGroups.recent.list.innerHTML = '';\n    \n          state.recentSearch.slice(0, 20).forEach(peerId => {\n            let {dialog, dom} = appDialogsManager.addDialogNew({\n              dialog: peerId,\n              container: this.searchGroups.recent.list,\n              drawStatus: false,\n              meAsSaved: true,\n              avatarSize: 48,\n              autonomous: true\n            });\n    \n            dom.lastMessageSpan.append(peerId.isUser() ? appUsersManager.getUserStatusString(peerId) : appProfileManager.getChatMembersString(peerId.toChatId()));\n          });\n    \n          if(!state.recentSearch.length) {\n            this.searchGroups.recent.clear();\n          } else if(setActive) {\n            this.searchGroups.recent.setActive();\n          }\n        });\n      };\n\n      return Promise.all([\n        appUsersManager.getTopPeers('correspondents').then(peers => {\n          if(!middleware()) return;\n\n          const idx = peers.findIndex(peer => peer.id === rootScope.myId);\n          if(idx !== -1) {\n            peers = peers.slice();\n            peers.splice(idx, 1);\n          }\n          //console.log('got top categories:', categories);\n          if(peers.length) {\n            peers.forEach((peer) => {\n              appDialogsManager.addDialogNew({\n                dialog: peer.id, \n                container: this.searchGroups.people.list, \n                drawStatus: false,\n                onlyFirstName: true,\n                avatarSize: 54,\n                autonomous: false\n              });\n            });\n          }\n    \n          this.searchGroups.people.setActive();\n        }),\n\n        renderRecentSearch()\n      ]);\n    } else return Promise.resolve();\n  }\n\n  private loadMembers(mediaTab: SearchSuperMediaTab) {\n    const id = this.searchContext.peerId.toChatId();\n    const middleware = this.middleware.get();\n    let promise: Promise<void>;\n\n    const renderParticipants = async(participants: (ChatParticipant | ChannelParticipant)[]) => {\n      if(this.loadMutex) {\n        await this.loadMutex;\n\n        if(!middleware()) {\n          return;\n        }\n      }\n      \n      if(!this.membersList) {\n        this.membersList = new SortedUserList({lazyLoadQueue: this.lazyLoadQueue, rippleEnabled: false});\n        attachClickEvent(this.membersList.list, (e) => {\n          const li = findUpTag(e.target, 'LI');\n          if(!li) {\n            return;\n          }\n\n          const peerId = li.dataset.peerId.toPeerId();\n          let promise: Promise<any> = Promise.resolve();\n          if(mediaSizes.isMobile) {\n            promise = appSidebarRight.toggleSidebar(false);\n          }\n          \n          promise.then(() => {\n            appImManager.setInnerPeer({peerId});\n          });\n        });\n        mediaTab.contentTab.append(this.membersList.list);\n        this.afterPerforming(1, mediaTab.contentTab);\n      }\n\n      participants.forEach(participant => {\n        const peerId = appChatsManager.getParticipantPeerId(participant);\n        if(peerId.isAnyChat()) {\n          return;\n        }\n\n        const user = appUsersManager.getUser(peerId);\n        if(user.pFlags.deleted) {\n          return;\n        }\n\n        this.membersList.add(peerId);\n      });\n    };\n\n    if(appChatsManager.isChannel(id)) {\n      const LOAD_COUNT = !this.membersList ? 50 : 200;\n      promise = appProfileManager.getChannelParticipants(id, undefined, LOAD_COUNT, this.nextRates[mediaTab.inputFilter]).then(participants => {\n        if(!middleware()) {\n          return;\n        }\n\n        let list = mediaTab.contentTab.firstElementChild as HTMLUListElement;\n        this.nextRates[mediaTab.inputFilter] = (list ? list.childElementCount : 0) + participants.participants.length;\n\n        if(participants.participants.length < LOAD_COUNT) {\n          this.loaded[mediaTab.inputFilter] = true;\n        }\n\n        return renderParticipants(participants.participants);\n      });\n    } else {\n      promise = Promise.resolve(appProfileManager.getChatFull(id)).then(chatFull => {\n        if(!middleware()) {\n          return;\n        }\n\n        //console.log('anymore', chatFull);\n        this.loaded[mediaTab.inputFilter] = true;\n        const participants = (chatFull as ChatFull.chatFull).participants;\n        if(participants._ === 'chatParticipantsForbidden') {\n          return;\n        }\n        \n        return renderParticipants(participants.participants);\n      });\n    }\n\n    return this.loadPromises[mediaTab.inputFilter] = promise.finally(() => { \n      if(!middleware()) {\n        return;\n      }\n\n      this.loadPromises[mediaTab.inputFilter] = null;\n    });\n  }\n\n  private loadType(mediaTab: SearchSuperMediaTab, justLoad: boolean, loadCount: number, middleware: () => boolean) {\n    const type = mediaTab.inputFilter;\n\n    if(this.loadPromises[type]) {\n      return this.loadPromises[type];\n    }\n\n    if(mediaTab.type === 'members') {\n      return this.loadMembers(mediaTab);\n    }\n\n    const history = this.historyStorage[type] ?? (this.historyStorage[type] = []);\n\n    if(type === 'inputMessagesFilterEmpty' && !history.length) {\n      if(!this.loadedChats) {\n        this.loadChats();\n        this.loadedChats = true;\n      }\n\n      if(!this.searchContext.query.trim() && !this.searchContext.peerId && !this.searchContext.minDate) {\n        this.loaded[type] = true;\n        return Promise.resolve();\n      }\n    }\n\n    const logStr = 'load [' + type + ']: ';\n\n    // render from cache\n    if(history.length && this.usedFromHistory[type] < history.length && !justLoad) {\n      let messages: any[] = [];\n      let used = Math.max(0, this.usedFromHistory[type]);\n      let slicedLength = 0;\n\n      do {\n        let ids = history.slice(used, used + loadCount);\n        //this.log(logStr + 'will render from cache', used, history, ids, loadCount);\n        used += ids.length;\n        slicedLength += ids.length;\n\n        messages.push(...this.filterMessagesByType(ids.map(m => appMessagesManager.getMessageByPeer(m.peerId, m.mid)), type));\n      } while(slicedLength < loadCount && used < history.length);\n      \n      // если перебор\n      /* if(slicedLength > loadCount) {\n        let diff = messages.length - loadCount;\n        messages = messages.slice(0, messages.length - diff);\n        used -= diff;\n      } */\n\n      this.usedFromHistory[type] = used;\n      //if(messages.length) {\n        return this.performSearchResult(messages, mediaTab).finally(() => {\n          setTimeout(() => {\n            this.scrollable.checkForTriggers();\n          }, 0);\n        });\n      //}\n\n      return Promise.resolve();\n    }\n    \n    let maxId = history.length ? history[history.length - 1].mid : 0;\n    \n    //this.log(logStr + 'search house of glass pre', type, maxId);\n    \n    //let loadCount = history.length ? 50 : 15;\n    return this.loadPromises[type] = appMessagesManager.getSearch({\n      ...this.searchContext,\n      inputFilter: {_: type},\n      maxId, \n      limit: loadCount,\n      nextRate: this.nextRates[type] ?? (this.nextRates[type] = 0)\n    }).then(value => {\n      history.push(...value.history.map(m => ({mid: m.mid, peerId: m.peerId})));\n      \n      this.log(logStr + 'search house of glass', type, value);\n\n      if(!middleware()) {\n        //this.log.warn('peer changed');\n        return;\n      }\n\n      // ! Фикс случая, когда не загружаются документы при открытой панели разработчиков (происходит из-за того, что не совпадают критерии отбора документов в getSearch)\n      if(value.history.length < loadCount || (this.searchContext.folderId !== undefined && !value.next_rate) || value.history.length === value.count) {\n      //if((value.count || history.length === value.count) && history.length >= value.count) {\n        //this.log(logStr + 'loaded all media', value, loadCount);\n        this.loaded[type] = true;\n      }\n\n      this.nextRates[type] = value.next_rate;\n\n      if(justLoad) {\n        return Promise.resolve();\n      }\n\n      this.usedFromHistory[type] = history.length;\n\n      if(!this.loaded[type]) {\n        (this.loadPromises[type] || Promise.resolve()).then(() => {\n          setTimeout(() => {\n            if(!middleware()) return;\n            //this.log('will preload more');\n            if(this.mediaTab === mediaTab) {\n              const promise = this.load(true, true);\n              if(promise) {\n                promise.then(() => {\n                  if(!middleware()) return;\n                  //this.log('preloaded more');\n                  setTimeout(() => {\n                    this.scrollable.checkForTriggers();\n                  }, 0);\n                });\n              }\n            }\n          }, 0);\n        });\n      }\n\n      //if(value.history.length) {\n        return this.performSearchResult(this.filterMessagesByType(value.history, type), mediaTab);\n      //}\n    }).catch(err => {\n      this.log.error('load error:', err);\n    }).finally(() => {\n      this.loadPromises[type] = null;\n    });\n  }\n  \n  public async load(single = false, justLoad = false) {\n    // if(testScroll/*  || 1 === 1 */) {\n    //   return;\n    // }\n\n    //return;\n    \n    const peerId = this.searchContext.peerId;\n    this.log('load', single, peerId, this.loadPromises);\n    const middleware = this.middleware.get();\n\n    if(this.firstLoad) {\n      if(this.hideEmptyTabs) {\n        const mediaTabs = this.mediaTabs.filter(mediaTab => mediaTab.inputFilter !== 'inputMessagesFilterEmpty')\n        const filters = mediaTabs.map(mediaTab => ({_: mediaTab.inputFilter}));\n\n        const counters = await appMessagesManager.getSearchCounters(peerId, filters);\n        if(!middleware()) {\n          return;\n        }\n\n        if(this.loadMutex) {\n          await this.loadMutex;\n\n          if(!middleware()) {\n            return;\n          }\n        }\n\n        let firstMediaTab: SearchSuperMediaTab;\n        let count = 0;\n        mediaTabs.forEach(mediaTab => {\n          const counter = counters.find(c => c.filter._ === mediaTab.inputFilter);\n\n          mediaTab.menuTab.classList.toggle('hide', !counter.count);\n          mediaTab.menuTab.classList.remove('active');\n          //mediaTab.contentTab.classList.toggle('hide', !counter.count);\n\n          if(counter.count && firstMediaTab === undefined) {\n            firstMediaTab = mediaTab;\n          }\n\n          if(counter.count) ++count;\n        });\n\n        const membersTab = this.mediaTabsMap.get('members');\n        const canViewMembers = this.canViewMembers();\n        membersTab.menuTab.classList.toggle('hide', !canViewMembers);\n\n        if(canViewMembers) {\n          firstMediaTab = membersTab;\n        }\n\n        this.container.classList.toggle('hide', !firstMediaTab);\n        this.container.parentElement.classList.toggle('search-empty', !firstMediaTab);\n        if(firstMediaTab) {\n          this.skipScroll = true;\n          this.selectTab(this.mediaTabs.indexOf(firstMediaTab), false);\n          firstMediaTab.menuTab.classList.add('active');\n\n          this.navScrollableContainer.classList.toggle('hide', count <= 1);\n        }\n      }\n\n      this.firstLoad = false;\n    }\n    \n    let toLoad = single ? [this.mediaTab] : this.mediaTabs.filter(t => t !== this.mediaTab);\n    toLoad = toLoad.filter(mediaTab => {\n      const inputFilter = mediaTab.inputFilter;\n      return !this.loaded[inputFilter] || (this.historyStorage[inputFilter] && this.usedFromHistory[inputFilter] < this.historyStorage[inputFilter].length);\n    });\n\n    if(peerId.isUser()) {\n      toLoad.findAndSplice(mediaTab => mediaTab.type === 'members');\n    }\n\n    if(!toLoad.length) {\n      return;\n    }\n\n    const loadCount = justLoad ? 50 : Math.round((windowSize.height / 130 | 0) * 3 * 1.25); // that's good for all types\n\n    const promises: Promise<any>[] = toLoad.map(mediaTab => {\n      return this.loadType(mediaTab, justLoad, loadCount, middleware)\n    });\n\n    return Promise.all(promises).catch(err => {\n      this.log.error('Load error all promises:', err);\n    });\n  }\n  \n  public getMonthContainerByTimestamp(timestamp: number, type: SearchSuperType) {\n    const date = new Date(timestamp * 1000);\n    date.setHours(0, 0, 0);\n    date.setDate(1);\n    const dateTimestamp = date.getTime();\n    const containers = this.monthContainers[type] ?? (this.monthContainers[type] = {});\n    if(!(dateTimestamp in containers)) {\n      const container = document.createElement('div');\n      container.className = 'search-super-month';\n\n      const name = document.createElement('div');\n      name.classList.add('search-super-month-name');\n\n      const options: Intl.DateTimeFormatOptions = {\n        month: 'long'\n      };\n\n      if(date.getFullYear() !== new Date().getFullYear()) {\n        options.year = 'numeric';\n      }\n\n      const dateElement = new I18n.IntlDateElement({\n        date,\n        options\n      }).element;\n      name.append(dateElement);\n\n      container.append(name);\n\n      const items = document.createElement('div');\n      items.classList.add('search-super-month-items');\n\n      container.append(name, items);\n\n      const haveTimestamps = getObjectKeysAndSort(containers, 'desc');\n      let i = 0;\n      for(; i < haveTimestamps.length; ++i) {\n        const t = haveTimestamps[i];\n        if(dateTimestamp > t) {\n          break;\n        }\n      }\n      \n      containers[dateTimestamp] = {container, items};\n      positionElementByIndex(container, this.tabs[type], i);\n    }\n\n    return containers[dateTimestamp];\n  }\n\n  public canViewMembers() {\n    return this.searchContext.peerId.isAnyChat() && !appChatsManager.isBroadcast(this.searchContext.peerId.toChatId()) && appChatsManager.hasRights(this.searchContext.peerId.toChatId(), 'view_participants');\n  }\n\n  public cleanup() {\n    this.loadPromises = {};\n    this.loaded = {};\n    this.loadedChats = false;\n    this.nextRates = {};\n    this.firstLoad = true;\n\n    this.lazyLoadQueue.clear();\n\n    this.mediaTabs.forEach(mediaTab => {\n      this.usedFromHistory[mediaTab.inputFilter] = -1;\n    });\n\n    if(this.selection.isSelecting) {\n      this.selection.cancelSelection();\n    }\n\n    // * must go to first tab (это костыль)\n    /* const membersTab = this.mediaTabsMap.get('members');\n    if(membersTab) {\n      const tab = this.canViewMembers() ? membersTab : this.mediaTabs[this.mediaTabs.indexOf(membersTab) + 1];\n      this.mediaTab = tab;\n    } */\n\n    this.middleware.clean();\n    this.cleanScrollPositions();\n    this.membersList = undefined;\n  }\n\n  public cleanScrollPositions() {\n    this.mediaTabs.forEach(mediaTab => {\n      mediaTab.scroll = undefined;\n    });\n  }\n\n  public cleanupHTML(goFirst = false) {\n    if(this.urlsToRevoke.length) {\n      this.urlsToRevoke.forEach(url => {\n        URL.revokeObjectURL(url);\n      });\n      this.urlsToRevoke.length = 0;\n    }\n\n    this.mediaTabs.forEach((tab) => {\n      tab.contentTab.innerHTML = '';\n\n      if(this.hideEmptyTabs) {\n        //tab.menuTab.classList.add('hide');\n        this.container.classList.add('hide');\n        this.container.parentElement.classList.add('search-empty');\n      }\n\n      if(tab.type === 'chats') {\n        return;\n      }\n      \n      if(!this.historyStorage[tab.inputFilter]) {\n        const parent = tab.contentTab.parentElement;\n        //if(!testScroll) {\n          if(!parent.querySelector('.preloader')) {\n            putPreloader(parent, true);\n          }\n        //}\n\n        const empty = parent.querySelector('.content-empty');\n        if(empty) {\n          empty.remove();\n        }\n      }\n    });\n\n    /* if(goFirst) {\n      const membersTab = this.mediaTabsMap.get('members');\n      if(membersTab) {\n        let idx = this.canViewMembers() ? 0 : 1;\n        membersTab.menuTab.classList.toggle('hide', idx !== 0);\n\n        this.selectTab(idx, false);\n      } else {\n        this.selectTab(0, false);\n      }\n    } */\n\n    this.monthContainers = {};\n    this.searchGroupMedia.clear();\n    this.scrollable.scrollTop = 0;\n\n    /* if(testScroll) {\n      for(let i = 0; i < 1500; ++i) {\n        let div = document.createElement('div');\n        div.insertAdjacentHTML('beforeend', `<img class=\"media-image\" src=\"assets/img/camomile.jpg\">`);\n        div.classList.add('grid-item');\n        div.dataset.id = '' + (i / 3 | 0);\n        //div.innerText = '' + (i / 3 | 0);\n        this.tabs.inputMessagesFilterPhotoVideo.append(div);\n      }\n    } */\n  }\n\n  private copySearchContext(newInputFilter: MyInputMessagesFilter) {\n    const context = copy(this.searchContext);\n    context.inputFilter = {_: newInputFilter};\n    context.nextRate = this.nextRates[newInputFilter];\n    return context;\n  }\n\n  public setQuery({peerId, query, threadId, historyStorage, folderId, minDate, maxDate}: {\n    peerId: PeerId, \n    query?: string, \n    threadId?: number, \n    historyStorage?: AppSearchSuper['historyStorage'], \n    folderId?: number,\n    minDate?: number,\n    maxDate?: number\n  }) {\n    this.searchContext = {\n      peerId,\n      query: query || '',\n      inputFilter: {_: this.mediaTab.inputFilter},\n      threadId,\n      folderId,\n      minDate,\n      maxDate\n    };\n    \n    this.historyStorage = historyStorage ?? {};\n\n    this.cleanup();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { cancelEvent } from \"./cancelEvent\";\n\nexport default function lockTouchScroll(container: HTMLElement) {\n  const onTouchMove = (e: TouchEvent) => {\n    cancelEvent(e);\n  };\n\n  let lockers = 2;\n  const cb = () => {\n    if(!--lockers) {\n      container.removeEventListener('touchmove', onTouchMove, {capture: true});\n    }\n  };\n\n  container.addEventListener('touchmove', onTouchMove, {capture: true, passive: false});\n  container.addEventListener('touchend', cb, {once: true});\n\n  return cb;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { InputPrivacyKey, InputPrivacyRule, PrivacyRule, Update, PrivacyKey } from \"../../layer\";\r\nimport apiManager from \"../mtproto/mtprotoworker\";\r\nimport appChatsManager from \"./appChatsManager\";\r\nimport appUsersManager from \"./appUsersManager\";\r\nimport apiUpdatesManager from \"./apiUpdatesManager\";\r\nimport rootScope from \"../rootScope\";\r\nimport convertInputKeyToKey from \"../../helpers/string/convertInputKeyToKey\";\r\n\r\nexport enum PrivacyType {\r\n  Everybody = 2,\r\n  Contacts = 1,\r\n  Nobody = 0\r\n}\r\n\r\nexport class AppPrivacyManager {\r\n  private privacy: Partial<{\r\n    [key in PrivacyKey['_']]: PrivacyRule[] | Promise<PrivacyRule[]>\r\n  }> = {};\r\n\r\n  constructor() {\r\n    rootScope.addMultipleEventsListeners({\r\n      updatePrivacy: (update) => {\r\n        const key = update.key._;\r\n        this.privacy[key] = update.rules;\r\n        rootScope.dispatchEvent('privacy_update', update);\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPrivacy(inputKey: InputPrivacyKey['_'], rules: InputPrivacyRule[]) {\r\n    return apiManager.invokeApi('account.setPrivacy', {\r\n      key: {\r\n        _: inputKey\r\n      },\r\n      rules\r\n    }).then(privacyRules => {\r\n      appUsersManager.saveApiUsers(privacyRules.users);\r\n      appChatsManager.saveApiChats(privacyRules.chats);\r\n\r\n      apiUpdatesManager.processLocalUpdate({\r\n        _: 'updatePrivacy',\r\n        key: {\r\n          _: convertInputKeyToKey(inputKey)\r\n        },\r\n        rules: rules.map(inputRule => {\r\n          const rule: PrivacyRule = {} as any;\r\n          Object.assign(rule, inputRule);\r\n          rule._ = convertInputKeyToKey(rule._) as any;\r\n          return rule;\r\n        })\r\n      });\r\n\r\n      //console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\r\n\r\n      return privacyRules.rules;\r\n    });\r\n  }\r\n\r\n  public getPrivacy(inputKey: InputPrivacyKey['_']) {\r\n    const privacyKey: PrivacyKey['_'] = convertInputKeyToKey(inputKey) as any;\r\n    const rules = this.privacy[privacyKey];\r\n    if(rules) {\r\n      return Promise.resolve(rules);\r\n    }\r\n    \r\n    return this.privacy[privacyKey] = apiManager.invokeApi('account.getPrivacy', {\r\n      key: {\r\n        _: inputKey\r\n      }\r\n    }).then(privacyRules => {\r\n      appUsersManager.saveApiUsers(privacyRules.users);\r\n      appChatsManager.saveApiChats(privacyRules.chats);\r\n\r\n      //console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\r\n\r\n      return this.privacy[privacyKey] = privacyRules.rules;\r\n    });\r\n  }\r\n\r\n  public getPrivacyRulesDetails(rules: PrivacyRule[]) {\r\n    const types: PrivacyType[] = [];\r\n\r\n    type peers = {users: UserId[], chats: ChatId[]};\r\n    let allowPeers: peers = {users: [], chats: []}, disallowPeers: peers = {users: [], chats: []};\r\n    rules.forEach(rule => {\r\n      switch(rule._) {\r\n        case 'privacyValueAllowAll':\r\n          types.push(2);\r\n          break;\r\n        case 'privacyValueDisallowAll':\r\n          types.push(0);\r\n          break;\r\n        case 'privacyValueAllowContacts': \r\n          types.push(1);\r\n          break;\r\n        /* case 'privacyValueDisallowContacts':\r\n          types.push('Except My Contacts');\r\n          break; */\r\n        case 'privacyValueAllowChatParticipants':\r\n          allowPeers.chats.push(...rule.chats);\r\n          break;\r\n        case 'privacyValueAllowUsers':\r\n          allowPeers.users.push(...rule.users);\r\n          break;\r\n        case 'privacyValueDisallowChatParticipants':\r\n          disallowPeers.chats.push(...rule.chats);\r\n          break;\r\n        case 'privacyValueDisallowUsers':\r\n          disallowPeers.users.push(...rule.users);\r\n          break;\r\n      }\r\n    });\r\n\r\n    return {type: types[0], disallowPeers, allowPeers};\r\n  }\r\n}\r\n\r\nconst appPrivacyManager = new AppPrivacyManager();\r\nMOUNT_CLASS_TO.appPrivacyManager = appPrivacyManager;\r\nexport default appPrivacyManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { randomLong } from \"../helpers/random\";\r\nimport { InputPrivacyKey, InputPrivacyRule } from \"../layer\";\r\nimport appPrivacyManager, { PrivacyType } from \"../lib/appManagers/appPrivacyManager\";\r\nimport appUsersManager from \"../lib/appManagers/appUsersManager\";\r\nimport { i18n, join, LangPackKey, _i18n } from \"../lib/langPack\";\r\nimport RadioField from \"./radioField\";\r\nimport Row, { RadioFormFromRows } from \"./row\";\r\nimport Scrollable from \"./scrollable\";\r\nimport { SettingSection, generateSection } from \"./sidebarLeft\";\r\nimport AppAddMembersTab from \"./sidebarLeft/tabs/addMembers\";\r\nimport { SliderSuperTabEventable } from \"./sliderTab\";\r\n\r\ntype PrivacySectionStr = LangPackKey | '';\r\nexport default class PrivacySection {\r\n  public radioRows: Map<PrivacyType, Row>;\r\n  public radioSection: SettingSection;\r\n  public exceptions: Map<keyof PrivacySection['peerIds'], {\r\n    titleLangKey: LangPackKey,\r\n    key: keyof PrivacySection['peerIds'],\r\n    row: Row,\r\n    icon: string,\r\n    subtitleLangKey: LangPackKey,\r\n    clickable: true\r\n  }>;\r\n  public peerIds: {\r\n    disallow?: PeerId[],\r\n    allow?: PeerId[]\r\n  };\r\n  public type: PrivacyType;\r\n\r\n  constructor(public options: {\r\n    tab: SliderSuperTabEventable,\r\n    title: LangPackKey, \r\n    inputKey: InputPrivacyKey['_'], \r\n    captions?: [PrivacySectionStr, PrivacySectionStr, PrivacySectionStr],\r\n    appendTo?: Scrollable,\r\n    noExceptions?: boolean,\r\n    onRadioChange?: (value: number) => any,\r\n    skipTypes?: PrivacyType[],\r\n    exceptionTexts?: [LangPackKey, LangPackKey]\r\n  }) {\r\n    if(options.captions) {\r\n      options.captions.reverse();\r\n    }\r\n\r\n    this.radioSection = new SettingSection({name: options.title, caption: true});\r\n\r\n    this.radioRows = new Map();\r\n\r\n    let r: Array<{type: PrivacyType, langKey: LangPackKey}> = [{\r\n      type: PrivacyType.Everybody,\r\n      langKey: 'PrivacySettingsController.Everbody'\r\n    }, {\r\n      type: PrivacyType.Contacts,\r\n      langKey: 'PrivacySettingsController.MyContacts'\r\n    }, {\r\n      type: PrivacyType.Nobody,\r\n      langKey: 'PrivacySettingsController.Nobody'\r\n    }];\r\n\r\n    if(options.skipTypes) {\r\n      r = r.filter(r => !options.skipTypes.includes(r.type));\r\n    }\r\n    \r\n    const random = randomLong();\r\n    r.forEach(({type, langKey}) => {\r\n      const row = new Row({\r\n        radioField: new RadioField({\r\n          langKey, \r\n          name: random, \r\n          value: '' + type\r\n        })\r\n      });\r\n      \r\n      this.radioRows.set(type, row);\r\n    });\r\n\r\n    const form = RadioFormFromRows([...this.radioRows.values()], this.onRadioChange);\r\n\r\n    this.radioSection.content.append(form);\r\n    if(options.appendTo) {\r\n      options.appendTo.append(this.radioSection.container);\r\n    }\r\n\r\n    if(!options.noExceptions) {\r\n      const container = generateSection(options.appendTo, 'PrivacyExceptions', 'PrivacySettingsController.PeerInfo');\r\n\r\n      this.exceptions = new Map([[\r\n        'disallow', \r\n        {\r\n          titleLangKey: options.exceptionTexts[0],\r\n          key: 'disallow',\r\n          row: null,\r\n          icon: 'deleteuser',\r\n          subtitleLangKey: 'PrivacySettingsController.AddUsers',\r\n          clickable: true\r\n        }\r\n      ], [\r\n        'allow', \r\n        {\r\n          titleLangKey: options.exceptionTexts[1],\r\n          key: 'allow',\r\n          row: null,\r\n          icon: 'adduser',\r\n          subtitleLangKey: 'PrivacySettingsController.AddUsers',\r\n          clickable: true\r\n        }\r\n      ]]);\r\n\r\n      this.exceptions.forEach((exception) => {\r\n        exception.row = new Row(exception);\r\n\r\n        exception.row.container.addEventListener('click', () => {\r\n          promise.then(() => {\r\n            const _peerIds = this.peerIds[exception.key];\r\n            new AppAddMembersTab(options.tab.slider).open({\r\n              type: 'privacy',\r\n              skippable: true,\r\n              title: exception.titleLangKey,\r\n              placeholder: 'PrivacyModal.Search.Placeholder',\r\n              takeOut: (newPeerIds) => {\r\n                _peerIds.length = 0;\r\n                _peerIds.push(...newPeerIds);\r\n                exception.row.subtitle.innerHTML = '';\r\n                exception.row.subtitle.append(...this.generateStr(this.splitPeersByType(newPeerIds)));\r\n              },\r\n              selectedPeerIds: _peerIds\r\n            });\r\n          });\r\n        });\r\n\r\n        container.append(exception.row.container);\r\n      });\r\n    }\r\n\r\n    /* setTimeout(() => {\r\n      this.setRadio(PrivacyType.Contacts);\r\n    }, 0); */\r\n\r\n    const promise = appPrivacyManager.getPrivacy(options.inputKey).then(rules => {\r\n      const details = appPrivacyManager.getPrivacyRulesDetails(rules);\r\n      this.setRadio(details.type);\r\n\r\n      if(this.exceptions) {\r\n        this.peerIds = {};\r\n        ['allow' as const, 'disallow' as const].forEach(k => {\r\n          const arr = [];\r\n          const from = k === 'allow' ? details.allowPeers : details.disallowPeers;\r\n          arr.push(...from.users.map(id => id.toPeerId()));\r\n          arr.push(...from.chats.map(id => id.toPeerId(true)));\r\n          this.peerIds[k] = arr;\r\n          const s = this.exceptions.get(k).row.subtitle;\r\n          s.innerHTML = '';\r\n          s.append(...this.generateStr(from));\r\n        });\r\n      }\r\n\r\n      options.tab.eventListener.addEventListener('destroy', () => {\r\n        const rules: InputPrivacyRule[] = [];\r\n\r\n        switch(this.type) {\r\n          case PrivacyType.Everybody:\r\n            rules.push({_: 'inputPrivacyValueAllowAll'});\r\n            break;\r\n          case PrivacyType.Contacts:\r\n            rules.push({_: 'inputPrivacyValueAllowContacts'});\r\n            break;\r\n          case PrivacyType.Nobody:\r\n            rules.push({_: 'inputPrivacyValueDisallowAll'});\r\n            break;\r\n        }\r\n\r\n        if(this.exceptions) {\r\n          ([\r\n            ['allow',     'inputPrivacyValueAllowChatParticipants',     'inputPrivacyValueAllowUsers'],\r\n            ['disallow',  'inputPrivacyValueDisallowChatParticipants',  'inputPrivacyValueDisallowUsers']\r\n          ] as Array<[\r\n            'allow' | 'disallow', \r\n            'inputPrivacyValueAllowChatParticipants' | 'inputPrivacyValueDisallowChatParticipants', \r\n            'inputPrivacyValueAllowUsers' | 'inputPrivacyValueDisallowUsers'\r\n          ]>).forEach(([k, chatKey, usersKey], idx) => {\r\n            if(this.exceptions.get(k).row.container.classList.contains('hide')) {\r\n              return;\r\n            }\r\n\r\n            const _peerIds = this.peerIds[k];\r\n            if(_peerIds) {\r\n              const splitted = this.splitPeersByType(_peerIds);\r\n              if(splitted.chats.length) {\r\n                rules.push({_: chatKey, chats: splitted.chats});\r\n              }\r\n  \r\n              if(splitted.users.length) {\r\n                rules.push({_: usersKey, users: splitted.users.map(id => appUsersManager.getUserInput(id))});\r\n              }\r\n            }\r\n          });\r\n        }\r\n        \r\n        appPrivacyManager.setPrivacy(options.inputKey, rules);\r\n      }, {once: true});\r\n    });\r\n  }\r\n\r\n  private onRadioChange = (value: string | PrivacySection['type']) => {\r\n    value = +value as PrivacySection['type'];\r\n    this.type = value;\r\n\r\n    const caption = this.options.captions[this.type];\r\n    const captionElement = this.radioSection.caption;\r\n    if(!caption) {\r\n      captionElement.innerHTML = '';\r\n    } else {\r\n      _i18n(captionElement, caption);\r\n    }\r\n    captionElement.classList.toggle('hide', !caption);\r\n\r\n    if(this.exceptions) {\r\n      this.exceptions.get('allow').row.container.classList.toggle('hide', this.type === PrivacyType.Everybody);\r\n      this.exceptions.get('disallow').row.container.classList.toggle('hide', this.type === PrivacyType.Nobody);\r\n    }\r\n\r\n    this.options.onRadioChange && this.options.onRadioChange(value);\r\n  };\r\n\r\n  public setRadio(type: PrivacySection['type']) {\r\n    const row = this.radioRows.get(type);\r\n    this.onRadioChange(type);\r\n    row.radioField.input.checked = true;\r\n  }\r\n  \r\n  private splitPeersByType(peerIds: PeerId[]) {\r\n    const peers = {users: [] as UserId[], chats: [] as ChatId[]};\r\n    peerIds.forEach(peerId => {\r\n      peers[peerId.isAnyChat() ? 'chats' : 'users'].push(peerId.isAnyChat() ? peerId.toChatId() : peerId);\r\n    });\r\n\r\n    return peers;\r\n  }\r\n\r\n  private generateStr(peers: {users: UserId[], chats: ChatId[]}) {\r\n    if(!peers.users.length && !peers.chats.length) {\r\n      return [i18n('PrivacySettingsController.AddUsers')];\r\n    }\r\n\r\n    return join([\r\n      peers.users.length ? i18n('Users', [peers.users.length]) : null, \r\n      peers.chats.length ? i18n('Chats', [peers.chats.length]) : null\r\n    ].filter(Boolean), false);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { PrivacyType } from \"../../../../lib/appManagers/appPrivacyManager\";\r\nimport { SliderSuperTabEventable } from \"../../../sliderTab\";\r\nimport PrivacySection from \"../../../privacySection\";\r\nimport { LangPackKey } from \"../../../../lib/langPack\";\r\n\r\nexport default class AppPrivacyPhoneNumberTab extends SliderSuperTabEventable {\r\n  protected init() {\r\n    this.header.classList.add('with-border');\r\n    this.container.classList.add('privacy-tab', 'privacy-phone-number');\r\n    this.setTitle('PrivacyPhone');\r\n\r\n    const phoneCaption: LangPackKey = 'PrivacyPhoneInfo';\r\n    const phoneSection = new PrivacySection({\r\n      tab: this,\r\n      title: 'PrivacyPhoneTitle',\r\n      inputKey: 'inputPrivacyKeyPhoneNumber',\r\n      captions: [phoneCaption, phoneCaption, ''],\r\n      exceptionTexts: ['PrivacySettingsController.NeverShare', 'PrivacySettingsController.AlwaysShare'],\r\n      appendTo: this.scrollable,\r\n      onRadioChange: (type) => {\r\n        s.setRadio(PrivacyType.Everybody);\r\n        s.radioSection.container.classList.toggle('hide', type !== PrivacyType.Nobody);\r\n      }\r\n    });\r\n\r\n    const sCaption: LangPackKey = 'PrivacyPhoneInfo3';\r\n    const s = new PrivacySection({\r\n      tab: this,\r\n      title: 'PrivacyPhoneTitle2',\r\n      inputKey: 'inputPrivacyKeyAddedByPhone',\r\n      captions: [sCaption, sCaption, ''],\r\n      noExceptions: true,\r\n      skipTypes: [PrivacyType.Nobody]\r\n    });\r\n\r\n    this.scrollable.container.insertBefore(s.radioSection.container, phoneSection.radioSection.container.nextSibling);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"../..\";\r\nimport { attachClickEvent } from \"../../../../helpers/dom/clickEvent\";\r\nimport appStickersManager from \"../../../../lib/appManagers/appStickersManager\";\r\nimport Button from \"../../../button\";\r\nimport { SliderSuperTab } from \"../../../slider\";\r\nimport { wrapSticker } from \"../../../wrappers\";\r\nimport AppSettingsTab from \"../settings\";\r\n\r\nexport default class AppTwoStepVerificationSetTab extends SliderSuperTab {\r\n  protected init() {\r\n    this.container.classList.add('two-step-verification', 'two-step-verification-set');\r\n    this.setTitle('TwoStepVerificationPasswordSet');\r\n\r\n    const section = new SettingSection({\r\n      caption: 'TwoStepVerificationPasswordSetInfo',\r\n      noDelimiter: true\r\n    });\r\n\r\n    const emoji = '🥳';\r\n    const doc = appStickersManager.getAnimatedEmojiSticker(emoji);\r\n    const stickerContainer = document.createElement('div');\r\n\r\n    if(doc) {\r\n      wrapSticker({\r\n        doc,\r\n        div: stickerContainer,\r\n        loop: true,\r\n        play: true,\r\n        width: 160,\r\n        height: 160\r\n      }).then(() => {\r\n        // this.animation = player;\r\n      });\r\n    } else {\r\n      stickerContainer.classList.add('media-sticker-wrapper');\r\n    }\r\n\r\n    section.content.append(stickerContainer);\r\n\r\n    const inputContent = section.generateContentElement();\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    const btnReturn = Button('btn-primary btn-color-primary', {text: 'TwoStepVerificationPasswordReturnSettings'});\r\n\r\n    attachClickEvent(btnReturn, (e) => {\r\n      this.close();\r\n    });\r\n\r\n    this.slider.sliceTabsUntilTab(AppSettingsTab, this);\r\n\r\n    inputWrapper.append(btnReturn);\r\n\r\n    inputContent.append(inputWrapper);\r\n\r\n    this.scrollable.container.append(section.container);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { IS_MOBILE_SAFARI } from \"../../environment/userAgent\";\r\n\r\nexport function canFocus(isFirstInput: boolean) {\r\n  return !IS_MOBILE_SAFARI || !isFirstInput;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"../..\";\r\nimport { AccountPassword } from \"../../../../layer\";\r\nimport appStickersManager from \"../../../../lib/appManagers/appStickersManager\";\r\nimport Button from \"../../../button\";\r\nimport { SliderSuperTab } from \"../../../slider\";\r\nimport { wrapSticker } from \"../../../wrappers\";\r\nimport passwordManager from \"../../../../lib/mtproto/passwordManager\";\r\nimport AppTwoStepVerificationSetTab from \"./passwordSet\";\r\nimport CodeInputField from \"../../../codeInputField\";\r\nimport AppTwoStepVerificationEmailTab from \"./email\";\r\nimport { putPreloader } from \"../../../misc\";\r\nimport { i18n, _i18n } from \"../../../../lib/langPack\";\r\nimport { canFocus } from \"../../../../helpers/dom/canFocus\";\r\nimport { attachClickEvent } from \"../../../../helpers/dom/clickEvent\";\r\nimport replaceContent from \"../../../../helpers/dom/replaceContent\";\r\nimport toggleDisability from \"../../../../helpers/dom/toggleDisability\";\r\n\r\nexport default class AppTwoStepVerificationEmailConfirmationTab extends SliderSuperTab {\r\n  public codeInputField: CodeInputField;\r\n  public state: AccountPassword;\r\n  public email: string;\r\n  public length: number;\r\n  public isFirst = false;\r\n\r\n  protected init() {\r\n    this.container.classList.add('two-step-verification', 'two-step-verification-email-confirmation');\r\n    this.setTitle('TwoStepAuth.RecoveryTitle');\r\n\r\n    const section = new SettingSection({\r\n      caption: true,\r\n      noDelimiter: true\r\n    });\r\n\r\n    _i18n(section.caption, 'TwoStepAuth.ConfirmEmailCodeDesc', [this.email]);\r\n\r\n    const emoji = '📬';\r\n    const doc = appStickersManager.getAnimatedEmojiSticker(emoji);\r\n    const stickerContainer = document.createElement('div');\r\n\r\n    if(doc) {\r\n      wrapSticker({\r\n        doc,\r\n        div: stickerContainer,\r\n        loop: false,\r\n        play: true,\r\n        width: 160,\r\n        height: 160,\r\n        emoji\r\n      }).then(() => {\r\n        // this.animation = player;\r\n      });\r\n    } else {\r\n      stickerContainer.classList.add('media-sticker-wrapper');\r\n    }\r\n\r\n    section.content.append(stickerContainer);\r\n\r\n    const inputContent = section.generateContentElement();\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    const inputField = this.codeInputField = new CodeInputField({\r\n      name: 'recovery-email-code',\r\n      label: 'TwoStepAuth.RecoveryCode',\r\n      length: this.length,\r\n      onFill: (code) => {\r\n        freeze(true);\r\n        \r\n        passwordManager.confirmPasswordEmail('' + code)\r\n        .then(value => {\r\n          if(!value) {\r\n\r\n          }\r\n\r\n          goNext();\r\n        })\r\n        .catch(err => {\r\n          switch(err.type) {\r\n            case 'CODE_INVALID':\r\n              inputField.input.classList.add('error');\r\n              replaceContent(inputField.label, i18n('TwoStepAuth.RecoveryCodeInvalid'));\r\n              break;\r\n\r\n            case 'EMAIL_HASH_EXPIRED':\r\n              inputField.input.classList.add('error');\r\n              replaceContent(inputField.label, i18n('TwoStepAuth.RecoveryCodeExpired'));\r\n              break;\r\n            \r\n            default:\r\n              console.error('confirm error', err);\r\n              break;\r\n          }\r\n\r\n          freeze(false);\r\n        });\r\n      }\r\n    });\r\n\r\n    const btnChange = Button('btn-primary btn-primary-transparent primary', {text: 'TwoStepAuth.EmailCodeChangeEmail'});\r\n    const btnResend = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'ResendCode'});\r\n\r\n    const goNext = () => {\r\n      new AppTwoStepVerificationSetTab(this.slider).open();\r\n    };\r\n\r\n    const freeze = (disable: boolean) => {\r\n      toggleDisability([inputField.input, btnChange, btnResend], disable);\r\n    };\r\n\r\n    attachClickEvent(btnChange, (e) => {\r\n      freeze(true);\r\n      passwordManager.cancelPasswordEmail().then(value => {\r\n        this.slider.sliceTabsUntilTab(AppTwoStepVerificationEmailTab, this);\r\n        this.close();\r\n      }, () => {\r\n        freeze(false);\r\n      });\r\n    });\r\n\r\n    attachClickEvent(btnResend, (e) => {\r\n      freeze(true);\r\n      const d = putPreloader(btnResend);\r\n      passwordManager.resendPasswordEmail().then(value => {\r\n        d.remove();\r\n        freeze(false);\r\n      });\r\n    });\r\n\r\n    inputWrapper.append(inputField.container, btnChange, btnResend);\r\n\r\n    inputContent.append(inputWrapper);\r\n\r\n    this.scrollable.container.append(section.container);\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    if(!canFocus(this.isFirst)) return;\r\n    this.codeInputField.input.focus();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"../..\";\r\nimport { AccountPassword } from \"../../../../layer\";\r\nimport appStickersManager from \"../../../../lib/appManagers/appStickersManager\";\r\nimport Button from \"../../../button\";\r\nimport { SliderSuperTab } from \"../../../slider\";\r\nimport { wrapSticker } from \"../../../wrappers\";\r\nimport InputField from \"../../../inputField\";\r\nimport { putPreloader } from \"../../../misc\";\r\nimport passwordManager from \"../../../../lib/mtproto/passwordManager\";\r\nimport AppTwoStepVerificationSetTab from \"./passwordSet\";\r\nimport AppTwoStepVerificationEmailConfirmationTab from \"./emailConfirmation\";\r\nimport RichTextProcessor from \"../../../../lib/richtextprocessor\";\r\nimport PopupPeer from \"../../../popups/peer\";\r\nimport { cancelEvent } from \"../../../../helpers/dom/cancelEvent\";\r\nimport { canFocus } from \"../../../../helpers/dom/canFocus\";\r\nimport { attachClickEvent } from \"../../../../helpers/dom/clickEvent\";\r\n\r\nexport default class AppTwoStepVerificationEmailTab extends SliderSuperTab {\r\n  public inputField: InputField;\r\n  public state: AccountPassword;\r\n  public plainPassword: string;\r\n  public newPassword: string;\r\n  public hint: string;\r\n  public isFirst = false;\r\n\r\n  protected init() {\r\n    this.container.classList.add('two-step-verification', 'two-step-verification-email');\r\n    this.setTitle('RecoveryEmailTitle');\r\n\r\n    const section = new SettingSection({\r\n      caption: true,\r\n      noDelimiter: true\r\n    });\r\n\r\n    const emoji = '💌';\r\n    const doc = appStickersManager.getAnimatedEmojiSticker(emoji);\r\n    const stickerContainer = document.createElement('div');\r\n\r\n    if(doc) {\r\n      wrapSticker({\r\n        doc,\r\n        div: stickerContainer,\r\n        loop: false,\r\n        play: true,\r\n        width: 160,\r\n        height: 160,\r\n        emoji\r\n      }).then(() => {\r\n        // this.animation = player;\r\n      });\r\n    } else {\r\n      stickerContainer.classList.add('media-sticker-wrapper');\r\n    }\r\n\r\n    section.content.append(stickerContainer);\r\n\r\n    const inputContent = section.generateContentElement();\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    const inputField = this.inputField = new InputField({\r\n      name: 'recovery-email',\r\n      label: 'RecoveryEmail',\r\n      plainText: true\r\n    });\r\n\r\n    inputField.input.addEventListener('keypress', (e) => {\r\n      if(e.key === 'Enter') {\r\n        cancelEvent(e);\r\n        return onContinueClick();\r\n      }\r\n    });\r\n\r\n    inputField.input.addEventListener('input', (e) => {\r\n      inputField.input.classList.remove('error');\r\n    });\r\n\r\n    const btnContinue = Button('btn-primary btn-color-primary', {text: 'Continue'});\r\n    const btnSkip = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'YourEmailSkip'});\r\n\r\n    const goNext = () => {\r\n      new AppTwoStepVerificationSetTab(this.slider).open();\r\n    };\r\n\r\n    const onContinueClick = () => {\r\n      const email = inputField.value.trim();\r\n      const match = RichTextProcessor.matchEmail(email);\r\n      if(!match || match[0].length !== email.length) {\r\n        inputField.input.classList.add('error');\r\n        return;\r\n      }\r\n\r\n      toggleButtons(true);\r\n      const d = putPreloader(btnContinue);\r\n\r\n      passwordManager.updateSettings({\r\n        hint: this.hint,\r\n        currentPassword: this.plainPassword,\r\n        newPassword: this.newPassword,\r\n        email\r\n      }).then((value) => {\r\n        goNext();\r\n      }, (err) => {\r\n        if(err.type.includes('EMAIL_UNCONFIRMED')) {\r\n          const symbols = +err.type.match(/^EMAIL_UNCONFIRMED_(\\d+)/)[1];\r\n\r\n          const tab = new AppTwoStepVerificationEmailConfirmationTab(this.slider);\r\n          tab.state = this.state;\r\n          tab.email = email;\r\n          tab.length = symbols;\r\n          tab.open();\r\n        } else {\r\n          console.log('password set error', err);\r\n        }\r\n\r\n        toggleButtons(false);\r\n        d.remove();\r\n      });\r\n    };\r\n    attachClickEvent(btnContinue, onContinueClick);\r\n\r\n    const toggleButtons = (freeze: boolean) => {\r\n      if(freeze) {\r\n        btnContinue.setAttribute('disabled', 'true');\r\n        btnSkip.setAttribute('disabled', 'true');\r\n      } else {\r\n        btnContinue.removeAttribute('disabled');\r\n        btnSkip.removeAttribute('disabled');\r\n      }\r\n    };\r\n\r\n    attachClickEvent(btnSkip, (e) => {\r\n      const popup = new PopupPeer('popup-skip-email', {\r\n        buttons: [{\r\n          langKey: 'Cancel',\r\n          isCancel: true\r\n        }, {\r\n          langKey: 'YourEmailSkip',\r\n          callback: () => {\r\n            //inputContent.classList.add('sidebar-left-section-disabled');\r\n            toggleButtons(true);\r\n            putPreloader(btnSkip);\r\n            passwordManager.updateSettings({\r\n              hint: this.hint, \r\n              currentPassword: this.plainPassword,\r\n              newPassword: this.newPassword,\r\n              email: ''\r\n            }).then(() => {\r\n              goNext();\r\n            }, (err) => {\r\n              toggleButtons(false);\r\n            });\r\n          },\r\n          isDanger: true,\r\n        }], \r\n        titleLangKey: 'YourEmailSkipWarning',\r\n        descriptionLangKey: 'YourEmailSkipWarningText'\r\n      });\r\n\r\n      popup.show();\r\n    });\r\n\r\n    inputWrapper.append(inputField.container, btnContinue, btnSkip);\r\n\r\n    inputContent.append(inputWrapper);\r\n\r\n    this.scrollable.container.append(section.container);\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    if(!canFocus(this.isFirst)) return;\r\n    this.inputField.input.focus();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"../..\";\r\nimport { AccountPassword } from \"../../../../layer\";\r\nimport appStickersManager from \"../../../../lib/appManagers/appStickersManager\";\r\nimport Button from \"../../../button\";\r\nimport { SliderSuperTab } from \"../../../slider\";\r\nimport { wrapSticker } from \"../../../wrappers\";\r\nimport InputField from \"../../../inputField\";\r\nimport AppTwoStepVerificationEmailTab from \"./email\";\r\nimport { toast } from \"../../../toast\";\r\nimport I18n from \"../../../../lib/langPack\";\r\nimport { cancelEvent } from \"../../../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../../../../helpers/dom/clickEvent\";\r\n\r\nexport default class AppTwoStepVerificationHintTab extends SliderSuperTab {\r\n  public inputField: InputField;\r\n  public state: AccountPassword;\r\n  public plainPassword: string;\r\n  public newPassword: string;\r\n\r\n  protected init() {\r\n    this.container.classList.add('two-step-verification', 'two-step-verification-hint');\r\n    this.setTitle('TwoStepAuth.SetupHintTitle');\r\n\r\n    const section = new SettingSection({\r\n      noDelimiter: true\r\n    });\r\n\r\n    const emoji = '💡';\r\n    const doc = appStickersManager.getAnimatedEmojiSticker(emoji);\r\n    const stickerContainer = document.createElement('div');\r\n\r\n    if(doc) {\r\n      wrapSticker({\r\n        doc,\r\n        div: stickerContainer,\r\n        loop: false,\r\n        play: true,\r\n        width: 160,\r\n        height: 160,\r\n        emoji\r\n      }).then(() => {\r\n        // this.animation = player;\r\n      });\r\n    } else {\r\n      stickerContainer.classList.add('media-sticker-wrapper');\r\n    }\r\n\r\n    section.content.append(stickerContainer);\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    const inputField = this.inputField = new InputField({\r\n      name: 'hint',\r\n      label: 'TwoStepAuth.SetupHintPlaceholder'\r\n    });\r\n\r\n    inputField.input.addEventListener('keypress', (e) => {\r\n      if(e.key === 'Enter') {\r\n        cancelEvent(e);\r\n        return inputField.value ? onContinueClick() : onSkipClick();\r\n      }\r\n    });\r\n\r\n    const goNext = (e?: Event, saveHint?: boolean) => {\r\n      if(e) {\r\n        cancelEvent(e);\r\n      }\r\n      \r\n      const hint = saveHint ? inputField.value : undefined;\r\n      if(hint && this.newPassword === hint) {\r\n        toast(I18n.format('PasswordAsHintError', true));\r\n        return;\r\n      }\r\n\r\n      const tab = new AppTwoStepVerificationEmailTab(this.slider);\r\n      tab.state = this.state;\r\n      tab.plainPassword = this.plainPassword;\r\n      tab.newPassword = this.newPassword;\r\n      tab.hint = hint;\r\n\r\n      tab.open();\r\n    };\r\n\r\n    const btnContinue = Button('btn-primary btn-color-primary', {text: 'Continue'});\r\n    const btnSkip = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'YourEmailSkip'});\r\n\r\n    const onContinueClick = (e?: Event) => goNext(e, true);\r\n    const onSkipClick = (e?: Event) => goNext(e, false);\r\n    attachClickEvent(btnContinue, onContinueClick);\r\n    attachClickEvent(btnSkip, onSkipClick);\r\n\r\n    inputWrapper.append(inputField.container, btnContinue, btnSkip);\r\n\r\n    section.content.append(inputWrapper);\r\n\r\n    this.scrollable.container.append(section.container);\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    this.inputField.input.focus();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"../..\";\r\nimport { AccountPassword } from \"../../../../layer\";\r\nimport Button from \"../../../button\";\r\nimport PasswordInputField from \"../../../passwordInputField\";\r\nimport { SliderSuperTab } from \"../../../slider\";\r\nimport TrackingMonkey from \"../../../monkeys/tracking\";\r\nimport AppTwoStepVerificationHintTab from \"./hint\";\r\nimport { InputState } from \"../../../inputField\";\r\nimport { cancelEvent } from \"../../../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../../../../helpers/dom/clickEvent\";\r\n\r\nexport default class AppTwoStepVerificationReEnterPasswordTab extends SliderSuperTab {\r\n  public state: AccountPassword;\r\n  public passwordInputField: PasswordInputField;\r\n  public plainPassword: string;\r\n  public newPassword: string;\r\n\r\n  protected init() {\r\n    this.container.classList.add('two-step-verification', 'two-step-verification-enter-password', 'two-step-verification-re-enter-password');\r\n    this.setTitle('PleaseReEnterPassword');\r\n\r\n    const section = new SettingSection({\r\n      noDelimiter: true\r\n    });\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    const passwordInputField = this.passwordInputField = new PasswordInputField({\r\n      name: 're-enter-password',\r\n      label: 'PleaseReEnterPassword'\r\n    });\r\n\r\n    const monkey = new TrackingMonkey(passwordInputField, 157);\r\n\r\n    const btnContinue = Button('btn-primary btn-color-primary', {text: 'Continue'});\r\n\r\n    inputWrapper.append(passwordInputField.container, btnContinue);\r\n    section.content.append(monkey.container, inputWrapper);\r\n\r\n    this.scrollable.container.append(section.container);\r\n\r\n    passwordInputField.input.addEventListener('keypress', (e) => {\r\n      if(passwordInputField.input.classList.contains('error')) {\r\n        passwordInputField.setState(InputState.Neutral);\r\n      }\r\n  \r\n      if(e.key === 'Enter') {\r\n        return onContinueClick();\r\n      }\r\n    });\r\n\r\n    const verifyInput = () => {\r\n      if(this.newPassword !== passwordInputField.value) {\r\n        passwordInputField.setError();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    const onContinueClick = (e?: Event) => {\r\n      if(e) {\r\n        cancelEvent(e);\r\n      }\r\n\r\n      if(!verifyInput()) return;\r\n\r\n      const tab = new AppTwoStepVerificationHintTab(this.slider);\r\n      tab.state = this.state;\r\n      tab.plainPassword = this.plainPassword;\r\n      tab.newPassword = this.newPassword;\r\n      tab.open();\r\n    };\r\n    attachClickEvent(btnContinue, onContinueClick);\r\n\r\n    return monkey.load();\r\n  }\r\n  \r\n  onOpenAfterTimeout() {\r\n    this.passwordInputField.input.focus();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport AppTwoStepVerificationTab from \".\";\r\nimport { SettingSection } from \"../..\";\r\nimport { cancelEvent } from \"../../../../helpers/dom/cancelEvent\";\r\nimport { canFocus } from \"../../../../helpers/dom/canFocus\";\r\nimport { attachClickEvent } from \"../../../../helpers/dom/clickEvent\";\r\nimport replaceContent from \"../../../../helpers/dom/replaceContent\";\r\nimport { AccountPassword } from \"../../../../layer\";\r\nimport I18n, { i18n } from \"../../../../lib/langPack\";\r\nimport passwordManager from \"../../../../lib/mtproto/passwordManager\";\r\nimport RichTextProcessor from \"../../../../lib/richtextprocessor\";\r\nimport Button from \"../../../button\";\r\nimport { putPreloader } from \"../../../misc\";\r\nimport PasswordMonkey from \"../../../monkeys/password\";\r\nimport PasswordInputField from \"../../../passwordInputField\";\r\nimport { SliderSuperTab } from \"../../../slider\";\r\nimport AppTwoStepVerificationReEnterPasswordTab from \"./reEnterPassword\";\r\n\r\nexport default class AppTwoStepVerificationEnterPasswordTab extends SliderSuperTab {\r\n  public state: AccountPassword;\r\n  public passwordInputField: PasswordInputField;\r\n  public plainPassword: string;\r\n  public isFirst = true;\r\n  \r\n  protected init() {\r\n    const isNew = !this.state.pFlags.has_password || this.plainPassword;\r\n    this.container.classList.add('two-step-verification', 'two-step-verification-enter-password');\r\n    this.setTitle(isNew ? 'PleaseEnterFirstPassword' : 'PleaseEnterCurrentPassword');\r\n\r\n    const section = new SettingSection({\r\n      noDelimiter: true\r\n    });\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    const passwordInputField = this.passwordInputField = new PasswordInputField({\r\n      name: 'enter-password',\r\n      label: isNew ? 'PleaseEnterFirstPassword' : (this.state.hint ? undefined : 'LoginPassword'),\r\n      labelText: !isNew && this.state.hint ? RichTextProcessor.wrapEmojiText(this.state.hint) : undefined\r\n    });\r\n\r\n    const monkey = new PasswordMonkey(passwordInputField, 157);\r\n\r\n    const btnContinue = Button('btn-primary btn-color-primary');\r\n    const textEl = new I18n.IntlElement({key: 'Continue'});\r\n\r\n    btnContinue.append(textEl.element);\r\n\r\n    inputWrapper.append(passwordInputField.container, btnContinue);\r\n    section.content.append(monkey.container, inputWrapper);\r\n\r\n    this.scrollable.container.append(section.container);\r\n\r\n    passwordInputField.input.addEventListener('keypress', (e) => {\r\n      if(passwordInputField.input.classList.contains('error')) {\r\n        passwordInputField.input.classList.remove('error');\r\n        textEl.key = 'Continue';\r\n        textEl.update();\r\n      }\r\n  \r\n      if(e.key === 'Enter') {\r\n        return onContinueClick();\r\n      }\r\n    });\r\n\r\n    const verifyInput = () => {\r\n      if(!passwordInputField.value.length) {\r\n        passwordInputField.input.classList.add('error');\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    let onContinueClick: (e?: Event) => void;\r\n    if(!isNew) {\r\n      let getStateInterval: number;\r\n\r\n      let getState = () => {\r\n        // * just to check session relevance\r\n        if(!getStateInterval) {\r\n          getStateInterval = window.setInterval(getState, 10e3);\r\n        }\r\n  \r\n        return passwordManager.getState().then(_state => {\r\n          this.state = _state;\r\n  \r\n          if(this.state.hint) {\r\n            passwordInputField.label.innerHTML = RichTextProcessor.wrapEmojiText(this.state.hint);\r\n          } else {\r\n            replaceContent(passwordInputField.label, i18n('LoginPassword'));\r\n          }\r\n        });\r\n      };\r\n  \r\n      const submit = (e?: Event) => {\r\n        if(!verifyInput()) {\r\n          cancelEvent(e);\r\n          return;\r\n        }\r\n\r\n        btnContinue.setAttribute('disabled', 'true');\r\n        textEl.key = 'PleaseWait';\r\n        textEl.update();\r\n        const preloader = putPreloader(btnContinue);\r\n  \r\n        const plainPassword = passwordInputField.value;\r\n        passwordManager.check(passwordInputField.value, this.state).then(auth => {\r\n          console.log(auth);\r\n  \r\n          if(auth._ === 'auth.authorization') {\r\n            clearInterval(getStateInterval);\r\n            if(monkey) monkey.remove();\r\n            const tab = new AppTwoStepVerificationTab(this.slider);\r\n            tab.state = this.state;\r\n            tab.plainPassword = plainPassword;\r\n            tab.open();\r\n            this.slider.removeTabFromHistory(this);\r\n          }\r\n        }, (err) => {\r\n          btnContinue.removeAttribute('disabled');\r\n          passwordInputField.input.classList.add('error');\r\n          \r\n          switch(err.type) {\r\n            default:\r\n              //btnContinue.innerText = err.type;\r\n              textEl.key = 'TwoStepAuth.InvalidPassword';\r\n              textEl.update();\r\n              preloader.remove();\r\n              passwordInputField.select();\r\n              break;\r\n          }\r\n  \r\n          getState();\r\n        });\r\n      };\r\n  \r\n      onContinueClick = submit;\r\n\r\n      getState();\r\n    } else {\r\n      onContinueClick = (e) => {\r\n        if(e) {\r\n          cancelEvent(e);\r\n        }\r\n\r\n        if(!verifyInput()) return;\r\n\r\n        const tab = new AppTwoStepVerificationReEnterPasswordTab(this.slider);\r\n        tab.state = this.state;\r\n        tab.newPassword = passwordInputField.value;\r\n        tab.plainPassword = this.plainPassword;\r\n        tab.open();\r\n      };\r\n    }\r\n\r\n    attachClickEvent(btnContinue, onContinueClick);\r\n\r\n    return monkey.load();\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    if(!canFocus(this.isFirst)) return;\r\n    this.passwordInputField.input.focus();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"../..\";\r\nimport { attachClickEvent } from \"../../../../helpers/dom/clickEvent\";\r\nimport { AccountPassword } from \"../../../../layer\";\r\nimport appStickersManager from \"../../../../lib/appManagers/appStickersManager\";\r\nimport { _i18n } from \"../../../../lib/langPack\";\r\nimport passwordManager from \"../../../../lib/mtproto/passwordManager\";\r\nimport Button from \"../../../button\";\r\nimport PopupPeer from \"../../../popups/peer\";\r\nimport { SliderSuperTab } from \"../../../slider\";\r\nimport { wrapSticker } from \"../../../wrappers\";\r\nimport AppSettingsTab from \"../settings\";\r\nimport AppTwoStepVerificationEmailTab from \"./email\";\r\nimport AppTwoStepVerificationEnterPasswordTab from \"./enterPassword\";\r\n\r\nexport default class AppTwoStepVerificationTab extends SliderSuperTab {\r\n  public state: AccountPassword;\r\n  public plainPassword: string;\r\n\r\n  protected init() {\r\n    this.container.classList.add('two-step-verification', 'two-step-verification-main');\r\n    this.setTitle('TwoStepVerificationTitle');\r\n\r\n    const section = new SettingSection({\r\n      caption: true,\r\n      noDelimiter: true\r\n    });\r\n\r\n    const emoji = '🔐';\r\n    const doc = appStickersManager.getAnimatedEmojiSticker(emoji);\r\n    const stickerContainer = document.createElement('div');\r\n\r\n    if(doc) {\r\n      wrapSticker({\r\n        doc,\r\n        div: stickerContainer,\r\n        loop: false,\r\n        play: true,\r\n        width: 168,\r\n        height: 168,\r\n        emoji\r\n      }).then(() => {\r\n        // this.animation = player;\r\n      });\r\n    } else {\r\n      stickerContainer.classList.add('media-sticker-wrapper');\r\n    }\r\n\r\n    section.content.append(stickerContainer);\r\n\r\n    const c = section.generateContentElement();\r\n    if(this.state.pFlags.has_password) {\r\n      _i18n(section.caption, 'TwoStepAuth.GenericHelp');\r\n\r\n      const btnChangePassword = Button('btn-primary btn-transparent', {icon: 'edit', text: 'TwoStepAuth.ChangePassword'});\r\n      const btnDisablePassword = Button('btn-primary btn-transparent', {icon: 'passwordoff', text: 'TwoStepAuth.RemovePassword'});\r\n      const btnSetRecoveryEmail = Button('btn-primary btn-transparent', {icon: 'email', text: this.state.pFlags.has_recovery ? 'TwoStepAuth.ChangeEmail' : 'TwoStepAuth.SetupEmail'});\r\n\r\n      attachClickEvent(btnChangePassword, () => {\r\n        const tab = new AppTwoStepVerificationEnterPasswordTab(this.slider);\r\n        tab.state = this.state;\r\n        tab.plainPassword = this.plainPassword;\r\n        tab.open();\r\n      });\r\n\r\n      attachClickEvent(btnDisablePassword, () => {\r\n        const popup = new PopupPeer('popup-disable-password', {\r\n          buttons: [{\r\n            langKey: 'Disable',\r\n            callback: () => {\r\n              passwordManager.updateSettings({currentPassword: this.plainPassword}).then(() => {\r\n                this.slider.sliceTabsUntilTab(AppSettingsTab, this);\r\n                this.close();\r\n              });\r\n            },\r\n            isDanger: true,\r\n          }], \r\n          titleLangKey: 'TurnPasswordOffQuestionTitle',\r\n          descriptionLangKey: 'TurnPasswordOffQuestion'\r\n        });\r\n\r\n        popup.show();\r\n      });\r\n\r\n      attachClickEvent(btnSetRecoveryEmail, () => {\r\n        const tab = new AppTwoStepVerificationEmailTab(this.slider);\r\n        tab.state = this.state;\r\n        tab.hint = this.state.hint;\r\n        tab.plainPassword = this.plainPassword;\r\n        tab.newPassword = this.plainPassword;\r\n        tab.isFirst = true;\r\n        tab.open();\r\n      });\r\n\r\n      c.append(btnChangePassword, btnDisablePassword, btnSetRecoveryEmail);\r\n    } else {\r\n      _i18n(section.caption, 'TwoStepAuth.SetPasswordHelp');\r\n\r\n      const inputWrapper = document.createElement('div');\r\n      inputWrapper.classList.add('input-wrapper');\r\n\r\n      const btnSetPassword = Button('btn-primary btn-color-primary', {text: 'TwoStepVerificationSetPassword'});\r\n      \r\n      inputWrapper.append(btnSetPassword);\r\n      c.append(inputWrapper);\r\n\r\n      attachClickEvent(btnSetPassword, (e) => {\r\n        const tab = new AppTwoStepVerificationEnterPasswordTab(this.slider);\r\n        tab.state = this.state;\r\n        tab.open();\r\n      });\r\n    }\r\n\r\n    this.scrollable.container.append(section.container);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTabEventable } from \"../../../sliderTab\";\r\nimport PrivacySection from \"../../../privacySection\";\r\nimport { LangPackKey } from \"../../../../lib/langPack\";\r\n\r\nexport default class AppPrivacyLastSeenTab extends SliderSuperTabEventable {\r\n  protected init() {\r\n    this.header.classList.add('with-border');\r\n    this.container.classList.add('privacy-tab', 'privacy-last-seen');\r\n    this.setTitle('PrivacyLastSeen');\r\n\r\n    const caption: LangPackKey = 'PrivacySettingsController.LastSeenDescription';\r\n    new PrivacySection({\r\n      tab: this,\r\n      title: 'LastSeenTitle',\r\n      inputKey: 'inputPrivacyKeyStatusTimestamp',\r\n      captions: [caption, caption, caption],\r\n      exceptionTexts: ['PrivacySettingsController.NeverShare', 'PrivacySettingsController.AlwaysShare'],\r\n      appendTo: this.scrollable\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTabEventable } from \"../../../sliderTab\";\r\nimport PrivacySection from \"../../../privacySection\";\r\nimport { PrivacyType } from \"../../../../lib/appManagers/appPrivacyManager\";\r\nimport { LangPackKey } from \"../../../../lib/langPack\";\r\n\r\nexport default class AppPrivacyProfilePhotoTab extends SliderSuperTabEventable {\r\n  protected init() {\r\n    this.header.classList.add('with-border');\r\n    this.container.classList.add('privacy-tab', 'privacy-profile-photo');\r\n    this.setTitle('PrivacyProfilePhoto');\r\n\r\n    const caption: LangPackKey = 'PrivacySettingsController.ProfilePhoto.CustomHelp';\r\n    new PrivacySection({\r\n      tab: this,\r\n      title: 'PrivacyProfilePhotoTitle',\r\n      inputKey: 'inputPrivacyKeyProfilePhoto',\r\n      captions: [caption, caption, caption],\r\n      exceptionTexts: ['PrivacySettingsController.NeverShare', 'PrivacySettingsController.AlwaysShare'],\r\n      appendTo: this.scrollable,\r\n      skipTypes: [PrivacyType.Nobody]\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTabEventable } from \"../../../sliderTab\";\r\nimport PrivacySection from \"../../../privacySection\";\r\nimport { LangPackKey } from \"../../../../lib/langPack\";\r\n\r\nexport default class AppPrivacyForwardMessagesTab extends SliderSuperTabEventable {\r\n  protected init() {\r\n    this.header.classList.add('with-border');\r\n    this.container.classList.add('privacy-tab', 'privacy-forward-messages');\r\n    this.setTitle('PrivacySettings.Forwards');\r\n\r\n    const caption: LangPackKey = 'PrivacySettingsController.Forwards.CustomHelp';\r\n    new PrivacySection({\r\n      tab: this,\r\n      title: 'PrivacyForwardsTitle',\r\n      inputKey: 'inputPrivacyKeyForwards',\r\n      captions: [caption, caption, caption],\r\n      exceptionTexts: ['PrivacySettingsController.NeverAllow', 'PrivacySettingsController.AlwaysAllow'],\r\n      appendTo: this.scrollable\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTabEventable } from \"../../../sliderTab\";\r\nimport PrivacySection from \"../../../privacySection\";\r\nimport { LangPackKey } from \"../../../../lib/langPack\";\r\nimport { PrivacyType } from \"../../../../lib/appManagers/appPrivacyManager\";\r\n\r\nexport default class AppPrivacyAddToGroupsTab extends SliderSuperTabEventable {\r\n  protected init() {\r\n    this.header.classList.add('with-border');\r\n    this.container.classList.add('privacy-tab', 'privacy-add-to-groups');\r\n    this.setTitle('PrivacySettings.Groups');\r\n\r\n    const caption: LangPackKey = 'PrivacySettingsController.GroupDescription';\r\n    new PrivacySection({\r\n      tab: this,\r\n      title: 'WhoCanAddMe',\r\n      inputKey: 'inputPrivacyKeyChatInvite',\r\n      captions: [caption, caption, caption],\r\n      exceptionTexts: ['PrivacySettingsController.NeverAllow', 'PrivacySettingsController.AlwaysAllow'],\r\n      appendTo: this.scrollable,\r\n      skipTypes: [PrivacyType.Nobody]\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTabEventable } from \"../../../sliderTab\";\r\nimport PrivacySection from \"../../../privacySection\";\r\nimport { LangPackKey } from \"../../../../lib/langPack\";\r\n\r\nexport default class AppPrivacyCallsTab extends SliderSuperTabEventable {\r\n  protected init() {\r\n    this.header.classList.add('with-border');\r\n    this.container.classList.add('privacy-tab', 'privacy-calls');\r\n    this.setTitle('PrivacySettings.VoiceCalls');\r\n\r\n    const caption: LangPackKey = 'PrivacySettingsController.PhoneCallDescription';\r\n    new PrivacySection({\r\n      tab: this,\r\n      title: 'WhoCanCallMe',\r\n      inputKey: 'inputPrivacyKeyPhoneCall',\r\n      captions: [caption, caption, caption],\r\n      exceptionTexts: ['PrivacySettingsController.NeverAllow', 'PrivacySettingsController.AlwaysAllow'],\r\n      appendTo: this.scrollable\r\n    });\r\n\r\n    {\r\n      const caption: LangPackKey = 'PrivacySettingsController.P2p.Desc';\r\n      new PrivacySection({\r\n        tab: this,\r\n        title: 'PrivacyP2PHeader',\r\n        inputKey: 'inputPrivacyKeyPhoneP2P',\r\n        captions: [caption, caption, caption],\r\n        exceptionTexts: ['PrivacySettingsController.NeverAllow', 'PrivacySettingsController.AlwaysAllow'],\r\n        appendTo: this.scrollable\r\n      });\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport { SettingSection } from \"..\";\r\nimport Button from \"../../button\";\r\nimport Row from \"../../row\";\r\nimport { Authorization } from \"../../../layer\";\r\nimport { formatDateAccordingToTodayNew } from \"../../../helpers/date\";\r\nimport { attachContextMenuListener, openBtnMenu, positionMenu } from \"../../misc\";\r\nimport ButtonMenu from \"../../buttonMenu\";\r\nimport apiManager from \"../../../lib/mtproto/mtprotoworker\";\r\nimport { toast } from \"../../toast\";\r\nimport AppPrivacyAndSecurityTab from \"./privacyAndSecurity\";\r\nimport I18n from \"../../../lib/langPack\";\r\nimport PopupPeer from \"../../popups/peer\";\r\nimport findUpClassName from \"../../../helpers/dom/findUpClassName\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport toggleDisability from \"../../../helpers/dom/toggleDisability\";\r\nimport { SliderSuperTabEventable } from \"../../sliderTab\";\r\n\r\nexport default class AppActiveSessionsTab extends SliderSuperTabEventable {\r\n  public authorizations: Authorization.authorization[];\r\n  private menuElement: HTMLElement;\r\n  \r\n  protected init() {\r\n    this.header.classList.add('with-border');\r\n    this.container.classList.add('active-sessions-container');\r\n    this.setTitle('SessionsTitle');\r\n\r\n    const Session = (auth: Authorization.authorization) => {\r\n      const row = new Row({\r\n        title: [auth.app_name, auth.app_version].join(' '),\r\n        subtitle: [auth.ip, auth.country].join(' - '),\r\n        clickable: true,\r\n        titleRight: auth.pFlags.current ? undefined : formatDateAccordingToTodayNew(new Date(Math.max(auth.date_active, auth.date_created) * 1000))\r\n      });\r\n\r\n      row.container.dataset.hash = '' + auth.hash;\r\n\r\n      const midtitle = document.createElement('div');\r\n      midtitle.classList.add('row-midtitle');\r\n      midtitle.innerHTML = [auth.device_model, auth.system_version || auth.platform].filter(Boolean).join(', ');\r\n\r\n      row.subtitle.parentElement.insertBefore(midtitle, row.subtitle);\r\n\r\n      return row;\r\n    };\r\n\r\n    const authorizations = this.authorizations.slice();\r\n\r\n    {\r\n      const section = new SettingSection({\r\n        name: 'CurrentSession',\r\n        caption: 'ClearOtherSessionsHelp'\r\n      });\r\n\r\n      const auth = authorizations.findAndSplice(auth => auth.pFlags.current);\r\n      const session = Session(auth);\r\n\r\n      section.content.append(session.container);\r\n\r\n      if(authorizations.length) {\r\n        const btnTerminate = Button('btn-primary btn-transparent danger', {icon: 'stop', text: 'TerminateAllSessions'});\r\n        attachClickEvent(btnTerminate, (e) => {\r\n          new PopupPeer('revoke-session', {\r\n            buttons: [{\r\n              langKey: 'Terminate',\r\n              isDanger: true,\r\n              callback: () => {\r\n                const toggle = toggleDisability([btnTerminate], true);\r\n                apiManager.invokeApi('auth.resetAuthorizations').then(value => {\r\n                  //toggleDisability([btnTerminate], false);\r\n                  btnTerminate.remove();\r\n                  otherSection.container.remove();\r\n                }, onError).finally(() => {\r\n                  toggle();\r\n                });\r\n              }\r\n            }],\r\n            titleLangKey: 'AreYouSureSessionsTitle',\r\n            descriptionLangKey: 'AreYouSureSessions'\r\n          }).show();\r\n        });\r\n  \r\n        section.content.append(btnTerminate);\r\n      }\r\n\r\n      this.scrollable.append(section.container);\r\n    }\r\n\r\n    if(!authorizations.length) {\r\n      return;\r\n    }\r\n\r\n    const otherSection = new SettingSection({\r\n      name: 'OtherSessions',\r\n      caption: 'SessionsListInfo'\r\n    });\r\n\r\n    authorizations.forEach(auth => {\r\n      otherSection.content.append(Session(auth).container);\r\n    });\r\n\r\n    this.scrollable.append(otherSection.container);\r\n\r\n    const onError = (err: any) => {\r\n      if(err.type === 'FRESH_RESET_AUTHORISATION_FORBIDDEN') {\r\n        toast(I18n.format('RecentSessions.Error.FreshReset', true));\r\n      }\r\n    };\r\n\r\n    let target: HTMLElement;\r\n    const onTerminateClick = () => {\r\n      const hash = target.dataset.hash;\r\n      \r\n      new PopupPeer('revoke-session', {\r\n        buttons: [{\r\n          langKey: 'Terminate',\r\n          isDanger: true,\r\n          callback: () => {\r\n            apiManager.invokeApi('account.resetAuthorization', {hash})\r\n            .then(value => {\r\n              if(value) {\r\n                target.remove();\r\n              }\r\n            }, onError);\r\n          }\r\n        }],\r\n        titleLangKey: 'AreYouSureSessionTitle',\r\n        descriptionLangKey: 'TerminateSessionText'\r\n      }).show();\r\n    };\r\n\r\n    const element = this.menuElement = ButtonMenu([{\r\n      icon: 'stop',\r\n      text: 'Terminate',\r\n      onClick: onTerminateClick\r\n    }]);\r\n    element.id = 'active-sessions-contextmenu';\r\n    element.classList.add('contextmenu');\r\n\r\n    document.getElementById('page-chats').append(element);\r\n\r\n    attachContextMenuListener(this.scrollable.container, (e) => {\r\n      target = findUpClassName(e.target, 'row');\r\n      if(!target || target.dataset.hash === '0') {\r\n        return;\r\n      }\r\n\r\n      if(e instanceof MouseEvent) e.preventDefault();\r\n      // smth\r\n      if(e instanceof MouseEvent) e.cancelBubble = true;\r\n\r\n      positionMenu(e, element);\r\n      openBtnMenu(element);\r\n    });\r\n\r\n    attachClickEvent(this.scrollable.container, (e) => {\r\n      target = findUpClassName(e.target, 'row');\r\n      if(!target || target.dataset.hash === '0') {\r\n        return;\r\n      }\r\n\r\n      onTerminateClick();\r\n    });\r\n  }\r\n\r\n  onCloseAfterTimeout() {\r\n    if(this.menuElement) {\r\n      this.menuElement.remove();\r\n    }\r\n\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport { SettingSection } from \"..\";\r\nimport { attachContextMenuListener, openBtnMenu, positionMenu } from \"../../misc\";\r\nimport ButtonMenu from \"../../buttonMenu\";\r\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport PopupPickUser from \"../../popups/pickUser\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport findUpTag from \"../../../helpers/dom/findUpTag\";\r\nimport ButtonCorner from \"../../buttonCorner\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\n\r\nexport default class AppBlockedUsersTab extends SliderSuperTab {\r\n  public peerIds: PeerId[];\r\n  private menuElement: HTMLElement;\r\n  \r\n  protected init() {\r\n    this.header.classList.add('with-border');\r\n    this.container.classList.add('blocked-users-container');\r\n    this.setTitle('BlockedUsers');\r\n\r\n    {\r\n      const section = new SettingSection({\r\n        caption: 'BlockedUsersInfo'\r\n      });\r\n\r\n      this.scrollable.append(section.container);\r\n    }\r\n\r\n    const btnAdd = ButtonCorner({icon: 'add', className: 'is-visible'});\r\n    this.content.append(btnAdd);\r\n\r\n    attachClickEvent(btnAdd, (e) => {\r\n      new PopupPickUser({\r\n        peerTypes: ['contacts'],\r\n        placeholder: 'BlockModal.Search.Placeholder',\r\n        onSelect: (peerId) => {\r\n          //console.log('block', peerId);\r\n          appUsersManager.toggleBlock(peerId, true);\r\n        },\r\n      });\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    const list = appDialogsManager.createChatList();\r\n    this.scrollable.container.classList.add('chatlist-container');\r\n    this.scrollable.append(list);\r\n\r\n    const add = (peerId: PeerId, append: boolean) => {\r\n      const {dom} = appDialogsManager.addDialogNew({\r\n        dialog: peerId,\r\n        container: list,\r\n        drawStatus: false,\r\n        rippleEnabled: true,\r\n        avatarSize: 48,\r\n        append\r\n      });\r\n\r\n      const user = appUsersManager.getUser(peerId);\r\n      if(user.pFlags.bot) {\r\n        dom.lastMessageSpan.append('@' + user.username);\r\n      } else {\r\n        if(user.phone) dom.lastMessageSpan.innerHTML = appUsersManager.formatUserPhone(user.phone);\r\n        else dom.lastMessageSpan.append(user.username ? '@' + user.username : appUsersManager.getUserStatusString(peerId));\r\n      }\r\n\r\n      //dom.titleSpan.innerHTML = 'Raaid El Syed';\r\n      //dom.lastMessageSpan.innerHTML = '+1 234 567891';\r\n    };\r\n\r\n    for(const peerId of this.peerIds) {\r\n      add(peerId, true);\r\n    }\r\n\r\n    let target: HTMLElement;\r\n    const onUnblock = () => {\r\n      const peerId = target.dataset.peerId.toPeerId();\r\n      appUsersManager.toggleBlock(peerId, false);\r\n    };\r\n\r\n    const element = this.menuElement = ButtonMenu([{\r\n      icon: 'lockoff',\r\n      text: 'Unblock',\r\n      onClick: onUnblock,\r\n      options: {listenerSetter: this.listenerSetter}\r\n    }]);\r\n    element.id = 'blocked-users-contextmenu';\r\n    element.classList.add('contextmenu');\r\n\r\n    document.getElementById('page-chats').append(element);\r\n\r\n    attachContextMenuListener(this.scrollable.container, (e) => {\r\n      target = findUpTag(e.target, 'LI');\r\n      if(!target) {\r\n        return;\r\n      }\r\n\r\n      if(e instanceof MouseEvent) e.preventDefault();\r\n      // smth\r\n      if(e instanceof MouseEvent) e.cancelBubble = true;\r\n\r\n      positionMenu(e, element);\r\n      openBtnMenu(element);\r\n    }, this.listenerSetter);\r\n\r\n    this.listenerSetter.add(rootScope)('peer_block', (update) => {\r\n      const {peerId, blocked} = update;\r\n      const li = list.querySelector(`[data-peer-id=\"${peerId}\"]`);\r\n      if(blocked) {\r\n        if(!li) {\r\n          add(peerId, false);\r\n        }\r\n      } else {\r\n        if(li) {\r\n          li.remove();\r\n        }\r\n      }\r\n    });\r\n\r\n    const LOAD_COUNT = 50;\r\n    let loading = false;\r\n    this.scrollable.onScrolledBottom = () => {\r\n      if(loading) {\r\n        return;\r\n      }\r\n\r\n      loading = true;\r\n      appUsersManager.getBlocked(list.childElementCount, LOAD_COUNT).then(res => {\r\n        for(const peerId of res.peerIds) {\r\n          add(peerId, true);\r\n        }\r\n\r\n        if(res.peerIds.length < LOAD_COUNT || list.childElementCount === res.count) {\r\n          this.scrollable.onScrolledBottom = null;\r\n        }\r\n\r\n        this.scrollable.checkForTriggers();\r\n      }).finally(() => {\r\n        loading = false;\r\n      });\r\n    };\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    this.scrollable.onScroll();\r\n  }\r\n\r\n  onCloseAfterTimeout() {\r\n    if(this.menuElement) {\r\n      this.menuElement.remove();\r\n    }\r\n\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n}\r\n","export default function convertKeyToInputKey(key: string) {\n  key = key[0].toUpperCase() + key.slice(1);\n  key = 'input' + key;\n  return key;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTabEventable } from \"../../sliderTab\";\r\nimport { SettingSection } from \"..\";\r\nimport Row from \"../../row\";\r\nimport { AccountPassword, Authorization, InputPrivacyKey, Updates } from \"../../../layer\";\r\nimport appPrivacyManager, { PrivacyType } from \"../../../lib/appManagers/appPrivacyManager\";\r\nimport AppPrivacyPhoneNumberTab from \"./privacy/phoneNumber\";\r\nimport AppTwoStepVerificationTab from \"./2fa\";\r\nimport passwordManager from \"../../../lib/mtproto/passwordManager\";\r\nimport AppTwoStepVerificationEnterPasswordTab from \"./2fa/enterPassword\";\r\nimport AppTwoStepVerificationEmailConfirmationTab from \"./2fa/emailConfirmation\";\r\nimport AppPrivacyLastSeenTab from \"./privacy/lastSeen\";\r\nimport AppPrivacyProfilePhotoTab from \"./privacy/profilePhoto\";\r\nimport AppPrivacyForwardMessagesTab from \"./privacy/forwardMessages\";\r\nimport AppPrivacyAddToGroupsTab from \"./privacy/addToGroups\";\r\nimport AppPrivacyCallsTab from \"./privacy/calls\";\r\nimport AppActiveSessionsTab from \"./activeSessions\";\r\nimport apiManager from \"../../../lib/mtproto/mtprotoworker\";\r\nimport AppBlockedUsersTab from \"./blockedUsers\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport { i18n, LangPackKey, _i18n } from \"../../../lib/langPack\";\r\nimport replaceContent from \"../../../helpers/dom/replaceContent\";\r\nimport CheckboxField from \"../../checkboxField\";\r\nimport PopupPeer from \"../../popups/peer\";\r\nimport appDraftsManager from \"../../../lib/appManagers/appDraftsManager\";\r\nimport Button from \"../../button\";\r\nimport toggleDisability from \"../../../helpers/dom/toggleDisability\";\r\nimport convertKeyToInputKey from \"../../../helpers/string/convertKeyToInputKey\";\r\n\r\nexport default class AppPrivacyAndSecurityTab extends SliderSuperTabEventable {\r\n  private activeSessionsRow: Row;\r\n  private authorizations: Authorization.authorization[];\r\n\r\n  protected init() {\r\n    this.header.classList.add('with-border');\r\n    this.container.classList.add('dont-u-dare-block-me');\r\n    this.setTitle('PrivacySettings');\r\n\r\n    const SUBTITLE: LangPackKey = 'Loading';\r\n\r\n    {\r\n      const section = new SettingSection({noDelimiter: true, caption: 'SessionsInfo'});\r\n\r\n      let blockedPeerIds: PeerId[];\r\n      const blockedUsersRow = new Row({\r\n        icon: 'deleteuser',\r\n        titleLangKey: 'BlockedUsers',\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: () => {\r\n          const tab = new AppBlockedUsersTab(this.slider);\r\n          tab.peerIds = blockedPeerIds;\r\n          tab.open();\r\n        }\r\n      });\r\n      blockedUsersRow.freezed = true;\r\n\r\n      let passwordState: AccountPassword;\r\n      const twoFactorRowOptions = {\r\n        icon: 'lock',\r\n        titleLangKey: 'TwoStepVerification' as LangPackKey,\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: (e: Event) => {\r\n          let tab: AppTwoStepVerificationTab | AppTwoStepVerificationEnterPasswordTab | AppTwoStepVerificationEmailConfirmationTab;\r\n          if(passwordState.pFlags.has_password) {\r\n            tab = new AppTwoStepVerificationEnterPasswordTab(this.slider);\r\n          } else if(passwordState.email_unconfirmed_pattern) {\r\n            tab = new AppTwoStepVerificationEmailConfirmationTab(this.slider);\r\n            tab.email = passwordState.email_unconfirmed_pattern;\r\n            tab.length = 6;\r\n            tab.isFirst = true;\r\n            passwordManager.resendPasswordEmail();\r\n          } else {\r\n            tab = new AppTwoStepVerificationTab(this.slider);\r\n          }\r\n          \r\n          tab.state = passwordState;\r\n          tab.open();\r\n        }\r\n      };\r\n      \r\n      const twoFactorRow = new Row(twoFactorRowOptions);\r\n      twoFactorRow.freezed = true;\r\n\r\n      const activeSessionsRow = this.activeSessionsRow = new Row({\r\n        icon: 'activesessions',\r\n        titleLangKey: 'SessionsTitle',\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: () => {\r\n          const tab = new AppActiveSessionsTab(this.slider);\r\n          tab.authorizations = this.authorizations;\r\n          tab.eventListener.addEventListener('destroy', () => {\r\n            this.updateActiveSessions();\r\n          }, {once: true});\r\n          tab.open();\r\n        }\r\n      });\r\n      activeSessionsRow.freezed = true;\r\n\r\n      section.content.append(blockedUsersRow.container, twoFactorRow.container, activeSessionsRow.container);\r\n      this.scrollable.append(section.container);\r\n\r\n      const setBlockedCount = (count: number) => {\r\n        if(count) {\r\n          replaceContent(blockedUsersRow.subtitle, i18n('PrivacySettingsController.UserCount', [count]));\r\n        } else {\r\n          replaceContent(blockedUsersRow.subtitle, i18n('BlockedEmpty', [count]));\r\n        }\r\n      };\r\n\r\n      this.listenerSetter.add(rootScope)('peer_block', () => {\r\n        /* const {blocked, peerId} = update;\r\n        if(!blocked) blockedPeerIds.findAndSplice(p => p === peerId);\r\n        else blockedPeerIds.unshift(peerId);\r\n        blockedCount += blocked ? 1 : -1;\r\n        setBlockedCount(blockedCount); */\r\n        updateBlocked();\r\n      });\r\n\r\n      const updateBlocked = () => {\r\n        appUsersManager.getBlocked().then(res => {\r\n          blockedUsersRow.freezed = false;\r\n          setBlockedCount(res.count);\r\n          blockedPeerIds = res.peerIds;\r\n        });\r\n      };\r\n\r\n      updateBlocked();\r\n\r\n      passwordManager.getState().then(state => {\r\n        passwordState = state;\r\n        replaceContent(twoFactorRow.subtitle, i18n(state.pFlags.has_password ? 'PrivacyAndSecurity.Item.On' : 'PrivacyAndSecurity.Item.Off'));\r\n        twoFactorRow.freezed = false;\r\n        \r\n        //console.log('password state', state);\r\n      });\r\n\r\n      this.updateActiveSessions();\r\n    }\r\n\r\n    {\r\n      const section = new SettingSection({name: 'PrivacyTitle', caption: 'GroupsAndChannelsHelp'});\r\n\r\n      section.content.classList.add('privacy-navigation-container');\r\n\r\n      const rowsByKeys: Partial<{\r\n        [key in InputPrivacyKey['_']]: Row\r\n      }> = {};\r\n\r\n      const numberVisibilityRow = rowsByKeys['inputPrivacyKeyPhoneNumber'] = new Row({\r\n        titleLangKey: 'PrivacyPhoneTitle',\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: () => {\r\n          new AppPrivacyPhoneNumberTab(this.slider).open();\r\n        }\r\n      });\r\n\r\n      const lastSeenTimeRow = rowsByKeys['inputPrivacyKeyStatusTimestamp'] = new Row({\r\n        titleLangKey: 'LastSeenTitle',\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: () => {\r\n          new AppPrivacyLastSeenTab(this.slider).open();\r\n        }\r\n      });\r\n\r\n      const photoVisibilityRow = rowsByKeys['inputPrivacyKeyProfilePhoto'] = new Row({\r\n        titleLangKey: 'PrivacyProfilePhotoTitle',\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: () => {\r\n          new AppPrivacyProfilePhotoTab(this.slider).open();\r\n        }\r\n      });\r\n\r\n      const callRow = rowsByKeys['inputPrivacyKeyPhoneCall'] = new Row({\r\n        titleLangKey: 'WhoCanCallMe',\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: () => {\r\n          new AppPrivacyCallsTab(this.slider).open();\r\n        }\r\n      });\r\n\r\n      const linkAccountRow = rowsByKeys['inputPrivacyKeyForwards'] = new Row({\r\n        titleLangKey: 'PrivacyForwardsTitle',\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: () => {\r\n          new AppPrivacyForwardMessagesTab(this.slider).open();\r\n        }\r\n      });\r\n\r\n      const groupChatsAddRow = rowsByKeys['inputPrivacyKeyChatInvite'] = new Row({\r\n        titleLangKey: 'WhoCanAddMe',\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: () => {\r\n          new AppPrivacyAddToGroupsTab(this.slider).open();\r\n        }\r\n      });\r\n\r\n      const updatePrivacyRow = (key: InputPrivacyKey['_']) => {\r\n        const row = rowsByKeys[key];\r\n        if(!row) {\r\n          return;\r\n        }\r\n\r\n        appPrivacyManager.getPrivacy(key).then(rules => {\r\n          const details = appPrivacyManager.getPrivacyRulesDetails(rules);\r\n          const langKey = details.type === PrivacyType.Everybody ? 'PrivacySettingsController.Everbody' : (details.type === PrivacyType.Contacts ? 'PrivacySettingsController.MyContacts' : 'PrivacySettingsController.Nobody');\r\n          const disallowLength = details.disallowPeers.users.length + details.disallowPeers.chats.length;\r\n          const allowLength = details.allowPeers.users.length + details.allowPeers.chats.length;\r\n\r\n          row.subtitle.innerHTML = '';\r\n          const s = i18n(langKey);\r\n          row.subtitle.append(s);\r\n          if(disallowLength || allowLength) {\r\n            row.subtitle.append(` (${[-disallowLength, allowLength ? '+' + allowLength : 0].filter(Boolean).join(', ')})`);\r\n          }\r\n        });\r\n      };\r\n\r\n      section.content.append(\r\n        numberVisibilityRow.container, \r\n        lastSeenTimeRow.container, \r\n        photoVisibilityRow.container, \r\n        callRow.container, \r\n        linkAccountRow.container, \r\n        groupChatsAddRow.container\r\n      );\r\n      this.scrollable.append(section.container);\r\n\r\n      for(const key in rowsByKeys) {\r\n        updatePrivacyRow(key as keyof typeof rowsByKeys);\r\n      }\r\n\r\n      rootScope.addEventListener('privacy_update', (update) => {\r\n        updatePrivacyRow(convertKeyToInputKey(update.key._) as any);\r\n      });\r\n    }\r\n\r\n    const promises: Promise<any>[] = [];\r\n    {\r\n      const section = new SettingSection({name: 'Privacy.SensitiveContent'});\r\n      section.container.classList.add('hide');\r\n\r\n      promises.push(apiManager.invokeApi('account.getContentSettings').then(settings => {\r\n        if(!settings.pFlags.sensitive_can_change) {\r\n          return;\r\n        }\r\n        \r\n        const enabled = settings.pFlags.sensitive_enabled;\r\n\r\n        const sensitiveRow = new Row({\r\n          checkboxField: new CheckboxField({text: 'PrivacyAndSecurity.SensitiveText', checked: enabled}),\r\n          subtitleLangKey: 'PrivacyAndSecurity.SensitiveDesc',\r\n          noCheckboxSubtitle: true\r\n        });\r\n        \r\n        section.content.append(sensitiveRow.container);\r\n        section.container.classList.remove('hide');\r\n        \r\n        this.eventListener.addEventListener('destroy', () => {\r\n          const _enabled = sensitiveRow.checkboxField.checked;\r\n          const isChanged = _enabled !== enabled;\r\n          if(!isChanged) {\r\n            return;\r\n          }\r\n          \r\n          apiManager.invokeApi('account.setContentSettings', {\r\n            sensitive_enabled: _enabled\r\n          });\r\n        }, {once: true});\r\n      }));\r\n\r\n      this.scrollable.append(section.container);\r\n    }\r\n\r\n    {\r\n      const section = new SettingSection({name: 'FilterChats'});\r\n\r\n      const onDeleteClick = () => {\r\n        const popup = new PopupPeer('popup-delete-drafts', {\r\n          buttons: [{\r\n            langKey: 'Delete',\r\n            callback: () => {\r\n              const toggle = toggleDisability([deleteButton], true);\r\n              appDraftsManager.clearAllDrafts().then(() => {\r\n                toggle();\r\n              });\r\n            },\r\n            isDanger: true,\r\n          }], \r\n          titleLangKey: 'AreYouSureClearDraftsTitle',\r\n          descriptionLangKey: 'AreYouSureClearDrafts'\r\n        });\r\n  \r\n        popup.show();\r\n      };\r\n\r\n      const deleteButton = Button('btn-primary btn-transparent', {icon: 'delete', text: 'PrivacyDeleteCloudDrafts'});\r\n      this.listenerSetter.add(deleteButton)('click', onDeleteClick);\r\n      section.content.append(deleteButton);\r\n\r\n      /* promises.push(apiManager.invokeApi('messages.getAllDrafts').then(drafts => {\r\n        const draftsRow = new Row({\r\n          titleLangKey: 'PrivacyDeleteCloudDrafts',\r\n          subtitleLangKey: 'Drafts',\r\n          subtitleLangArgs: [(drafts as Updates.updates).updates.length],\r\n          icon: 'delete',\r\n          clickable: onDeleteClick\r\n        });\r\n        \r\n        section.content.append(draftsRow.container);\r\n      })); */\r\n\r\n      this.scrollable.append(section.container);\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  public updateActiveSessions() {\r\n    apiManager.invokeApi('account.getAuthorizations').then(auths => {\r\n      this.activeSessionsRow.freezed = false;\r\n      this.authorizations = auths.authorizations;\r\n      _i18n(this.activeSessionsRow.subtitle, 'Privacy.Devices', [this.authorizations.length]);\r\n      //console.log('auths', auths);\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport renderImageFromUrl from \"./dom/renderImageFromUrl\";\r\n\r\nexport function averageColorFromCanvas(canvas: HTMLCanvasElement) {\r\n  const context = canvas.getContext('2d');\r\n\r\n  const pixel = new Array(4).fill(0);\r\n  const pixels = context.getImageData(0, 0, canvas.width, canvas.height).data;\r\n  for(let i = 0; i < pixels.length; i += 4) {\r\n    pixel[0] += pixels[i];\r\n    pixel[1] += pixels[i + 1];\r\n    pixel[2] += pixels[i + 2];\r\n    pixel[3] += pixels[i + 3];\r\n  }\r\n\r\n  const pixelsLength = pixels.length / 4;\r\n  const outPixel = new Uint8ClampedArray(4);\r\n  outPixel[0] = pixel[0] / pixelsLength;\r\n  outPixel[1] = pixel[1] / pixelsLength;\r\n  outPixel[2] = pixel[2] / pixelsLength;\r\n  outPixel[3] = pixel[3] / pixelsLength;\r\n  return outPixel;\r\n}\r\n\r\nexport function averageColor(imageUrl: string) {\r\n  const img = document.createElement('img');\r\n  return new Promise<Uint8ClampedArray>((resolve) => {\r\n    renderImageFromUrl(img, imageUrl, () => {\r\n      const canvas = document.createElement('canvas');\r\n      const ratio = img.naturalWidth / img.naturalHeight;\r\n      const DIMENSIONS = 50;\r\n      if(ratio === 1) {\r\n        canvas.width = DIMENSIONS;\r\n        canvas.height = canvas.width / ratio;\r\n      } else if(ratio > 1) {\r\n        canvas.height = DIMENSIONS;\r\n        canvas.width = canvas.height / ratio;\r\n      } else {\r\n        canvas.width = canvas.height = DIMENSIONS;\r\n      }\r\n      \r\n      const context = canvas.getContext('2d');\r\n      context.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight, 0, 0, canvas.width, canvas.height);\r\n      resolve(averageColorFromCanvas(canvas));\r\n    });\r\n  });\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport type ColorHsla = {\r\n  h: number,\r\n  s: number,\r\n  l: number,\r\n  a: number\r\n};\r\n\r\nexport type ColorRgba = [number, number, number, number];\r\nexport type ColorRgb = [number, number, number];\r\n\r\n/**\r\n * @returns h [0, 360], s [0, 100], l [0, 100], a [0, 1]\r\n */\r\nexport function rgbaToHsla(r: number, g: number, b: number, a: number = 1): ColorHsla {\r\n  r /= 255, g /= 255, b /= 255;\r\n  const max = Math.max(r, g, b),\r\n        min = Math.min(r, g, b);\r\n  let h, s, l = (max + min) / 2;\r\n\r\n  if(max === min) {\r\n    h = s = 0; // achromatic\r\n  } else {\r\n    let d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n    switch (max) {\r\n      case r:\r\n        h = (g - b) / d + (g < b ? 6 : 0);\r\n        break;\r\n      case g:\r\n        h = (b - r) / d + 2;\r\n        break;\r\n      case b:\r\n        h = (r - g) / d + 4;\r\n        break;\r\n    }\r\n    h /= 6;\r\n  }\r\n\r\n  return {\r\n    h: h * 360,\r\n    s: s * 100,\r\n    l: l * 100,\r\n    a\r\n  };\r\n}\r\n\r\n// * https://stackoverflow.com/a/9493060/6758968\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h in [0, 360], s, and l are contained in the set [0, 1], a in [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * @param   {number}  h       The hue\r\n * @param   {number}  s       The saturation\r\n * @param   {number}  l       The lightness\r\n * @return  {Array}           The RGB representation\r\n */\r\nexport function hslaToRgba(h: number, s: number, l: number, a: number): ColorRgba {\r\n  h /= 360, s /= 100, l /= 100;\r\n  let r: number, g: number, b: number;\r\n\r\n  if(s === 0) {\r\n    r = g = b = l; // achromatic\r\n  } else {\r\n    const hue2rgb = function hue2rgb(p: number, q: number, t: number) {\r\n      if(t < 0) t += 1;\r\n      if(t > 1) t -= 1;\r\n      if(t < 1/6) return p + (q - p) * 6 * t;\r\n      if(t < 1/2) return q;\r\n      if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n      return p;\r\n    }\r\n\r\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n    const p = 2 * l - q;\r\n    r = hue2rgb(p, q, h + 1/3);\r\n    g = hue2rgb(p, q, h);\r\n    b = hue2rgb(p, q, h - 1/3);\r\n  }\r\n\r\n  return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), Math.round(a * 255)];\r\n}\r\n\r\nexport function hslaStringToRgba(hsla: string) {\r\n  const splitted = hsla.slice(5, -1).split(', ');\r\n  const alpha = +splitted.pop();\r\n  const arr = splitted.map((val) => {\r\n    if(val.endsWith('%')) {\r\n      return +val.slice(0, -1);\r\n    }\r\n    \r\n    return +val;\r\n  });\r\n\r\n  return hslaToRgba(arr[0], arr[1], arr[2], alpha);\r\n}\r\n\r\nexport function hexaToRgba(hexa: string) {\r\n  const arr: ColorRgba = [] as any;\r\n  const offset = hexa[0] === '#' ? 1 : 0;\r\n  if(hexa.length === (5 + offset)) {\r\n    hexa = (offset ? '#' : '') + '0' + hexa.slice(offset);\r\n  }\r\n\r\n  if(hexa.length === (3 + offset)) {\r\n    for(let i = offset; i < hexa.length; ++i) {\r\n      arr.push(parseInt(hexa[i] + hexa[i], 16));\r\n    }\r\n  } else if(hexa.length === (4 + offset)) {\r\n    for(let i = offset; i < (hexa.length - 1); ++i) {\r\n      arr.push(parseInt(hexa[i] + hexa[i], 16));\r\n    }\r\n\r\n    arr.push(parseInt(hexa[hexa.length - 1], 16));\r\n  } else {\r\n    for(let i = offset; i < hexa.length; i += 2) {\r\n      arr.push(parseInt(hexa.slice(i, i + 2), 16));\r\n    }\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\nexport function hexToRgb(hex: string) {\r\n  return hexaToRgba(hex.slice(0, 7)) as any as ColorRgb;\r\n}\r\n\r\nexport function hexaToHsla(hexa: string) {\r\n  const rgba = hexaToRgba(hexa);\r\n  return rgbaToHsla(rgba[0], rgba[1], rgba[2], rgba[3]);\r\n}\r\n\r\nexport function rgbaToHexa(rgba: ColorRgba | ColorRgb) {\r\n  return '#' + rgba.map(v => ('0' + v.toString(16)).slice(-2)).join('');\r\n}\r\n\r\nexport function hslaStringToHexa(hsla: string) {\r\n  return rgbaToHexa(hslaStringToRgba(hsla));\r\n}\r\n\r\nexport function hslaStringToHex(hsla: string) {\r\n  return hslaStringToHexa(hsla).slice(0, -2);\r\n}\r\n","import { rgbaToHsla } from \"./color\";\r\n\r\n// * https://github.com/TelegramMessenger/Telegram-iOS/blob/3d062fff78cc6b287c74e6171f855a3500c0156d/submodules/TelegramPresentationData/Sources/PresentationData.swift#L453\r\nexport default function highlightningColor(rgba: [number, number, number, number?]) {\r\n  let {h, s, l} = rgbaToHsla(rgba[0], rgba[1], rgba[2]);\r\n  if(s > 0) {\r\n    s = Math.min(100, s + 5 + 0.1 * (100 - s));\r\n  }\r\n  l = Math.max(0, l * .65);\r\n  \r\n  const hsla = `hsla(${h}, ${s}%, ${l}%, .4)`;\r\n  return hsla;\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko, Artem Kolnogorov and unknown creator of the script taken from http://useless.altervista.org/gradient.html\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { animate } from \"../../helpers/animation\";\nimport { hexToRgb } from \"../../helpers/color\";\n\nconst WIDTH = 50;\nconst HEIGHT = WIDTH;\n\nexport default class ChatBackgroundGradientRenderer {\n  private readonly _width = WIDTH;\n  private readonly _height = HEIGHT;\n  private _phase: number;\n  private _tail: number;\n  private readonly _tails = 90;\n  private readonly _scrollTails = 50;\n  private _frames: ImageData[];\n  private _colors: {r: number, g: number, b: number}[];\n  /* private readonly _curve = [ \n    0, 25, 50, 75, 100, 150, 200, 250, 300, 350, 400, 500, 600, 700, 800, 900, \n    1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1830, 1860, 1890, 1920, \n    1950, 1980, 2010, 2040, 2070, 2100, 2130, 2160, 2190, 2220, 2250, 2280, 2310, \n    2340, 2370, 2400, 2430, 2460, 2490, 2520, 2550, 2580, 2610, 2630, 2640, 2650, \n    2660, 2670, 2680, 2690, 2700\n  ]; */\n  private readonly _curve = [\n    0 , 0.25 , 0.50 , 0.75 , 1 , 1.5 , 2 , 2.5 , 3 , 3.5 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 ,\n    13 , 14 , 15 , 16 , 17 , 18 , 18.3 , 18.6 , 18.9 , 19.2 , 19.5 , 19.8 , 20.1 , 20.4 , 20.7 ,\n    21.0 , 21.3 , 21.6 , 21.9 , 22.2 , 22.5 , 22.8 , 23.1 , 23.4 , 23.7 , 24.0 , 24.3 , 24.6 ,\n    24.9 , 25.2 , 25.5 , 25.8 , 26.1 , 26.3 , 26.4 , 26.5 , 26.6 , 26.7 , 26.8 , 26.9 , 27 ,\n  ];\n  private readonly _incrementalCurve: number[];\n  private readonly _positions = [\n    { x: 0.80, y: 0.10 },\n    { x: 0.60, y: 0.20 },\n    { x: 0.35, y: 0.25 },\n    { x: 0.25, y: 0.60 },\n    { x: 0.20, y: 0.90 },\n    { x: 0.40, y: 0.80 },\n    { x: 0.65, y: 0.75 },\n    { x: 0.75, y: 0.40 }\n  ];\n  private readonly _phases = this._positions.length;\n  private _onWheelRAF: number;\n  private _scrollDelta: number;\n\n  // private _ts = 0;\n  // private _fps = 15;\n  // private _frametime = 1000 / this._fps;\n  // private _raf: number;\n\n  private _canvas: HTMLCanvasElement;\n  private _ctx: CanvasRenderingContext2D;\n  private _hc: HTMLCanvasElement;\n  private _hctx: CanvasRenderingContext2D;\n\n  private _addedScrollListener: boolean;\n  private _animatingToNextPosition: boolean;\n\n  constructor() {\n    const diff = this._tails / this._curve[this._curve.length - 1];\n\n    for(let i = 0, length = this._curve.length; i < length; ++i) {\n      this._curve[i] = this._curve[i] * diff;\n    }\n\n    this._incrementalCurve = this._curve.map((v, i, arr) => {\n      return v - (arr[i - 1] ?? 0);\n    });\n  }\n\n  private hexToRgb(hex: string) {\n    const result = hexToRgb(hex);\n    return {r: result[0], g: result[1], b: result[2]};\n  }\n\n  private getPositions(shift: number) {\n    const positions = this._positions.slice();\n    while(shift > 0) {\n      positions.push(positions.shift());\n      --shift;\n    }\n\n    const result: typeof positions = [];\n    for(let i = 0; i < positions.length; i += 2) {\n      result.push(positions[i]);\n    }\n    return result;\n  }\n\n  private getNextPositions(phase: number, curveMax: number, curve: number[]) {\n    const pos = this.getPositions(phase);\n    if(!curve[0] && curve.length === 1) {\n      return [pos];\n    }\n    \n    const nextPos = this.getPositions(++phase % this._phases);\n    const distances = nextPos.map((nextPos, idx) => {\n      return {\n        x: (nextPos.x - pos[idx].x) / curveMax,\n        y: (nextPos.y - pos[idx].y) / curveMax,\n      };\n    });\n\n    const positions = curve.map((value) => {\n      return distances.map((distance, idx) => {\n        return {\n          x: pos[idx].x + distance.x * value,\n          y: pos[idx].y + distance.y * value\n        };\n      });\n    });\n\n    return positions;\n  }\n \n  private curPosition(phase: number, tail: number) {\n    const positions = this.getNextPositions(phase, this._tails, [tail]);\n    return positions[0];\n  }\n\n  private changeTail(diff: number) {\n    this._tail += diff;\n\n    while(this._tail >= this._tails) {\n      this._tail -= this._tails;\n      if(++this._phase >= this._phases) {\n        this._phase -= this._phases;\n      }\n    }\n\n    while(this._tail < 0) {\n      this._tail += this._tails;\n      if(--this._phase < 0) {\n        this._phase += this._phases;\n      }\n    }\n  }\n  \n  private onWheel = (e: {deltaY: number}) => {\n    if(this._animatingToNextPosition) {\n      return;\n    }\n\n    this._scrollDelta += e.deltaY;\n    if(this._onWheelRAF === undefined) {\n      this._onWheelRAF = requestAnimationFrame(this.drawOnWheel);\n    }\n  };\n\n  private drawOnWheel = () => {\n    let diff = this._scrollDelta / this._scrollTails;\n    this._scrollDelta %= this._scrollTails;\n    diff = diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n    if(diff) {\n      this.changeTail(diff);\n      const curPos = this.curPosition(this._phase, this._tail);\n      this.drawGradient(curPos);\n    }\n    this._onWheelRAF = undefined;\n  };\n\n  private drawNextPositionAnimated = () => {\n    const frames = this._frames;\n    const id = frames.shift();\n    if(id) {\n      this.drawImageData(id);\n    }\n    \n    const leftLength = frames.length;\n    if(!leftLength) {\n      this._animatingToNextPosition = undefined;\n    }\n\n    return !!leftLength;\n  };\n\n  private getGradientImageData(positions: {x: number, y: number}[]) {\n    const id = this._hctx.createImageData(this._width, this._height);\n    const pixels = id.data;\n\n    let offset = 0;\n    for(let y = 0; y < this._height; ++y) {\n      const directPixelY = y / this._height;\n      const centerDistanceY = directPixelY - 0.5;\n      const centerDistanceY2 = centerDistanceY * centerDistanceY;\n\n      for(let x = 0; x < this._width; ++x) {\n        const directPixelX = x / this._width;\n\n        const centerDistanceX = directPixelX - 0.5;\n        const centerDistance = Math.sqrt(centerDistanceX * centerDistanceX + centerDistanceY2);\n\n        const swirlFactor = 0.35 * centerDistance;\n        const theta = swirlFactor * swirlFactor * 0.8 * 8.0;\n        const sinTheta = Math.sin(theta);\n        const cosTheta = Math.cos(theta);\n\n        const pixelX = Math.max(0.0, Math.min(1.0, 0.5 + centerDistanceX * cosTheta - centerDistanceY * sinTheta));\n        const pixelY = Math.max(0.0, Math.min(1.0, 0.5 + centerDistanceX * sinTheta + centerDistanceY * cosTheta));\n\n        let distanceSum = 0.0;\n\n        let r = 0.0;\n        let g = 0.0;\n        let b = 0.0;\n\n        for(let i = 0; i < this._colors.length; i++) {\n          const colorX = positions[i].x;\n          const colorY = positions[i].y;\n\n          const distanceX = pixelX - colorX;\n          const distanceY = pixelY - colorY;\n\n          let distance = Math.max(0.0, 0.9 - Math.sqrt(distanceX * distanceX + distanceY * distanceY));\n          distance = distance * distance * distance * distance;\n          distanceSum += distance;\n\n          r += distance * this._colors[i].r / 255;\n          g += distance * this._colors[i].g / 255;\n          b += distance * this._colors[i].b / 255;\n        }\n\n        pixels[offset++] = r / distanceSum * 255.0;\n        pixels[offset++] = g / distanceSum * 255.0;\n        pixels[offset++] = b / distanceSum * 255.0;\n        pixels[offset++] = 0xFF;\n      }\n    }\n    return id;\n  }\n\n  private drawImageData(id: ImageData) {\n    this._hctx.putImageData(id, 0, 0);\n    this._ctx.drawImage(this._hc, 0, 0, this._width, this._height);\n  }\n\n  private drawGradient(positions: {x: number, y: number}[]) {\n    this.drawImageData(this.getGradientImageData(positions));\n  }\n\n  // private doAnimate = () => {\n  //   const now = +Date.now();\n  //   if(!document.hasFocus() || (now - this._ts) < this._frametime) {\n  //     this._raf = requestAnimationFrame(this.doAnimate);\n  //     return;\n  //   }\n\n  //   this._ts = now;\n  //   this.changeTail(1);\n  //   const cur_pos = this.curPosition(this._phase, this._tail);\n  //   this.drawGradient(cur_pos);\n  //   this._raf = requestAnimationFrame(this.doAnimate);\n  // };\n\n  // public animate(start?: boolean) {\n  //   if(!start) {\n  //     cancelAnimationFrame(this._raf);\n  //     return;\n  //   }\n  //   this.doAnimate();\n  // }\n\n  public init(el: HTMLCanvasElement) {\n    this._frames = [];\n    this._phase = 0;\n    this._tail = 0;\n    this._scrollDelta = 0;\n    if(this._onWheelRAF !== undefined) {\n      cancelAnimationFrame(this._onWheelRAF);\n      this._onWheelRAF = undefined;\n    }\n\n    const colors = el.getAttribute('data-colors').split(',').reverse();\n    this._colors = colors.map(color => {\n      return this.hexToRgb(color);\n    });\n\n    if(!this._hc) {\n      this._hc = document.createElement('canvas');\n      this._hc.width = this._width;\n      this._hc.height = this._height;\n      this._hctx = this._hc.getContext('2d');\n    }\n\n    this._canvas = el;\n    this._ctx = this._canvas.getContext('2d');\n    this.update();\n  }\n\n  public update() {\n    if(this._colors.length < 2) {\n      const color = this._colors[0];\n      this._ctx.fillStyle = `rgb(${color.r}, ${color.g}, ${color.b})`;\n      this._ctx.fillRect(0, 0, this._width, this._height);\n      return;\n    }\n    \n    const pos = this.curPosition(this._phase, this._tail);\n    this.drawGradient(pos);\n  }\n\n  public toNextPosition() {\n    if(this._colors.length < 2) {\n      return;\n    }\n\n    const tail = this._tail;\n    const tails = this._tails;\n\n    let nextPhaseOnIdx: number;\n\n    const curve: number[] = [];\n    for(let i = 0, length = this._incrementalCurve.length; i < length; ++i) {\n      const inc = this._incrementalCurve[i];\n      let value = (curve[i - 1] ?? tail) + inc;\n\n      if(+value.toFixed(2) > tails && nextPhaseOnIdx === undefined) {\n        nextPhaseOnIdx = i;\n        value %= tails;\n      }\n      \n      curve.push(value);\n    }\n\n    const currentPhaseCurve = curve.slice(0, nextPhaseOnIdx);\n    const nextPhaseCurve = nextPhaseOnIdx !== undefined ? curve.slice(nextPhaseOnIdx) : [];\n\n    [currentPhaseCurve, nextPhaseCurve].forEach((curve, idx, curves) => {\n      const last = curve[curve.length - 1];\n      if(last !== undefined && last > tails) {\n        curve[curve.length - 1] = +last.toFixed(2);\n      }\n      \n      this._tail = last ?? 0;\n\n      if(!curve.length) {\n        return;\n      }\n\n      const positions = this.getNextPositions(this._phase, tails, curve);\n      if(idx !== (curves.length - 1)) {\n        if(++this._phase >= this._phases) {\n          this._phase -= this._phases;\n        }\n      }\n\n      const ids = positions.map((pos) => {\n        return this.getGradientImageData(pos);\n      });\n  \n      this._frames.push(...ids);\n    });\n\n    this._animatingToNextPosition = true;\n    animate(this.drawNextPositionAnimated);\n  }\n\n  public scrollAnimate(start?: boolean) {\n    if(this._colors.length < 2 && start) {\n      return;\n    }\n\n    if(start && !this._addedScrollListener) {\n      document.addEventListener('wheel', this.onWheel);\n      this._addedScrollListener = true;\n    } else if(!start && this._addedScrollListener) {\n      document.removeEventListener('wheel', this.onWheel);\n      this._addedScrollListener = false;\n    }\n  }\n\n  public cleanup() {\n    this.scrollAnimate(false);\n    // this.animate(false);\n  }\n\n  public static createCanvas(colors?: string) {\n    const canvas = document.createElement('canvas');\n    canvas.width = WIDTH;\n    canvas.height = HEIGHT;\n    if(colors !== undefined) {\n      canvas.dataset.colors = colors;\n    }\n\n    return canvas;\n  }\n\n  public static create(colors?: string) {\n    const canvas = this.createCanvas(colors);\n    const gradientRenderer = new ChatBackgroundGradientRenderer();\n    gradientRenderer.init(canvas);\n\n    return {gradientRenderer, canvas};\n  }\n}\n","import { ColorHsla, ColorRgba, hexaToHsla, hslaToRgba, rgbaToHexa as rgbaToHexa, rgbaToHsla } from \"../helpers/color\";\r\nimport attachGrabListeners from \"../helpers/dom/attachGrabListeners\";\r\nimport clamp from \"../helpers/number/clamp\";\r\nimport InputField, { InputState } from \"./inputField\";\r\n\r\nexport type ColorPickerColor = { \r\n  hsl: string; \r\n  rgb: string; \r\n  hex: string; \r\n  hsla: string; \r\n  rgba: string; \r\n  hexa: string; \r\n  rgbaArray: ColorRgba; \r\n};\r\n\r\nexport default class ColorPicker {\r\n  private static BASE_CLASS = 'color-picker';\r\n  public container: HTMLElement;\r\n\r\n  private boxRect: DOMRect;\r\n  //private boxDraggerRect: DOMRect;\r\n  private hueRect: DOMRect;\r\n  //private hueDraggerRect: DOMRect;\r\n\r\n\tprivate hue = 0;\r\n\tprivate saturation = 100;\r\n\tprivate lightness = 50;\r\n\tprivate alpha = 1;\r\n  private elements: {\r\n    box: SVGSVGElement,\r\n    boxDragger: SVGSVGElement,\r\n    sliders: HTMLElement,\r\n    hue: SVGSVGElement,\r\n    hueDragger: SVGSVGElement,\r\n    saturation: SVGLinearGradientElement,\r\n  } = {} as any;\r\n  private hexInputField: InputField;\r\n  private rgbInputField: InputField;\r\n  public onChange: (color: ReturnType<ColorPicker['getCurrentColor']>) => void;\r\n\r\n  constructor() {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add(ColorPicker.BASE_CLASS);\r\n\r\n    const html = `\r\n      <svg class=\"${ColorPicker.BASE_CLASS + '-box'}\" viewBox=\"0 0 380 198\">\r\n        <defs>\r\n          <linearGradient id=\"color-picker-saturation\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n            <stop offset=\"0%\" stop-color=\"#fff\"></stop>\r\n            <stop offset=\"100%\" stop-color=\"hsl(0,100%,50%)\"></stop>\r\n          </linearGradient>\r\n          <linearGradient id=\"color-picker-brightness\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n            <stop offset=\"0%\" stop-color=\"rgba(0,0,0,0)\"></stop>\r\n            <stop offset=\"100%\" stop-color=\"#000\"></stop>\r\n          </linearGradient>\r\n          <pattern id=\"color-picker-pattern\" width=\"100%\" height=\"100%\">\r\n            <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#color-picker-saturation)\"></rect>\r\n            <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#color-picker-brightness)\"></rect>\r\n          </pattern>\r\n        </defs>\r\n        <rect rx=\"10\" ry=\"10\" x=\"0\" y=\"0\" width=\"380\" height=\"198\" fill=\"url(#color-picker-pattern)\"></rect>\r\n        <svg class=\"${ColorPicker.BASE_CLASS + '-dragger'} ${ColorPicker.BASE_CLASS + '-box-dragger'}\" x=\"0\" y=\"0\">\r\n          <circle r=\"11\" fill=\"inherit\" stroke=\"#fff\" stroke-width=\"2\"></circle>\r\n        </svg>\r\n      </svg>\r\n      <div class=\"${ColorPicker.BASE_CLASS + '-sliders'}\">\r\n        <svg class=\"${ColorPicker.BASE_CLASS + '-color-slider'}\" viewBox=\"0 0 380 24\">\r\n          <defs>\r\n            <linearGradient id=\"hue\" x1=\"100%\" y1=\"0%\" x2=\"0%\" y2=\"0%\">\r\n              <stop offset=\"0%\" stop-color=\"#f00\"></stop>\r\n              <stop offset=\"16.666%\" stop-color=\"#f0f\"></stop>\r\n              <stop offset=\"33.333%\" stop-color=\"#00f\"></stop>\r\n              <stop offset=\"50%\" stop-color=\"#0ff\"></stop>\r\n              <stop offset=\"66.666%\" stop-color=\"#0f0\"></stop>\r\n              <stop offset=\"83.333%\" stop-color=\"#ff0\"></stop>\r\n              <stop offset=\"100%\" stop-color=\"#f00\"></stop>\r\n            </linearGradient>\r\n          </defs>\r\n          <rect rx=\"4\" ry=\"4\" x=\"0\" y=\"9\" width=\"380\" height=\"8\" fill=\"url(#hue)\"></rect>\r\n          <svg class=\"${ColorPicker.BASE_CLASS + '-dragger'} ${ColorPicker.BASE_CLASS + '-color-slider-dragger'}\" x=\"0\" y=\"13\">\r\n            <circle r=\"11\" fill=\"inherit\" stroke=\"#fff\" stroke-width=\"2\"></circle>\r\n          </svg>\r\n        </svg>\r\n      </div>\r\n    `;\r\n\r\n    this.container.innerHTML = html;\r\n\r\n    this.elements.box = this.container.firstElementChild as any;\r\n    this.elements.boxDragger = this.elements.box.lastElementChild as any;\r\n    this.elements.saturation = this.elements.box.firstElementChild.firstElementChild as any;\r\n\r\n    this.elements.sliders = this.elements.box.nextElementSibling as any;\r\n\r\n    this.elements.hue = this.elements.sliders.firstElementChild as any;\r\n    this.elements.hueDragger = this.elements.hue.lastElementChild as any;\r\n\r\n    this.hexInputField = new InputField({plainText: true, label: 'Appearance.Color.Hex'});\r\n    this.rgbInputField = new InputField({plainText: true, label: 'Appearance.Color.RGB'});\r\n\r\n    const inputs = document.createElement('div');\r\n    inputs.className = ColorPicker.BASE_CLASS + '-inputs';\r\n    inputs.append(this.hexInputField.container, this.rgbInputField.container);\r\n    this.container.append(inputs);\r\n\r\n    this.hexInputField.input.addEventListener('input', () => {\r\n      let value = this.hexInputField.value.replace(/#/g, '').slice(0, 6);\r\n\r\n      const match = value.match(/([a-fA-F\\d]+)/);\r\n      const valid = match && match[0].length === value.length && [/* 3, 4,  */6].includes(value.length);\r\n      this.hexInputField.setState(valid ? InputState.Neutral : InputState.Error);\r\n\r\n      value = '#' + value;\r\n      this.hexInputField.setValueSilently(value);\r\n      \r\n      if(valid) {\r\n        this.setColor(value, false, true);\r\n      }\r\n    });\r\n\r\n    // patched https://stackoverflow.com/a/34029238/6758968\r\n    const rgbRegExp = /^(?:rgb)?\\(?([01]?\\d\\d?|2[0-4]\\d|25[0-5])(?:\\W+)([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\W+(?:([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\)?)$/;\r\n    this.rgbInputField.input.addEventListener('input', () => {\r\n      const match = this.rgbInputField.value.match(rgbRegExp);\r\n      this.rgbInputField.setState(match ? InputState.Neutral : InputState.Error);\r\n\r\n      if(match) {\r\n        this.setColor(rgbaToHsla(+match[1], +match[2], +match[3]), true, false);\r\n      }\r\n    });\r\n\r\n    this.attachBoxListeners();\r\n    this.attachHueListeners();\r\n  }\r\n\r\n  private onGrabStart = () => {\r\n    document.documentElement.style.cursor = this.elements.boxDragger.style.cursor = 'grabbing';\r\n  };\r\n\r\n  private onGrabEnd = () => {\r\n    document.documentElement.style.cursor = this.elements.boxDragger.style.cursor = '';\r\n  };\r\n\r\n  private attachBoxListeners() {\r\n    attachGrabListeners(this.elements.box as any, () => {\r\n      this.onGrabStart();\r\n      this.boxRect = this.elements.box.getBoundingClientRect();\r\n      //this.boxDraggerRect = this.elements.boxDragger.getBoundingClientRect();\r\n    }, (pos) => {\r\n      this.saturationHandler(pos.x, pos.y);\r\n    }, () => {\r\n      this.onGrabEnd();\r\n    });\r\n  }\r\n\r\n  private attachHueListeners() {\r\n    attachGrabListeners(this.elements.hue as any, () => {\r\n      this.onGrabStart();\r\n      this.hueRect = this.elements.hue.getBoundingClientRect();\r\n      //this.hueDraggerRect = this.elements.hueDragger.getBoundingClientRect();\r\n    }, (pos) => {\r\n      this.hueHandler(pos.x);\r\n    }, () => {\r\n      this.onGrabEnd();\r\n    });\r\n  }\r\n\r\n  public setColor(color: ColorHsla | string, updateHexInput = true, updateRgbInput = true) {\r\n    if(color === undefined) { // * set to red\r\n      color = {\r\n        h: 0,\r\n        s: 100,\r\n        l: 50,\r\n        a: 1\r\n      };\r\n    } else if(typeof(color) === 'string') {\r\n      if(color[0] === '#') {\r\n        color = hexaToHsla(color);\r\n      } else {\r\n        const rgb = color.match(/[.?\\d]+/g);\r\n        color = rgbaToHsla(+rgb[0], +rgb[1], +rgb[2], rgb[3] === undefined ? 1 : +rgb[3]);\r\n      }\r\n    }\r\n\r\n    // Set box\r\n    this.boxRect = this.elements.box.getBoundingClientRect();\r\n\r\n    const boxX = this.boxRect.width / 100 * color.s;\r\n    const percentY = 100 - (color.l / (100 - color.s / 2)) * 100;\r\n    const boxY = this.boxRect.height / 100 * percentY;\r\n\r\n    this.saturationHandler(this.boxRect.left + boxX, this.boxRect.top + boxY, false);\r\n\r\n    // Set hue\r\n    this.hueRect = this.elements.hue.getBoundingClientRect();\r\n\r\n    const percentHue = color.h / 360;\r\n    const hueX = this.hueRect.left + this.hueRect.width * percentHue;\r\n\r\n    this.hueHandler(hueX, false);\r\n\r\n    // Set values\r\n    this.hue = color.h;\r\n    this.saturation = color.s;\r\n    this.lightness = color.l;\r\n    this.alpha = color.a;\r\n\r\n    this.updatePicker(updateHexInput, updateRgbInput);\r\n  };\r\n\r\n  public getCurrentColor(): ColorPickerColor {\r\n    const rgbaArray = hslaToRgba(this.hue, this.saturation, this.lightness, this.alpha);\r\n    const hexa = rgbaToHexa(rgbaArray);\r\n    const hex = hexa.slice(0, -2);\r\n\r\n    return {\r\n      hsl: `hsl(${this.hue}, ${this.saturation}%, ${this.lightness}%)`,\r\n      rgb: `rgb(${rgbaArray[0]}, ${rgbaArray[1]}, ${rgbaArray[2]})`,\r\n      hex: hex,\r\n      hsla: `hsla(${this.hue}, ${this.saturation}%, ${this.lightness}%, ${this.alpha})`,\r\n      rgba: `rgba(${rgbaArray[0]}, ${rgbaArray[1]}, ${rgbaArray[2]}, ${rgbaArray[3]})`,\r\n      hexa: hexa,\r\n      rgbaArray: rgbaArray\r\n    };\r\n  }\r\n\r\n  public updatePicker(updateHexInput = true, updateRgbInput = true) {\r\n    const color = this.getCurrentColor();\r\n    this.elements.boxDragger.setAttributeNS(null, 'fill', color.hex);\r\n\r\n    if(updateHexInput) {\r\n      this.hexInputField.setValueSilently(color.hex);\r\n      this.hexInputField.setState(InputState.Neutral);\r\n    }\r\n\r\n    if(updateRgbInput) {\r\n      this.rgbInputField.setValueSilently(color.rgbaArray.slice(0, -1).join(', '));\r\n      this.rgbInputField.setState(InputState.Neutral);\r\n    }\r\n\r\n    if(this.onChange) {\r\n      this.onChange(color);\r\n    }\r\n  }\r\n\r\n  private hueHandler(pageX: number, update = true) {\r\n    const eventX = clamp(pageX - this.hueRect.left, 0, this.hueRect.width);\r\n\r\n    const percents = eventX / this.hueRect.width;\r\n    this.hue = Math.round(360 * percents);\r\n    \r\n    const hsla = `hsla(${this.hue}, 100%, 50%, ${this.alpha})`;\r\n\r\n    this.elements.hueDragger.setAttributeNS(null, 'x', (percents * 100) + '%');\r\n    this.elements.hueDragger.setAttributeNS(null, 'fill', hsla);\r\n    \r\n    this.elements.saturation.lastElementChild.setAttributeNS(null, 'stop-color', hsla);\r\n\r\n    if(update) {\r\n      this.updatePicker();\r\n    }\r\n  }\r\n\r\n  private saturationHandler(pageX: number, pageY: number, update = true) {\r\n    const maxX = this.boxRect.width;\r\n    const maxY = this.boxRect.height;\r\n\r\n    const eventX = clamp(pageX - this.boxRect.left, 0, maxX);\r\n    const eventY = clamp(pageY - this.boxRect.top, 0, maxY);\r\n\r\n    const posX = eventX / maxX * 100;\r\n    const posY = eventY / maxY * 100;\r\n    \r\n    const boxDragger = this.elements.boxDragger;\r\n    boxDragger.setAttributeNS(null, 'x', posX + '%');\r\n    boxDragger.setAttributeNS(null, 'y', posY + '%');\r\n\r\n    const saturation = clamp(posX, 0, 100);\r\n\r\n    const lightnessX = 100 - saturation / 2;\r\n    const lightnessY = 100 - clamp(posY, 0, 100);\r\n\r\n    const lightness = clamp(lightnessY / 100 * lightnessX, 0, 100);\r\n\r\n    this.saturation = saturation;\r\n    this.lightness = lightness;\r\n\r\n    if(update) {\r\n      this.updatePicker();\r\n    }\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"..\";\r\nimport { hexaToRgba } from \"../../../helpers/color\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport findUpClassName from \"../../../helpers/dom/findUpClassName\";\r\nimport highlightningColor from \"../../../helpers/highlightningColor\";\r\nimport throttle from \"../../../helpers/schedulers/throttle\";\r\nimport appImManager from \"../../../lib/appManagers/appImManager\";\r\nimport appStateManager, { Theme } from \"../../../lib/appManagers/appStateManager\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport ColorPicker, { ColorPickerColor } from \"../../colorPicker\";\r\nimport { SliderSuperTab } from \"../../slider\";\r\n\r\nexport default class AppBackgroundColorTab extends SliderSuperTab {\r\n  private colorPicker: ColorPicker;\r\n  private grid: HTMLElement;\r\n  private applyColor: (hex: string, updateColorPicker?: boolean) => void;\r\n  private theme: Theme;\r\n\r\n  init() {\r\n    this.header.classList.add('with-border');\r\n    this.container.classList.add('background-container', 'background-color-container');\r\n    this.setTitle('SetColor');\r\n\r\n    this.theme = rootScope.getTheme();\r\n\r\n    const section = new SettingSection({});\r\n    this.colorPicker = new ColorPicker();\r\n\r\n    section.content.append(this.colorPicker.container);\r\n\r\n    this.scrollable.append(section.container);\r\n\r\n    const gridSection = new SettingSection({});\r\n\r\n    const grid = this.grid = document.createElement('div');\r\n    grid.classList.add('grid');\r\n\r\n    const colors = [\r\n      '#E6EBEE',\r\n      '#B2CEE1',\r\n      '#008DD0',\r\n      '#C6E7CB',\r\n      '#C4E1A6',\r\n      '#60B16E',\r\n      '#CCD0AF',\r\n      '#A6A997',\r\n      '#7A7072',\r\n      '#FDD7AF',\r\n      '#FDB76E',\r\n      '#DD8851'\r\n    ];\r\n\r\n    colors.forEach(color => {\r\n      const item = document.createElement('div');\r\n      item.classList.add('grid-item');\r\n      item.dataset.color = color.toLowerCase();\r\n\r\n      // * need for transform scale\r\n      const media = document.createElement('div');\r\n      media.classList.add('grid-item-media');\r\n      media.style.backgroundColor = color;\r\n\r\n      item.append(media);\r\n      grid.append(item);\r\n    });\r\n\r\n    attachClickEvent(grid, (e) => {\r\n      const target = findUpClassName(e.target, 'grid-item');\r\n      if(!target || target.classList.contains('active')) {\r\n        return;\r\n      }\r\n\r\n      const color = target.dataset.color;\r\n      if(!color) {\r\n        return;\r\n      }\r\n\r\n      this.applyColor(color);\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    gridSection.content.append(grid);\r\n    this.scrollable.append(gridSection.container);\r\n\r\n    this.applyColor = throttle(this._applyColor, 16, true);\r\n  }\r\n\r\n  private setActive() {\r\n    const active = this.grid.querySelector('.active');\r\n    const background = this.theme.background;\r\n    const target = background.color ? this.grid.querySelector(`.grid-item[data-color=\"${background.color}\"]`) : null;\r\n    if(active === target) {\r\n      return;\r\n    }\r\n\r\n    if(active) {\r\n      active.classList.remove('active');\r\n    }\r\n\r\n    if(target) {\r\n      target.classList.add('active');\r\n    }\r\n  }\r\n\r\n  private _applyColor = (hex: string, updateColorPicker = true) => {\r\n    if(updateColorPicker) {\r\n      this.colorPicker.setColor(hex);\r\n    } else {\r\n      const rgba = hexaToRgba(hex);\r\n      const background = this.theme.background;\r\n      const hsla = highlightningColor(rgba);\r\n    \r\n      background.id = '2';\r\n      background.intensity = 0;\r\n      background.slug = '';\r\n      background.color = hex.toLowerCase();\r\n      background.highlightningColor = hsla;\r\n      appStateManager.pushToState('settings', rootScope.settings);\r\n    \r\n      appImManager.applyCurrentTheme(undefined, undefined, true);\r\n      this.setActive();\r\n    }\r\n  };\r\n\r\n  private onColorChange = (color: ColorPickerColor) => {\r\n    this.applyColor(color.hex, false);\r\n  };\r\n\r\n  onOpen() {\r\n    setTimeout(() => {\r\n      const background = this.theme.background;\r\n\r\n      const color = (background.color || '').split(',')[0];\r\n      const isColored = !!color && !background.slug;\r\n      \r\n      // * set active if type is color\r\n      if(isColored) {\r\n        this.colorPicker.onChange = this.onColorChange;\r\n      }\r\n\r\n      this.colorPicker.setColor(color || '#cccccc');\r\n      \r\n      if(!isColored) {\r\n        this.colorPicker.onChange = this.onColorChange;\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  onCloseAfterTimeout() {\r\n    this.colorPicker.onChange = undefined;\r\n    this.colorPicker = undefined;\r\n\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { generateSection } from \"..\";\r\nimport { averageColor, averageColorFromCanvas } from \"../../../helpers/averageColor\";\r\nimport blur from \"../../../helpers/blur\";\r\nimport { deferredPromise } from \"../../../helpers/cancellablePromise\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport findUpClassName from \"../../../helpers/dom/findUpClassName\";\r\nimport { requestFile } from \"../../../helpers/files\";\r\nimport highlightningColor from \"../../../helpers/highlightningColor\";\r\nimport copy from \"../../../helpers/object/copy\";\r\nimport sequentialDom from \"../../../helpers/sequentialDom\";\r\nimport ChatBackgroundGradientRenderer from \"../../chat/gradientRenderer\";\r\nimport { AccountWallPapers, PhotoSize, WallPaper } from \"../../../layer\";\r\nimport appDocsManager, { MyDocument } from \"../../../lib/appManagers/appDocsManager\";\r\nimport appDownloadManager, { DownloadBlob } from \"../../../lib/appManagers/appDownloadManager\";\r\nimport appImManager from \"../../../lib/appManagers/appImManager\";\r\nimport appPhotosManager from \"../../../lib/appManagers/appPhotosManager\";\r\nimport appStateManager, { Theme, STATE_INIT } from \"../../../lib/appManagers/appStateManager\";\r\nimport apiManager from \"../../../lib/mtproto/mtprotoworker\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport Button from \"../../button\";\r\nimport CheckboxField from \"../../checkboxField\";\r\nimport ProgressivePreloader from \"../../preloader\";\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport { wrapPhoto } from \"../../wrappers\";\r\nimport AppBackgroundColorTab from \"./backgroundColor\";\r\n\r\nlet uploadTempId = 0;\r\n\r\nexport default class AppBackgroundTab extends SliderSuperTab {\r\n  private grid: HTMLElement;\r\n  private tempId = 0;\r\n  private theme: Theme;\r\n  private clicked: Set<DocId> = new Set();\r\n  private blurCheckboxField: CheckboxField;\r\n\r\n  private wallpapersByElement: Map<HTMLElement, WallPaper> = new Map();\r\n  private elementsByKey: Map<string, HTMLElement> = new Map();\r\n\r\n  init() {\r\n    this.header.classList.add('with-border');\r\n    this.container.classList.add('background-container', 'background-image-container');\r\n    this.setTitle('ChatBackground');\r\n\r\n    this.theme = rootScope.getTheme();\r\n\r\n    {\r\n      const container = generateSection(this.scrollable);\r\n\r\n      const uploadButton = Button('btn-primary btn-transparent', {icon: 'cameraadd', text: 'ChatBackground.UploadWallpaper'});\r\n      const colorButton = Button('btn-primary btn-transparent', {icon: 'colorize', text: 'SetColor'});\r\n      const resetButton = Button('btn-primary btn-transparent', {icon: 'favourites', text: 'Appearance.Reset'});\r\n\r\n      attachClickEvent(uploadButton, this.onUploadClick, {listenerSetter: this.listenerSetter});\r\n\r\n      attachClickEvent(colorButton, () => {\r\n        new AppBackgroundColorTab(this.slider).open();\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      attachClickEvent(resetButton, this.onResetClick, {listenerSetter: this.listenerSetter});\r\n\r\n      const blurCheckboxField = this.blurCheckboxField = new CheckboxField({\r\n        text: 'ChatBackground.Blur', \r\n        name: 'blur', \r\n        checked: this.theme.background.blur,\r\n        withRipple: true\r\n      });\r\n\r\n      this.listenerSetter.add(blurCheckboxField.input)('change', () => {\r\n        this.theme.background.blur = blurCheckboxField.input.checked;\r\n        appStateManager.pushToState('settings', rootScope.settings);\r\n\r\n        // * wait for animation end\r\n        setTimeout(() => {\r\n          const active = grid.querySelector('.active') as HTMLElement;\r\n          if(!active) return;\r\n\r\n          const wallpaper = this.wallpapersByElement.get(active);\r\n          if((wallpaper as WallPaper.wallPaper).pFlags.pattern || wallpaper._ === 'wallPaperNoFile') {\r\n            return;\r\n          }\r\n          \r\n          this.setBackgroundDocument(wallpaper);\r\n        }, 100);\r\n      });\r\n\r\n      container.append(uploadButton, colorButton, resetButton, blurCheckboxField.label);\r\n    }\r\n\r\n    rootScope.addEventListener('background_change', this.setActive);\r\n\r\n    apiManager.invokeApiHashable({method: 'account.getWallPapers'}).then((accountWallpapers) => {\r\n      const wallpapers = (accountWallpapers as AccountWallPapers.accountWallPapers).wallpapers as WallPaper.wallPaper[];\r\n      wallpapers.forEach((wallpaper) => {\r\n        this.addWallPaper(wallpaper);\r\n      });\r\n\r\n      //console.log(accountWallpapers);\r\n    });\r\n\r\n    const gridContainer = generateSection(this.scrollable);\r\n    const grid = this.grid = document.createElement('div');\r\n    grid.classList.add('grid');\r\n    attachClickEvent(grid, this.onGridClick, {listenerSetter: this.listenerSetter});\r\n    gridContainer.append(grid);\r\n  }\r\n\r\n  private onUploadClick = () => {\r\n    requestFile('image/x-png,image/png,image/jpeg').then(file => {\r\n      const id = 'wallpaper-upload-' + ++uploadTempId;\r\n\r\n      const thumb = {\r\n        _: 'photoSize',\r\n        h: 0,\r\n        w: 0,\r\n        location: {} as any,\r\n        size: file.size,\r\n        type: 'full',\r\n      } as PhotoSize.photoSize;\r\n      let document: MyDocument = {\r\n        _: 'document',\r\n        access_hash: '',\r\n        attributes: [],\r\n        dc_id: 0,\r\n        file_reference: [],\r\n        id,\r\n        mime_type: file.type,\r\n        size: file.size,\r\n        date: Date.now() / 1000,\r\n        pFlags: {},\r\n        thumbs: [thumb],\r\n        file_name: file.name\r\n      };\r\n\r\n      document = appDocsManager.saveDoc(document);\r\n\r\n      const cacheContext = appDownloadManager.getCacheContext(document);\r\n      cacheContext.downloaded = file.size;\r\n      cacheContext.url = URL.createObjectURL(file);\r\n\r\n      let wallpaper: WallPaper.wallPaper = {\r\n        _: 'wallPaper',\r\n        access_hash: '',\r\n        document: document,\r\n        id,\r\n        slug: id,\r\n        pFlags: {}\r\n      };\r\n\r\n      const upload = appDownloadManager.upload(file, file.name);\r\n\r\n      const deferred = deferredPromise<void>();\r\n      deferred.addNotifyListener = upload.addNotifyListener;\r\n      deferred.cancel = upload.cancel;\r\n\r\n      upload.then(inputFile => {\r\n        apiManager.invokeApi('account.uploadWallPaper', {\r\n          file: inputFile,\r\n          mime_type: file.type,\r\n          settings: {\r\n            _: 'wallPaperSettings'\r\n          }\r\n        }).then(_wallpaper => {\r\n          const newDoc = (_wallpaper as WallPaper.wallPaper).document as MyDocument;\r\n          const newCacheContext = appDownloadManager.getCacheContext(newDoc);\r\n          Object.assign(newCacheContext, cacheContext);\r\n\r\n          wallpaper = _wallpaper as WallPaper.wallPaper;\r\n          wallpaper.document = appDocsManager.saveDoc(wallpaper.document);\r\n\r\n          this.setBackgroundDocument(wallpaper).then(deferred.resolve, deferred.reject);\r\n        }, deferred.reject);\r\n      }, deferred.reject);\r\n\r\n      const key = this.getWallpaperKey(wallpaper);\r\n      deferred.then(() => {\r\n        this.clicked.delete(key);\r\n      }, (err) => {\r\n        container.remove();\r\n        //console.error('i saw the body drop', err);\r\n      });\r\n\r\n      const preloader = new ProgressivePreloader({\r\n        isUpload: true,\r\n        cancelable: true,\r\n        tryAgainOnFail: false\r\n      });\r\n\r\n      const container = this.addWallPaper(wallpaper, false);\r\n      this.clicked.add(key);\r\n\r\n      preloader.attach(container, false, deferred);\r\n    });\r\n  };\r\n\r\n  private onResetClick = () => {\r\n    const defaultTheme = STATE_INIT.settings.themes.find(t => t.name === this.theme.name);\r\n    if(defaultTheme) {\r\n      ++this.tempId;\r\n      this.theme.background = copy(defaultTheme.background);\r\n      appStateManager.pushToState('settings', rootScope.settings);\r\n      appImManager.applyCurrentTheme(undefined, undefined, true);\r\n      this.blurCheckboxField.setValueSilently(this.theme.background.blur);\r\n    }\r\n  };\r\n\r\n  private getColorsFromWallpaper(wallpaper: WallPaper) {\r\n    return wallpaper.settings ? [\r\n      wallpaper.settings.background_color,\r\n      wallpaper.settings.second_background_color,\r\n      wallpaper.settings.third_background_color,\r\n      wallpaper.settings.fourth_background_color\r\n    ].filter(Boolean).map(color => '#' + color.toString(16)).join(',') : '';\r\n  }\r\n\r\n  private getWallpaperKey(wallpaper: WallPaper) {\r\n    return '' + wallpaper.id;\r\n  }\r\n\r\n  private getWallpaperKeyFromTheme(theme: Theme) {\r\n    return '' + theme.background.id;\r\n  }\r\n\r\n  private addWallPaper(wallpaper: WallPaper, append = true) {\r\n    const colors = this.getColorsFromWallpaper(wallpaper);\r\n    const hasFile = wallpaper._ === 'wallPaper';\r\n    if((hasFile && wallpaper.pFlags.pattern && !colors)/*  || \r\n      (wallpaper.document as MyDocument).mime_type.indexOf('application/') === 0 */) {\r\n      return;\r\n    }\r\n\r\n    const isDark = !!wallpaper.pFlags.dark;\r\n\r\n    const doc: MyDocument = hasFile ? (wallpaper.document = appDocsManager.saveDoc(wallpaper.document)) : undefined;\r\n\r\n    const container = document.createElement('div');\r\n    container.classList.add('grid-item');\r\n\r\n    container.dataset.id = '' + wallpaper.id;\r\n\r\n    const key = this.getWallpaperKey(wallpaper);\r\n    this.wallpapersByElement.set(container, wallpaper);\r\n    this.elementsByKey.set(key, container);\r\n\r\n    const media = document.createElement('div');\r\n    media.classList.add('grid-item-media');\r\n\r\n    let wrapped: ReturnType<typeof wrapPhoto>, size: PhotoSize;\r\n    if(hasFile) {\r\n      size = appPhotosManager.choosePhotoSize(doc, 200, 200);\r\n      wrapped = wrapPhoto({\r\n        photo: doc,\r\n        message: null,\r\n        container: media,\r\n        withoutPreloader: true,\r\n        size: size,\r\n        noFadeIn: wallpaper.pFlags.pattern\r\n      });\r\n\r\n      (wrapped.loadPromises.thumb || wrapped.loadPromises.full).then(() => {\r\n        sequentialDom.mutate(() => {\r\n          container.append(media);\r\n        });\r\n      });\r\n\r\n      if(wallpaper.pFlags.pattern) {\r\n        media.classList.add('is-pattern');\r\n  \r\n        if(isDark) {\r\n          wrapped.images.full.style.display = 'none';\r\n          if(wrapped.images.thumb) {\r\n            wrapped.images.thumb.style.display = 'none';\r\n          }\r\n        } else if(wallpaper.settings?.intensity) {\r\n          wrapped.images.full.style.opacity = '' + Math.abs(wallpaper.settings.intensity) / 100;\r\n        }\r\n      }\r\n    } else {\r\n      container.append(media);\r\n    }\r\n\r\n    if(wallpaper.settings && wallpaper.settings.background_color !== undefined) {\r\n      const {canvas} = ChatBackgroundGradientRenderer.create(colors);\r\n      canvas.classList.add('background-colors-canvas');\r\n      \r\n      if(isDark && hasFile) {\r\n        const cacheContext = appDownloadManager.getCacheContext(doc, size.type);\r\n        wrapped.loadPromises.full.then(() => {\r\n          canvas.style.webkitMaskImage = `url(${cacheContext.url})`;\r\n          canvas.style.opacity = '' + Math.abs(wallpaper.settings.intensity) / 100;\r\n          media.append(canvas);\r\n        });\r\n      } else {\r\n        media.append(canvas);\r\n      }\r\n    }\r\n\r\n    if(this.getWallpaperKeyFromTheme(this.theme) === key) {\r\n      container.classList.add('active');\r\n    }\r\n\r\n    this.grid[append ? 'append' : 'prepend'](container);\r\n\r\n    return container;\r\n  }\r\n\r\n  private onGridClick = (e: MouseEvent | TouchEvent) => {\r\n    const target = findUpClassName(e.target, 'grid-item') as HTMLElement;\r\n    if(!target) return;\r\n\r\n    const wallpaper = this.wallpapersByElement.get(target);\r\n    if(wallpaper._ === 'wallPaperNoFile') {\r\n      this.setBackgroundDocument(wallpaper);\r\n      return;\r\n    }\r\n    \r\n    const key = this.getWallpaperKey(wallpaper);\r\n    if(this.clicked.has(key)) return;\r\n    this.clicked.add(key);\r\n    \r\n    const doc = wallpaper.document as MyDocument;\r\n    const preloader = new ProgressivePreloader({\r\n      cancelable: true,\r\n      tryAgainOnFail: false\r\n    });\r\n\r\n    const load = () => {\r\n      const promise = this.setBackgroundDocument(wallpaper);\r\n      const cacheContext = appDownloadManager.getCacheContext(doc);\r\n      if(!cacheContext.url || this.theme.background.blur) {\r\n        preloader.attach(target, true, promise);\r\n      }\r\n    };\r\n\r\n    preloader.construct();\r\n\r\n    attachClickEvent(target, (e) => {\r\n      if(preloader.preloader.parentElement) {\r\n        preloader.onClick(e);\r\n        preloader.detach();\r\n      } else {\r\n        load();\r\n      }\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    load();\r\n\r\n    //console.log(doc);\r\n  };\r\n\r\n  private saveToCache = (slug: string, url: string) => {\r\n    fetch(url).then(response => {\r\n      appDownloadManager.cacheStorage.save('backgrounds/' + slug, response);\r\n    });\r\n  };\r\n\r\n  private setBackgroundDocument = (wallpaper: WallPaper) => {\r\n    let _tempId = ++this.tempId;\r\n    const middleware = () => _tempId === this.tempId;\r\n\r\n    const doc = (wallpaper as WallPaper.wallPaper).document as MyDocument;\r\n    const deferred = deferredPromise<void>();\r\n    let download: Promise<void> | DownloadBlob;\r\n    if(doc) {\r\n      download = appDocsManager.downloadDoc(doc, appImManager.chat.bubbles ? appImManager.chat.bubbles.lazyLoadQueue.queueId : 0);\r\n      deferred.addNotifyListener = download.addNotifyListener;\r\n      deferred.cancel = download.cancel;\r\n    } else {\r\n      download = Promise.resolve();\r\n    }\r\n\r\n    download.then(() => {\r\n      if(!middleware()) {\r\n        deferred.resolve();\r\n        return;\r\n      }\r\n\r\n      const background = this.theme.background;\r\n      const onReady = (url?: string) => {\r\n        //const perf = performance.now();\r\n        let getPixelPromise: Promise<Uint8ClampedArray>;\r\n        if(url && !this.theme.background.color) {\r\n          getPixelPromise = averageColor(url);\r\n        } else {\r\n          const {canvas} = ChatBackgroundGradientRenderer.create(this.getColorsFromWallpaper(wallpaper));\r\n          getPixelPromise = Promise.resolve(averageColorFromCanvas(canvas));\r\n        }\r\n\r\n        getPixelPromise.then((pixel) => {\r\n          if(!middleware()) {\r\n            deferred.resolve();\r\n            return;\r\n          }\r\n          \r\n          const hsla = highlightningColor(Array.from(pixel) as any);\r\n          // const hsla = 'rgba(0, 0, 0, 0.3)';\r\n          //console.log(doc, hsla, performance.now() - perf);\r\n\r\n          const slug = (wallpaper as WallPaper.wallPaper).slug ?? '';\r\n          background.id = wallpaper.id;\r\n          background.intensity = wallpaper.settings?.intensity ?? 0;\r\n          background.color = this.getColorsFromWallpaper(wallpaper);\r\n          background.slug = slug;\r\n          background.highlightningColor = hsla;\r\n          appStateManager.pushToState('settings', rootScope.settings);\r\n\r\n          if(slug) {\r\n            this.saveToCache(slug, url);\r\n          }\r\n\r\n          appImManager.applyCurrentTheme(slug, url, true).then(deferred.resolve);\r\n        });\r\n      };\r\n\r\n      if(!doc) {\r\n        onReady();\r\n        return;\r\n      }\r\n\r\n      const cacheContext = appDownloadManager.getCacheContext(doc);\r\n      if(background.blur) {\r\n        setTimeout(() => {\r\n          blur(cacheContext.url, 12, 4)\r\n          .then(url => {\r\n            if(!middleware()) {\r\n              deferred.resolve();\r\n              return;\r\n            }\r\n\r\n            onReady(url);\r\n          });\r\n        }, 200);\r\n      } else {\r\n        onReady(cacheContext.url);\r\n      }\r\n    });\r\n\r\n    return deferred;\r\n  };\r\n\r\n  private setActive = () => {\r\n    const active = this.grid.querySelector('.active');\r\n    const target = this.elementsByKey.get(this.getWallpaperKeyFromTheme(this.theme));\r\n    if(active === target) {\r\n      return;\r\n    }\r\n\r\n    if(active) {\r\n      active.classList.remove('active');\r\n    }\r\n\r\n    if(target) {\r\n      target.classList.add('active');\r\n    }\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport PopupElement from \".\";\r\nimport appStickersManager, { AppStickersManager } from \"../../lib/appManagers/appStickersManager\";\r\nimport { RichTextProcessor } from \"../../lib/richtextprocessor\";\r\nimport Scrollable from \"../scrollable\";\r\nimport { wrapSticker } from \"../wrappers\";\r\nimport LazyLoadQueue from \"../lazyLoadQueue\";\r\nimport { putPreloader } from \"../misc\";\r\nimport animationIntersector from \"../animationIntersector\";\r\nimport appImManager from \"../../lib/appManagers/appImManager\";\r\nimport { StickerSet } from \"../../layer\";\r\nimport mediaSizes from \"../../helpers/mediaSizes\";\r\nimport { i18n } from \"../../lib/langPack\";\r\nimport Button from \"../button\";\r\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\r\nimport toggleDisability from \"../../helpers/dom/toggleDisability\";\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport { toastNew } from \"../toast\";\r\n\r\nconst ANIMATION_GROUP = 'STICKERS-POPUP';\r\n\r\nexport default class PopupStickers extends PopupElement {\r\n  private stickersFooter: HTMLElement;\r\n  private stickersDiv: HTMLElement;\r\n  private h6: HTMLElement;\r\n\r\n  private set: StickerSet.stickerSet;\r\n\r\n  constructor(private stickerSetInput: Parameters<AppStickersManager['getStickerSet']>[0]) {\r\n    super('popup-stickers', null, {closable: true, overlayClosable: true, body: true});\r\n\r\n    this.h6 = document.createElement('h6');\r\n    this.h6.append(i18n('Loading'));\r\n\r\n    this.header.append(this.h6);\r\n\r\n    this.addEventListener('close', () => {\r\n      animationIntersector.setOnlyOnePlayableGroup('');\r\n    });\r\n\r\n    const div = document.createElement('div');\r\n    div.classList.add('sticker-set');\r\n\r\n    this.stickersDiv = document.createElement('div');\r\n    this.stickersDiv.classList.add('sticker-set-stickers', 'is-loading');\r\n\r\n    attachClickEvent(this.stickersDiv, this.onStickersClick, {listenerSetter: this.listenerSetter});\r\n\r\n    putPreloader(this.stickersDiv, true);\r\n\r\n    this.stickersFooter = document.createElement('div');\r\n    this.stickersFooter.classList.add('sticker-set-footer');\r\n\r\n    div.append(this.stickersDiv);\r\n\r\n    const btn = Button('btn-primary btn-primary-transparent disable-hover', {noRipple: true, text: 'Loading'});\r\n    this.stickersFooter.append(btn);\r\n\r\n    this.body.append(div);\r\n    const scrollable = new Scrollable(this.body);\r\n    this.body.append(this.stickersFooter);\r\n    \r\n    // const editButton = document.createElement('button');\r\n    // editButton.classList.add('btn-primary');\r\n\r\n    // this.stickersFooter.append(editButton);\r\n\r\n    this.loadStickerSet();\r\n  }\r\n\r\n  private onStickersClick = (e: MouseEvent) => {\r\n    const target = findUpClassName(e.target, 'sticker-set-sticker');\r\n    if(!target) return;\r\n\r\n    const fileId = target.dataset.docId;\r\n    if(appImManager.chat.input.sendMessageWithDocument(fileId)) {\r\n      this.hide();\r\n    } else {\r\n      console.warn('got no doc by id:', fileId);\r\n    }\r\n  };\r\n\r\n  private loadStickerSet() {\r\n    return appStickersManager.getStickerSet(this.stickerSetInput).then(set => {\r\n      if(!set) {\r\n        toastNew({langPackKey: 'StickerSet.DontExist'});\r\n        this.hide();\r\n        return;\r\n      }\r\n      //console.log('PopupStickers loadStickerSet got set:', set);\r\n\r\n      this.set = set.set;\r\n\r\n      animationIntersector.setOnlyOnePlayableGroup(ANIMATION_GROUP);\r\n\r\n      this.h6.innerHTML = RichTextProcessor.wrapEmojiText(set.set.title);\r\n      this.stickersFooter.classList.toggle('add', !set.set.installed_date);\r\n\r\n      let button: HTMLElement;\r\n      if(set.set.installed_date) {\r\n        button = Button('btn-primary btn-primary-transparent danger', {noRipple: true});\r\n        button.append(i18n('RemoveStickersCount', [i18n('Stickers', [set.set.count])]));\r\n      } else {\r\n        button = Button('btn-primary btn-color-primary', {noRipple: true});\r\n        button.append(i18n('AddStickersCount', [i18n('Stickers', [set.set.count])]));\r\n      }\r\n\r\n      this.stickersFooter.textContent = '';\r\n      this.stickersFooter.append(button);\r\n\r\n      attachClickEvent(button, () => {\r\n        const toggle = toggleDisability([button], true);\r\n\r\n        appStickersManager.toggleStickerSet(this.set).then(() => {\r\n          this.hide();\r\n        }).catch(() => {\r\n          toggle();\r\n        });\r\n      });\r\n\r\n      const lazyLoadQueue = new LazyLoadQueue();\r\n      \r\n      this.stickersDiv.classList.remove('is-loading');\r\n      this.stickersDiv.innerHTML = '';\r\n      for(let doc of set.documents) {\r\n        if(doc._ === 'documentEmpty') {\r\n          continue;\r\n        }\r\n        \r\n        const div = document.createElement('div');\r\n        div.classList.add('sticker-set-sticker');\r\n\r\n        const size = mediaSizes.active.esgSticker.width;\r\n        \r\n        wrapSticker({\r\n          doc, \r\n          div, \r\n          lazyLoadQueue, \r\n          group: ANIMATION_GROUP, \r\n          play: true,\r\n          loop: true,\r\n          width: size,\r\n          height: size\r\n        });\r\n\r\n        this.stickersDiv.append(div);\r\n      }\r\n    });\r\n  }\r\n}\r\n","const IS_GEOLOCATION_SUPPORTED = !!navigator?.geolocation?.getCurrentPosition && false;\n\nexport default IS_GEOLOCATION_SUPPORTED;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { SettingSection } from \"..\";\nimport appReactionsManager from \"../../../lib/appManagers/appReactionsManager\";\nimport RadioField from \"../../radioField\";\nimport Row, { RadioFormFromRows } from \"../../row\";\nimport SliderSuperTab from \"../../sliderTab\";\nimport { wrapStickerToRow } from \"../../wrappers\";\n\nexport default class AppQuickReactionTab extends SliderSuperTab {\n  protected init() {\n    this.header.classList.add('with-border');\n    this.setTitle('DoubleTapSetting');\n    this.container.classList.add('quick-reaction-container');\n\n    return Promise.all([\n      appReactionsManager.getQuickReaction(),\n      appReactionsManager.getAvailableReactions()\n    ]).then(([quickReaction, availableReactions]) => {\n      availableReactions = availableReactions.filter(reaction => !reaction.pFlags.inactive);\n\n      const section = new SettingSection();\n\n      const name = 'quick-reaction';\n      const rows = availableReactions.map((availableReaction) => {\n        const radioField = new RadioField({\n          name,\n          text: availableReaction.title,\n          value: availableReaction.reaction,\n          alignRight: true\n        });\n\n        const row = new Row({\n          radioField,\n          havePadding: true\n        });\n\n        radioField.main.classList.add('quick-reaction-title');\n\n        wrapStickerToRow({\n          row,\n          doc: availableReaction.static_icon,\n          size: 'small'\n        });\n\n        if(availableReaction === quickReaction) {\n          radioField.setValueSilently(true);\n        }\n\n        return row;\n      });\n\n      const form = RadioFormFromRows(rows, (value) => {\n        appReactionsManager.setDefaultReaction(value);\n      });\n\n      section.content.append(form);\n      this.scrollable.append(section.container);\n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { generateSection, SettingSection } from \"..\";\r\nimport RangeSelector from \"../../rangeSelector\";\r\nimport Button from \"../../button\";\r\nimport CheckboxField from \"../../checkboxField\";\r\nimport RadioField from \"../../radioField\";\r\nimport appStateManager, { State } from \"../../../lib/appManagers/appStateManager\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport { IS_APPLE } from \"../../../environment/userAgent\";\r\nimport Row from \"../../row\";\r\nimport AppBackgroundTab from \"./background\";\r\nimport { LangPackKey, _i18n } from \"../../../lib/langPack\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport appStickersManager from \"../../../lib/appManagers/appStickersManager\";\r\nimport assumeType from \"../../../helpers/assumeType\";\r\nimport { MessagesAllStickers, StickerSet } from \"../../../layer\";\r\nimport RichTextProcessor from \"../../../lib/richtextprocessor\";\r\nimport { wrapStickerSetThumb, wrapStickerToRow } from \"../../wrappers\";\r\nimport LazyLoadQueue from \"../../lazyLoadQueue\";\r\nimport PopupStickers from \"../../popups/stickers\";\r\nimport eachMinute from \"../../../helpers/eachMinute\";\r\nimport { SliderSuperTabEventable } from \"../../sliderTab\";\r\nimport IS_GEOLOCATION_SUPPORTED from \"../../../environment/geolocationSupport\";\r\nimport appReactionsManager from \"../../../lib/appManagers/appReactionsManager\";\r\nimport AppQuickReactionTab from \"./quickReaction\";\r\n\r\nexport class RangeSettingSelector {\r\n  public container: HTMLDivElement;\r\n  public valueContainer: HTMLElement;\r\n  private range: RangeSelector;\r\n\r\n  public onChange: (value: number) => void;\r\n\r\n  constructor(\r\n    name: LangPackKey, \r\n    step: number, \r\n    initialValue: number, \r\n    minValue: number, \r\n    maxValue: number,\r\n    writeValue = true\r\n  ) {\r\n    const BASE_CLASS = 'range-setting-selector';\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add(BASE_CLASS);\r\n\r\n    const details = document.createElement('div');\r\n    details.classList.add(BASE_CLASS + '-details');\r\n\r\n    const nameDiv = document.createElement('div');\r\n    nameDiv.classList.add(BASE_CLASS + '-name');\r\n    _i18n(nameDiv, name);\r\n\r\n    const valueDiv = this.valueContainer = document.createElement('div');\r\n    valueDiv.classList.add(BASE_CLASS + '-value');\r\n\r\n    if(writeValue) {\r\n      valueDiv.innerHTML = '' + initialValue;\r\n    }\r\n\r\n    details.append(nameDiv, valueDiv);\r\n\r\n    this.range = new RangeSelector({\r\n      step, \r\n      min: minValue, \r\n      max: maxValue\r\n    }, initialValue);\r\n    this.range.setListeners();\r\n    this.range.setHandlers({\r\n      onScrub: value => {\r\n        if(this.onChange) {\r\n          this.onChange(value);\r\n        }\r\n\r\n        if(writeValue) {\r\n          //console.log('font size scrub:', value);\r\n          valueDiv.innerText = '' + value;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.container.append(details, this.range.container);\r\n  }\r\n}\r\n\r\nexport default class AppGeneralSettingsTab extends SliderSuperTabEventable {\r\n  init() {\r\n    this.header.classList.add('with-border');\r\n    this.container.classList.add('general-settings-container');\r\n    this.setTitle('General');\r\n\r\n    const section = generateSection.bind(null, this.scrollable);\r\n\r\n    {\r\n      const container = section('Settings');\r\n      \r\n      const range = new RangeSettingSelector('TextSize', 1, rootScope.settings.messagesTextSize, 12, 20);\r\n      range.onChange = (value) => {\r\n        appStateManager.setByKey('settings.messagesTextSize', value);\r\n      };\r\n\r\n      const chatBackgroundButton = Button('btn-primary btn-transparent', {icon: 'image', text: 'ChatBackground'});\r\n\r\n      attachClickEvent(chatBackgroundButton, () => {\r\n        new AppBackgroundTab(this.slider).open();\r\n      });\r\n\r\n      const animationsCheckboxField = new CheckboxField({\r\n        text: 'EnableAnimations', \r\n        name: 'animations', \r\n        stateKey: 'settings.animationsEnabled',\r\n        withRipple: true\r\n      });\r\n      \r\n      container.append(range.container, chatBackgroundButton, animationsCheckboxField.label);\r\n    }\r\n\r\n    {\r\n      const container = section('General.Keyboard');\r\n\r\n      const form = document.createElement('form');\r\n\r\n      const name = 'send-shortcut';\r\n      const stateKey = 'settings.sendShortcut';\r\n\r\n      const enterRow = new Row({\r\n        radioField: new RadioField({\r\n          langKey: 'General.SendShortcut.Enter', \r\n          name, \r\n          value: 'enter', \r\n          stateKey\r\n        }),\r\n        subtitleLangKey: 'General.SendShortcut.NewLine.ShiftEnter'\r\n      });\r\n\r\n      const ctrlEnterRow = new Row({\r\n        radioField: new RadioField({\r\n          name,\r\n          value: 'ctrlEnter', \r\n          stateKey\r\n        }),\r\n        subtitleLangKey: 'General.SendShortcut.NewLine.Enter'\r\n      });\r\n      _i18n(ctrlEnterRow.radioField.main, 'General.SendShortcut.CtrlEnter', [IS_APPLE ? '⌘' : 'Ctrl']);\r\n      \r\n      form.append(enterRow.container, ctrlEnterRow.container);\r\n      container.append(form);\r\n    }\r\n\r\n    if(IS_GEOLOCATION_SUPPORTED) {\r\n      const container = section('DistanceUnitsTitle');\r\n\r\n      const form = document.createElement('form');\r\n\r\n      const name = 'distance-unit';\r\n      const stateKey = 'settings.distanceUnit';\r\n\r\n      const kilometersRow = new Row({\r\n        radioField: new RadioField({\r\n          langKey: 'DistanceUnitsKilometers', \r\n          name, \r\n          value: 'kilometers', \r\n          stateKey\r\n        })\r\n      });\r\n\r\n      const milesRow = new Row({\r\n        radioField: new RadioField({\r\n          langKey: 'DistanceUnitsMiles',\r\n          name,\r\n          value: 'miles', \r\n          stateKey\r\n        })\r\n      });\r\n      \r\n      form.append(kilometersRow.container, milesRow.container);\r\n      container.append(form);\r\n    }\r\n\r\n    {\r\n      const container = section('General.TimeFormat');\r\n\r\n      const form = document.createElement('form');\r\n\r\n      const name = 'time-format';\r\n      const stateKey = 'settings.timeFormat';\r\n\r\n      const formats: [State['settings']['timeFormat'], LangPackKey][] = [\r\n        ['h12', 'General.TimeFormat.h12'], \r\n        ['h23', 'General.TimeFormat.h23']\r\n      ];\r\n\r\n      const rows = formats.map(([format, langPackKey]) => {\r\n        const row = new Row({\r\n          radioField: new RadioField({\r\n            langKey: langPackKey, \r\n            name, \r\n            value: format, \r\n            stateKey\r\n          })\r\n        });\r\n\r\n        return row;\r\n      });\r\n\r\n      const cancel = eachMinute(() => {\r\n        const date = new Date();\r\n\r\n        formats.forEach(([format], idx) => {\r\n          const str = date.toLocaleTimeString(\"en-us-u-hc-\" + format, {\r\n            hour: '2-digit', \r\n            minute: '2-digit'\r\n          });\r\n\r\n          rows[idx].subtitle.textContent = str;\r\n        });\r\n      });\r\n\r\n      this.eventListener.addEventListener('destroy', cancel);\r\n\r\n      form.append(...rows.map(row => row.container));\r\n      container.append(form);\r\n    }\r\n\r\n    {\r\n      const container = section('Emoji');\r\n\r\n      const suggestCheckboxField = new CheckboxField({\r\n        text: 'GeneralSettings.EmojiPrediction', \r\n        name: 'suggest-emoji', \r\n        stateKey: 'settings.emoji.suggest',\r\n        withRipple: true\r\n      });\r\n      const bigCheckboxField = new CheckboxField({\r\n        text: 'GeneralSettings.BigEmoji', \r\n        name: 'emoji-big', \r\n        stateKey: 'settings.emoji.big',\r\n        withRipple: true\r\n      });\r\n\r\n      container.append(suggestCheckboxField.label, bigCheckboxField.label);\r\n    }\r\n    \r\n    {\r\n      const section = new SettingSection({name: 'Telegram.InstalledStickerPacksController', caption: 'StickersBotInfo'});\r\n\r\n      const reactionsRow = new Row({\r\n        titleLangKey: 'DoubleTapSetting',\r\n        havePadding: true,\r\n        clickable: () => {\r\n          new AppQuickReactionTab(this.slider).open();\r\n        }\r\n      });\r\n\r\n      const renderQuickReaction = () => {\r\n        Promise.resolve(appReactionsManager.getQuickReaction()).then(reaction => {\r\n          wrapStickerToRow({\r\n            row: reactionsRow,\r\n            doc: reaction.static_icon,\r\n            size: 'small'\r\n          });\r\n        });\r\n      };\r\n\r\n      renderQuickReaction();\r\n\r\n      this.listenerSetter.add(rootScope)('quick_reaction', renderQuickReaction);\r\n\r\n      const suggestCheckboxField = new CheckboxField({\r\n        text: 'Stickers.SuggestStickers', \r\n        name: 'suggest', \r\n        stateKey: 'settings.stickers.suggest',\r\n        withRipple: true\r\n      });\r\n      const loopCheckboxField = new CheckboxField({\r\n        text: 'InstalledStickers.LoopAnimated', \r\n        name: 'loop', \r\n        stateKey: 'settings.stickers.loop',\r\n        withRipple: true\r\n      });\r\n\r\n      const stickerSets: {[id: string]: Row} = {};\r\n\r\n      const stickersContent = section.generateContentElement();\r\n\r\n      const lazyLoadQueue = new LazyLoadQueue();\r\n      const renderStickerSet = (stickerSet: StickerSet.stickerSet, method: 'append' | 'prepend' = 'append') => {\r\n        const row = new Row({\r\n          title: RichTextProcessor.wrapEmojiText(stickerSet.title),\r\n          subtitleLangKey: 'Stickers',\r\n          subtitleLangArgs: [stickerSet.count],\r\n          havePadding: true,\r\n          clickable: () => {\r\n            new PopupStickers({id: stickerSet.id, access_hash: stickerSet.access_hash}).show();\r\n          }\r\n        });\r\n\r\n        stickerSets[stickerSet.id] = row;\r\n\r\n        const div = document.createElement('div');\r\n        div.classList.add('row-media');\r\n\r\n        wrapStickerSetThumb({\r\n          set: stickerSet,\r\n          container: div,\r\n          group: 'GENERAL-SETTINGS',\r\n          lazyLoadQueue,\r\n          width: 48,\r\n          height: 48,\r\n          autoplay: true\r\n        });\r\n\r\n        row.container.append(div);\r\n\r\n        stickersContent[method](row.container);\r\n      };\r\n\r\n      appStickersManager.getAllStickers().then(allStickers => {\r\n        assumeType<MessagesAllStickers.messagesAllStickers>(allStickers);\r\n        for(const stickerSet of allStickers.sets) {\r\n          renderStickerSet(stickerSet);\r\n        }\r\n      });\r\n\r\n      this.listenerSetter.add(rootScope)('stickers_installed', (e) => {\r\n        const set: StickerSet.stickerSet = e;\r\n        \r\n        if(!stickerSets[set.id]) {\r\n          renderStickerSet(set, 'prepend');\r\n        }\r\n      });\r\n  \r\n      this.listenerSetter.add(rootScope)('stickers_deleted', (e) => {\r\n        const set: StickerSet.stickerSet = e;\r\n        \r\n        if(stickerSets[set.id]) {\r\n          stickerSets[set.id].container.remove();\r\n          delete stickerSets[set.id];\r\n        }\r\n      });\r\n\r\n      section.content.append(reactionsRow.container, suggestCheckboxField.label, loopCheckboxField.label);\r\n      this.scrollable.append(section.container);\r\n    }\r\n  }\r\n\r\n  onOpen() {\r\n    if(this.init) {\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport eachTimeout from \"./eachTimeout\";\n\n// It's better to use timeout instead of interval, because interval can be corrupted\nexport default function eachMinute(callback: () => any, runFirst = true) {\n  return eachTimeout(callback, () => (60 - new Date().getSeconds()) * 1000, runFirst);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport ctx from \"../environment/ctx\";\nimport noop from \"./noop\";\n\n// It's better to use timeout instead of interval, because interval can be corrupted\nexport default function eachTimeout(callback: () => any, getNextTimeout: () => number, runFirst = true) {\n  const cancel = () => {\n    clearTimeout(timeout);\n  };\n\n  // replace callback to run noop and restore after\n  const _callback = callback;\n  if(!runFirst) {\n    callback = noop;\n  }\n\n  let timeout: number;\n  (function run() {\n    callback();\n    timeout = ctx.setTimeout(run, getNextTimeout());\n  })();\n\n  callback = _callback;\n\n  return cancel;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appProfileManager from \"../../../lib/appManagers/appProfileManager\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport InputField from \"../../inputField\";\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport EditPeer from \"../../editPeer\";\r\nimport { UsernameInputField } from \"../../usernameInputField\";\r\nimport { i18n, i18n_ } from \"../../../lib/langPack\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport { generateSection, SettingSection } from \"..\";\r\n\r\n// TODO: аватарка не поменяется в этой вкладке после изменения почему-то (если поставить в другом клиенте, и потом тут проверить, для этого ещё вышел в чатлист)\r\n\r\nexport default class AppEditProfileTab extends SliderSuperTab {\r\n  private firstNameInputField: InputField;\r\n  private lastNameInputField: InputField;\r\n  private bioInputField: InputField;\r\n  private usernameInputField: InputField;\r\n  \r\n  private profileUrlContainer: HTMLDivElement;\r\n  private profileUrlAnchor: HTMLAnchorElement;\r\n\r\n  private editPeer: EditPeer;\r\n\r\n  protected async init() {\r\n    this.container.classList.add('edit-profile-container');\r\n    this.setTitle('EditAccount.Title');\r\n\r\n    const inputFields: InputField[] = [];\r\n\r\n    {\r\n      const section = generateSection(this.scrollable, undefined, 'Bio.Description');\r\n      const inputWrapper = document.createElement('div');\r\n      inputWrapper.classList.add('input-wrapper');\r\n  \r\n      this.firstNameInputField = new InputField({\r\n        label: 'EditProfile.FirstNameLabel',\r\n        name: 'first-name',\r\n        maxLength: 70\r\n      });\r\n      this.lastNameInputField = new InputField({\r\n        label: 'Login.Register.LastName.Placeholder',\r\n        name: 'last-name',\r\n        maxLength: 64\r\n      });\r\n      this.bioInputField = new InputField({\r\n        label: 'EditProfile.BioLabel',\r\n        name: 'bio',\r\n        maxLength: 70\r\n      });\r\n  \r\n      inputWrapper.append(this.firstNameInputField.container, this.lastNameInputField.container, this.bioInputField.container);\r\n      \r\n      const caption = document.createElement('div');\r\n      caption.classList.add('caption');\r\n      i18n_({element: caption, key: 'Bio.Description'});\r\n\r\n      inputFields.push(this.firstNameInputField, this.lastNameInputField, this.bioInputField);\r\n\r\n      this.editPeer = new EditPeer({\r\n        peerId: rootScope.myId,\r\n        inputFields,\r\n        listenerSetter: this.listenerSetter\r\n      });\r\n\r\n      this.content.append(this.editPeer.nextBtn);\r\n\r\n      section.append(this.editPeer.avatarEdit.container, inputWrapper);\r\n    }\r\n\r\n    {\r\n      const section = new SettingSection({\r\n        name: 'EditAccount.Username',\r\n        caption: true\r\n      });\r\n\r\n      const inputWrapper = document.createElement('div');\r\n      inputWrapper.classList.add('input-wrapper');\r\n\r\n      this.usernameInputField = new UsernameInputField({\r\n        label: 'EditProfile.Username.Label',\r\n        name: 'username',\r\n        plainText: true,\r\n        listenerSetter: this.listenerSetter,\r\n        onChange: () => {\r\n          this.editPeer.handleChange();\r\n          this.setProfileUrl();\r\n        },\r\n        availableText: 'EditProfile.Username.Available',\r\n        takenText: 'EditProfile.Username.Taken',\r\n        invalidText: 'EditProfile.Username.Invalid'\r\n      });\r\n\r\n      inputWrapper.append(this.usernameInputField.container);\r\n\r\n      const caption = section.caption;\r\n      caption.append(i18n('UsernameSettings.ChangeDescription'));\r\n      caption.append(document.createElement('br'), document.createElement('br'));\r\n\r\n      const profileUrlContainer = this.profileUrlContainer = document.createElement('div');\r\n      profileUrlContainer.classList.add('profile-url-container');\r\n      \r\n      const profileUrlAnchor = this.profileUrlAnchor = document.createElement('a');\r\n      profileUrlAnchor.classList.add('profile-url');\r\n      profileUrlAnchor.href = '#';\r\n      profileUrlAnchor.target = '_blank';\r\n\r\n      profileUrlContainer.append(i18n('UsernameHelpLink', [profileUrlAnchor]));\r\n\r\n      caption.append(profileUrlContainer);\r\n\r\n      inputFields.push(this.usernameInputField);\r\n      section.content.append(inputWrapper);\r\n      this.scrollable.append(section.container);\r\n    }\r\n\r\n    attachClickEvent(this.editPeer.nextBtn, () => {\r\n      this.editPeer.nextBtn.disabled = true;\r\n\r\n      let promises: Promise<any>[] = [];\r\n      \r\n      promises.push(appProfileManager.updateProfile(this.firstNameInputField.value, this.lastNameInputField.value, this.bioInputField.value).then(() => {\r\n        this.close();\r\n      }, (err) => {\r\n        console.error('updateProfile error:', err);\r\n      }));\r\n\r\n      if(this.editPeer.uploadAvatar) {\r\n        promises.push(this.editPeer.uploadAvatar().then(inputFile => {\r\n          return appProfileManager.uploadProfilePhoto(inputFile);\r\n        }));\r\n      }\r\n\r\n      if(this.usernameInputField.isValidToChange()) {\r\n        promises.push(appUsersManager.updateUsername(this.usernameInputField.value));\r\n      }\r\n\r\n      Promise.race(promises).finally(() => {\r\n        this.editPeer.nextBtn.removeAttribute('disabled');\r\n      });\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    const user = appUsersManager.getSelf();\r\n\r\n    const userFull = await appProfileManager.getProfile(user.id, true);\r\n\r\n    this.firstNameInputField.setOriginalValue(user.first_name, true);\r\n    this.lastNameInputField.setOriginalValue(user.last_name, true);\r\n    this.bioInputField.setOriginalValue(userFull.about, true);\r\n    this.usernameInputField.setOriginalValue(user.username, true);\r\n\r\n    this.setProfileUrl();\r\n    this.editPeer.handleChange();\r\n  }\r\n\r\n  private setProfileUrl() {\r\n    if(this.usernameInputField.input.classList.contains('error') || !this.usernameInputField.value.length) {\r\n      this.profileUrlContainer.style.display = 'none';\r\n    } else {\r\n      this.profileUrlContainer.style.display = '';\r\n      let url = 'https://t.me/' + this.usernameInputField.value;\r\n      this.profileUrlAnchor.innerText = url;\r\n      this.profileUrlAnchor.href = url;\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport AppSelectPeers from \"../../appSelectPeers\";\r\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport { MyDialogFilter as DialogFilter } from \"../../../lib/storages/filters\";\r\nimport ButtonIcon from \"../../buttonIcon\";\r\nimport CheckboxField from \"../../checkboxField\";\r\nimport Button from \"../../button\";\r\nimport AppEditFolderTab from \"./editFolder\";\r\nimport I18n, { i18n, LangPackKey, _i18n, join } from \"../../../lib/langPack\";\r\nimport appMessagesManager from \"../../../lib/appManagers/appMessagesManager\";\r\nimport RichTextProcessor from \"../../../lib/richtextprocessor\";\r\nimport { SettingSection } from \"..\";\r\nimport { toast } from \"../../toast\";\r\nimport appPeersManager from \"../../../lib/appManagers/appPeersManager\";\r\nimport copy from \"../../../helpers/object/copy\";\r\nimport forEachReverse from \"../../../helpers/array/forEachReverse\";\r\n\r\nexport default class AppIncludedChatsTab extends SliderSuperTab {\r\n  private editFolderTab: AppEditFolderTab;\r\n  private confirmBtn: HTMLElement;\r\n\r\n  private selector: AppSelectPeers;\r\n  private type: 'included' | 'excluded';\r\n  private filter: DialogFilter;\r\n  private originalFilter: DialogFilter;\r\n\r\n  private dialogsByFilters: Map<DialogFilter, Set<PeerId>>;\r\n\r\n  protected init() {\r\n    this.content.remove();\r\n    this.container.classList.add('included-chatlist-container');\r\n    this.confirmBtn = ButtonIcon('check btn-confirm blue', {noRipple: true});\r\n    this.confirmBtn.style.display = 'none';\r\n\r\n    this.header.append(this.confirmBtn);\r\n\r\n    this.confirmBtn.addEventListener('click', () => {\r\n      const selected = this.selector.getSelected();\r\n\r\n      //this.filter.pFlags = {};\r\n\r\n      if(this.type === 'included') {\r\n        for(const key in this.filter.pFlags) {\r\n          if(key.indexOf('exclude_') === 0) {\r\n            continue;\r\n          }\r\n\r\n          // @ts-ignore\r\n          delete this.filter.pFlags[key];\r\n        }\r\n      } else {\r\n        for(const key in this.filter.pFlags) {\r\n          if(key.indexOf('exclude_') !== 0) {\r\n            continue;\r\n          }\r\n\r\n          // @ts-ignore\r\n          delete this.filter.pFlags[key];\r\n        }\r\n      }\r\n\r\n      const peerIds: PeerId[] = [];\r\n      for(const key of selected) {\r\n        if(key.isPeerId()) {\r\n          peerIds.push(key.toPeerId());\r\n        } else {\r\n          // @ts-ignore\r\n          this.filter.pFlags[key] = true;\r\n        }\r\n      }\r\n\r\n      let cmp: (peerId: PeerId) => boolean;\r\n      if(this.type === 'included') {\r\n        cmp = (peerId) => peerIds.includes(peerId);\r\n      } else {\r\n        cmp = (peerId) => !peerIds.includes(peerId);\r\n      }\r\n\r\n      forEachReverse(this.filter.pinnedPeerIds, (peerId, idx) => {\r\n        if(!cmp(peerId)) {\r\n          this.filter.pinnedPeerIds.splice(idx, 1);\r\n          this.filter.pinned_peers.splice(idx, 1);\r\n        }\r\n      });\r\n\r\n      const other = this.type === 'included' ? 'excludePeerIds' : 'includePeerIds';\r\n      const otherLegacy = this.type === 'included' ? 'exclude_peers' : 'include_peers';\r\n      forEachReverse(this.filter[other], (peerId, idx) => {\r\n        if(peerIds.includes(peerId)) {\r\n          this.filter[other].splice(idx, 1);\r\n          this.filter[otherLegacy].splice(idx, 1);\r\n        }\r\n      });\r\n      \r\n      this.filter[this.type === 'included' ? 'includePeerIds' : 'excludePeerIds'] = peerIds;\r\n      this.filter[this.type === 'included' ? 'include_peers' : 'exclude_peers'] = peerIds.map(peerId => appPeersManager.getInputPeerById(peerId));\r\n      //this.filter.pinned_peers = this.filter.pinned_peers.filter(peerId => this.filter.include_peers.includes(peerId));\r\n\r\n      this.editFolderTab.setFilter(this.filter, false);\r\n      this.close();\r\n    });\r\n\r\n    this.dialogsByFilters = new Map();\r\n    return appMessagesManager.filtersStorage.getDialogFilters().then(filters => {\r\n      for(const filter of filters) {\r\n        this.dialogsByFilters.set(filter, new Set(appMessagesManager.dialogsStorage.getFolderDialogs(filter.id).map(d => d.peerId)));\r\n      }\r\n    });\r\n  }\r\n\r\n  checkbox(selected?: boolean) {\r\n    const checkboxField = new CheckboxField({\r\n      round: true\r\n    });\r\n    if(selected) {\r\n      checkboxField.input.checked = selected;\r\n    }\r\n\r\n    return checkboxField.label;\r\n  }\r\n\r\n  renderResults = async(peerIds: PeerId[]) => {\r\n    //const other = this.type === 'included' ? this.filter.exclude_peers : this.filter.include_peers;\r\n\r\n    await appUsersManager.getContacts();\r\n    peerIds.forEach(peerId => {\r\n      //if(other.includes(peerId)) return;\r\n\r\n      const {dom} = appDialogsManager.addDialogNew({\r\n        dialog: peerId,\r\n        container: this.selector.scrollable,\r\n        drawStatus: false,\r\n        rippleEnabled: true,\r\n        avatarSize: 46\r\n      });\r\n\r\n      const selected = this.selector.selected.has(peerId);\r\n      dom.containerEl.append(this.checkbox(selected));\r\n      //if(selected) dom.listEl.classList.add('active');\r\n\r\n      const foundInFilters: HTMLElement[] = [];\r\n      this.dialogsByFilters.forEach((dialogs, filter) => {\r\n        if(dialogs.has(peerId)) {\r\n          const span = document.createElement('span');\r\n          span.innerHTML = RichTextProcessor.wrapEmojiText(filter.title);\r\n          foundInFilters.push(span);\r\n        }\r\n      });\r\n\r\n      const joined = join(foundInFilters, false);\r\n      joined.forEach(el => {\r\n        dom.lastMessageSpan.append(el);\r\n      });\r\n    });\r\n  };\r\n\r\n  onOpen() {\r\n    if(this.init) {\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n\r\n    this.confirmBtn.style.display = this.type === 'excluded' ? '' : 'none';\r\n    this.setTitle(this.type === 'included' ? 'FilterAlwaysShow' : 'FilterNeverShow');\r\n\r\n    const filter = this.filter;\r\n\r\n    const categoriesSection = new SettingSection({\r\n      noDelimiter: true,\r\n      name: 'FilterChatTypes'\r\n    });\r\n\r\n    categoriesSection.container.classList.add('folder-categories');\r\n\r\n    let details: {[flag: string]: {ico: string, text: LangPackKey}};\r\n    if(this.type === 'excluded') {\r\n      details = {\r\n        exclude_muted: {ico: 'mute', text: 'ChatList.Filter.MutedChats'},\r\n        exclude_archived: {ico: 'archive', text: 'ChatList.Filter.Archive'},\r\n        exclude_read: {ico: 'readchats', text: 'ChatList.Filter.ReadChats'}\r\n      };\r\n    } else {\r\n      details = {\r\n        contacts: {ico: 'newprivate', text: 'ChatList.Filter.Contacts'},\r\n        non_contacts: {ico: 'noncontacts', text: 'ChatList.Filter.NonContacts'},\r\n        groups: {ico: 'group', text: 'ChatList.Filter.Groups'},\r\n        broadcasts: {ico: 'newchannel', text: 'ChatList.Filter.Channels'},\r\n        bots: {ico: 'bots', text: 'ChatList.Filter.Bots'}\r\n      };\r\n    }\r\n\r\n    const f = document.createDocumentFragment();\r\n    for(const key in details) {\r\n      const button = Button('btn-primary btn-transparent folder-category-button', {icon: details[key].ico, text: details[key].text});\r\n      button.dataset.peerId = key;\r\n      button.append(this.checkbox());\r\n      f.append(button);\r\n    }\r\n    categoriesSection.content.append(f);\r\n\r\n    /////////////////\r\n\r\n    const selectedPeers = (this.type === 'included' ? filter.includePeerIds : filter.excludePeerIds).slice();\r\n\r\n    this.selector = new AppSelectPeers({\r\n      appendTo: this.container, \r\n      onChange: this.onSelectChange, \r\n      peerType: ['dialogs'], \r\n      renderResultsFunc: this.renderResults,\r\n      placeholder: 'Search',\r\n      sectionNameLangPackKey: 'FilterChats'\r\n    });\r\n    this.selector.selected = new Set(selectedPeers);\r\n\r\n    let addedInitial = false;\r\n    const _add = this.selector.add.bind(this.selector);\r\n    this.selector.add = (peerId, title, scroll) => {\r\n      if(this.selector.selected.size >= 100 && addedInitial && !details[peerId]) {\r\n        const el: HTMLInputElement = this.selector.list.querySelector(`[data-peer-id=\"${peerId}\"] [type=\"checkbox\"]`);\r\n        if(el) {\r\n          setTimeout(() => {\r\n            el.checked = false;\r\n          }, 0);\r\n        }\r\n\r\n        const str = I18n.format(this.type === 'excluded' ? 'ChatList.Filter.Exclude.LimitReached': 'ChatList.Filter.Include.LimitReached', true);\r\n        toast(str);\r\n        return;\r\n      }\r\n\r\n      const div = _add(peerId, details[peerId] ? i18n(details[peerId].text) : undefined, scroll);\r\n      if(details[peerId]) {\r\n        div.querySelector('avatar-element').classList.add('tgico-' + details[peerId].ico);\r\n      }\r\n      return div;\r\n    };\r\n\r\n    this.selector.scrollable.container.append(categoriesSection.container, this.selector.scrollable.container.lastElementChild);\r\n\r\n    this.selector.addInitial(selectedPeers);\r\n    addedInitial = true;\r\n\r\n    for(const flag in filter.pFlags) {\r\n      // @ts-ignore\r\n      if(details.hasOwnProperty(flag) && !!filter.pFlags[flag]) {\r\n        (categoriesSection.content.querySelector(`[data-peer-id=\"${flag}\"]`) as HTMLElement).click();\r\n      }\r\n    }\r\n  }\r\n\r\n  onSelectChange = (length: number) => {\r\n    //const changed = !deepEqual(this.filter, this.originalFilter);\r\n    if(this.type === 'included') {\r\n      this.confirmBtn.style.display = length ? '' : 'none';\r\n    }\r\n  };\r\n\r\n  onCloseAfterTimeout() {\r\n    if(this.selector) {\r\n      this.selector.container.remove();\r\n      this.selector = null;\r\n    }\r\n\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n\r\n  /**\r\n   * Do not ignore arguments!\r\n   */\r\n  public open(filter?: DialogFilter, type?: 'included' | 'excluded', editFolderTab?: AppIncludedChatsTab['editFolderTab']) {\r\n    this.originalFilter = filter;\r\n    this.filter = copy(this.originalFilter);\r\n    this.type = type;\r\n    this.editFolderTab = editFolderTab;\r\n    \r\n    return super.open();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\r\nimport { MyDialogFilter as DialogFilter } from \"../../../lib/storages/filters\";\r\nimport lottieLoader, { LottieLoader } from \"../../../lib/rlottie/lottieLoader\";\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport { toast } from \"../../toast\";\r\nimport appMessagesManager from \"../../../lib/appManagers/appMessagesManager\";\r\nimport InputField from \"../../inputField\";\r\nimport RichTextProcessor from \"../../../lib/richtextprocessor\";\r\nimport ButtonIcon from \"../../buttonIcon\";\r\nimport ButtonMenuToggle from \"../../buttonMenuToggle\";\r\nimport { ButtonMenuItemOptions } from \"../../buttonMenu\";\r\nimport Button from \"../../button\";\r\nimport AppIncludedChatsTab from \"./includedChats\";\r\nimport { i18n, i18n_, LangPackKey } from \"../../../lib/langPack\";\r\nimport { SettingSection } from \"..\";\r\nimport PopupPeer from \"../../popups/peer\";\r\nimport RLottiePlayer from \"../../../lib/rlottie/rlottiePlayer\";\r\nimport copy from \"../../../helpers/object/copy\";\r\nimport deepEqual from \"../../../helpers/object/deepEqual\";\r\n\r\nconst MAX_FOLDER_NAME_LENGTH = 12;\r\n\r\nexport default class AppEditFolderTab extends SliderSuperTab {\r\n  private caption: HTMLElement;\r\n  private stickerContainer: HTMLElement;\r\n\r\n  private confirmBtn: HTMLElement;\r\n  private menuBtn: HTMLElement;\r\n  private nameInputField: InputField;\r\n\r\n  private includePeerIds: SettingSection;\r\n  private excludePeerIds: SettingSection;\r\n  private flags: {[k in 'contacts' | 'non_contacts' | 'groups' | 'broadcasts' | 'bots' | 'exclude_muted' | 'exclude_archived' | 'exclude_read']: HTMLElement} = {} as any;\r\n\r\n  private animation: RLottiePlayer;\r\n  private filter: DialogFilter;\r\n  private originalFilter: DialogFilter;\r\n\r\n  private type: 'edit' | 'create';\r\n  private loadAnimationPromise: ReturnType<LottieLoader['waitForFirstFrame']>;\r\n\r\n  protected init() {\r\n    this.container.classList.add('edit-folder-container');\r\n    this.caption = document.createElement('div');\r\n    this.caption.classList.add('caption');\r\n    this.caption.append(i18n('FilterIncludeExcludeInfo'));\r\n    this.stickerContainer = document.createElement('div');\r\n    this.stickerContainer.classList.add('sticker-container');\r\n\r\n    this.confirmBtn = ButtonIcon('check btn-confirm hide blue');\r\n    const deleteFolderButton: ButtonMenuItemOptions = {\r\n      icon: 'delete danger',\r\n      text: 'FilterMenuDelete',\r\n      onClick: () => {\r\n        new PopupPeer('filter-delete', {\r\n          titleLangKey: 'ChatList.Filter.Confirm.Remove.Header',\r\n          descriptionLangKey: 'ChatList.Filter.Confirm.Remove.Text',\r\n          buttons: [{\r\n            langKey: 'Delete',\r\n            callback: () => {\r\n              deleteFolderButton.element.setAttribute('disabled', 'true');\r\n              appMessagesManager.filtersStorage.updateDialogFilter(this.filter, true).then(bool => {\r\n                if(bool) {\r\n                  this.close();\r\n                }\r\n              }).finally(() => {\r\n                deleteFolderButton.element.removeAttribute('disabled');\r\n              });\r\n            },\r\n            isDanger: true\r\n          }]\r\n        }).show();\r\n      }\r\n    };\r\n    this.menuBtn = ButtonMenuToggle({}, 'bottom-left', [deleteFolderButton]);\r\n    this.menuBtn.classList.add('hide');\r\n\r\n    this.header.append(this.confirmBtn, this.menuBtn);\r\n\r\n    const inputSection = new SettingSection({});\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n    \r\n    this.nameInputField = new InputField({\r\n      label: 'FilterNameHint',\r\n      maxLength: MAX_FOLDER_NAME_LENGTH\r\n    });\r\n\r\n    inputWrapper.append(this.nameInputField.container);\r\n    inputSection.content.append(inputWrapper);\r\n\r\n    const generateList = (className: string, h2Text: LangPackKey, buttons: {icon: string, name?: string, withRipple?: true, text: LangPackKey}[], to: any) => {\r\n      const section = new SettingSection({\r\n        name: h2Text,\r\n        noDelimiter: true\r\n      });\r\n\r\n      section.container.classList.add('folder-list', className);\r\n\r\n      const categories = section.generateContentElement();\r\n      categories.classList.add('folder-categories');\r\n\r\n      buttons.forEach(o => {\r\n        const button = Button('folder-category-button btn btn-primary btn-transparent', {\r\n          icon: o.icon,\r\n          text: o.text,\r\n          noRipple: o.withRipple ? undefined : true\r\n        });\r\n\r\n        if(o.name) {\r\n          to[o.name] = button;\r\n        }\r\n\r\n        categories.append(button);\r\n      });\r\n\r\n      return section;\r\n    };\r\n\r\n    this.includePeerIds = generateList('folder-list-included', 'FilterInclude', [{\r\n      icon: 'add primary',\r\n      text: 'ChatList.Filter.Include.AddChat',\r\n      withRipple: true\r\n    }, {\r\n      text: 'ChatList.Filter.Contacts',\r\n      icon: 'newprivate',\r\n      name: 'contacts'\r\n    }, {\r\n      text: 'ChatList.Filter.NonContacts',\r\n      icon: 'noncontacts',\r\n      name: 'non_contacts'\r\n    }, {\r\n      text: 'ChatList.Filter.Groups',\r\n      icon: 'group',\r\n      name: 'groups'\r\n    }, {\r\n      text: 'ChatList.Filter.Channels',\r\n      icon: 'channel',\r\n      name: 'broadcasts'\r\n    }, {\r\n      text: 'ChatList.Filter.Bots',\r\n      icon: 'bots',\r\n      name: 'bots'\r\n    }], this.flags);\r\n\r\n    this.excludePeerIds = generateList('folder-list-excluded', 'FilterExclude', [{\r\n      icon: 'minus primary',\r\n      text: 'ChatList.Filter.Exclude.AddChat',\r\n      withRipple: true\r\n    }, {\r\n      text: 'ChatList.Filter.MutedChats',\r\n      icon: 'mute',\r\n      name: 'exclude_muted'\r\n    }, {\r\n      text: 'ChatList.Filter.Archive',\r\n      icon: 'archive',\r\n      name: 'exclude_archived'\r\n    }, {\r\n      text: 'ChatList.Filter.ReadChats',\r\n      icon: 'readchats',\r\n      name: 'exclude_read'\r\n    }], this.flags);\r\n\r\n    this.scrollable.append(this.stickerContainer, this.caption, inputSection.container, this.includePeerIds.container, this.excludePeerIds.container);\r\n\r\n    const includedFlagsContainer = this.includePeerIds.container.querySelector('.folder-categories');\r\n    const excludedFlagsContainer = this.excludePeerIds.container.querySelector('.folder-categories');\r\n\r\n    includedFlagsContainer.querySelector('.btn').addEventListener('click', () => {\r\n      new AppIncludedChatsTab(this.slider).open(this.filter, 'included', this);\r\n    });\r\n\r\n    excludedFlagsContainer.querySelector('.btn').addEventListener('click', () => {\r\n      new AppIncludedChatsTab(this.slider).open(this.filter, 'excluded', this);\r\n    });\r\n\r\n    this.confirmBtn.addEventListener('click', () => {\r\n      if(this.nameInputField.input.classList.contains('error')) {\r\n        return;\r\n      }\r\n\r\n      if(!this.nameInputField.value.trim()) {\r\n        this.nameInputField.input.classList.add('error');\r\n        return;\r\n      }\r\n\r\n      let include = (Array.from(includedFlagsContainer.children) as HTMLElement[]).slice(1).reduce((acc, el) => acc + +!el.style.display, 0);\r\n      include += this.filter.include_peers.length;\r\n      \r\n      if(!include) {\r\n        toast('Please choose at least one chat for this folder.');\r\n        return;\r\n      }\r\n\r\n      this.confirmBtn.setAttribute('disabled', 'true');\r\n\r\n      let promise: Promise<boolean>;\r\n      if(!this.filter.id) {\r\n        promise = appMessagesManager.filtersStorage.createDialogFilter(this.filter);\r\n      } else {\r\n        promise = appMessagesManager.filtersStorage.updateDialogFilter(this.filter);\r\n      }\r\n\r\n      promise.then(bool => {\r\n        if(bool) {\r\n          this.close();\r\n        }\r\n      }).catch(err => {\r\n        if(err.type === 'DIALOG_FILTERS_TOO_MUCH') {\r\n          toast('Sorry, you can\\'t create more folders.');\r\n        } else {\r\n          console.error('updateDialogFilter error:', err);\r\n        }\r\n      }).finally(() => {\r\n        this.confirmBtn.removeAttribute('disabled');\r\n      });\r\n    });\r\n    \r\n    this.nameInputField.input.addEventListener('input', () => {\r\n      this.filter.title = this.nameInputField.value;\r\n      this.editCheckForChange();\r\n    });\r\n\r\n    const reloadMissingPromises: Promise<any>[] = this.type === 'edit' ? [\r\n      appMessagesManager.filtersStorage.reloadMissingPeerIds(this.filter.id, 'pinned_peers'),\r\n      appMessagesManager.filtersStorage.reloadMissingPeerIds(this.filter.id, 'include_peers'),\r\n      appMessagesManager.filtersStorage.reloadMissingPeerIds(this.filter.id, 'exclude_peers')\r\n    ] : [];\r\n\r\n    return Promise.all([\r\n      this.loadAnimationPromise = lottieLoader.loadAnimationAsAsset({\r\n        container: this.stickerContainer,\r\n        loop: false,\r\n        autoplay: false,\r\n        width: 86,\r\n        height: 86\r\n      }, 'Folders_2').then(player => {\r\n        this.animation = player;\r\n\r\n        return lottieLoader.waitForFirstFrame(player);\r\n      }),\r\n\r\n      ...reloadMissingPromises\r\n    ]);\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    this.loadAnimationPromise.then(() => {\r\n      this.animation.autoplay = true;\r\n      this.animation.play();\r\n    });\r\n  }\r\n\r\n  private onCreateOpen() {\r\n    // this.caption.style.display = '';\r\n    this.setTitle('FilterNew');\r\n    this.menuBtn.classList.add('hide');\r\n    this.confirmBtn.classList.remove('hide');\r\n    this.nameInputField.value = '';\r\n\r\n    for(const flag in this.flags) {\r\n      // @ts-ignore\r\n      this.flags[flag].style.display = 'none';\r\n    }\r\n  }\r\n\r\n  private onEditOpen() {\r\n    // this.caption.style.display = 'none';\r\n    this.setTitle(this.type === 'create' ? 'FilterNew' : 'FilterHeaderEdit');\r\n\r\n    if(this.type === 'edit') {\r\n      this.menuBtn.classList.remove('hide');\r\n      this.confirmBtn.classList.add('hide');\r\n    }\r\n    \r\n    const filter = this.filter;\r\n    this.nameInputField.value = RichTextProcessor.wrapDraftText(filter.title);\r\n\r\n    for(const flag in this.flags) {\r\n      this.flags[flag as keyof AppEditFolderTab['flags']].style.display = !!filter.pFlags[flag as keyof AppEditFolderTab['flags']] ? '' : 'none';\r\n    }\r\n\r\n    (['includePeerIds' as const, 'excludePeerIds' as const]).forEach(key => {\r\n      const section = this[key];\r\n      const ul = appDialogsManager.createChatList();\r\n\r\n      const peers = filter[key].slice();\r\n\r\n      const renderMore = (_length: number) => {\r\n        for(let i = 0, length = Math.min(peers.length, _length); i < length; ++i) {\r\n          const peerId = peers.shift();\r\n\r\n          const {dom} = appDialogsManager.addDialogNew({\r\n            dialog: peerId,\r\n            container: ul,\r\n            drawStatus: false,\r\n            rippleEnabled: false,\r\n            meAsSaved: true,\r\n            avatarSize: 32\r\n          });\r\n          dom.lastMessageSpan.parentElement.remove();\r\n        }\r\n\r\n        if(peers.length) {\r\n          showMore.lastElementChild.replaceWith(i18n('FilterShowMoreChats', [peers.length]));\r\n        } else if(showMore) {\r\n          showMore.remove();\r\n        }\r\n      };\r\n      \r\n      section.generateContentElement().append(ul);\r\n\r\n      let showMore: HTMLElement;\r\n      if(peers.length) {\r\n        const content = section.generateContentElement();\r\n        showMore = Button('folder-category-button btn btn-primary btn-transparent', {icon: 'down'});\r\n        showMore.classList.add('load-more', 'rp-overflow');\r\n        showMore.addEventListener('click', () => renderMore(20));\r\n        showMore.append(i18n('FilterShowMoreChats', [peers.length]));\r\n\r\n        content.append(showMore);\r\n      }\r\n\r\n      renderMore(4);\r\n    });\r\n  }\r\n\r\n  editCheckForChange() {\r\n    if(this.type === 'edit') {\r\n      const changed = !deepEqual(this.originalFilter, this.filter);\r\n      this.confirmBtn.classList.toggle('hide', !changed);\r\n      this.menuBtn.classList.toggle('hide', changed);\r\n    }\r\n  };\r\n\r\n  setFilter(filter: DialogFilter, firstTime: boolean) {\r\n    if(this.container) {\r\n      // cleanup\r\n      Array.from(this.container.querySelectorAll('ul, .load-more')).forEach(el => el.remove());\r\n    }\r\n\r\n    if(firstTime) {\r\n      this.originalFilter = filter;\r\n      this.filter = copy(filter);\r\n    } else {\r\n      this.filter = filter;\r\n      this.onEditOpen();\r\n      this.editCheckForChange();\r\n    }\r\n  }\r\n\r\n  public open(filter?: DialogFilter) {\r\n    if(filter === undefined) {\r\n      this.setFilter({\r\n        _: 'dialogFilter',\r\n        id: 0,\r\n        title: '',\r\n        pFlags: {},\r\n        pinned_peers: [],\r\n        include_peers: [],\r\n        exclude_peers: [],\r\n        pinnedPeerIds: [],\r\n        includePeerIds: [],\r\n        excludePeerIds: []\r\n      }, true);\r\n      this.type = 'create';\r\n    } else {\r\n      this.setFilter(filter, true);\r\n      this.type = 'edit';\r\n    }\r\n\r\n    return super.open().then(() => {\r\n      if(this.type === 'edit') this.onEditOpen();\r\n      else this.onCreateOpen();\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport lottieLoader, { LottieLoader } from \"../../../lib/rlottie/lottieLoader\";\r\nimport { RichTextProcessor } from \"../../../lib/richtextprocessor\";\r\nimport { toast } from \"../../toast\";\r\nimport type { MyDialogFilter } from \"../../../lib/storages/filters\";\r\nimport type { DialogFilterSuggested, DialogFilter } from \"../../../layer\";\r\nimport type _rootScope from \"../../../lib/rootScope\";\r\nimport Button from \"../../button\";\r\nimport appMessagesManager from \"../../../lib/appManagers/appMessagesManager\";\r\nimport appPeersManager from \"../../../lib/appManagers/appPeersManager\";\r\nimport apiManager from \"../../../lib/mtproto/mtprotoworker\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport AppEditFolderTab from \"./editFolder\";\r\nimport Row from \"../../row\";\r\nimport { SettingSection } from \"..\";\r\nimport { i18n, i18n_, LangPackKey, join } from \"../../../lib/langPack\";\r\nimport { cancelEvent } from \"../../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport positionElementByIndex from \"../../../helpers/dom/positionElementByIndex\";\r\nimport RLottiePlayer from \"../../../lib/rlottie/rlottiePlayer\";\r\n\r\nexport default class AppChatFoldersTab extends SliderSuperTab {\r\n  private createFolderBtn: HTMLElement;\r\n  private foldersSection: SettingSection;\r\n  private suggestedSection: SettingSection;\r\n  private stickerContainer: HTMLElement;\r\n  private animation: RLottiePlayer;\r\n\r\n  private filtersRendered: {[filterId: number]: Row} = {};\r\n  private loadAnimationPromise: ReturnType<LottieLoader['waitForFirstFrame']>;\r\n\r\n  private renderFolder(dialogFilter: DialogFilterSuggested | DialogFilter | MyDialogFilter, container?: HTMLElement, row?: Row) {\r\n    let filter: DialogFilter | MyDialogFilter;\r\n    let description = '';\r\n    let d: HTMLElement[] = [];\r\n    if(dialogFilter._ === 'dialogFilterSuggested') {\r\n      filter = dialogFilter.filter;\r\n      description = dialogFilter.description;\r\n    } else {\r\n      filter = dialogFilter;\r\n\r\n      let enabledFilters = Object.keys(filter.pFlags).length;\r\n      /* (['include_peers', 'exclude_peers'] as ['include_peers', 'exclude_peers']).forEach(key => {\r\n        enabledFilters += +!!filter[key].length;\r\n      }); */\r\n      \r\n      if(enabledFilters === 1) {\r\n        const pFlags = filter.pFlags;\r\n        let k: LangPackKey;\r\n        if(pFlags.contacts) k = 'FilterAllContacts';\r\n        else if(pFlags.non_contacts) k = 'FilterAllNonContacts';\r\n        else if(pFlags.groups) k = 'FilterAllGroups';\r\n        else if(pFlags.broadcasts) k = 'FilterAllChannels';\r\n        else if(pFlags.bots) k = 'FilterAllBots';\r\n\r\n        if(k) {\r\n          d.push(i18n(k));\r\n        }\r\n      }\r\n      \r\n      if(!d.length) {\r\n        const folder = appMessagesManager.dialogsStorage.getFolderDialogs(filter.id);\r\n        let chats = 0, channels = 0, groups = 0;\r\n        for(const dialog of folder) {\r\n          if(appPeersManager.isAnyGroup(dialog.peerId)) groups++;\r\n          else if(appPeersManager.isBroadcast(dialog.peerId)) channels++;\r\n          else chats++;\r\n        }\r\n\r\n        if(chats) d.push(i18n('Chats', [chats]));\r\n        if(channels) d.push(i18n('Channels', [channels]));\r\n        if(groups) d.push(i18n('Groups', [groups]));\r\n      }\r\n    }\r\n\r\n    let div: HTMLElement;\r\n    if(!row) {\r\n      row = new Row({\r\n        title: RichTextProcessor.wrapEmojiText(filter.title),\r\n        subtitle: description,\r\n        clickable: true\r\n      });\r\n\r\n      if(d.length) {\r\n        join(d).forEach(el => {\r\n          row.subtitle.append(el);\r\n        });\r\n      }\r\n  \r\n      if(dialogFilter._ === 'dialogFilter') {\r\n        const filterId = filter.id;\r\n        if(!this.filtersRendered.hasOwnProperty(filter.id)) {\r\n          attachClickEvent(row.container, () => {\r\n            new AppEditFolderTab(this.slider).open(appMessagesManager.filtersStorage.getFilter(filterId));\r\n          }, {listenerSetter: this.listenerSetter});\r\n        }\r\n\r\n        this.filtersRendered[filter.id] = row;\r\n      }\r\n    } else {\r\n      row.subtitle.textContent = '';\r\n      join(d).forEach(el => {\r\n        row.subtitle.append(el);\r\n      });\r\n    }\r\n\r\n    div = row.container;\r\n\r\n    if((filter as MyDialogFilter).hasOwnProperty('orderIndex')) {\r\n       // ! header will be at 0 index\r\n      positionElementByIndex(div, div.parentElement || container, (filter as MyDialogFilter).orderIndex);\r\n    } else if(container) container.append(div);\r\n    \r\n    return div;\r\n  }\r\n\r\n  protected async init() {\r\n    this.container.classList.add('chat-folders-container');\r\n    this.setTitle('ChatList.Filter.List.Title');\r\n\r\n    this.scrollable.container.classList.add('chat-folders');\r\n\r\n    this.stickerContainer = document.createElement('div');\r\n    this.stickerContainer.classList.add('sticker-container');\r\n    \r\n    const caption = document.createElement('div');\r\n    caption.classList.add('caption');\r\n    i18n_({element: caption, key: 'ChatList.Filter.Header'});\r\n    \r\n    this.createFolderBtn = Button('btn-primary btn-color-primary btn-control tgico', {\r\n      text: 'ChatList.Filter.NewTitle',\r\n      icon: 'add'\r\n    });\r\n\r\n    this.foldersSection = new SettingSection({\r\n      name: 'Filters'\r\n    });\r\n    this.foldersSection.container.style.display = 'none';\r\n\r\n    this.suggestedSection = new SettingSection({\r\n      name: 'FilterRecommended'\r\n    });\r\n    this.suggestedSection.container.style.display = 'none';\r\n\r\n    this.scrollable.append(this.stickerContainer, caption, this.createFolderBtn, this.foldersSection.container, this.suggestedSection.container);\r\n\r\n    attachClickEvent(this.createFolderBtn, () => {\r\n      if(Object.keys(this.filtersRendered).length >= 10) {\r\n        toast('Sorry, you can\\'t create more folders.');\r\n      } else {\r\n        new AppEditFolderTab(this.slider).open();\r\n      }\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    const onFiltersContainerUpdate = () => {\r\n      this.foldersSection.container.style.display = Object.keys(this.filtersRendered).length ? '' : 'none';\r\n    };\r\n\r\n    appMessagesManager.filtersStorage.getDialogFilters().then(filters => {\r\n      for(const filter of filters) {\r\n        this.renderFolder(filter, this.foldersSection.content);\r\n      }\r\n\r\n      onFiltersContainerUpdate();\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('filter_update', (filter) => {\r\n      if(this.filtersRendered.hasOwnProperty(filter.id)) {\r\n        this.renderFolder(filter, null, this.filtersRendered[filter.id]);\r\n      } else {\r\n        this.renderFolder(filter, this.foldersSection.content);\r\n      }\r\n\r\n      onFiltersContainerUpdate();\r\n\r\n      this.getSuggestedFilters();\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('filter_delete', (filter) => {\r\n      if(this.filtersRendered.hasOwnProperty(filter.id)) {\r\n        /* for(const suggested of this.suggestedFilters) {\r\n          if(deepEqual(suggested.filter, filter)) {\r\n            \r\n          }\r\n        } */\r\n        this.getSuggestedFilters();\r\n\r\n        this.filtersRendered[filter.id].container.remove();\r\n        delete this.filtersRendered[filter.id];\r\n      }\r\n\r\n      onFiltersContainerUpdate();\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('filter_order', (order) => {\r\n      order.forEach((filterId, idx) => {\r\n        const container = this.filtersRendered[filterId].container;\r\n        positionElementByIndex(container, container.parentElement, idx + 1); // ! + 1 due to header \r\n      });\r\n    });\r\n\r\n    this.loadAnimationPromise = lottieLoader.loadAnimationAsAsset({\r\n      container: this.stickerContainer,\r\n      loop: false,\r\n      autoplay: false,\r\n      width: 86,\r\n      height: 86\r\n    }, 'Folders_1').then(player => {\r\n      this.animation = player;\r\n\r\n      return lottieLoader.waitForFirstFrame(player);\r\n    });\r\n\r\n    this.getSuggestedFilters()\r\n\r\n    /* return Promise.all([\r\n      this.loadAnimationPromise\r\n    ]); */\r\n    return this.loadAnimationPromise;\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    this.loadAnimationPromise.then(() => {\r\n      this.animation.autoplay = true;\r\n      this.animation.play();\r\n    });\r\n  }\r\n\r\n  private getSuggestedFilters() {\r\n    return apiManager.invokeApi('messages.getSuggestedDialogFilters').then(suggestedFilters => {\r\n      this.suggestedSection.container.style.display = suggestedFilters.length ? '' : 'none';\r\n      Array.from(this.suggestedSection.content.children).slice(1).forEach(el => el.remove());\r\n\r\n      suggestedFilters.forEach(filter => {\r\n        const div = this.renderFolder(filter);\r\n        const button = Button('btn-primary btn-color-primary', {text: 'Add'});\r\n        div.append(button);\r\n        this.suggestedSection.content.append(div);\r\n\r\n        attachClickEvent(button, (e) => {\r\n          cancelEvent(e);\r\n\r\n          if(Object.keys(this.filtersRendered).length >= 10) {\r\n            toast('Sorry, you can\\'t create more folders.');\r\n            return;\r\n          }\r\n\r\n          button.setAttribute('disabled', 'true');\r\n\r\n          const f = filter.filter as MyDialogFilter;\r\n          f.includePeerIds = [];\r\n          f.excludePeerIds = [];\r\n          f.pinnedPeerIds = [];\r\n\r\n          appMessagesManager.filtersStorage.createDialogFilter(f, true).then(bool => {\r\n            if(bool) {\r\n              div.remove();\r\n            }\r\n          }).finally(() => {\r\n            button.removeAttribute('disabled');\r\n          });\r\n        }, {listenerSetter: this.listenerSetter});\r\n      });\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"..\";\r\nimport Row from \"../../row\";\r\nimport CheckboxField from \"../../checkboxField\";\r\nimport { InputNotifyPeer, Update } from \"../../../layer\";\r\nimport appNotificationsManager from \"../../../lib/appManagers/appNotificationsManager\";\r\nimport { SliderSuperTabEventable } from \"../../sliderTab\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport { LangPackKey } from \"../../../lib/langPack\";\r\nimport appStateManager from \"../../../lib/appManagers/appStateManager\";\r\nimport copy from \"../../../helpers/object/copy\";\r\nimport convertKeyToInputKey from \"../../../helpers/string/convertKeyToInputKey\";\r\n\r\ntype InputNotifyKey = Exclude<InputNotifyPeer['_'], 'inputNotifyPeer'>;\r\n\r\nexport default class AppNotificationsTab extends SliderSuperTabEventable {\r\n  protected init() {\r\n    this.header.classList.add('with-border');\r\n    this.container.classList.add('notifications-container', 'with-border');\r\n    this.setTitle('Telegram.NotificationSettingsViewController');\r\n\r\n    const NotifySection = (options: {\r\n      name: LangPackKey,\r\n      typeText: LangPackKey,\r\n      inputKey: InputNotifyKey,\r\n    }) => {\r\n      const section = new SettingSection({\r\n        name: options.name\r\n      });\r\n\r\n      const enabledRow = new Row({\r\n        checkboxField: new CheckboxField({text: options.typeText, checked: true}),\r\n        subtitleLangKey: 'Loading',\r\n      });\r\n      \r\n      const previewEnabledRow = new Row({\r\n        checkboxField: new CheckboxField({text: 'MessagePreview', checked: true}),\r\n        subtitleLangKey: 'Loading',\r\n      });\r\n\r\n      section.content.append(enabledRow.container, previewEnabledRow.container);\r\n\r\n      this.scrollable.append(section.container);\r\n\r\n      const inputNotifyPeer = {_: options.inputKey};\r\n      const ret = appNotificationsManager.getNotifySettings(inputNotifyPeer);\r\n      (ret instanceof Promise ? ret : Promise.resolve(ret)).then((notifySettings) => {\r\n        const applySettings = () => {\r\n          const muted = appNotificationsManager.isMuted(notifySettings);\r\n          enabledRow.checkboxField.checked = !muted;\r\n          previewEnabledRow.checkboxField.checked = notifySettings.show_previews;\r\n  \r\n          return muted;\r\n        };\r\n        \r\n        applySettings();\r\n\r\n        this.eventListener.addEventListener('destroy', () => {\r\n          const mute = !enabledRow.checkboxField.checked;\r\n          const showPreviews = previewEnabledRow.checkboxField.checked;\r\n\r\n          if(mute === appNotificationsManager.isMuted(notifySettings) && showPreviews === notifySettings.show_previews) {\r\n            return;\r\n          }\r\n\r\n          const inputSettings: any = copy(notifySettings);\r\n          inputSettings._ = 'inputPeerNotifySettings';\r\n          inputSettings.mute_until = mute ? 0x7FFFFFFF : 0;\r\n          inputSettings.show_previews = showPreviews;\r\n\r\n          appNotificationsManager.updateNotifySettings(inputNotifyPeer, inputSettings);\r\n        }, {once: true});\r\n\r\n        this.listenerSetter.add(rootScope)('notify_settings', (update: Update.updateNotifySettings) => {\r\n          const inputKey = convertKeyToInputKey(update.peer._) as any;\r\n          if(options.inputKey === inputKey) {\r\n            notifySettings = update.notify_settings;\r\n            applySettings();\r\n          }\r\n        });\r\n      });\r\n    };\r\n\r\n    NotifySection({\r\n      name: 'NotificationsPrivateChats',\r\n      typeText: 'NotificationsForPrivateChats',\r\n      inputKey: 'inputNotifyUsers'\r\n    });\r\n\r\n    NotifySection({\r\n      name: 'NotificationsGroups',\r\n      typeText: 'NotificationsForGroups',\r\n      inputKey: 'inputNotifyChats'\r\n    });\r\n\r\n    NotifySection({\r\n      name: 'NotificationsChannels',\r\n      typeText: 'NotificationsForChannels',\r\n      inputKey: 'inputNotifyBroadcasts'\r\n    });\r\n\r\n    {\r\n      const section = new SettingSection({\r\n        name: 'NotificationsOther'\r\n      });\r\n\r\n      const contactsSignUpRow = new Row({\r\n        checkboxField: new CheckboxField({text: 'ContactJoined', checked: true}),\r\n        subtitleLangKey: 'Loading',\r\n      });\r\n      \r\n      const soundRow = new Row({\r\n        checkboxField: new CheckboxField({text: 'Notifications.Sound', checked: true, stateKey: 'settings.notifications.sound'}),\r\n        subtitleLangKey: 'Loading',\r\n      });\r\n\r\n      appStateManager.getState().then(state => {\r\n        soundRow.checkboxField.checked = state.settings.notifications.sound;\r\n      });\r\n\r\n      section.content.append(contactsSignUpRow.container, soundRow.container);\r\n\r\n      this.scrollable.append(section.container);\r\n\r\n      appNotificationsManager.getContactSignUpNotification().then(enabled => {\r\n        contactsSignUpRow.checkboxField.checked = enabled;\r\n\r\n        this.eventListener.addEventListener('destroy', () => {\r\n          const _enabled = contactsSignUpRow.checkboxField.checked;\r\n          if(enabled !== _enabled) {\r\n            appNotificationsManager.setContactSignUpNotification(!_enabled);\r\n          }\r\n        }, {once: true});\r\n      });\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"..\";\r\nimport { randomLong } from \"../../../helpers/random\";\r\nimport I18n from \"../../../lib/langPack\";\r\nimport apiManager from \"../../../lib/mtproto/mtprotoworker\";\r\nimport RadioField from \"../../radioField\";\r\nimport Row, { RadioFormFromRows } from \"../../row\";\r\nimport { SliderSuperTab } from \"../../slider\"\r\n\r\nexport default class AppLanguageTab extends SliderSuperTab {\r\n  protected async init() {\r\n    this.header.classList.add('with-border');\r\n    this.container.classList.add('language-container');\r\n    this.setTitle('Telegram.LanguageViewController');\r\n\r\n    const section = new SettingSection({});\r\n\r\n    const radioRows: Map<string, Row> = new Map();\r\n\r\n    const promise = apiManager.invokeApiCacheable('langpack.getLanguages', {\r\n      lang_pack: 'macos'\r\n    }).then((languages) => {\r\n      const random = randomLong();\r\n      languages.forEach((language) => {\r\n        const row = new Row({\r\n          radioField: new RadioField({\r\n            text: language.name, \r\n            name: random, \r\n            value: language.lang_code\r\n          }),\r\n          subtitle: language.native_name\r\n        });\r\n        \r\n        radioRows.set(language.lang_code, row);\r\n      });\r\n\r\n      const form = RadioFormFromRows([...radioRows.values()], (value) => {\r\n        I18n.getLangPack(value);\r\n      });\r\n  \r\n      I18n.getCacheLangPack().then(langPack => {\r\n        const row = radioRows.get(langPack.lang_code);\r\n        if(!row) {\r\n          console.error('no row', row, langPack);\r\n          return;\r\n        }\r\n  \r\n        row.radioField.setValueSilently(true);\r\n      });\r\n  \r\n      section.content.append(form);\r\n    });\r\n\r\n    this.scrollable.append(section.container);\r\n\r\n    return promise;\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { addCancelButton } from \"./popups\";\nimport PopupPeer, { PopupPeerOptions } from \"./popups/peer\";\n\n// type PopupConfirmationOptions = Pick<PopupPeerOptions, 'titleLangKey'>;\ntype PopupConfirmationOptions = PopupPeerOptions & {\n  button: PopupPeerOptions['buttons'][0],\n  checkbox?: PopupPeerOptions['checkboxes'][0]\n};\n\nexport default function confirmationPopup(options: PopupConfirmationOptions) {\n  return new Promise<boolean | void>((resolve, reject) => {\n    const {button, checkbox} = options;\n    button.callback = (set) => {\n      resolve(set ? !!set.size : undefined);\n    };\n\n    const buttons = addCancelButton([button]);\n    const cancelButton = buttons.find(button => button.isCancel);\n    cancelButton.callback = () => {\n      reject();\n    };\n\n    options.buttons = buttons;\n    options.checkboxes = checkbox && [checkbox];\n\n    new PopupPeer('popup-confirmation', options).show();\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { SettingSection } from \"../..\";\nimport { LangPackKey } from \"../../../../lib/langPack\";\nimport CheckboxField from \"../../../checkboxField\";\nimport { SliderSuperTabEventable } from \"../../../sliderTab\";\n\nexport function autoDownloadPeerTypeSection(type: 'photo' | 'video' | 'file', title: LangPackKey) {\n  const section = new SettingSection({name: title});\n\n  const key = 'settings.autoDownload.' + type + '.';\n  const contactsCheckboxField = new CheckboxField({\n    text: 'AutodownloadContacts', \n    name: 'contacts',\n    stateKey: key + 'contacts',\n    withRipple: true\n  });\n  const privateCheckboxField = new CheckboxField({\n    text: 'AutodownloadPrivateChats', \n    name: 'private',\n    stateKey: key + 'private',\n    withRipple: true\n  });\n  const groupsCheckboxField = new CheckboxField({\n    text: 'AutodownloadGroupChats', \n    name: 'groups',\n    stateKey: key + 'groups',\n    withRipple: true\n  });\n  const channelsCheckboxField = new CheckboxField({\n    text: 'AutodownloadChannels', \n    name: 'channels',\n    stateKey: key + 'channels',\n    withRipple: true\n  });\n\n  section.content.append(\n    contactsCheckboxField.label, \n    privateCheckboxField.label, \n    groupsCheckboxField.label, \n    channelsCheckboxField.label\n  );\n\n  return section;\n}\n\nexport default class AppAutoDownloadPhotoTab extends SliderSuperTabEventable {\n  protected init() {\n    this.header.classList.add('with-border');\n    this.setTitle('AutoDownloadPhotos');\n\n    const section = autoDownloadPeerTypeSection('photo', 'AutoDownloadPhotosTitle');\n    this.scrollable.append(section.container);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport formatBytes from \"../../../../helpers/formatBytes\";\nimport debounce from \"../../../../helpers/schedulers/debounce\";\nimport appStateManager from \"../../../../lib/appManagers/appStateManager\";\nimport I18n from \"../../../../lib/langPack\";\nimport rootScope from \"../../../../lib/rootScope\";\nimport { SliderSuperTabEventable } from \"../../../sliderTab\";\nimport { RangeSettingSelector } from \"../generalSettings\";\nimport { autoDownloadPeerTypeSection } from \"./photo\";\n\nexport default class AppAutoDownloadFileTab extends SliderSuperTabEventable {\n  protected init() {\n    this.header.classList.add('with-border');\n    this.setTitle('AutoDownloadFiles');\n\n    const debouncedSave = debounce((sizeMax: number) => {\n      appStateManager.setByKey('settings.autoDownloadNew.file_size_max', sizeMax);\n    }, 200, false, true);\n\n    const section = autoDownloadPeerTypeSection('file', 'AutoDownloadFilesTitle');\n\n    const MIN = 512 * 1024;\n    // const MAX = 2 * 1024 * 1024 * 1024;\n    const MAX = 20 * 1024 * 1024;\n    const MAX_RANGE = MAX - MIN;\n\n    const sizeMax = rootScope.settings.autoDownloadNew.file_size_max;\n    const value = Math.sqrt(Math.sqrt((sizeMax - MIN) / MAX_RANGE));\n    const upTo = new I18n.IntlElement({\n      key: 'AutodownloadSizeLimitUpTo',\n      args: [formatBytes(sizeMax)]\n    });\n    const range = new RangeSettingSelector('AutoDownloadMaxFileSize', 0.01, value, 0, 1, false);\n    range.onChange = (value) => {\n      const sizeMax = (value ** 4 * MAX_RANGE + MIN) | 0;\n\n      upTo.compareAndUpdate({args: [formatBytes(sizeMax)]});\n\n      debouncedSave(sizeMax);\n    };\n\n    range.valueContainer.append(upTo.element);\n\n    section.content.append(range.container);\n\n    this.scrollable.append(section.container);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { SliderSuperTabEventable } from \"../../../sliderTab\";\nimport { autoDownloadPeerTypeSection } from \"./photo\";\n\nexport default class AppAutoDownloadVideoTab extends SliderSuperTabEventable {\n  protected init() {\n    this.header.classList.add('with-border');\n    this.setTitle('AutoDownloadVideos');\n\n    const section = autoDownloadPeerTypeSection('video', 'AutoDownloadVideosTitle');\n    this.scrollable.append(section.container);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { SettingSection } from \"..\";\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\nimport replaceContent from \"../../../helpers/dom/replaceContent\";\nimport toggleDisability from \"../../../helpers/dom/toggleDisability\";\nimport formatBytes from \"../../../helpers/formatBytes\";\nimport copy from \"../../../helpers/object/copy\";\nimport deepEqual from \"../../../helpers/object/deepEqual\";\nimport appStateManager, { AutoDownloadPeerTypeSettings, STATE_INIT } from \"../../../lib/appManagers/appStateManager\";\nimport { FormatterArguments, i18n, join, LangPackKey } from \"../../../lib/langPack\";\nimport rootScope from \"../../../lib/rootScope\";\nimport Button from \"../../button\";\nimport CheckboxField from \"../../checkboxField\";\nimport confirmationPopup from \"../../confirmationPopup\";\nimport Row from \"../../row\";\nimport { SliderSuperTabEventable, SliderSuperTabEventableConstructable } from \"../../sliderTab\";\nimport AppAutoDownloadFileTab from \"./autoDownload/file\";\nimport AppAutoDownloadPhotoTab from \"./autoDownload/photo\";\nimport AppAutoDownloadVideoTab from \"./autoDownload/video\";\n\nconst AUTO_DOWNLOAD_FOR_KEYS: {[k in keyof AutoDownloadPeerTypeSettings]: LangPackKey} = {\n  contacts: 'AutoDownloadContacts',\n  private: 'AutoDownloadPm',\n  groups: 'AutoDownloadGroups',\n  channels: 'AutoDownloadChannels'\n};\n\nexport default class AppDataAndStorageTab extends SliderSuperTabEventable {\n  protected async init() {\n    this.header.classList.add('with-border');\n    this.setTitle('DataSettings');\n\n    {\n      const section = new SettingSection({name: 'AutomaticMediaDownload', caption: 'AutoDownloadAudioInfo'});\n\n      const state = await appStateManager.getState();\n\n      const autoCheckboxField = new CheckboxField({\n        text: 'AutoDownloadMedia', \n        name: 'auto',\n        checked: !state.settings.autoDownloadNew.pFlags.disabled,\n        withRipple: true\n      });\n\n      const onChange = () => {\n        toggleDisability([resetButton], \n          deepEqual(state.settings.autoDownload, STATE_INIT.settings.autoDownload) && \n          deepEqual(state.settings.autoDownloadNew, STATE_INIT.settings.autoDownloadNew));\n      };\n\n      const setSubtitles = () => {\n        this.setAutoDownloadSubtitle(photoRow, state.settings.autoDownload.photo, /* state.settings.autoDownloadNew.photo_size_max */);\n        this.setAutoDownloadSubtitle(videoRow, state.settings.autoDownload.video/* , state.settings.autoDownloadNew.video_size_max */);\n        this.setAutoDownloadSubtitle(fileRow, state.settings.autoDownload.file, state.settings.autoDownloadNew.file_size_max);\n      };\n\n      const openTab = (tabConstructor: SliderSuperTabEventableConstructable) => {\n        const tab = new tabConstructor(this.slider, true);\n        tab.open();\n\n        this.listenerSetter.add(tab.eventListener)('destroy', () => {\n          setSubtitles();\n          onChange();\n        }, {once: true});\n      };\n      \n      const photoRow = new Row({\n        titleLangKey: 'AutoDownloadPhotos',\n        subtitle: '',\n        clickable: () => {\n          openTab(AppAutoDownloadPhotoTab);\n        }\n      });\n\n      const videoRow = new Row({\n        titleLangKey: 'AutoDownloadVideos',\n        subtitle: '',\n        clickable: () => {\n          openTab(AppAutoDownloadVideoTab);\n        }\n      });\n\n      const fileRow = new Row({\n        titleLangKey: 'AutoDownloadFiles',\n        subtitle: '',\n        clickable: () => {\n          openTab(AppAutoDownloadFileTab);\n        }\n      });\n\n      const resetButton = Button('btn-primary btn-transparent primary', {icon: 'delete', text: 'ResetAutomaticMediaDownload'});\n      attachClickEvent(resetButton, () => {\n        confirmationPopup({\n          titleLangKey: 'ResetAutomaticMediaDownloadAlertTitle',\n          descriptionLangKey: 'ResetAutomaticMediaDownloadAlert',\n          button: {\n            langKey: 'Reset'\n          }\n        }).then(() => {\n          rootScope.settings.autoDownloadNew = copy(STATE_INIT.settings.autoDownloadNew);\n          rootScope.settings.autoDownload = copy(STATE_INIT.settings.autoDownload);\n          appStateManager.pushToState('settings', rootScope.settings);\n          rootScope.dispatchEvent('settings_updated', {key: 'settings', value: rootScope.settings});\n\n          setSubtitles();\n          autoCheckboxField.checked = !state.settings.autoDownloadNew.pFlags.disabled;\n        });\n      });\n\n      const onDisabledChange = () => {\n        const disabled = !autoCheckboxField.checked;\n\n        const settings = rootScope.settings;\n        if(disabled) {\n          settings.autoDownloadNew.pFlags.disabled = true;\n        } else {\n          delete settings.autoDownloadNew.pFlags.disabled;\n        }\n\n        [photoRow, videoRow, fileRow].forEach(row => {\n          row.container.classList.toggle('is-disabled', disabled);\n        });\n        \n        appStateManager.pushToState('settings', settings);\n        rootScope.dispatchEvent('settings_updated', {key: 'settings', value: settings});\n\n        onChange();\n      };\n\n      autoCheckboxField.input.addEventListener('change', onDisabledChange);\n      onDisabledChange();\n      setSubtitles();\n\n      section.content.append(\n        autoCheckboxField.label,\n        photoRow.container,\n        videoRow.container,\n        fileRow.container,\n        resetButton\n      );\n      \n      this.scrollable.append(section.container);\n    }\n\n    {\n      const section = new SettingSection({name: 'AutoplayMedia'});\n\n      const gifsCheckboxField = new CheckboxField({\n        text: 'AutoplayGIF', \n        name: 'gifs', \n        stateKey: 'settings.autoPlay.gifs',\n        withRipple: true\n      });\n      const videosCheckboxField = new CheckboxField({\n        text: 'AutoplayVideo', \n        name: 'videos', \n        stateKey: 'settings.autoPlay.videos',\n        withRipple: true\n      });\n\n      section.content.append(gifsCheckboxField.label, videosCheckboxField.label);\n\n      this.scrollable.append(section.container);\n    }\n  }\n\n  private setAutoDownloadSubtitle(row: Row, settings: AutoDownloadPeerTypeSettings, sizeMax?: number) {\n    let key: LangPackKey, args: FormatterArguments = [];\n    \n    const peerKeys = Object.keys(settings) as (keyof typeof AUTO_DOWNLOAD_FOR_KEYS)[];\n    const enabledKeys = peerKeys.map(key => settings[key] ? AUTO_DOWNLOAD_FOR_KEYS[key] : undefined).filter(Boolean);\n    if(!enabledKeys.length || sizeMax === 0) {\n      key = 'AutoDownloadOff';\n    } else {\n      const isAll = enabledKeys.length === peerKeys.length;\n      if(sizeMax !== undefined) {\n        key = isAll ? 'AutoDownloadUpToOnAllChats' : 'AutoDownloadOnUpToFor';\n        args.push(formatBytes(sizeMax));\n      } else {\n        key = isAll ? 'AutoDownloadOnAllChats' : 'AutoDownloadOnFor';\n      }\n  \n      if(!isAll) {\n        const fragment = document.createElement('span');\n        fragment.append(...join(enabledKeys.map(key => i18n(key)), true, false));\n        args.push(fragment);\n      }\n    }\n    \n    replaceContent(row.subtitle, i18n(key, args));\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport apiManager from \"../../../lib/mtproto/mtprotoworker\";\r\nimport ButtonMenuToggle from \"../../buttonMenuToggle\";\r\nimport Button from \"../../button\";\r\nimport AppPrivacyAndSecurityTab from \"./privacyAndSecurity\";\r\nimport AppGeneralSettingsTab from \"./generalSettings\";\r\nimport AppEditProfileTab from \"./editProfile\";\r\nimport AppChatFoldersTab from \"./chatFolders\";\r\nimport AppNotificationsTab from \"./notifications\";\r\nimport AppLanguageTab from \"./language\";\r\nimport lottieLoader from \"../../../lib/rlottie/lottieLoader\";\r\nimport PopupPeer from \"../../popups/peer\";\r\nimport AppDataAndStorageTab from \"./dataAndStorage\";\r\nimport ButtonIcon from \"../../buttonIcon\";\r\nimport PeerProfile from \"../../peerProfile\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport { SettingSection } from \"..\";\r\nimport Row from \"../../row\";\r\nimport AppActiveSessionsTab from \"./activeSessions\";\r\nimport { i18n, LangPackKey } from \"../../../lib/langPack\";\r\nimport { SliderSuperTabConstructable } from \"../../sliderTab\";\r\nimport PopupAvatar from \"../../popups/avatar\";\r\nimport appProfileManager from \"../../../lib/appManagers/appProfileManager\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport { AccountAuthorizations, Authorization } from \"../../../layer\";\r\n//import AppMediaViewer from \"../../appMediaViewerNew\";\r\n\r\nexport default class AppSettingsTab extends SliderSuperTab {\r\n  private buttons: {\r\n    edit: HTMLButtonElement,\r\n    folders: HTMLButtonElement,\r\n    general: HTMLButtonElement,\r\n    notifications: HTMLButtonElement,\r\n    storage: HTMLButtonElement,\r\n    privacy: HTMLButtonElement,\r\n  } = {} as any;\r\n  private profile: PeerProfile;\r\n\r\n  private languageRow: Row;\r\n  private devicesRow: Row;\r\n\r\n  private authorizations: Authorization.authorization[];\r\n  private getAuthorizationsPromise: Promise<AccountAuthorizations.accountAuthorizations>;\r\n\r\n  protected init() {\r\n    this.container.classList.add('settings-container');\r\n    this.setTitle('Settings');\r\n    \r\n    const btnMenu = ButtonMenuToggle({}, 'bottom-left', [{\r\n      icon: 'logout',\r\n      text: 'EditAccount.Logout',\r\n      onClick: () => {\r\n        new PopupPeer('logout', {\r\n          titleLangKey: 'LogOut',\r\n          descriptionLangKey: 'LogOut.Description',\r\n          buttons: [{\r\n            langKey: 'LogOut',\r\n            callback: () => {\r\n              apiManager.logOut();\r\n            },\r\n            isDanger: true\r\n          }]\r\n        }).show();\r\n      }\r\n    }]);\r\n\r\n    this.buttons.edit = ButtonIcon('edit');\r\n\r\n    this.header.append(this.buttons.edit, btnMenu);\r\n\r\n    this.profile = new PeerProfile(this.scrollable, this.listenerSetter, false);\r\n    this.profile.init();\r\n    this.profile.setPeer(rootScope.myId);\r\n    this.profile.fillProfileElements();\r\n\r\n    const changeAvatarBtn = Button('btn-circle btn-corner z-depth-1 profile-change-avatar', {icon: 'cameraadd'});\r\n    changeAvatarBtn.addEventListener('click', () => {\r\n      const canvas = document.createElement('canvas');\r\n      new PopupAvatar().open(canvas, (upload) => {\r\n        upload().then(inputFile => {\r\n          return appProfileManager.uploadProfilePhoto(inputFile);\r\n        });\r\n      });\r\n    });\r\n    this.profile.element.lastElementChild.firstElementChild.append(changeAvatarBtn);\r\n    \r\n    const updateChangeAvatarBtn = () => {\r\n      const user = appUsersManager.getSelf();\r\n      changeAvatarBtn.classList.toggle('hide', user.photo?._ !== 'userProfilePhoto');\r\n    };\r\n    \r\n    updateChangeAvatarBtn();\r\n    this.listenerSetter.add(rootScope)('avatar_update', (peerId) => {\r\n      if(rootScope.myId === peerId) {\r\n        updateChangeAvatarBtn();\r\n      }\r\n    });\r\n\r\n    /* const div = document.createElement('div');\r\n    //div.style.cssText = 'border-radius: 8px; overflow: hidden; width: 396px; height: 264px; flex: 0 0 auto; position: relative; margin: 10rem 0 10rem auto;';\r\n    //div.style.width = '135px';\r\n    //div.style.height = '100px';\r\n    div.style.cssText = 'border-radius: 8px; overflow: hidden; width: 396px; height: 264px; flex: 0 0 auto; position: relative; margin: 10rem auto 10rem 0;';\r\n    div.style.width = '135px';\r\n    div.style.height = '100px';\r\n    \r\n    const img = document.createElement('img');\r\n    img.src = 'assets/img/pepe.jpg';\r\n    img.classList.add('media-photo');\r\n    img.style.cssText = 'max-width: 100%;max-height: 100%;';\r\n\r\n    div.append(img);\r\n\r\n    div.addEventListener('click', () => {\r\n      new AppMediaViewer().setSearchContext({peerId: 61004386, inputFilter: 'inputMessagesFilterPhotos'}).openMedia({\r\n        _: 'message',\r\n        mid: 1,\r\n        peerId: 61004386,\r\n        fromId: 61004386,\r\n        message: '',\r\n        media: {\r\n          _: 'messageMediaPhoto',\r\n          photo: {\r\n            _: 'photo',\r\n            url: img.src,\r\n            downloaded: 111,\r\n            sizes: [{\r\n              _: 'photoSize',\r\n              type: 'x',\r\n              w: 618,\r\n              h: 412\r\n            }]\r\n          }\r\n        },\r\n        date: Date.now() / 1000 | 0\r\n      }, img);\r\n    });\r\n\r\n    this.scrollable.append(div); */\r\n    \r\n    const buttonsDiv = document.createElement('div');\r\n    buttonsDiv.classList.add('profile-buttons');\r\n\r\n    const b: [string, LangPackKey, SliderSuperTabConstructable][] = [\r\n      ['unmute', 'AccountSettings.Notifications', AppNotificationsTab],\r\n      ['data', 'DataSettings', AppDataAndStorageTab],\r\n      ['lock', 'AccountSettings.PrivacyAndSecurity', AppPrivacyAndSecurityTab],\r\n      ['settings', 'Telegram.GeneralSettingsViewController', AppGeneralSettingsTab],\r\n      ['folder', 'AccountSettings.Filters', AppChatFoldersTab],\r\n    ];\r\n\r\n    const rows = b.map(([icon, langPackKey, tabConstructor]) => {\r\n      return new Row({\r\n        titleLangKey: langPackKey,\r\n        icon,\r\n        clickable: () => {\r\n          new tabConstructor(this.slider, true).open();\r\n        }\r\n      });\r\n    });\r\n\r\n    rows.push(\r\n      this.devicesRow = new Row({\r\n        titleLangKey: 'Devices',\r\n        titleRightSecondary: ' ',\r\n        icon: 'activesessions',\r\n        clickable: async() => {\r\n          if(!this.authorizations) {\r\n            await this.updateActiveSessions();\r\n          }\r\n\r\n          const tab = new AppActiveSessionsTab(this.slider);\r\n          tab.authorizations = this.authorizations;\r\n          tab.eventListener.addEventListener('destroy', () => {\r\n            this.authorizations = undefined;\r\n            this.updateActiveSessions(true);\r\n          }, {once: true});\r\n          tab.open();\r\n        }\r\n      }),\r\n\r\n      this.languageRow = new Row({\r\n        titleLangKey: 'AccountSettings.Language',\r\n        titleRightSecondary: i18n('LanguageName'),\r\n        icon: 'language',\r\n        clickable: () => {\r\n          new AppLanguageTab(this.slider).open();\r\n        }\r\n      })\r\n    );\r\n\r\n    buttonsDiv.append(...rows.map(row => row.container));\r\n\r\n    // const profileSection = new SettingSection({fullWidth: true, noPaddingTop: true});\r\n    // profileSection.content.append(this.profile.element);\r\n\r\n    const buttonsSection = new SettingSection();\r\n    buttonsSection.content.append(buttonsDiv);\r\n\r\n    this.scrollable.append(this.profile.element/* profileSection.container */, buttonsSection.container);\r\n\r\n    /* rootScope.$on('user_auth', (e) => {\r\n      this.fillElements();\r\n    }); */\r\n\r\n    this.buttons.edit.addEventListener('click', () => {\r\n      const tab = new AppEditProfileTab(this.slider);\r\n      tab.open();\r\n    });\r\n\r\n    lottieLoader.loadLottieWorkers();\r\n\r\n    this.updateActiveSessions();\r\n  }\r\n\r\n  private getAuthorizations(overwrite?: boolean) {\r\n    if(this.getAuthorizationsPromise && !overwrite) return this.getAuthorizationsPromise;\r\n\r\n    const promise = this.getAuthorizationsPromise = apiManager.invokeApi('account.getAuthorizations')\r\n    .finally(() => {\r\n      if(this.getAuthorizationsPromise === promise) {\r\n        this.getAuthorizationsPromise = undefined;\r\n      }\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  public updateActiveSessions(overwrite?: boolean) {\r\n    return this.getAuthorizations(overwrite).then(auths => {\r\n      this.authorizations = auths.authorizations;\r\n      this.devicesRow.titleRight.textContent = '' + this.authorizations.length;\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appSidebarLeft, { SettingSection } from \"..\";\r\nimport { InputFile } from \"../../../layer\";\r\nimport appChatsManager from \"../../../lib/appManagers/appChatsManager\";\r\nimport InputField from \"../../inputField\";\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport AvatarEdit from \"../../avatarEdit\";\r\nimport AppAddMembersTab from \"./addMembers\";\r\nimport { _i18n } from \"../../../lib/langPack\";\r\nimport ButtonCorner from \"../../buttonCorner\";\r\n\r\nexport default class AppNewChannelTab extends SliderSuperTab {\r\n  private uploadAvatar: () => Promise<InputFile> = null;\r\n\r\n  private channelNameInputField: InputField;\r\n  private channelDescriptionInputField: InputField;\r\n  private nextBtn: HTMLButtonElement;\r\n  private avatarEdit: AvatarEdit;\r\n\r\n  protected init() {\r\n    this.container.classList.add('new-channel-container');\r\n    this.setTitle('NewChannel');\r\n\r\n    this.avatarEdit = new AvatarEdit((_upload) => {\r\n      this.uploadAvatar = _upload;\r\n    });\r\n\r\n    const section = new SettingSection({\r\n      caption: 'Channel.DescriptionHolderDescrpiton'\r\n    });\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    this.channelNameInputField = new InputField({\r\n      label: 'EnterChannelName',\r\n      maxLength: 128\r\n    });\r\n\r\n    this.channelDescriptionInputField = new InputField({\r\n      label: 'DescriptionOptionalPlaceholder',\r\n      maxLength: 255\r\n    });\r\n\r\n    inputWrapper.append(this.channelNameInputField.container, this.channelDescriptionInputField.container);\r\n\r\n    const onLengthChange = () => {\r\n      this.nextBtn.classList.toggle('is-visible', !!this.channelNameInputField.value.length && \r\n        !this.channelNameInputField.input.classList.contains('error') && \r\n        !this.channelDescriptionInputField.input.classList.contains('error'));\r\n    };\r\n\r\n    this.channelNameInputField.input.addEventListener('input', onLengthChange);\r\n    this.channelDescriptionInputField.input.addEventListener('input', onLengthChange);\r\n\r\n    this.nextBtn = ButtonCorner({icon: 'arrow_next'});\r\n\r\n    this.nextBtn.addEventListener('click', () => {\r\n      const title = this.channelNameInputField.value;\r\n      const about = this.channelDescriptionInputField.value;\r\n\r\n      this.nextBtn.disabled = true;\r\n      appChatsManager.createChannel({\r\n        title, \r\n        about,\r\n        broadcast: true\r\n      }).then((channelId) => {\r\n        if(this.uploadAvatar) {\r\n          this.uploadAvatar().then((inputFile) => {\r\n            appChatsManager.editPhoto(channelId, inputFile);\r\n          });\r\n        }\r\n        \r\n        appSidebarLeft.removeTabFromHistory(this);\r\n        new AppAddMembersTab(this.slider).open({\r\n          type: 'channel',\r\n          skippable: true,\r\n          title: 'GroupAddMembers',\r\n          placeholder: 'SendMessageTo',\r\n          takeOut: (peerIds) => {\r\n            return appChatsManager.inviteToChannel(channelId, peerIds);\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    this.content.append(this.nextBtn);\r\n    section.content.append(this.avatarEdit.container, inputWrapper);\r\n    this.scrollable.append(section.container);\r\n  }\r\n\r\n  public onCloseAfterTimeout() {\r\n    this.avatarEdit.clear();\r\n    this.uploadAvatar = null;\r\n    this.channelNameInputField.value = '';\r\n    this.channelDescriptionInputField.value = '';\r\n    this.nextBtn.disabled = false;\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport InputField from \"../inputField\";\nimport PopupElement from \".\";\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\nimport EditPeer from \"../editPeer\";\nimport { _i18n } from \"../../lib/langPack\";\nimport TelInputField from \"../telInputField\";\nimport appUsersManager from \"../../lib/appManagers/appUsersManager\";\nimport { formatPhoneNumber } from \"../../helpers/formatPhoneNumber\";\nimport { toastNew } from \"../toast\";\n\nexport default class PopupCreateContact extends PopupElement {\n  constructor() {\n    super('popup-create-contact popup-send-photo popup-new-media', null, {closable: true, withConfirm: 'Add'});\n\n    _i18n(this.title, 'AddContactTitle');\n\n    attachClickEvent(this.btnConfirm, () => {\n      const promise = appUsersManager.importContact(nameInputField.value, lastNameInputField.value, telInputField.value);\n\n      promise.then(() => {\n        this.hide();\n      }, (err) => {\n        if(err.type === 'NO_USER') {\n          toastNew({langPackKey: 'Contacts.PhoneNumber.NotRegistred'});\n          editPeer.disabled = false;\n        }\n      });\n\n      editPeer.lockWithPromise(promise);\n    }, {listenerSetter: this.listenerSetter});\n\n    const inputFields: InputField[] = [];\n    const div = document.createElement('div');\n    div.classList.add('name-fields');\n    const nameInputField = new InputField({\n      label: 'FirstName',\n      name: 'create-contact-name',\n      maxLength: 70,\n      required: true\n    });\n    const lastNameInputField = new InputField({\n      label: 'LastName',\n      name: 'create-contact-lastname',\n      maxLength: 70\n    });\n    const telInputField = new TelInputField({required: true});\n    inputFields.push(nameInputField, lastNameInputField, telInputField);\n\n    const onInput = () => {\n      const name = nameInputField.value + ' ' + lastNameInputField.value;\n      // const abbr = RichTextProcessor.getAbbreviation(name);\n      editPeer.avatarElem.setAttribute('peer-title', name);\n      editPeer.avatarElem.update();\n    };\n\n    this.listenerSetter.add(nameInputField.input)('input', onInput);\n    this.listenerSetter.add(lastNameInputField.input)('input', onInput);\n\n    telInputField.validate = () => {\n      return !!telInputField.value.match(/\\d/);\n    };\n\n    const user = appUsersManager.getSelf();\n    const formatted = formatPhoneNumber(user.phone);\n    if(formatted.code) {\n      telInputField.value = '+' + formatted.code.country_code;\n    }\n\n    const editPeer = new EditPeer({\n      inputFields,\n      listenerSetter: this.listenerSetter,\n      doNotEditAvatar: true,\n      nextBtn: this.btnConfirm,\n      avatarSize: 100\n    });\n\n    div.append(nameInputField.container, lastNameInputField.container, editPeer.avatarElem);\n    this.container.append(div, telInputField.container);\n\n    this.show();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { SliderSuperTab } from \"../../slider\";\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\nimport InputSearch from \"../../inputSearch\";\nimport { IS_MOBILE } from \"../../../environment/userAgent\";\nimport { canFocus } from \"../../../helpers/dom/canFocus\";\nimport windowSize from \"../../../helpers/windowSize\";\nimport ButtonCorner from \"../../buttonCorner\";\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\nimport PopupCreateContact from \"../../popups/createContact\";\nimport SortedUserList from \"../../sortedUserList\";\nimport { getMiddleware } from \"../../../helpers/middleware\";\nimport replaceContent from \"../../../helpers/dom/replaceContent\";\nimport rootScope from \"../../../lib/rootScope\";\n\n// TODO: поиск по людям глобальный, если не нашло в контактах никого\n\nexport default class AppContactsTab extends SliderSuperTab {\n  private inputSearch: InputSearch;\n  private middleware: ReturnType<typeof getMiddleware>;\n  private sortedUserList: SortedUserList;\n  \n  protected init() {\n    this.container.id = 'contacts-container';\n\n    // this.list = appDialogsManager.createChatList(/* {avatarSize: 48, handheldsSize: 66} */);\n\n    const btnAdd = ButtonCorner({icon: 'add', className: 'is-visible'});\n    this.content.append(btnAdd);\n\n    attachClickEvent(btnAdd, () => {\n      new PopupCreateContact();\n    }, {listenerSetter: this.listenerSetter});\n\n    this.inputSearch = new InputSearch('Search', (value) => {\n      this.openContacts(value);\n    });\n\n    this.listenerSetter.add(rootScope)('contacts_update', (userId) => {\n      const isContact = appUsersManager.isContact(userId);\n      const peerId = userId.toPeerId();\n      if(isContact) this.sortedUserList.add(peerId);\n      else this.sortedUserList.delete(peerId);\n    });\n\n    this.title.replaceWith(this.inputSearch.container);\n\n    this.middleware = getMiddleware();\n\n    // preload contacts\n    // appUsersManager.getContacts();\n  }\n\n  protected createList() {\n    const sortedUserList = new SortedUserList();\n    const list = sortedUserList.list;\n    list.id = 'contacts';\n    list.classList.add('contacts-container');\n    appDialogsManager.setListClickListener(list, () => {\n      this.close();\n    }, undefined, true);\n    return sortedUserList;\n  }\n\n  protected onClose() {\n    this.middleware.clean();\n    /* // need to clear, and left 1 page for smooth slide\n    let pageCount = appPhotosManager.windowH / 72 * 1.25 | 0;\n    (Array.from(this.list.children) as HTMLElement[]).slice(pageCount).forEach(el => el.remove()); */\n  }\n\n  protected onOpenAfterTimeout() {\n    if(IS_MOBILE || !canFocus(true)) return;\n    this.inputSearch.input.focus();\n  }\n\n  public openContacts(query?: string) {\n    if(this.init) {\n      this.init();\n      this.init = null;\n    }\n\n    this.middleware.clean();\n    const middleware = this.middleware.get();\n    this.scrollable.onScrolledBottom = null;\n    this.scrollable.container.textContent = '';\n\n    appUsersManager.getContactsPeerIds(query, undefined, 'online').then(contacts => {\n      if(!middleware()) {\n        return;\n      }\n\n      const sortedUserList = this.sortedUserList = this.createList();\n\n      let renderPage = () => {\n        const pageCount = windowSize.height / 72 * 1.25 | 0;\n        const arr = contacts.splice(0, pageCount); // надо splice!\n\n        arr.forEach((peerId) => {\n          sortedUserList.add(peerId);\n        });\n\n        if(!contacts.length) {\n          renderPage = undefined;\n          this.scrollable.onScrolledBottom = null;\n        }\n      };\n\n      renderPage();\n      this.scrollable.onScrolledBottom = () => {\n        if(renderPage) {\n          renderPage();\n        } else {\n          this.scrollable.onScrolledBottom = null;\n        }\n      };\n\n      replaceContent(this.scrollable.container, sortedUserList.list);\n    });\n  }\n\n  public open() {\n    this.openContacts();\n    return super.open();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\nimport { SliderSuperTab } from \"../../slider\";\n\nexport default class AppArchivedTab extends SliderSuperTab {\n  private static filterId = 1;\n  private wasFilterId: number;\n\n  init() {\n    this.container.id = 'chats-archived-container';\n    this.setTitle('ArchivedChats');\n\n    if(!appDialogsManager.sortedLists[AppArchivedTab.filterId]) {\n      const chatList = appDialogsManager.createChatList();\n      appDialogsManager.generateScrollable(chatList, AppArchivedTab.filterId).container.append(chatList);\n      appDialogsManager.setListClickListener(chatList, null, true);\n      //appDialogsManager.setListClickListener(archivedChatList, null, true); // * to test peer changing\n    }\n\n    const scrollable = appDialogsManager.scrollables[AppArchivedTab.filterId];\n    this.scrollable.container.replaceWith(scrollable.container);\n    this.scrollable = scrollable;\n  }\n\n  onOpen() {\n    if(this.init) {\n      this.init();\n      this.init = null;\n    }\n\n    this.wasFilterId = appDialogsManager.filterId;\n    appDialogsManager.setFilterId(AppArchivedTab.filterId);\n    appDialogsManager.onTabChange();\n  }\n\n  // вообще, так делать нельзя, но нет времени чтобы переделать главный чатлист на слайд...\n  onOpenAfterTimeout() {\n    appDialogsManager.sortedLists[this.wasFilterId].clear();\n  }\n\n  onClose() {\n    appDialogsManager.setFilterId(this.wasFilterId);\n    appDialogsManager.onTabChange();\n  }\n\n  onCloseAfterTimeout() {\n    appDialogsManager.sortedLists[AppArchivedTab.filterId].clear();\n    return super.onCloseAfterTimeout();\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport ButtonCorner from \"../../buttonCorner\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport AppNewGroupTab from \"./newGroup\";\r\nimport { toast } from \"../../toast\";\r\nimport { ButtonMenuItemOptions } from \"../../buttonMenu\";\r\nimport type { LazyLoadQueueIntersector } from \"../../lazyLoadQueue\";\r\nimport { i18n, join, _i18n } from \"../../../lib/langPack\";\r\nimport rootScope from '../../../lib/rootScope';\r\nimport { wrapSticker } from \"../../wrappers\";\r\nimport appStickersManager from \"../../../lib/appManagers/appStickersManager\";\r\nimport SortedUserList from \"../../sortedUserList\";\r\nimport { PeerLocated, Update, Updates } from \"../../../layer\";\r\nimport appPeersManager from \"../../../lib/appManagers/appPeersManager\";\r\nimport { SettingChatListSection } from \"..\";\r\nimport appProfileManager from \"../../../lib/appManagers/appProfileManager\";\r\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport confirmationPopup from \"../../confirmationPopup\";\r\n\r\nexport default class AppPeopleNearbyTab extends SliderSuperTab {\r\n  private latestLocationSaved: {latitude: number, longitude: number, accuracy: number};\r\n  private isLocationWatched: boolean = false;\r\n  private errorCategory: HTMLElement;\r\n  private retryBtn: HTMLButtonElement;\r\n  private btnOptions: HTMLButtonElement;\r\n  private menuButtons: (ButtonMenuItemOptions & {verify?: () => boolean})[];\r\n\r\n  protected lazyLoadQueue: LazyLoadQueueIntersector;\r\n  protected peopleSection: SettingChatListSection;\r\n  protected chatsSection: SettingChatListSection;\r\n\r\n  protected locatedPeers: Map<PeerId, PeerLocated.peerLocated>;\r\n\r\n  protected init() {\r\n    this.container.classList.add('people-nearby-container');\r\n    this.setTitle('PeopleNearby');\r\n\r\n    this.errorCategory = document.createElement('div');\r\n    this.errorCategory.classList.add('text', 'hide', 'nearby-error');\r\n\r\n    this.retryBtn = ButtonCorner({icon: 'check'});\r\n\r\n    const emoji = '🧭';\r\n    const doc = appStickersManager.getAnimatedEmojiSticker(emoji);\r\n    const stickerContainer = document.createElement('div');\r\n    stickerContainer.classList.add('sticker-container');\r\n\r\n    if(doc) {\r\n      wrapSticker({\r\n        doc,\r\n        div: stickerContainer,\r\n        loop: false,\r\n        play: true,\r\n        width: 86,\r\n        height: 86,\r\n        emoji,\r\n        needUpscale: true\r\n      }).then(() => {\r\n        // this.animation = player;\r\n      });\r\n    } else {\r\n      stickerContainer.classList.add('media-sticker-wrapper');\r\n    }\r\n\r\n    const caption = document.createElement('div');\r\n    caption.classList.add('caption');\r\n    _i18n(caption, 'PeopleNearbyInfo2');\r\n\r\n    this.locatedPeers = new Map();\r\n\r\n    const m = () => {\r\n      const sortedUserList = new SortedUserList({\r\n        avatarSize: 42, \r\n        createChatListOptions: {\r\n          dialogSize: 48,\r\n          new: true\r\n        },\r\n        autonomous: false,\r\n        onUpdate: (element) => {\r\n          const peer = this.locatedPeers.get(element.id);\r\n          const elements: HTMLElement[] = [\r\n            this.parseDistance(peer.distance)\r\n          ];\r\n\r\n          if(!element.id.isUser()) {\r\n            elements.push(appProfileManager.getChatMembersString(element.id.toChatId()));\r\n          }\r\n\r\n          element.dom.lastMessageSpan.textContent = '';\r\n          element.dom.lastMessageSpan.append(...join(elements, false));\r\n        },\r\n        getIndex: (element) => {\r\n          const peer = this.locatedPeers.get(element.id);\r\n          return 0x7FFFFFFF - peer.distance;\r\n        }\r\n      });\r\n\r\n      appDialogsManager.setListClickListener(sortedUserList.list, undefined, undefined, false);\r\n      \r\n      return sortedUserList;\r\n    };\r\n    \r\n    const peopleSection = this.peopleSection = new SettingChatListSection({\r\n      name: 'PeopleNearbyHeader',\r\n      sortedList: m()\r\n    });\r\n\r\n    const chatsSection = this.chatsSection = new SettingChatListSection({\r\n      name: 'ChatsNearbyHeader',\r\n      sortedList: m()\r\n    });\r\n\r\n    const btnMakeVisible = peopleSection.makeButton({\r\n      text: 'MakeMyselfVisible',\r\n      icon: 'location'\r\n    });\r\n\r\n    const btnMakeInvisible = peopleSection.makeButton({\r\n      text: 'StopShowingMe',\r\n      icon: 'location'\r\n    });\r\n\r\n    const btnCreateGroup = chatsSection.makeButton({\r\n      text: 'NearbyCreateGroup',\r\n      icon: 'newgroup'\r\n    });\r\n\r\n    attachClickEvent(btnMakeVisible, () => {\r\n      confirmationPopup({\r\n        titleLangKey: 'MakeMyselfVisibleTitle',\r\n        descriptionLangKey: 'MakeMyselfVisibleInfo',\r\n        button: {\r\n          langKey: 'OK'\r\n        }\r\n      }).then(() => {\r\n        this.startWatching();\r\n      });\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    attachClickEvent(btnMakeInvisible, () => {\r\n      this.stopWatching();\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    attachClickEvent(btnCreateGroup, () => {\r\n      new AppNewGroupTab(this.slider).open([], true);\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    btnMakeVisible.classList.add('primary');\r\n    btnMakeInvisible.classList.add('danger');\r\n    btnCreateGroup.classList.add('primary');\r\n\r\n    this.content.append(this.retryBtn);\r\n    this.scrollable.append(\r\n      stickerContainer,\r\n      caption,\r\n      peopleSection.container,\r\n      chatsSection.container,\r\n      this.errorCategory\r\n    );\r\n  }\r\n\r\n  private parseDistance(distance: number) {\r\n    if(rootScope.settings.distanceUnit === 'miles') {\r\n      if(distance > 1609.34) {\r\n        return i18n('MilesAway', [Math.round(distance / 1609)]);\r\n      } else {\r\n        return i18n('FootsAway', [Math.round(distance * 3.281)]);\r\n      }\r\n    } else {\r\n      if(distance >= 1000) {\r\n        return i18n('KMetersAway2', [distance / 1000]);\r\n      } else {\r\n        return i18n('MetersAway2', [distance]);\r\n      }\r\n    }\r\n  }\r\n\r\n  public open() {\r\n    const result = super.open();\r\n    result.then(() => {\r\n      this.retryBtn.classList.remove('is-visible');\r\n      navigator.geolocation.getCurrentPosition((location) => {\r\n        this.latestLocationSaved = {\r\n          latitude: location.coords.latitude,\r\n          longitude: location.coords.longitude,\r\n          accuracy: location.coords.accuracy\r\n        };\r\n\r\n        console.log(this.latestLocationSaved);\r\n\r\n        appUsersManager.getLocated(\r\n          location.coords.latitude,\r\n          location.coords.longitude,\r\n          location.coords.accuracy\r\n        ).then((response) => {\r\n          const update = (response as Updates.updates).updates[0] as Update.updatePeerLocated;\r\n          const peers = update.peers as PeerLocated.peerLocated[];\r\n          const orderedPeers = peers.sort((a, b) => a.distance - b.distance);\r\n          const groupsCounter = peers.filter((e) => e.peer._ == 'peerChannel').length;\r\n          const usersCounter = peers.filter((e) => e.peer._ != 'peerChannel').length;\r\n          orderedPeers?.forEach(peer => {\r\n            const peerId = appPeersManager.getPeerId(peer.peer);\r\n            const section = peerId.isUser() ? this.peopleSection : this.chatsSection;\r\n            this.locatedPeers.set(peerId, peer);\r\n            section.sortedList.add(peerId);\r\n          });\r\n\r\n          this.errorCategory.classList.toggle('hide', !!(usersCounter || groupsCounter));\r\n          this.errorCategory.innerHTML = \"No groups or channels found around you.\";\r\n        });\r\n      }, (error) => {\r\n        this.errorCategory.classList.remove('hide');\r\n        this.retryBtn.classList.add('is-visible');\r\n        this.retryBtn.addEventListener('click', this.open);\r\n        if(error instanceof GeolocationPositionError) {\r\n          this.errorCategory.innerHTML = \"Location permission denied. Click below to retry.\";\r\n        } else {\r\n          this.errorCategory.innerHTML = \"An error has occurred. Please retry later clicking the button below.\";\r\n        }\r\n      });\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  private startWatching() {\r\n    if(!this.latestLocationSaved || this.isLocationWatched) return;\r\n    this.isLocationWatched = true;\r\n\r\n    toast('Your position is now being shared. Do not close the page or it will be suspended.');\r\n\r\n    appUsersManager.getLocated(\r\n      this.latestLocationSaved.latitude,\r\n      this.latestLocationSaved.longitude,\r\n      this.latestLocationSaved.accuracy,\r\n      true, // background parameter\r\n      0x7fffffff // self_expires parameter\r\n    );\r\n\r\n    navigator.geolocation.watchPosition((result) => {\r\n      const isLongitudeDifferent = result.coords.longitude !== this.latestLocationSaved.longitude;\r\n      const isLatitudeDifferent = result.coords.latitude !== this.latestLocationSaved.latitude;\r\n      const distanceCheck = this.calculateDistance(\r\n        result.coords.latitude, result.coords.longitude,\r\n        this.latestLocationSaved.latitude, this.latestLocationSaved.longitude\r\n      ) > 100;\r\n\r\n      if((isLatitudeDifferent || isLongitudeDifferent) && distanceCheck) {\r\n        appUsersManager.getLocated(\r\n          result.coords.latitude,\r\n          result.coords.longitude,\r\n          result.coords.accuracy,\r\n          true, // background parameter\r\n          0x7fffffff // self_expires parameter\r\n        );\r\n        this.latestLocationSaved = {\r\n          latitude: result.coords.latitude,\r\n          longitude: result.coords.longitude,\r\n          accuracy: result.coords.accuracy\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private stopWatching() {\r\n    if(!this.isLocationWatched) return;\r\n    this.isLocationWatched = false;\r\n    toast('The sharing of your position has been stopped. You will no longer be visible to other users.');\r\n    appUsersManager.getLocated(\r\n      0, // latitude parameter\r\n      0, // longitude parameter\r\n      0, // accuracy parameter\r\n      false, // background parameter\r\n      0 // self_expires parameter\r\n    );\r\n  }\r\n\r\n  private calculateDistance(lat1: number, long1: number, lat2: number, long2: number) {\r\n    const p = 0.017453292519943295; // Math.PI/180\r\n    return (\r\n      12742 * Math.asin(\r\n        Math.sqrt(\r\n          (0.5 - Math.cos((lat2 - lat1) * p)) +\r\n          (\r\n            Math.cos(lat1 * p) * Math.cos(lat2 * p)\r\n            * (1 - Math.cos((long2 - long1) * p)/2)\r\n          )\r\n        )\r\n      )\r\n    );\r\n  }\r\n}\r\n","export default function formatNumber(bytes: number, decimals = 2) {\n  if(bytes === 0) return '0';\n\n  const k = 1000;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['', 'K', 'M', 'B', 'T'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + sizes[i];\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appImManager from \"../../lib/appManagers/appImManager\";\nimport appStateManager from \"../../lib/appManagers/appStateManager\";\nimport appUsersManager from \"../../lib/appManagers/appUsersManager\";\nimport rootScope from \"../../lib/rootScope\";\nimport { SearchGroup } from \"../appSearch\";\nimport \"../avatar\";\nimport Scrollable, { ScrollableX } from \"../scrollable\";\nimport InputSearch from \"../inputSearch\";\nimport SidebarSlider from \"../slider\";\nimport { TransitionSlider } from \"../transition\";\nimport AppNewGroupTab from \"./tabs/newGroup\";\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\nimport AppSearchSuper from \"../appSearchSuper.\";\nimport { DateData, fillTipDates } from \"../../helpers/date\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport AppSettingsTab from \"./tabs/settings\";\nimport AppNewChannelTab from \"./tabs/newChannel\";\nimport AppContactsTab from \"./tabs/contacts\";\nimport AppArchivedTab from \"./tabs/archivedTab\";\nimport AppAddMembersTab from \"./tabs/addMembers\";\nimport { FormatterArguments, i18n, i18n_, LangPackKey } from \"../../lib/langPack\";\nimport AppPeopleNearbyTab from \"./tabs/peopleNearby\";\nimport { ButtonMenuItemOptions } from \"../buttonMenu\";\nimport CheckboxField from \"../checkboxField\";\nimport { IS_MOBILE_SAFARI } from \"../../environment/userAgent\";\nimport appNavigationController from \"../appNavigationController\";\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\nimport findUpTag from \"../../helpers/dom/findUpTag\";\nimport PeerTitle from \"../peerTitle\";\nimport App from \"../../config/app\";\nimport ButtonMenuToggle from \"../buttonMenuToggle\";\nimport replaceContent from \"../../helpers/dom/replaceContent\";\nimport sessionStorage from \"../../lib/sessionStorage\";\nimport { attachClickEvent, CLICK_EVENT_NAME } from \"../../helpers/dom/clickEvent\";\nimport { closeBtnMenu } from \"../misc\";\nimport ButtonIcon from \"../buttonIcon\";\nimport confirmationPopup from \"../confirmationPopup\";\nimport IS_GEOLOCATION_SUPPORTED from \"../../environment/geolocationSupport\";\nimport type SortedUserList from \"../sortedUserList\";\nimport Button, { ButtonOptions } from \"../button\";\nimport noop from \"../../helpers/noop\";\nimport { ripple } from \"../ripple\";\nimport indexOfAndSplice from \"../../helpers/array/indexOfAndSplice\";\nimport formatNumber from \"../../helpers/number/formatNumber\";\n\nexport const LEFT_COLUMN_ACTIVE_CLASSNAME = 'is-left-column-shown';\n\nexport class AppSidebarLeft extends SidebarSlider {\n  private toolsBtn: HTMLElement;\n  private backBtn: HTMLButtonElement;\n  //private searchInput = document.getElementById('global-search') as HTMLInputElement;\n  private inputSearch: InputSearch;\n  \n  public archivedCount: HTMLSpanElement;\n\n  private newBtnMenu: HTMLElement;\n\n  //private log = logger('SL');\n\n  private searchGroups: {[k in 'contacts' | 'globalContacts' | 'messages' | 'people' | 'recent']: SearchGroup} = {} as any;\n  private searchSuper: AppSearchSuper;\n\n  private updateBtn: HTMLElement;\n  private hasUpdate: boolean;\n\n  constructor() {\n    super({\n      sidebarEl: document.getElementById('column-left') as HTMLDivElement,\n      navigationType: 'left'\n    });\n\n    //this._selectTab(0); // make first tab as default\n\n    this.inputSearch = new InputSearch('Search');\n    const sidebarHeader = this.sidebarEl.querySelector('.item-main .sidebar-header');\n    sidebarHeader.append(this.inputSearch.container);\n\n    const onNewGroupClick = () => {\n      new AppAddMembersTab(this).open({\n        type: 'chat',\n        skippable: false,\n        takeOut: (peerIds) => {\n          new AppNewGroupTab(this).open(peerIds);\n        },\n        title: 'GroupAddMembers',\n        placeholder: 'SendMessageTo'\n      });\n    };\n\n    const onContactsClick = () => {\n      new AppContactsTab(this).open();\n    };\n\n    //this.toolsBtn = this.sidebarEl.querySelector('.sidebar-tools-button') as HTMLButtonElement;\n    this.backBtn = this.sidebarEl.querySelector('.sidebar-back-button') as HTMLButtonElement;\n\n    const btnArchive: ButtonMenuItemOptions & {verify?: () => boolean} = {\n      icon: 'archive',\n      text: 'ArchivedChats',\n      onClick: () => {\n        new AppArchivedTab(this).open();\n      },\n      verify: () => {\n        const folder = appMessagesManager.dialogsStorage.getFolderDialogs(1, false);\n        return !!folder.length || !appMessagesManager.dialogsStorage.isDialogsLoaded(1);\n      }\n    };\n\n    const themeCheckboxField = new CheckboxField({\n      toggle: true,\n      checked: rootScope.getTheme().name === 'night'\n    });\n    themeCheckboxField.input.addEventListener('change', () => {\n      rootScope.settings.theme = themeCheckboxField.input.checked ? 'night' : 'day';\n      appStateManager.pushToState('settings', rootScope.settings);\n      rootScope.dispatchEvent('theme_change');\n    });\n\n    rootScope.addEventListener('theme_change', () => {\n      themeCheckboxField.setValueSilently(rootScope.getTheme().name === 'night');\n    });\n\n    const menuButtons: (ButtonMenuItemOptions & {verify?: () => boolean})[] = [{\n      icon: 'saved',\n      text: 'SavedMessages',\n      onClick: () => {\n        setTimeout(() => { // menu doesn't close if no timeout (lol)\n          appImManager.setPeer({\n            peerId: appImManager.myId\n          });\n        }, 0);\n      }\n    }, btnArchive, {\n      icon: 'user',\n      text: 'Contacts',\n      onClick: onContactsClick\n    }, IS_GEOLOCATION_SUPPORTED ? {\n      icon: 'group',\n      text: 'PeopleNearby',\n      onClick: () => {\n        new AppPeopleNearbyTab(this).open();\n      }\n    } : undefined, {\n      icon: 'settings',\n      text: 'Settings',\n      onClick: () => {\n        new AppSettingsTab(this).open();\n      }\n    }, {\n      icon: 'darkmode',\n      text: 'DarkMode',\n      onClick: () => {\n        \n      },\n      checkboxField: themeCheckboxField\n    }, {\n      icon: 'animations',\n      text: 'Animations',\n      onClick: () => {\n        \n      },\n      checkboxField: new CheckboxField({\n        toggle: true, \n        checked: true,\n        stateKey: 'settings.animationsEnabled',\n      })\n    }, {\n      icon: 'help',\n      text: 'TelegramFeatures',\n      onClick: () => {\n        appImManager.openUsername({\n          userName: 'TelegramTips'\n        });\n      }\n    }, {\n      icon: 'bug',\n      text: 'ReportBug',\n      onClick: () => {\n        const a = document.createElement('a');\n        a.target = '_blank';\n        a.href = 'https://bugs.telegram.org/?tag_ids=40&sort=time';\n        document.body.append(a);\n        a.click();\n        setTimeout(() => {\n          a.remove();\n        }, 0);\n      }\n    }, {\n      icon: 'char z',\n      text: 'ChatList.Menu.SwitchTo.Z',\n      onClick: () => {\n        Promise.all([\n          sessionStorage.set({kz_version: 'Z'}),\n          sessionStorage.delete('tgme_sync')\n        ]).then(() => {\n          location.href = 'https://web.telegram.org/z/';\n        });\n      },\n      verify: () => App.isMainDomain\n    }, {\n      icon: 'char w',\n      text: 'ChatList.Menu.SwitchTo.Webogram',\n      onClick: () => {\n        sessionStorage.delete('tgme_sync').then(() => {\n          location.href = 'https://web.telegram.org/?legacy=1';\n        });\n      },\n      verify: () => App.isMainDomain\n    }];\n\n    const filteredButtons = menuButtons.filter(Boolean);\n\n    this.toolsBtn = ButtonMenuToggle({}, 'bottom-right', filteredButtons, (e) => {\n      filteredButtons.forEach(button => {\n        if(button.verify) {\n          button.element.classList.toggle('hide', !button.verify());\n        }\n      });\n    });\n    this.toolsBtn.classList.remove('tgico-more');\n    this.toolsBtn.classList.add('sidebar-tools-button', 'is-visible');\n\n    this.backBtn.parentElement.insertBefore(this.toolsBtn, this.backBtn);\n\n    const btnMenu = this.toolsBtn.querySelector('.btn-menu') as HTMLElement;\n\n    const btnMenuFooter = document.createElement('a');\n    btnMenuFooter.href = 'https://github.com/morethanwords/tweb/blob/master/CHANGELOG.md';\n    btnMenuFooter.target = '_blank';\n    btnMenuFooter.rel = 'noopener noreferrer';\n    btnMenuFooter.classList.add('btn-menu-footer');\n    btnMenuFooter.addEventListener(CLICK_EVENT_NAME, (e) => {\n      e.stopPropagation();\n      closeBtnMenu();\n    });\n    const t = document.createElement('span');\n    t.classList.add('btn-menu-footer-text');\n    t.innerHTML = 'Telegram Web' + App.suffix + ' '/* ' alpha ' */ + App.versionFull;\n    btnMenuFooter.append(t); \n    btnMenu.classList.add('has-footer');\n    btnMenu.append(btnMenuFooter);\n\n    this.newBtnMenu = ButtonMenuToggle({}, 'top-left', [{\n      icon: 'newchannel',\n      text: 'NewChannel',\n      onClick: () => {\n        new AppNewChannelTab(this).open();\n      }\n    }, {\n      icon: 'newgroup',\n      text: 'NewGroup',\n      onClick: onNewGroupClick\n    }, {\n      icon: 'newprivate',\n      text: 'NewPrivateChat',\n      onClick: onContactsClick\n    }]);\n    this.newBtnMenu.className = 'btn-circle rp btn-corner z-depth-1 btn-menu-toggle animated-button-icon';\n    this.newBtnMenu.insertAdjacentHTML('afterbegin', `\n    <span class=\"tgico tgico-newchat_filled\"></span>\n    <span class=\"tgico tgico-close\"></span>\n    `);\n    this.newBtnMenu.id = 'new-menu';\n    sidebarHeader.nextElementSibling.append(this.newBtnMenu);\n\n    this.updateBtn = document.createElement('div');\n    // this.updateBtn.classList.add('btn-update');\n    this.updateBtn.className = 'btn-circle rp btn-corner z-depth-1 btn-update is-hidden';\n    ripple(this.updateBtn);\n    this.updateBtn.append(i18n('Update'));\n    // const weave = new TopbarWeave();\n    // const weaveContainer = weave.render('btn-update-weave');\n    // this.updateBtn.prepend(weaveContainer);\n\n    attachClickEvent(this.updateBtn, () => {\n      location.reload();\n    });\n    \n    sidebarHeader.nextElementSibling.append(this.updateBtn);\n\n    // setTimeout(() => {\n    //   weave.componentDidMount();\n    //   weave.setCurrentState(GROUP_CALL_STATE.MUTED, true);\n    //   weave.setAmplitude(0);\n    //   weave.handleBlur();\n    // }, 1e3);\n\n    this.inputSearch.input.addEventListener('focus', () => this.initSearch(), {once: true});\n\n    //parseMenuButtonsTo(this.newButtons, this.newBtnMenu.firstElementChild.children);\n\n    this.archivedCount = document.createElement('span');\n    this.archivedCount.className = 'archived-count badge badge-24 badge-gray';\n\n    btnArchive.element.append(this.archivedCount);\n\n    rootScope.addEventListener('folder_unread', (folder) => {\n      if(folder.id === 1) {\n        // const count = folder.unreadMessagesCount;\n        const count = folder.unreadDialogsCount;\n        this.archivedCount.innerText = '' + formatNumber(count, 1);\n        this.archivedCount.classList.toggle('hide', !count);\n      }\n    });\n\n    appUsersManager.getTopPeers('correspondents');\n\n    appStateManager.getState().then(state => {\n      const recentSearch = state.recentSearch || [];\n      for(let i = 0, length = recentSearch.length; i < length; ++i) {\n        appStateManager.requestPeer(recentSearch[i], 'recentSearch');\n      }\n\n      const CHECK_UPDATE_INTERVAL = 1800e3;\n      const checkUpdateInterval = setInterval(() => {\n        fetch('version', {cache: 'no-cache'})\n        .then(res => (res.status === 200 && res.ok && res.text()) || Promise.reject())\n        .then(text => {\n          if(text !== App.versionFull) {\n            this.hasUpdate = true;\n            clearInterval(checkUpdateInterval);\n\n            if(!this.newBtnMenu.classList.contains('is-hidden')) {\n              this.updateBtn.classList.remove('is-hidden');\n            }\n          }\n        })\n        .catch(noop);\n      }, CHECK_UPDATE_INTERVAL);\n    });\n  }\n\n  private initSearch() {\n    const searchContainer = this.sidebarEl.querySelector('#search-container') as HTMLDivElement;\n\n    const scrollable = new Scrollable(searchContainer);\n\n    const close = () => {\n      //setTimeout(() => {\n        this.backBtn.click();\n      //}, 0);\n    };\n\n    this.searchGroups = {\n      contacts: new SearchGroup('SearchAllChatsShort', 'contacts', undefined, undefined, undefined, undefined, close),\n      globalContacts: new SearchGroup('GlobalSearch', 'contacts', undefined, undefined, undefined, undefined, close),\n      messages: new SearchGroup('SearchMessages', 'messages'),\n      people: new SearchGroup(false, 'contacts', true, 'search-group-people', true, false, close),\n      recent: new SearchGroup('Recent', 'contacts', true, 'search-group-recent', true, true, close)\n    };\n\n    const searchSuper = this.searchSuper = new AppSearchSuper({\n      mediaTabs: [{\n        inputFilter: 'inputMessagesFilterEmpty',\n        name: 'FilterChats',\n        type: 'chats'\n      }, {\n        inputFilter: 'inputMessagesFilterPhotoVideo',\n        name: 'SharedMediaTab2',\n        type: 'media'\n      }, {\n        inputFilter: 'inputMessagesFilterUrl',\n        name: 'SharedLinksTab2',\n        type: 'links'\n      }, {\n        inputFilter: 'inputMessagesFilterDocument',\n        name: 'SharedFilesTab2',\n        type: 'files'\n      }, {\n        inputFilter: 'inputMessagesFilterMusic',\n        name: 'SharedMusicTab2',\n        type: 'music'\n      }, {\n        inputFilter: 'inputMessagesFilterRoundVoice',\n        name: 'SharedVoiceTab2',\n        type: 'voice'\n      }], \n      scrollable, \n      searchGroups: this.searchGroups, \n      asChatList: true,\n      hideEmptyTabs: false,\n      showSender: true\n    });\n\n    searchContainer.prepend(searchSuper.nav.parentElement.parentElement);\n    scrollable.container.append(searchSuper.container);\n\n    const resetSearch = () => {\n      searchSuper.setQuery({\n        peerId: ''.toPeerId(), \n        folderId: 0\n      });\n      searchSuper.selectTab(0);\n      searchSuper.load(true); \n    };\n\n    resetSearch();\n\n    let pickedElements: HTMLElement[] = [];\n    let selectedPeerId: PeerId = ''.toPeerId();\n    let selectedMinDate = 0;\n    let selectedMaxDate = 0;\n    const updatePicked = () => {\n      //(this.inputSearch.input as HTMLInputElement).placeholder = pickedElements.length ? 'Search' : 'Telegram Search';\n      this.inputSearch.container.classList.toggle('is-picked-twice', pickedElements.length === 2);\n      this.inputSearch.container.classList.toggle('is-picked', !!pickedElements.length);\n\n      if(pickedElements.length) {\n        this.inputSearch.input.style.setProperty('--paddingLeft', (pickedElements[pickedElements.length - 1].getBoundingClientRect().right - this.inputSearch.input.getBoundingClientRect().left) + 'px');\n      } else {\n        this.inputSearch.input.style.removeProperty('--paddingLeft');\n      }\n    };\n\n    const helper = document.createElement('div');\n    helper.classList.add('search-helper');\n    helper.addEventListener('click', (e) => {\n      const target = findUpClassName(e.target, 'selector-user');\n      if(!target) {\n        return;\n      }\n\n      const key = target.dataset.key;\n      if(key.indexOf('date_') === 0) {\n        const [_, minDate, maxDate] = key.split('_');\n        selectedMinDate = +minDate;\n        selectedMaxDate = +maxDate;\n      } else {\n        selectedPeerId = key.toPeerId();\n      }\n\n      target.addEventListener('click', () => {\n        unselectEntity(target);\n      });\n\n      this.inputSearch.container.append(target);\n      this.inputSearch.onChange(this.inputSearch.value = '');\n      pickedElements.push(target);\n      updatePicked();\n    });\n\n    searchSuper.nav.parentElement.append(helper);\n\n    const renderEntity = (key: PeerId | string, title?: string | HTMLElement) => {\n      const div = document.createElement('div');\n      div.classList.add('selector-user'/* , 'scale-in' */);\n\n      const avatarEl = document.createElement('avatar-element');\n      avatarEl.classList.add('selector-user-avatar', 'tgico');\n      avatarEl.setAttribute('dialog', '1');\n      avatarEl.classList.add('avatar-30');\n\n      div.dataset.key = '' + key;\n      if(key.isPeerId()) {\n        if(title === undefined) {\n          title = new PeerTitle({peerId: key.toPeerId()}).element;\n        }\n\n        avatarEl.setAttribute('peer', '' + key);\n      } else {\n        avatarEl.classList.add('tgico-calendarfilter');\n      }\n\n      if(title) {\n        if(typeof(title) === 'string') {\n          div.innerHTML = title;\n        } else {\n          replaceContent(div, title);\n          div.append(title);\n        }\n      }\n\n      div.insertAdjacentElement('afterbegin', avatarEl);\n\n      return div;\n    };\n\n    const unselectEntity = (target: HTMLElement) => {\n      const key = target.dataset.key;\n      if(key.indexOf('date_') === 0) {\n        selectedMinDate = selectedMaxDate = 0;\n      } else {\n        selectedPeerId = ''.toPeerId();\n      }\n      \n      target.remove();\n      indexOfAndSplice(pickedElements, target);\n\n      setTimeout(() => {\n        updatePicked();\n        this.inputSearch.onChange(this.inputSearch.value);\n      }, 0);\n    };\n\n    this.inputSearch.onClear = () => {\n      pickedElements.forEach(el => {\n        unselectEntity(el);\n      });\n    };\n\n    this.inputSearch.onChange = (value) => {\n      searchSuper.cleanupHTML();\n      searchSuper.setQuery({\n        peerId: selectedPeerId, \n        folderId: selectedPeerId ? undefined : 0,\n        query: value,\n        minDate: selectedMinDate,\n        maxDate: selectedMaxDate\n      });\n      searchSuper.load(true);\n\n      helper.innerHTML = '';\n      searchSuper.nav.classList.remove('hide');\n      if(!value) {\n      }\n      \n      if(!selectedPeerId && value.trim()) {\n        const middleware = searchSuper.middleware.get();\n        Promise.all([\n          // appMessagesManager.getConversationsAll(value).then(dialogs => dialogs.map(d => d.peerId)),\n          appMessagesManager.getConversations(value).promise.then(({dialogs}) => dialogs.map(d => d.peerId)),\n          appUsersManager.getContactsPeerIds(value, true)\n        ]).then(results => {\n          if(!middleware()) return;\n          const peerIds = new Set(results[0].concat(results[1]));\n  \n          peerIds.forEach(peerId => {\n            helper.append(renderEntity(peerId));\n          });\n  \n          searchSuper.nav.classList.toggle('hide', !!helper.innerHTML);\n          //console.log('got peerIds by value:', value, [...peerIds]);\n        });\n      }\n      \n      if(!selectedMinDate && value.trim()) {\n        const dates: DateData[] = [];\n        fillTipDates(value, dates);\n        dates.forEach(dateData => {\n          helper.append(renderEntity('date_' + dateData.minDate + '_' + dateData.maxDate, dateData.title));\n        });\n\n        searchSuper.nav.classList.toggle('hide', !!helper.innerHTML);\n      }\n    };\n\n    searchSuper.tabs.inputMessagesFilterEmpty.addEventListener('mousedown', (e) => {\n      const target = findUpTag(e.target, 'LI') as HTMLElement;\n      if(!target) {\n        return;\n      }\n\n      const searchGroup = findUpClassName(target, 'search-group');\n      if(!searchGroup || searchGroup.classList.contains('search-group-recent') || searchGroup.classList.contains('search-group-people')) {\n        return;\n      }\n\n      const peerId = target.getAttribute('data-peer-id').toPeerId();\n      appStateManager.getState().then(state => {\n        const recentSearch = state.recentSearch || [];\n        if(recentSearch[0] !== peerId) {\n          indexOfAndSplice(recentSearch, peerId);\n          recentSearch.unshift(peerId);\n          if(recentSearch.length > 20) {\n            recentSearch.length = 20;\n          }\n  \n          appStateManager.pushToState('recentSearch', recentSearch);\n          for(const peerId of recentSearch) {\n            appStateManager.requestPeer(peerId, 'recentSearch');\n          }\n        }\n      });\n    }, {capture: true});\n\n    let peopleContainer = document.createElement('div');\n    peopleContainer.classList.add('search-group-scrollable');\n    peopleContainer.append(this.searchGroups.people.list);\n    this.searchGroups.people.container.append(peopleContainer);\n    let peopleScrollable = new ScrollableX(peopleContainer);\n\n    let first = true;\n    let hideNewBtnMenuTimeout: number;\n    //const transition = Transition.bind(null, searchContainer.parentElement, 150);\n    const transition = TransitionSlider(searchContainer.parentElement, 'zoom-fade', 150, (id) => {\n      if(hideNewBtnMenuTimeout) clearTimeout(hideNewBtnMenuTimeout);\n\n      if(id === 0 && !first) {\n        searchSuper.selectTab(0, false);\n        this.inputSearch.onClearClick();\n        hideNewBtnMenuTimeout = window.setTimeout(() => {\n          hideNewBtnMenuTimeout = 0;\n          this.newBtnMenu.classList.remove('is-hidden');\n          this.hasUpdate && this.updateBtn.classList.remove('is-hidden');\n        }, 150);\n      }\n\n      first = false;\n    });\n\n    transition(0);\n\n    const activeClassName = 'is-visible';\n    const onFocus = () => {\n      this.toolsBtn.classList.remove(activeClassName);\n      this.backBtn.classList.add(activeClassName);\n      this.newBtnMenu.classList.add('is-hidden');\n      this.updateBtn.classList.add('is-hidden');\n      this.toolsBtn.parentElement.firstElementChild.classList.toggle('state-back', true);\n\n      if(!IS_MOBILE_SAFARI && !appNavigationController.findItemByType('global-search')) {\n        appNavigationController.pushItem({\n          onPop: () => {\n            close();\n          },\n          type: 'global-search'\n        });\n      }\n\n      transition(1);\n    };\n\n    this.inputSearch.input.addEventListener('focus', onFocus);\n    onFocus();\n\n    this.backBtn.addEventListener('click', (e) => {\n      this.toolsBtn.classList.add(activeClassName);\n      this.backBtn.classList.remove(activeClassName);\n      this.toolsBtn.parentElement.firstElementChild.classList.toggle('state-back', false);\n\n      appNavigationController.removeByType('global-search');\n\n      transition(0);\n    });\n\n    const clearRecentSearchBtn = ButtonIcon('close');\n    this.searchGroups.recent.nameEl.append(clearRecentSearchBtn);\n    clearRecentSearchBtn.addEventListener('click', () => {\n      confirmationPopup({\n        descriptionLangKey: 'Search.Confirm.ClearHistory',\n        button: {\n          langKey: 'ClearButton',\n          isDanger: true\n        }\n      }).then(() => {\n        appStateManager.getState().then(state => {\n          this.searchGroups.recent.clear();\n          \n          const recentSearch = state.recentSearch || [];\n          for(const peerId of recentSearch) {\n            appStateManager.releaseSinglePeer(peerId, 'recentSearch');\n          }\n\n          recentSearch.length = 0;\n          appStateManager.pushToState('recentSearch', recentSearch);\n        });\n      });\n    });\n  }\n}\n\nexport type SettingSectionOptions = {\n  name?: LangPackKey, \n  nameArgs?: FormatterArguments,\n  caption?: LangPackKey | true,\n  noDelimiter?: boolean,\n  fakeGradientDelimiter?: boolean,\n  noShadow?: boolean,\n  // fullWidth?: boolean,\n  // noPaddingTop?: boolean\n};\n\nconst className = 'sidebar-left-section';\nexport class SettingSection {\n  public container: HTMLElement;\n  public innerContainer: HTMLElement;\n  public content: HTMLElement;\n  public title: HTMLElement;\n  public caption: HTMLElement;\n\n  private fullWidth: boolean;\n\n  constructor(options: SettingSectionOptions = {}) {\n    const container = this.container = document.createElement('div');\n    container.classList.add(className + '-container');\n\n    const innerContainer = this.innerContainer = document.createElement('div');\n    innerContainer.classList.add(className);\n\n    if(options.noShadow) {\n      innerContainer.classList.add('no-shadow');\n    }\n\n    if(options.fakeGradientDelimiter) {\n      innerContainer.append(generateDelimiter());\n      innerContainer.classList.add('with-fake-delimiter');\n    } else if(!options.noDelimiter) {\n      const hr = document.createElement('hr');\n      innerContainer.append(hr);\n    } else {\n      innerContainer.classList.add('no-delimiter');\n    }\n\n    // if(options.fullWidth) {\n    //   this.fullWidth = true;\n    // }\n\n    // if(options.noPaddingTop) {\n    //   innerContainer.classList.add('no-padding-top');\n    // }\n\n    const content = this.content = this.generateContentElement();\n\n    if(options.name) {\n      const title = this.title = document.createElement('div');\n      title.classList.add('sidebar-left-h2', className + '-name');\n      i18n_({element: title, key: options.name, args: options.nameArgs});\n      content.append(title);\n    }\n\n    container.append(innerContainer);\n\n    if(options.caption) {\n      const caption = this.caption = this.generateContentElement();\n      caption.classList.add(className + '-caption');\n      container.append(caption);\n\n      if(options.caption !== true) {\n        i18n_({element: caption, key: options.caption});\n      }\n    }\n  }\n\n  public generateContentElement() {\n    const content = document.createElement('div');\n    content.classList.add(className + '-content');\n\n    // if(this.fullWidth) {\n    //   content.classList.add('full-width');\n    // }\n\n    this.innerContainer.append(content);\n    return content;\n  }\n}\n\nexport const generateSection = (appendTo: Scrollable, name?: LangPackKey, caption?: LangPackKey) => {\n  const section = new SettingSection({name, caption});\n  appendTo.append(section.container);\n  return section.content;\n};\n\nexport const generateDelimiter = () => {\n  const delimiter = document.createElement('div');\n  delimiter.classList.add('gradient-delimiter');\n  return delimiter;\n};\n\nexport class SettingChatListSection extends SettingSection {\n  public sortedList: SortedUserList;\n\n  constructor(options: SettingSectionOptions & {sortedList: SortedUserList}) {\n    super(options);\n\n    this.sortedList = options.sortedList;\n\n    this.content.append(this.sortedList.list);\n  }\n\n  public makeButton(options: ButtonOptions) {\n    const button = Button('folder-category-button btn btn-primary btn-transparent', options);\n    if(this.title) this.content.insertBefore(button, this.title.nextSibling);\n    else this.content.prepend(button);\n    return button;\n  }\n}\n\nconst appSidebarLeft = new AppSidebarLeft();\nMOUNT_CLASS_TO.appSidebarLeft = appSidebarLeft;\nexport default appSidebarLeft;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../../lib/rootScope\";\r\n//import { generatePathData } from \"../../helpers/dom\";\r\nimport { MyMessage } from \"../../lib/appManagers/appMessagesManager\";\r\nimport type Chat from \"./chat\";\r\nimport indexOfAndSplice from \"../../helpers/array/indexOfAndSplice\";\r\n\r\ntype Group = {bubble: HTMLElement, mid: number, timestamp: number}[];\r\ntype BubbleGroup = {timestamp: number, fromId: PeerId, mid: number, group: Group};\r\nexport default class BubbleGroups {\r\n  private bubbles: Array<BubbleGroup> = []; // map to group\r\n  private detailsMap: Map<HTMLElement, BubbleGroup> = new Map();\r\n  private groups: Array<Group> = [];\r\n  //updateRAFs: Map<HTMLElement[], number> = new Map();\r\n  private newGroupDiff = 121; // * 121 in scheduled messages\r\n\r\n  constructor(private chat: Chat) {\r\n\r\n  }\r\n\r\n  removeBubble(bubble: HTMLElement) {\r\n    const details = this.detailsMap.get(bubble);\r\n    if(details) {\r\n      if(details.group.length) {\r\n        details.group.findAndSplice(d => d.bubble === bubble);\r\n        if(!details.group.length) {\r\n          indexOfAndSplice(this.groups, details.group);\r\n        } else {\r\n          this.updateGroup(details.group);\r\n        }\r\n      }\r\n      \r\n      this.detailsMap.delete(bubble);\r\n    }\r\n  }\r\n\r\n  changeBubbleMid(bubble: HTMLElement, mid: number) {\r\n    const details = this.detailsMap.get(bubble);\r\n    if(details) {\r\n      details.mid = mid;\r\n    }\r\n  }\r\n  \r\n  addBubble(bubble: HTMLElement, message: MyMessage, reverse: boolean) {\r\n    //return;\r\n\r\n    const timestamp = message.date;\r\n    const mid = message.mid;\r\n    let fromId = message.viaBotId || message.fromId;\r\n    let group: Group;\r\n\r\n    // fix for saved messages forward to self\r\n    if(fromId === rootScope.myId && message.peerId === rootScope.myId && (message as any).fwdFromId === fromId) {\r\n      fromId = fromId.toPeerId(true);\r\n    }\r\n    \r\n    // try to find added\r\n    this.removeBubble(bubble);\r\n    \r\n    const insertObject = {bubble, mid, timestamp};\r\n    if(this.bubbles.length) {\r\n      let foundBubble: BubbleGroup;\r\n      let foundAtIndex = -1;\r\n      for(let i = 0; i < this.bubbles.length; ++i) {\r\n        const bubble = this.bubbles[i];\r\n        const diff = Math.abs(bubble.timestamp - timestamp);\r\n        const good = bubble.fromId === fromId && diff <= this.newGroupDiff;\r\n\r\n        if(good) {\r\n          foundAtIndex = i;\r\n\r\n          if(this.chat.type === 'scheduled') {\r\n            break;\r\n          }\r\n        } else {\r\n          foundAtIndex = -1;\r\n        }\r\n\r\n        if(this.chat.type !== 'scheduled') {\r\n          if(mid > bubble.mid) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if(foundAtIndex !== -1) {\r\n        foundBubble = this.bubbles[foundAtIndex];\r\n      }\r\n      /* const foundBubble = this.bubbles.find(bubble => {\r\n        const diff = Math.abs(bubble.timestamp - timestamp);\r\n        return bubble.fromId === fromId && diff <= this.newGroupDiff;\r\n      }); */\r\n\r\n      if(!foundBubble) this.groups.push(group = [insertObject]);\r\n      else {\r\n        group = foundBubble.group;\r\n        \r\n        let i = 0, foundMidOnSameTimestamp = 0;\r\n        for(; i < group.length; ++i) {\r\n          const _timestamp = group[i].timestamp;\r\n          const _mid = group[i].mid;\r\n\r\n          if(timestamp < _timestamp) {\r\n            break;\r\n          } else if(timestamp === _timestamp) {\r\n            foundMidOnSameTimestamp = _mid;\r\n          } \r\n          \r\n          if(foundMidOnSameTimestamp && mid < foundMidOnSameTimestamp) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        group.splice(i, 0, insertObject);\r\n      }\r\n    } else {\r\n      this.groups.push(group = [insertObject]);\r\n    }\r\n\r\n    //console.log('[BUBBLE]: addBubble', bubble, message.mid, fromId, reverse, group);\r\n\r\n    const bubbleGroup = {timestamp, fromId, mid: message.mid, group};\r\n    let insertIndex = 0;\r\n    for(; insertIndex < this.bubbles.length; ++insertIndex) {\r\n      if(this.bubbles[insertIndex].mid < mid) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    this.bubbles.splice(insertIndex, 0, {timestamp, fromId, mid: message.mid, group});\r\n    this.updateGroup(group);\r\n\r\n    this.detailsMap.set(bubble, bubbleGroup);\r\n  }\r\n\r\n  /* setClipIfNeeded(bubble: HTMLDivElement, remove = false) {\r\n    //console.log('setClipIfNeeded', bubble, remove);\r\n    const className = bubble.className;\r\n    if(className.includes('is-message-empty') && (className.includes('photo') || className.includes('video'))) {\r\n      let container = bubble.querySelector('.bubble__media-container') as SVGSVGElement;\r\n      //console.log('setClipIfNeeded', bubble, remove, container);\r\n      if(!container) return;\r\n\r\n      try {\r\n        Array.from(container.children).forEach(object => {\r\n          if(object instanceof SVGDefsElement) return;\r\n  \r\n          if(remove) {\r\n            object.removeAttributeNS(null, 'clip-path');\r\n          } else {\r\n            let clipId = container.dataset.clipId;\r\n            let path = container.firstElementChild.firstElementChild.lastElementChild as SVGPathElement;\r\n            let width = +object.getAttributeNS(null, 'width');\r\n            let height = +object.getAttributeNS(null, 'height');\r\n            let isOut = className.includes('is-out');\r\n            let isReply = className.includes('is-reply');\r\n            let d = '';\r\n    \r\n            //console.log('setClipIfNeeded', object, width, height, isOut);\r\n    \r\n            let tr: number, tl: number;\r\n            if(className.includes('forwarded') || isReply) {\r\n              tr = tl = 0;\r\n            } else if(isOut) {\r\n              tr = className.includes('is-group-first') ? 12 : 6;\r\n              tl = 12;\r\n            } else {\r\n              tr = 12;\r\n              tl = className.includes('is-group-first') ? 12 : 6;\r\n            }\r\n    \r\n            if(isOut) {\r\n              d = generatePathData(0, 0, width - 9, height, tl, tr, 0, 12);\r\n            } else {\r\n              d = generatePathData(9, 0, width - 9, height, tl, tr, 12, 0);\r\n            }\r\n            \r\n            path.setAttributeNS(null, 'd', d);\r\n            object.setAttributeNS(null, 'clip-path', 'url(#' + clipId + ')');\r\n          }\r\n        });\r\n      } catch(err) {}\r\n    }\r\n  } */\r\n  \r\n  updateGroup(group: Group) {\r\n    /* if(this.updateRAFs.has(group)) {\r\n      window.cancelAnimationFrame(this.updateRAFs.get(group));\r\n      this.updateRAFs.delete(group);\r\n    } */\r\n    \r\n    //this.updateRAFs.set(group, window.requestAnimationFrame(() => {\r\n      //this.updateRAFs.delete(group);\r\n      \r\n      if(!group.length) {\r\n        return;\r\n      }\r\n      \r\n      const first = group[0].bubble;\r\n\r\n      //console.log('[BUBBLE]: updateGroup', group, first);\r\n      \r\n      if(group.length === 1) {\r\n        first.classList.add('is-group-first', 'is-group-last');\r\n        //this.setClipIfNeeded(first);\r\n        return;\r\n      } else {\r\n        first.classList.remove('is-group-last');\r\n        first.classList.add('is-group-first');\r\n        //this.setClipIfNeeded(first, true);\r\n      }\r\n      \r\n      const length = group.length - 1;\r\n      for(let i = 1; i < length; ++i) {\r\n        const bubble = group[i].bubble;\r\n        bubble.classList.remove('is-group-last', 'is-group-first');\r\n        //this.setClipIfNeeded(bubble, true);\r\n      }\r\n      \r\n      const last = group[group.length - 1].bubble;\r\n      last.classList.remove('is-group-first');\r\n      last.classList.add('is-group-last');\r\n      //this.setClipIfNeeded(last);\r\n    //}));\r\n  }\r\n\r\n  updateGroupByMessageId(mid: number) {\r\n    const details = this.bubbles.find(g => g.mid === mid);\r\n    if(details) {\r\n      this.updateGroup(details.group);\r\n    }\r\n  }\r\n  \r\n  cleanup() {\r\n    this.bubbles = [];\r\n    this.groups = [];\r\n    this.detailsMap.clear();\r\n    /* for(let value of this.updateRAFs.values()) {\r\n      window.cancelAnimationFrame(value);\r\n    }\r\n    this.updateRAFs.clear(); */\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport PopupElement, { PopupOptions } from \".\";\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport mediaSizes from \"../../helpers/mediaSizes\";\r\nimport I18n, { i18n, LangPackKey } from \"../../lib/langPack\";\r\nimport InputField from \"../inputField\";\r\n\r\nexport default class PopupDatePicker extends PopupElement {\r\n  protected controlsDiv: HTMLElement;\r\n  protected monthTitle: HTMLElement;\r\n  protected prevBtn: HTMLElement;\r\n  protected nextBtn: HTMLElement;\r\n\r\n  protected monthsContainer: HTMLElement;\r\n  protected month: HTMLElement;\r\n\r\n  protected minMonth: Date;\r\n  protected maxMonth: Date;\r\n  protected minDate: Date;\r\n  protected maxDate: Date;\r\n  protected selectedDate: Date;\r\n  protected selectedMonth: Date;\r\n  protected selectedEl: HTMLElement;\r\n\r\n  protected timeDiv: HTMLDivElement;\r\n  protected hoursInputField: InputField;\r\n  protected minutesInputField: InputField;\r\n\r\n  constructor(initDate: Date, public onPick: (timestamp: number) => void, protected options: Partial<{\r\n    noButtons: true, \r\n    noTitle: true, \r\n    minDate: Date,\r\n    maxDate: Date\r\n    withTime: true,\r\n    showOverflowMonths: true\r\n  }> & PopupOptions = {}) {\r\n    super('popup-date-picker', options.noButtons ? [] : [{\r\n      langKey: 'JumpToDate',\r\n      callback: () => {\r\n        if(this.onPick) {\r\n          this.onPick(this.selectedDate.getTime() / 1000 | 0);\r\n        }\r\n      }\r\n    }, {\r\n      langKey: 'Cancel',\r\n      isCancel: true\r\n    }], {body: true, overlayClosable: true, ...options});\r\n\r\n    this.minDate = options.minDate || new Date('2013-08-01T00:00:00');\r\n\r\n    if(initDate < this.minDate) {\r\n      initDate.setFullYear(this.minDate.getFullYear(), this.minDate.getMonth(), this.minDate.getDate());\r\n    }\r\n\r\n    // Controls\r\n    this.controlsDiv = document.createElement('div');\r\n    this.controlsDiv.classList.add('date-picker-controls');\r\n\r\n    this.prevBtn = document.createElement('button');\r\n    this.prevBtn.classList.add('btn-icon', 'tgico-down', 'date-picker-prev');\r\n    attachClickEvent(this.prevBtn, this.onPrevClick, {listenerSetter: this.listenerSetter});\r\n\r\n    this.nextBtn = document.createElement('button');\r\n    this.nextBtn.classList.add('btn-icon', 'tgico-down', 'date-picker-next');\r\n    attachClickEvent(this.nextBtn, this.onNextClick, {listenerSetter: this.listenerSetter});\r\n    \r\n    this.monthTitle = document.createElement('div');\r\n    this.monthTitle.classList.add('date-picker-month-title');\r\n\r\n    this.controlsDiv.append(this.prevBtn, this.monthTitle, this.nextBtn);\r\n\r\n    // Month\r\n    this.monthsContainer = document.createElement('div');\r\n    this.monthsContainer.classList.add('date-picker-months');\r\n    attachClickEvent(this.monthsContainer, this.onDateClick, {listenerSetter: this.listenerSetter});\r\n\r\n    this.body.append(this.controlsDiv, this.monthsContainer);\r\n\r\n    // Time inputs\r\n    if(options.withTime) {\r\n      this.timeDiv = document.createElement('div');\r\n      this.timeDiv.classList.add('date-picker-time');\r\n\r\n      const delimiter = document.createElement('div');\r\n      delimiter.classList.add('date-picker-time-delimiter');\r\n      delimiter.append(':');\r\n\r\n      const handleTimeInput = (max: number, inputField: InputField, onInput: (length: number) => void, onOverflow?: (number: number) => void) => {\r\n        const maxString = '' + max;\r\n        this.listenerSetter.add(inputField.input)('input', (e) => {\r\n          let value = inputField.value.replace(/\\D/g, '');\r\n          if(value.length > 2) {\r\n            value = value.slice(0, 2);\r\n          } else {\r\n            if((value.length === 1 && +value[0] > +maxString[0]) || (value.length === 2 && +value > max)) {\r\n              if(value.length === 2 && onOverflow) {\r\n                onOverflow(+value[1]);\r\n              }\r\n\r\n              value = '0' + value[0];\r\n            }\r\n          }\r\n\r\n          inputField.setValueSilently(value);\r\n          onInput(value.length);\r\n        });\r\n      };\r\n\r\n      this.hoursInputField = new InputField({plainText: true});\r\n      this.minutesInputField = new InputField({plainText: true});\r\n\r\n      handleTimeInput(23, this.hoursInputField, (length) => {\r\n        if(length === 2) {\r\n          this.minutesInputField.input.focus();\r\n        }\r\n\r\n        this.setTimeTitle();\r\n      }, (number) => {\r\n        this.minutesInputField.value = (number + this.minutesInputField.value).slice(0, 2);\r\n      });\r\n      handleTimeInput(59, this.minutesInputField, (length) => {\r\n        if(!length) {\r\n          this.hoursInputField.input.focus();\r\n        }\r\n\r\n        this.setTimeTitle();\r\n      });\r\n\r\n      this.selectedDate = initDate;\r\n\r\n      initDate.setMinutes(initDate.getMinutes() + 10);\r\n      \r\n      this.hoursInputField.setValueSilently(('0' + initDate.getHours()).slice(-2));\r\n      this.minutesInputField.setValueSilently(('0' + initDate.getMinutes()).slice(-2));\r\n\r\n      initDate.setHours(0, 0, 0, 0);\r\n      \r\n      this.timeDiv.append(this.hoursInputField.container, delimiter, this.minutesInputField.container);\r\n\r\n      attachClickEvent(this.btnConfirm, () => {\r\n        if(this.onPick) {\r\n          this.selectedDate.setHours(+this.hoursInputField.value || 0, +this.minutesInputField.value || 0, 0, 0);\r\n          this.onPick(this.selectedDate.getTime() / 1000 | 0);\r\n        }\r\n\r\n        this.hide();\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      this.body.append(this.timeDiv);\r\n\r\n      this.prevBtn.classList.add('primary');\r\n      this.nextBtn.classList.add('primary');\r\n    }\r\n\r\n    const popupCenterer = document.createElement('div');\r\n    popupCenterer.classList.add('popup-centerer');\r\n    popupCenterer.append(this.container);\r\n    this.element.append(popupCenterer);\r\n\r\n    //const passed = (initDate.getTime() - (initDate.getTimezoneOffset() * 60000)) % 86400000;\r\n    //this.selectedDate = this.maxDate = new Date(initDate.getTime() - passed);\r\n    initDate.setHours(0, 0, 0, 0);\r\n    this.selectedDate = initDate;\r\n\r\n    this.maxDate = options.maxDate || new Date();\r\n    this.maxDate.setHours(0, 0, 0, 0);\r\n\r\n    this.selectedMonth = new Date(this.selectedDate);\r\n    this.selectedMonth.setDate(1);\r\n\r\n    this.maxMonth = new Date(this.maxDate);\r\n    this.maxMonth.setDate(1);\r\n\r\n    this.minMonth = new Date(this.minDate);\r\n    this.minMonth.setHours(0, 0, 0, 0);\r\n    this.minMonth.setDate(1);\r\n\r\n    if(this.selectedMonth.getTime() === this.minMonth.getTime()) {\r\n      this.prevBtn.setAttribute('disabled', 'true');\r\n    }\r\n\r\n    if(this.selectedMonth.getTime() === this.maxMonth.getTime()) {\r\n      this.nextBtn.setAttribute('disabled', 'true');\r\n    }\r\n\r\n    if(options.noTitle) {\r\n      this.setTitle = () => {};\r\n    }\r\n\r\n    this.setTimeTitle();\r\n    this.setTitle();\r\n    this.setMonth();\r\n  }\r\n\r\n  onPrevClick = (e: MouseEvent) => {\r\n    this.selectedMonth.setMonth(this.selectedMonth.getMonth() - 1);\r\n    this.setMonth();\r\n\r\n    if(this.selectedMonth.getTime() === this.minMonth.getTime()) {\r\n      this.prevBtn.setAttribute('disabled', 'true');\r\n    }\r\n    \r\n    this.nextBtn.removeAttribute('disabled');\r\n  };\r\n\r\n  onNextClick = (e: MouseEvent) => {\r\n    this.selectedMonth.setMonth(this.selectedMonth.getMonth() + 1);\r\n    this.setMonth();\r\n\r\n    if(this.selectedMonth.getTime() === this.maxMonth.getTime()) {\r\n      this.nextBtn.setAttribute('disabled', 'true');\r\n    }\r\n\r\n    this.prevBtn.removeAttribute('disabled');\r\n  };\r\n\r\n  onDateClick = (e: MouseEvent) => {\r\n    //cancelEvent(e);\r\n    const target = e.target as HTMLElement;\r\n\r\n    if(!target.dataset.timestamp) return;\r\n\r\n    if(this.selectedEl) {\r\n      if(this.selectedEl === target) return;\r\n      this.selectedEl.classList.remove('active');\r\n    }\r\n\r\n    this.selectedEl = target;\r\n    \r\n    target.classList.add('active');\r\n    const timestamp = +target.dataset.timestamp;\r\n\r\n    this.selectedDate = new Date(timestamp);\r\n\r\n    this.setTitle();\r\n    this.setTimeTitle();\r\n  };\r\n\r\n  public setTimeTitle() {\r\n    if(this.btnConfirm && this.selectedDate) {\r\n      let key: LangPackKey, args: any[] = [];\r\n      const date = new Date();\r\n      date.setHours(0, 0, 0, 0);\r\n\r\n      const timeOptions: Intl.DateTimeFormatOptions = {\r\n        minute: '2-digit',\r\n        hour: '2-digit'\r\n      };\r\n      \r\n      const sendDate = new Date(this.selectedDate.getTime());\r\n      sendDate.setHours(+this.hoursInputField.value, +this.minutesInputField.value);\r\n\r\n      if(this.selectedDate.getTime() === date.getTime()) {\r\n        key = 'Schedule.SendToday';\r\n      }/*  else if(this.selectedDate.getTime() === (date.getTime() + 86400e3)) {\r\n        dayStr = 'Tomorrow';\r\n      } */ else {\r\n        key = 'Schedule.SendDate';\r\n\r\n        const dateOptions: Intl.DateTimeFormatOptions = {\r\n          month: 'short',\r\n          day: 'numeric'\r\n        };\r\n\r\n        if(sendDate.getFullYear() !== date.getFullYear()) {\r\n          dateOptions.year = 'numeric';\r\n        }\r\n\r\n        args.push(new I18n.IntlDateElement({\r\n          date: sendDate,\r\n          options: dateOptions\r\n        }).element);\r\n      }\r\n\r\n      args.push(new I18n.IntlDateElement({\r\n        date: sendDate,\r\n        options: timeOptions\r\n      }).element);\r\n\r\n      this.btnConfirm.firstChild.replaceWith(i18n(key, args));\r\n    }\r\n  }\r\n\r\n  public setTitle() {\r\n    //const splitted = this.selectedDate.toString().split(' ', 3);\r\n    //this.title.innerText = splitted[0] + ', ' + splitted[1] + ' ' + splitted[2];\r\n    this.title.textContent = '';\r\n    this.title.append(new I18n.IntlDateElement({\r\n      date: this.selectedDate,\r\n      options: {\r\n        day: 'numeric',\r\n        month: 'long',\r\n        weekday: 'short'\r\n      }\r\n    }).element);\r\n  }\r\n\r\n  private renderElement(disabled: boolean, innerText: string | HTMLElement = '') {\r\n    const el = document.createElement('button');\r\n    el.classList.add('btn-icon', 'date-picker-month-date');\r\n\r\n    if(disabled) {\r\n      el.setAttribute('disabled', 'true');\r\n    }\r\n\r\n    if(innerText) {\r\n      el.append(innerText);\r\n    }\r\n\r\n    return el;\r\n  }\r\n\r\n  public setMonth() {\r\n    const firstDate = new Date(this.selectedMonth);\r\n\r\n    const options: Intl.DateTimeFormatOptions = {\r\n      year: 'numeric',\r\n      month: this.timeDiv && mediaSizes.isMobile ? 'short' : 'long'\r\n    };\r\n\r\n    this.monthTitle.textContent = '';\r\n    this.monthTitle.append(new I18n.IntlDateElement({date: firstDate, options}).element);\r\n    //this.monthTitle.innerText = (this.timeDiv && mediaSizes.isMobile ? monthName.slice(0, 3) : monthName) + ' ' + this.selectedMonth.getFullYear();\r\n\r\n    if(this.month) {\r\n      this.month.remove();\r\n    }\r\n\r\n    this.month = document.createElement('div');\r\n    this.month.classList.add('date-picker-month');\r\n\r\n    const weekStartDate = new Date();\r\n    const day = weekStartDate.getDay();\r\n    if(day !== 1) {\r\n      weekStartDate.setHours(-24 * (day - 1)); \r\n    }\r\n\r\n    for(let i = 0; i < 7; ++i) {\r\n      const el = this.renderElement(true, new I18n.IntlDateElement({date: weekStartDate, options: {weekday: 'narrow'}}).element);\r\n      el.classList.remove('date-picker-month-date');\r\n      el.classList.add('date-picker-month-day');\r\n      this.month.append(el);\r\n      weekStartDate.setDate(weekStartDate.getDate() + 1);\r\n    }\r\n\r\n    // 0 - sunday\r\n    let dayIndex = firstDate.getDay() - 1;\r\n    if(dayIndex === -1) dayIndex = 7 - 1;\r\n\r\n    const clonedDate = new Date(firstDate.getTime());\r\n    clonedDate.setDate(clonedDate.getDate() - dayIndex - 1);\r\n\r\n    // Padding first week\r\n    for(let i = 0; i < dayIndex; ++i) {\r\n      if(this.options.showOverflowMonths) {\r\n        clonedDate.setDate(clonedDate.getDate() + 1);\r\n        this.month.append(this.renderElement(true, '' + clonedDate.getDate()));\r\n      } else {\r\n        this.month.append(this.renderElement(true));\r\n      }\r\n    }\r\n\r\n    do {\r\n      const date = firstDate.getDate();\r\n      const el = this.renderElement(firstDate > this.maxDate || firstDate < this.minDate, '' + date);\r\n      el.dataset.timestamp = '' + firstDate.getTime();\r\n\r\n      if(firstDate.getTime() === this.selectedDate.getTime()) {\r\n        this.selectedEl = el;\r\n        el.classList.add('active');\r\n      }\r\n\r\n      this.month.append(el);\r\n\r\n      firstDate.setDate(date + 1);\r\n    } while(firstDate.getDate() !== 1);\r\n\r\n    const remainder = this.month.childElementCount % 7;\r\n    if(this.options.showOverflowMonths && remainder) {\r\n      for(let i = remainder; i < 7; ++i) {\r\n        this.month.append(this.renderElement(true, '' + firstDate.getDate()));\r\n        firstDate.setDate(firstDate.getDate() + 1);\r\n      }\r\n    }\r\n\r\n    const lines = Math.ceil(this.month.childElementCount / 7);\r\n    this.container.dataset.lines = '' + lines;\r\n\r\n    this.monthsContainer.append(this.month);\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport AvatarElement from \"./avatar\";\nimport type { LazyLoadQueueIntersector } from \"./lazyLoadQueue\";\n\nconst CLASS_NAME = 'stacked-avatars';\nconst AVATAR_CLASS_NAME = CLASS_NAME + '-avatar';\nconst AVATAR_CONTAINER_CLASS_NAME = AVATAR_CLASS_NAME + '-container';\n\nexport default class StackedAvatars {\n  public container: HTMLElement;\n  private lazyLoadQueue: LazyLoadQueueIntersector;\n  private avatarSize: number;\n\n  constructor(options: {\n    lazyLoadQueue?: LazyLoadQueueIntersector,\n    avatarSize: number\n  }) {\n    this.lazyLoadQueue = options.lazyLoadQueue;\n    this.avatarSize = options.avatarSize;\n\n    this.container = document.createElement('div');\n    this.container.classList.add(CLASS_NAME);\n\n    this.container.style.setProperty('--avatar-size', options.avatarSize + 'px');\n  }\n\n  public render(peerIds: PeerId[], loadPromises?: Promise<any>[]) {\n    const children = this.container.children;\n    peerIds = peerIds.slice().reverse();\n    if(peerIds.length > 3) {\n      peerIds = peerIds.slice(-3);\n    }\n\n    peerIds.forEach((peerId, idx) => {\n      let avatarContainer = children[idx] as HTMLElement;\n      if(!avatarContainer) {\n        avatarContainer = document.createElement('div');\n        avatarContainer.classList.add(AVATAR_CONTAINER_CLASS_NAME);\n      }\n\n      let avatarElem = avatarContainer.firstElementChild as AvatarElement;\n      if(!avatarElem) {\n        avatarElem = new AvatarElement();\n        avatarElem.setAttribute('dialog', '0');\n        avatarElem.classList.add('avatar-' + this.avatarSize, AVATAR_CLASS_NAME);\n        avatarElem.lazyLoadQueue = this.lazyLoadQueue;\n        avatarElem.loadPromises = loadPromises;\n      }\n      \n      avatarElem.setAttribute('peer', '' + peerId);\n      \n      if(!avatarElem.parentNode) {\n        avatarContainer.append(avatarElem);\n      }\n\n      if(!avatarContainer.parentNode) {\n        this.container.append(avatarContainer);\n      }\n    });\n\n    // if were 3 and became 2\n    (Array.from(children) as HTMLElement[]).slice(peerIds.length).forEach(el => el.remove());\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport callbackify from \"../../helpers/callbackify\";\nimport formatNumber from \"../../helpers/number/formatNumber\";\nimport { fastRaf } from \"../../helpers/schedulers\";\nimport { MessagePeerReaction, ReactionCount } from \"../../layer\";\nimport appPeersManager from \"../../lib/appManagers/appPeersManager\";\nimport appReactionsManager from \"../../lib/appManagers/appReactionsManager\";\nimport RLottiePlayer from \"../../lib/rlottie/rlottiePlayer\";\nimport SetTransition from \"../singleTransition\";\nimport StackedAvatars from \"../stackedAvatars\";\nimport { wrapSticker, wrapStickerAnimation } from \"../wrappers\";\n\nconst CLASS_NAME = 'reaction';\nconst TAG_NAME = CLASS_NAME + '-element';\nconst REACTION_INLINE_SIZE = 14;\nconst REACTION_BLOCK_SIZE = 22;\n\nexport const REACTION_DISPLAY_INLINE_COUNTER_AT = 2;\nexport const REACTION_DISPLAY_BLOCK_COUNTER_AT = 4;\n\nexport type ReactionLayoutType = 'block' | 'inline';\n\nexport default class ReactionElement extends HTMLElement {\n  private type: ReactionLayoutType;\n  private counter: HTMLElement;\n  private stickerContainer: HTMLElement;\n  private stackedAvatars: StackedAvatars;\n  private canRenderAvatars: boolean;\n  private _reactionCount: ReactionCount;\n  private wrapStickerPromise: ReturnType<typeof wrapSticker>;\n\n  constructor() {\n    super();\n    this.classList.add(CLASS_NAME);\n  }\n\n  public get reactionCount() {\n    return this._reactionCount;\n  }\n  \n  public set reactionCount(reactionCount: ReactionCount) {\n    this._reactionCount = reactionCount;\n  }\n\n  public get count() {\n    return this.reactionCount.count;\n  }\n\n  public init(type: ReactionLayoutType) {\n    this.type = type;\n    this.classList.add(CLASS_NAME + '-' + type);\n  }\n\n  public setCanRenderAvatars(canRenderAvatars: boolean) {\n    this.canRenderAvatars = canRenderAvatars;\n  }\n\n  public render(doNotRenderSticker?: boolean) {\n    const hadStickerContainer = !!this.stickerContainer;\n    if(!hadStickerContainer) {\n      this.stickerContainer = document.createElement('div');\n      this.stickerContainer.classList.add(CLASS_NAME + '-sticker');\n      this.append(this.stickerContainer);\n    }\n    \n    const reactionCount = this.reactionCount;\n    if(!doNotRenderSticker && !hadStickerContainer) {\n      const availableReaction = appReactionsManager.getReaction(reactionCount.reaction);\n      callbackify(availableReaction, (availableReaction) => {\n        if(!availableReaction.center_icon) {\n          this.stickerContainer.classList.add('is-static');\n        }\n\n        if(availableReaction.pFlags.inactive) {\n          this.classList.add('is-inactive');\n        }\n\n        const size = this.type === 'inline' ? REACTION_INLINE_SIZE : REACTION_BLOCK_SIZE;\n        const wrapPromise = this.wrapStickerPromise = wrapSticker({\n          div: this.stickerContainer,\n          doc: availableReaction.center_icon ?? availableReaction.static_icon,\n          width: size,\n          height: size,\n          static: true\n        }).finally(() => {\n          if(this.wrapStickerPromise === wrapPromise) {\n            this.wrapStickerPromise = undefined;\n          }\n        });\n      });\n    }\n  }\n\n  public renderCounter() {\n    const reactionCount = this.reactionCount;\n    const displayOn = this.type === 'inline' ? REACTION_DISPLAY_INLINE_COUNTER_AT : REACTION_DISPLAY_BLOCK_COUNTER_AT;\n    if(reactionCount.count >= displayOn || (this.type === 'block' && !this.canRenderAvatars)) {\n      if(!this.counter) {\n        this.counter = document.createElement(this.type === 'inline' ? 'i' : 'span');\n        this.counter.classList.add(CLASS_NAME + '-counter');\n      }\n\n      const formatted = formatNumber(reactionCount.count);\n      if(this.counter.textContent !== formatted) {\n        this.counter.textContent = formatted;\n      }\n\n      if(!this.counter.parentElement) {\n        this.append(this.counter);\n      }\n    } else if(this.counter?.parentElement) {\n      this.counter.remove();\n      this.counter = undefined;\n    }\n  }\n\n  public renderAvatars(recentReactions: MessagePeerReaction[]) {\n    if(this.type === 'inline') {\n      return;\n    }\n\n    if(this.reactionCount.count >= REACTION_DISPLAY_BLOCK_COUNTER_AT || !this.canRenderAvatars) {\n      if(this.stackedAvatars) {\n        this.stackedAvatars.container.remove();\n        this.stackedAvatars = undefined;\n      }\n\n      return;\n    }\n\n    if(!this.stackedAvatars) {\n      this.stackedAvatars = new StackedAvatars({\n        avatarSize: 24\n      });\n\n      this.append(this.stackedAvatars.container);\n    }\n\n    this.stackedAvatars.render(recentReactions.map(reaction => appPeersManager.getPeerId(reaction.peer_id)));\n  }\n\n  public setIsChosen(isChosen = !!this.reactionCount.pFlags.chosen) {\n    if(this.type === 'inline') return;\n    const wasChosen = this.classList.contains('is-chosen') && !this.classList.contains('backwards');\n    if(wasChosen !== isChosen) {\n      SetTransition(this, 'is-chosen', isChosen, this.isConnected ? 300 : 0);\n    }\n  }\n\n  public fireAroundAnimation() {\n    callbackify(appReactionsManager.getReaction(this.reactionCount.reaction), (availableReaction) => {\n      const size = this.type === 'inline' ? REACTION_INLINE_SIZE + 14 : REACTION_BLOCK_SIZE + 18;\n      const div = document.createElement('div');\n      div.classList.add(CLASS_NAME + '-sticker-activate');\n\n      Promise.all([\n        wrapSticker({\n          div: div,\n          doc: availableReaction.center_icon,\n          width: size,\n          height: size,\n          withThumb: false,\n          needUpscale: true,\n          play: false,\n          skipRatio: 1,\n          group: 'none',\n          needFadeIn: false\n        }) as Promise<RLottiePlayer>,\n\n        wrapStickerAnimation({\n          doc: availableReaction.around_animation,\n          size: 80,\n          target: this.stickerContainer,\n          side: 'center',\n          skipRatio: 1,\n          play: false\n        }).stickerPromise\n      ]).then(([iconPlayer, aroundPlayer]) => {\n        const remove = () => {\n          // if(!isInDOM(div)) return;\n          fastRaf(() => {\n            // if(!isInDOM(div)) return;\n            iconPlayer.remove();\n            div.remove();\n            this.stickerContainer.classList.remove('has-animation');\n          });\n        };\n\n        iconPlayer.addEventListener('enterFrame', (frameNo) => {\n          if(frameNo === iconPlayer.maxFrame) {\n            if(this.wrapStickerPromise) { // wait for fade in animation\n              this.wrapStickerPromise.then(() => {\n                setTimeout(remove, 1e3);\n              });\n            } else {\n              remove();\n            }\n          }\n        });\n\n        iconPlayer.addEventListener('firstFrame', () => {\n          this.stickerContainer.append(div);\n          this.stickerContainer.classList.add('has-animation');\n          iconPlayer.play();\n          aroundPlayer.play();\n        }, {once: true});\n      });\n    });\n  }\n}\n\ncustomElements.define(TAG_NAME, ReactionElement);\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport forEachReverse from \"../../helpers/array/forEachReverse\";\nimport positionElementByIndex from \"../../helpers/dom/positionElementByIndex\";\nimport { Message, ReactionCount } from \"../../layer\";\nimport appReactionsManager from \"../../lib/appManagers/appReactionsManager\";\nimport rootScope from \"../../lib/rootScope\";\nimport ReactionElement, { ReactionLayoutType, REACTION_DISPLAY_BLOCK_COUNTER_AT } from \"./reaction\";\n\nconst CLASS_NAME = 'reactions';\nconst TAG_NAME = CLASS_NAME + '-element';\n\nconst REACTIONS_ELEMENTS: Map<string, Set<ReactionsElement>> = new Map();\nexport {REACTIONS_ELEMENTS};\n\nexport default class ReactionsElement extends HTMLElement {\n  private message: Message.message;\n  private key: string;\n  private isPlaceholder: boolean;\n  private type: ReactionLayoutType;\n  private sorted: ReactionElement[];\n  private onConnectCallback: () => void;\n\n  constructor() {\n    super();\n    this.classList.add(CLASS_NAME);\n    this.sorted = [];\n  }\n  \n  connectedCallback() {\n    let set = REACTIONS_ELEMENTS.get(this.key);\n    if(!set) {\n      REACTIONS_ELEMENTS.set(this.key, set = new Set());\n    }\n\n    set.add(this);\n\n    if(this.onConnectCallback && this.isConnected) {\n      this.onConnectCallback();\n      this.onConnectCallback = undefined;\n    }\n  }\n\n  disconnectedCallback() {\n    const set = REACTIONS_ELEMENTS.get(this.key);\n    set.delete(this);\n    if(!set.size) {\n      REACTIONS_ELEMENTS.delete(this.key);\n    }\n  }\n\n  public getReactionCount(reactionElement: ReactionElement) {\n    return this.sorted[this.sorted.indexOf(reactionElement)].reactionCount;\n  }\n\n  public getMessage() {\n    return this.message;\n  }\n\n  public init(message: Message.message, type: ReactionLayoutType, isPlaceholder?: boolean) {\n    if(this.key !== undefined) {\n      this.disconnectedCallback();\n    }\n\n    this.message = message;\n    this.key = this.message.peerId + '_' + this.message.mid;\n    this.isPlaceholder = isPlaceholder;\n\n    if(this.type !== type) {\n      this.type = type;\n      this.classList.add(CLASS_NAME + '-' + type);\n    }\n\n    this.connectedCallback();\n  }\n\n  public changeMessage(message: Message.message) {\n    return this.init(message, this.type, this.isPlaceholder);\n  }\n\n  public update(message: Message.message, changedResults?: ReactionCount[]) {\n    this.message = message;\n    this.render(changedResults);\n  }\n\n  public render(changedResults?: ReactionCount[]) {\n    const reactions = this.message.reactions;\n    const hasReactions = !!(reactions && reactions.results.length);\n    this.classList.toggle('has-no-reactions', !hasReactions);\n    if(!hasReactions && !this.sorted.length) return;\n\n    const availableReactionsResult = appReactionsManager.getAvailableReactions();\n    // callbackify(availableReactionsResult, () => {\n      const counts = hasReactions ? (\n        availableReactionsResult instanceof Promise ? \n          reactions.results : \n          reactions.results.filter(reactionCount => {\n            return appReactionsManager.isReactionActive(reactionCount.reaction);\n          })\n      ) : [];\n\n      forEachReverse(this.sorted, (reactionElement, idx, arr) => {\n        const reaction = reactionElement.reactionCount.reaction;\n        const found = counts.some(reactionCount => reactionCount.reaction === reaction);\n        if(!found) {\n          arr.splice(idx, 1);\n          reactionElement.remove();\n        }\n      });\n\n      const totalReactions = counts.reduce((acc, c) => acc + c.count, 0);\n      const canRenderAvatars = reactions && !!reactions.pFlags.can_see_list && totalReactions < REACTION_DISPLAY_BLOCK_COUNTER_AT;\n      this.sorted = counts.map((reactionCount, idx) => {\n        const reactionElementIdx = this.sorted.findIndex(reactionElement => reactionElement.reactionCount.reaction === reactionCount.reaction);\n        let reactionElement = reactionElementIdx !== -1 && this.sorted[reactionElementIdx];\n        if(!reactionElement) {\n          reactionElement = new ReactionElement();\n          reactionElement.init(this.type);\n        }\n\n        positionElementByIndex(reactionElement, this, idx);\n        \n        const recentReactions = reactions.recent_reactions ? reactions.recent_reactions.filter(reaction => reaction.reaction === reactionCount.reaction) : [];\n        reactionElement.reactionCount = {...reactionCount};\n        reactionElement.setCanRenderAvatars(canRenderAvatars);\n        reactionElement.render(this.isPlaceholder);\n        reactionElement.renderCounter();\n        reactionElement.renderAvatars(recentReactions);\n        reactionElement.setIsChosen();\n\n        return reactionElement;\n      });\n\n      // this.sorted.forEach((reactionElement, idx) => {\n      //   /* if(this.type === 'block' && this.childElementCount !== this.sorted.length) { // because of appended time\n      //     idx += 1;\n      //   } */\n\n      //   positionElementByIndex(reactionElement, this, idx);\n      // });\n\n      if(!this.isPlaceholder && changedResults?.length) {\n        if(this.isConnected) {\n          this.handleChangedResults(changedResults);\n        } else {\n          this.onConnectCallback = () => {\n            this.handleChangedResults(changedResults);\n          };\n        }\n      }\n    // });\n\n    // ! тут вообще не должно быть этого кода, но пока он побудет тут\n    if(!this.sorted.length && this.type === 'block') {\n      const parentElement = this.parentElement;\n      this.remove();\n\n      if(parentElement.classList.contains('document-message') && !parentElement.childNodes.length) {\n        parentElement.remove();\n        return;\n      }\n\n      const timeSpan = this.querySelector('.time');\n      if(timeSpan) {\n        parentElement.append(timeSpan);\n      }\n    }\n  }\n\n  private handleChangedResults(changedResults: ReactionCount[]) {\n    // ! temp\n    if(this.message.peerId !== rootScope.peerId) return;\n\n    changedResults.forEach(reactionCount => {\n      const reactionElement = this.sorted.find(reactionElement => reactionElement.reactionCount.reaction === reactionCount.reaction);\n      if(reactionElement) {\n        reactionElement.fireAroundAnimation();\n      }\n    });\n  }\n}\n\ncustomElements.define(TAG_NAME, ReactionsElement);\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { LazyLoadQueueIntersector } from \"../lazyLoadQueue\";\r\nimport { Message } from \"../../layer\";\r\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\r\nimport appPeersManager from \"../../lib/appManagers/appPeersManager\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport { ripple } from \"../ripple\";\r\nimport I18n from \"../../lib/langPack\";\r\nimport replaceContent from \"../../helpers/dom/replaceContent\";\r\nimport StackedAvatars from \"../stackedAvatars\";\r\nimport formatNumber from \"../../helpers/number/formatNumber\";\r\n\r\nconst TAG_NAME = 'replies-element';\r\n\r\nrootScope.addEventListener('replies_updated', (message) => {\r\n  (Array.from(document.querySelectorAll(TAG_NAME + `[data-post-key=\"${message.peerId}_${message.mid}\"]`)) as RepliesElement[]).forEach(element => {\r\n    element.message = message;\r\n    element.render();\r\n  });\r\n});\r\n\r\nexport default class RepliesElement extends HTMLElement {\r\n  public message: Message.message;\r\n  public type: 'footer' | 'beside';\r\n  public loadPromises: Promise<any>[];\r\n  public lazyLoadQueue: LazyLoadQueueIntersector;\r\n  public stackedAvatars: StackedAvatars;\r\n  public text: I18n.IntlElement;\r\n  \r\n  private updated = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public init() {\r\n    this.render();\r\n    this.dataset.postKey = this.message.peerId + '_' + this.message.mid;\r\n    this.classList.add('replies', 'replies-' + this.type);\r\n  }\r\n\r\n  public render() {\r\n    const replies = this.message.replies;\r\n\r\n    /* if(this.firstChild) {\r\n      this.innerHTML = '';\r\n    } */\r\n\r\n    if(this.type === 'footer') {\r\n      let leftPart: HTMLElement;\r\n      if(this.firstElementChild) {\r\n        leftPart = this.firstElementChild as HTMLElement;\r\n      }\r\n\r\n      if(replies?.recent_repliers) {\r\n        if(leftPart && !leftPart.classList.contains('replies-footer-avatars')) {\r\n          this.innerHTML = '';\r\n          leftPart = null;\r\n        }\r\n\r\n        if(!this.stackedAvatars) {\r\n          this.stackedAvatars = new StackedAvatars({\r\n            lazyLoadQueue: this.lazyLoadQueue,\r\n            avatarSize: 30\r\n          });\r\n\r\n          this.stackedAvatars.container.classList.add('replies-footer-avatars');\r\n        }\r\n\r\n        leftPart = this.stackedAvatars.container;\r\n\r\n        this.stackedAvatars.render(replies.recent_repliers.map(peer => appPeersManager.getPeerId(peer)), this.loadPromises);\r\n      } else {\r\n        if(leftPart && !leftPart.classList.contains('tgico-comments')) {\r\n          leftPart.remove();\r\n          leftPart = null;\r\n        }\r\n\r\n        if(!leftPart) {\r\n          leftPart = document.createElement('span');\r\n          leftPart.classList.add('tgico-comments');\r\n        }\r\n      }\r\n\r\n      if(!leftPart.parentElement) {\r\n        this.prepend(leftPart);\r\n      }\r\n  \r\n      if(!this.text) {\r\n        this.text = new I18n.IntlElement();\r\n      }\r\n\r\n      const text = this.text;\r\n      if(replies) {\r\n        if(replies.replies) {\r\n          text.compareAndUpdate({key: 'Comments', args: [replies.replies]});\r\n        } else {\r\n          text.compareAndUpdate({key: 'LeaveAComment'});\r\n        }\r\n      } else {\r\n        text.compareAndUpdate({key: 'ViewInChat'});\r\n      }\r\n\r\n      if(replies) {\r\n        // const historyStorage = appMessagesManager.getHistoryStorage(replies.channel_id.toPeerId(true));\r\n        let isUnread = false;\r\n        if(replies.replies) {\r\n          if(replies.read_max_id !== undefined && replies.max_id !== undefined) {\r\n            isUnread = replies.read_max_id < replies.max_id;\r\n          }/*  else {\r\n            isUnread = !historyStorage.readMaxId || historyStorage.readMaxId < (replies.max_id || 0);\r\n          } */\r\n        }\r\n        this.classList.toggle('is-unread', isUnread);\r\n      }\r\n\r\n      let textSpan = this.children[1] as HTMLElement;\r\n      if(!textSpan) {\r\n        textSpan = document.createElement('span');\r\n        textSpan.classList.add('replies-footer-text');\r\n\r\n        const iconSpan = document.createElement('span');\r\n        iconSpan.classList.add('tgico-next');\r\n\r\n        const rippleContainer = document.createElement('div');\r\n        ripple(rippleContainer);\r\n\r\n        this.append(textSpan, iconSpan, rippleContainer);\r\n      }\r\n\r\n      replaceContent(textSpan, text.element);\r\n    } else {\r\n      this.classList.add('bubble-beside-button');\r\n      this.innerHTML = `<span class=\"tgico-commentssticker\"></span><span class=\"replies-beside-text\">${replies?.replies ? formatNumber(replies.replies, 0) : ''}</span>`;\r\n    }\r\n\r\n    if(replies && !this.updated && !this.message.pFlags.is_outgoing) {\r\n      appMessagesManager.subscribeRepliesThread(this.message.peerId, this.message.mid);\r\n      appMessagesManager.updateMessage(this.message.peerId, this.message.mid, 'replies_updated');\r\n      this.updated = true;\r\n    }\r\n\r\n    if(this.loadPromises) {\r\n      this.loadPromises = undefined;\r\n    }\r\n  }\r\n}\r\n\r\ncustomElements.define(TAG_NAME, RepliesElement);\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { formatTime, getFullDate } from \"../../helpers/date\";\nimport formatNumber from \"../../helpers/number/formatNumber\";\nimport { Message } from \"../../layer\";\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\nimport { i18n, _i18n } from \"../../lib/langPack\";\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\nimport { LazyLoadQueueIntersector } from \"../lazyLoadQueue\";\nimport PeerTitle from \"../peerTitle\";\nimport { wrapReply } from \"../wrappers\";\nimport Chat, { ChatType } from \"./chat\";\nimport ReactionsElement from \"./reactions\";\nimport RepliesElement from \"./replies\";\n\nconst NBSP = '&nbsp;';\n\nconst makeEdited = () => {\n  const edited = document.createElement('i');\n  edited.classList.add('edited');\n  _i18n(edited, 'EditedMessage');\n  return edited;\n};\n\nconst makeSponsored = () => i18n('SponsoredMessage');\n\nexport namespace MessageRender {\n  /* export const setText = () => {\n\n  }; */\n\n  export const setTime = (options: {\n    chatType: ChatType, \n    message: Message.message | Message.messageService,\n  }) => {\n    const {chatType, message} = options;\n    const date = new Date(message.date * 1000);\n    const args: (HTMLElement | string)[] = [];\n    \n    let editedSpan: HTMLElement, sponsoredSpan: HTMLElement, reactionsElement: ReactionsElement, reactionsMessage: Message.message;\n    \n    const isSponsored = !!(message as Message.message).pFlags.sponsored;\n    const isMessage = !('action' in message) && !isSponsored;\n    let hasReactions: boolean;\n    \n    let time: HTMLElement = isSponsored ? undefined : formatTime(date);\n    if(isMessage) {\n      if(message.views) {\n        const postAuthor = message.post_author || message.fwd_from?.post_author;\n  \n        const postViewsSpan = document.createElement('span');\n        postViewsSpan.classList.add('post-views');\n        postViewsSpan.innerHTML = formatNumber(message.views, 1);\n  \n        const channelViews = document.createElement('i');\n        channelViews.classList.add('tgico-channelviews', 'time-icon');\n  \n        args.push(postViewsSpan, channelViews);\n        if(postAuthor) {\n          const span = document.createElement('span');\n          span.innerHTML = RichTextProcessor.wrapEmojiText(postAuthor) + ',' + NBSP;\n          args.push(span);\n        }\n      }\n\n      if(message.edit_date && chatType !== 'scheduled' && !message.pFlags.edit_hide) {\n        args.unshift(editedSpan = makeEdited());\n      }\n  \n      if(chatType !== 'pinned' && message.pFlags.pinned) {\n        const i = document.createElement('i');\n        i.classList.add('tgico-pinnedchat', 'time-icon');\n        args.unshift(i);\n      }\n\n      if(message.peer_id._ === 'peerUser'/*  && message.reactions?.results?.length */) {\n        hasReactions = true;\n\n        reactionsMessage = appMessagesManager.getGroupsFirstMessage(message);\n\n        reactionsElement = new ReactionsElement();\n        reactionsElement.init(reactionsMessage, 'inline', true);\n        reactionsElement.render();\n        args.unshift(reactionsElement);\n      }\n    } else if(isSponsored) {\n      args.push(sponsoredSpan = makeSponsored());\n    }\n    \n    if(time) {\n      args.push(time);\n    }\n\n    let title = isSponsored ? undefined : getFullDate(date);\n    if(isMessage) {\n      title += (message.edit_date && !message.pFlags.edit_hide ? `\\nEdited: ${getFullDate(new Date(message.edit_date * 1000))}` : '')\n        + (message.fwd_from ? `\\nOriginal: ${getFullDate(new Date(message.fwd_from.date * 1000))}` : '');\n    }\n\n    const timeSpan = document.createElement('span');\n    timeSpan.classList.add('time', 'tgico');\n    // if(title) timeSpan.title = title;\n    timeSpan.append(...args);\n\n    const inner = document.createElement('div');\n    inner.classList.add('inner', 'tgico');\n    if(title) inner.title = title;\n\n    let clonedArgs = args;\n    if(editedSpan) {\n      clonedArgs[clonedArgs.indexOf(editedSpan)] = makeEdited();\n    }\n    if(sponsoredSpan) {\n      clonedArgs[clonedArgs.indexOf(sponsoredSpan)] = makeSponsored();\n    }\n    if(reactionsElement) {\n      const _reactionsElement = clonedArgs[clonedArgs.indexOf(reactionsElement)] = new ReactionsElement();\n      _reactionsElement.init(reactionsMessage, 'inline');\n      _reactionsElement.render();\n    }\n    clonedArgs = clonedArgs.map(a => a instanceof HTMLElement && !a.classList.contains('i18n') && !a.classList.contains('reactions') ? a.cloneNode(true) as HTMLElement : a);\n    if(time) {\n      clonedArgs[clonedArgs.length - 1] = formatTime(date); // clone time\n    }\n    inner.append(...clonedArgs);\n\n    timeSpan.append(inner);\n\n    return timeSpan;\n  };\n\n  export const renderReplies = ({bubble, bubbleContainer, message, messageDiv, loadPromises, lazyLoadQueue}: {\n    bubble: HTMLElement,\n    bubbleContainer: HTMLElement,\n    message: Message.message,\n    messageDiv: HTMLElement,\n    loadPromises?: Promise<any>[],\n    lazyLoadQueue?: LazyLoadQueueIntersector\n  }) => {\n    const isFooter = !bubble.classList.contains('sticker') && !bubble.classList.contains('emoji-big') && !bubble.classList.contains('round');\n    const repliesFooter = new RepliesElement();\n    repliesFooter.message = message;\n    repliesFooter.type = isFooter ? 'footer' : 'beside';\n    repliesFooter.loadPromises = loadPromises;\n    repliesFooter.lazyLoadQueue = lazyLoadQueue;\n    repliesFooter.init();\n    bubbleContainer.prepend(repliesFooter);\n    return isFooter;\n  };\n\n  export const setReply = ({chat, bubble, bubbleContainer, message}: {\n    chat: Chat,\n    bubble: HTMLElement,\n    bubbleContainer?: HTMLElement,\n    message: Message.message\n  }) => {\n    const isReplacing = !bubbleContainer;\n    if(isReplacing) {\n      bubbleContainer = bubble.querySelector('.bubble-content');\n    }\n\n    const currentReplyDiv = isReplacing ? bubbleContainer.querySelector('.reply') : null;\n    if(!message.reply_to_mid) {\n      if(currentReplyDiv) {\n        currentReplyDiv.remove();\n      }\n\n      bubble.classList.remove('is-reply');\n      return;\n    }\n\n\n    const replyToPeerId = message.reply_to.reply_to_peer_id ? chat.appPeersManager.getPeerId(message.reply_to.reply_to_peer_id) : chat.peerId;\n\n    let originalMessage = chat.appMessagesManager.getMessageByPeer(replyToPeerId, message.reply_to_mid);\n    let originalPeerTitle: string | HTMLElement;\n    \n    /////////this.log('message to render reply', originalMessage, originalPeerTitle, bubble, message);\n    \n    // need to download separately\n    if(originalMessage._ === 'messageEmpty') {\n      //////////this.log('message to render reply empty, need download', message, message.reply_to_mid);\n      chat.appMessagesManager.wrapSingleMessage(replyToPeerId, message.reply_to_mid);\n      chat.bubbles.needUpdate.push({replyToPeerId, replyMid: message.reply_to_mid, mid: message.mid});\n      \n      originalPeerTitle = i18n('Loading');\n    } else {\n      originalPeerTitle = new PeerTitle({\n        peerId: originalMessage.fromId || originalMessage.fwdFromId,\n        dialog: false,\n        onlyFirstName: false,\n        plainText: false\n      }).element;\n    }\n\n    const wrapped = wrapReply(originalPeerTitle, undefined, originalMessage);\n    if(currentReplyDiv) {\n      currentReplyDiv.replaceWith(wrapped);\n    } else {\n      bubbleContainer.append(wrapped);\n    }\n    //bubbleContainer.insertBefore(, nameContainer);\n    bubble.classList.add('is-reply');\n  };\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\n\r\nexport function getElementByPoint(container: HTMLElement, verticalSide: 'top' | 'bottom', horizontalSide: 'center' | 'left'): HTMLElement {\r\n  //return null;\r\n  const rect = container.getBoundingClientRect();\r\n  const x = horizontalSide === 'center' ? Math.ceil(rect.left + ((rect.right - rect.left) / 2) + 1) : Math.ceil(rect.left + 1);\r\n  const y = verticalSide === 'bottom' ? Math.floor(rect.top + rect.height - 1) : Math.ceil(rect.top + 1);\r\n  return document.elementFromPoint(x, y) as any;\r\n};\r\n\r\nMOUNT_CLASS_TO.getElementByPoint = getElementByPoint;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function reflowScrollableElement(element: HTMLElement) {\r\n  element.style.display = 'none';\r\n  void element.offsetLeft; // reflow\r\n  element.style.display = '';\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default class StickyIntersector {\r\n  private headersObserver: IntersectionObserver;\r\n  private elementsObserver: IntersectionObserver;\r\n\r\n  constructor(private container: HTMLElement, private handler: (stuck: boolean, target: HTMLElement) => void) {\r\n    this.observeHeaders();\r\n    this.observeElements();\r\n  }\r\n\r\n  /**\r\n   * Sets up an intersection observer to notify when elements with the class\r\n   * `.sticky_sentinel--top` become visible/invisible at the top of the container.\r\n   * @param {!Element} container\r\n   */\r\n  private observeHeaders() {\r\n    this.headersObserver = new IntersectionObserver((entries) => {\r\n      for(const entry of entries) {\r\n        const targetInfo = entry.boundingClientRect;\r\n        const stickyTarget = entry.target.parentElement;\r\n        const rootBoundsInfo = entry.rootBounds;\r\n  \r\n        // Started sticking.\r\n        if(targetInfo.bottom < rootBoundsInfo.top) {\r\n          this.handler(true, stickyTarget);\r\n        }\r\n  \r\n        // Stopped sticking.\r\n        if(targetInfo.bottom >= rootBoundsInfo.top &&\r\n            targetInfo.bottom < rootBoundsInfo.bottom) {\r\n          this.handler(false, stickyTarget);\r\n        }\r\n      }\r\n    }, {threshold: 0, root: this.container});\r\n  }\r\n  \r\n  private observeElements() {\r\n    this.elementsObserver = new IntersectionObserver((entries) => {\r\n      let entry = entries.filter(entry => entry.boundingClientRect.top < 0).sort((a, b) => a.boundingClientRect.top - b.boundingClientRect.top)[0];\r\n      if(!entry) return;\r\n      let container = entry.isIntersecting ? entry.target : entry.target.nextElementSibling;\r\n      this.handler(true, container as HTMLElement);\r\n    }, {root: this.container});\r\n  }\r\n\r\n  /**\r\n   * @param {!Element} container\r\n   * @param {string} className\r\n   */\r\n  private addSentinel(container: HTMLElement, className: string) {\r\n    const sentinel = document.createElement('div');\r\n    sentinel.classList.add('sticky_sentinel', className);\r\n    return container.appendChild(sentinel);\r\n  }\r\n\r\n  /**\r\n   * Notifies when elements w/ the `sticky` class begin to stick or stop sticking.\r\n   * Note: the elements should be children of `container`.\r\n   * @param {!Element} container\r\n   */\r\n  public observeStickyHeaderChanges(element: HTMLElement) {\r\n    const headerSentinel = this.addSentinel(element, 'sticky_sentinel--top');\r\n    this.headersObserver.observe(headerSentinel);\r\n\r\n    this.elementsObserver.observe(element);\r\n  }\r\n\r\n  public disconnect() {\r\n    this.headersObserver.disconnect();\r\n    this.elementsObserver.disconnect();\r\n  }\r\n\r\n  public unobserve(element: HTMLElement, headerSentinel: HTMLElement) {\r\n    this.elementsObserver.unobserve(element);\r\n    this.headersObserver.unobserve(headerSentinel);\r\n  }\r\n}","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport App from \"../../config/app\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport indexOfAndSplice from \"../../helpers/array/indexOfAndSplice\";\nimport isObject from \"../../helpers/object/isObject\";\nimport validateInitObject from \"../../helpers/object/validateInitObject\";\nimport I18n from \"../langPack\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport RichTextProcessor from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport SearchIndex from \"../searchIndex\";\nimport stateStorage from \"../stateStorage\";\nimport appStateManager from \"./appStateManager\";\n\ntype EmojiLangPack = {\n  keywords: {\n    [keyword: string]: string[],\n  },\n  version: number,\n  langCode: string\n};\n\nconst EMOJI_LANG_PACK: EmojiLangPack = {\n  keywords: {},\n  version: 0,\n  langCode: App.langPackCode\n};\n\nconst RECENT_MAX_LENGTH = 36;\n\nexport class AppEmojiManager {\n  private static POPULAR_EMOJI = [\"😂\", \"😘\", \"❤️\", \"😍\", \"😊\", \"😁\", \"👍\", \"☺️\", \"😔\", \"😄\", \"😭\", \"💋\", \"😒\", \"😳\", \"😜\", \"🙈\", \"😉\", \"😃\", \"😢\", \"😝\", \"😱\", \"😡\", \"😏\", \"😞\", \"😅\", \"😚\", \"🙊\", \"😌\", \"😀\", \"😋\", \"😆\", \"👌\", \"😐\", \"😕\"];\n  private keywordLangPacks: {\n    [langCode: string]: EmojiLangPack\n  } = {};\n\n  private index: SearchIndex<EmojiLangPack['keywords'][keyof EmojiLangPack['keywords']]>;\n  private indexedLangPacks: {[langCode: string]: boolean} = {};\n\n  private getKeywordsPromises: {[langCode: string]: Promise<EmojiLangPack>} = {};\n\n  private recent: string[];\n  private getRecentEmojisPromise: Promise<AppEmojiManager['recent']>;\n\n  /* public getPopularEmoji() {\n    return stateStorage.get('emojis_popular').then(popEmojis => {\n      var result = []\n      if (popEmojis && popEmojis.length) {\n        for (var i = 0, len = popEmojis.length; i < len; i++) {\n          result.push({code: popEmojis[i][0], rate: popEmojis[i][1]})\n        }\n        callback(result)\n        return\n      }\n\n      return stateStorage.get('emojis_recent').then(recentEmojis => {\n        recentEmojis = recentEmojis || popular || []\n        var shortcut\n        var code\n        for (var i = 0, len = recentEmojis.length; i < len; i++) {\n          shortcut = recentEmojis[i]\n          if (Array.isArray(shortcut)) {\n            shortcut = shortcut[0]\n          }\n          if (shortcut && typeof shortcut === 'string') {\n            if (shortcut.charAt(0) == ':') {\n              shortcut = shortcut.substr(1, shortcut.length - 2)\n            }\n            if (code = shortcuts[shortcut]) {\n              result.push({code: code, rate: 1})\n            }\n          }\n        }\n        callback(result)\n      });\n    });\n  }\n\n  function pushPopularEmoji (code) {\n    getPopularEmoji(function (popularEmoji) {\n      var exists = false\n      var count = popularEmoji.length\n      var result = []\n      for (var i = 0; i < count; i++) {\n        if (popularEmoji[i].code == code) {\n          exists = true\n          popularEmoji[i].rate++\n        }\n        result.push([popularEmoji[i].code, popularEmoji[i].rate])\n      }\n      if (exists) {\n        result.sort(function (a, b) {\n          return b[1] - a[1]\n        })\n      } else {\n        if (result.length > 41) {\n          result = result.slice(0, 41)\n        }\n        result.push([code, 1])\n      }\n      ConfigStorage.set({emojis_popular: result})\n    })\n  } */\n\n  public getEmojiKeywords(langCode: string = App.langPackCode) {\n    const promise = this.getKeywordsPromises[langCode];\n    if(promise) {\n      return promise;\n    }\n\n    const storageKey: any = 'emojiKeywords_' + langCode;\n    return this.getKeywordsPromises[langCode] = stateStorage.get(storageKey).then((pack: EmojiLangPack) => {\n      if(!isObject(pack)) {\n        pack = {} as any;\n      }\n\n      validateInitObject(EMOJI_LANG_PACK, pack);\n\n      // important\n      pack.langCode = langCode;\n      this.keywordLangPacks[langCode] = pack;\n\n      return apiManager.invokeApi('messages.getEmojiKeywordsDifference', {\n        lang_code: pack.langCode,\n        from_version: pack.version\n      }).then((keywordsDifference) => {\n        pack.version = keywordsDifference.version;\n        \n        const packKeywords = pack.keywords;\n        const keywords = keywordsDifference.keywords;\n        for(let i = 0, length = keywords.length; i < length; ++i) {\n          const {keyword, emoticons} = keywords[i];\n          packKeywords[keyword] = emoticons;\n        }\n\n        stateStorage.set({\n          [storageKey]: pack\n        });\n\n        return pack;\n      }, () => {\n        return pack;\n      });\n    });\n  }\n\n  public getBothEmojiKeywords() {\n    const promises: Promise<any>[] = [\n      this.getEmojiKeywords()\n    ];\n\n    if(I18n.lastRequestedLangCode !== App.langPackCode) {\n      promises.push(this.getEmojiKeywords(I18n.lastRequestedLangCode));\n    }\n\n    if(!this.recent) {\n      promises.push(this.getRecentEmojis());\n    }\n\n    return Promise.all(promises);\n  }\n\n  public indexEmojis() {\n    if(!this.index) {\n      this.index = new SearchIndex(undefined, 2);\n    }\n\n    for(const langCode in this.keywordLangPacks) {\n      if(this.indexedLangPacks[langCode]) {\n        continue;\n      }\n\n      const pack = this.keywordLangPacks[langCode];\n      const keywords = pack.keywords;\n\n      for(const keyword in keywords) {\n        const emoticons = keywords[keyword];\n        this.index.indexObject(emoticons, keyword);\n      }\n\n      this.indexedLangPacks[langCode] = true;\n    }\n  }\n\n  public searchEmojis(q: string) {\n    this.indexEmojis();\n\n    q = q.toLowerCase().replace(/_/g, ' ');\n    \n    //const perf = performance.now();\n    let emojis: Array<string>;\n    if(q.trim()) {\n      const set = this.index.search(q);\n      emojis = Array.from(set).reduce((acc, v) => acc.concat(v), []);\n    } else {\n      emojis = this.recent.concat(AppEmojiManager.POPULAR_EMOJI).slice(0, RECENT_MAX_LENGTH);\n    }\n\n    emojis = Array.from(new Set(emojis));\n    //console.log('searchEmojis', q, 'time', performance.now() - perf);\n\n    /* for(let i = 0, length = emojis.length; i < length; ++i) {\n      if(emojis[i].includes(zeroWidthJoiner) && !emojis[i].includes('\\ufe0f')) {\n        emojis[i] += '\\ufe0f';\n      }\n    } */\n\n    return emojis;\n  }\n\n  public getRecentEmojis() {\n    if(this.getRecentEmojisPromise) return this.getRecentEmojisPromise;\n    return this.getRecentEmojisPromise = appStateManager.getState().then(state => {\n      return this.recent = Array.isArray(state.recentEmoji) ? state.recentEmoji : [];\n    });\n  }\n\n  public pushRecentEmoji(emoji: string) {\n    emoji = RichTextProcessor.fixEmoji(emoji);\n    this.getRecentEmojis().then(recent => {\n      indexOfAndSplice(recent, emoji);\n      recent.unshift(emoji);\n      if(recent.length > RECENT_MAX_LENGTH) {\n        recent.length = RECENT_MAX_LENGTH;\n      }\n\n      appStateManager.pushToState('recentEmoji', recent);\n      rootScope.dispatchEvent('emoji_recent', emoji);\n    });\n  }\n}\n\nconst appEmojiManager = new AppEmojiManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appEmojiManager = appEmojiManager);\nexport default appEmojiManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport emoticonsDropdown, { EmoticonsDropdown, EmoticonsTab } from \"..\";\nimport { cancelEvent } from \"../../../helpers/dom/cancelEvent\";\nimport findUpClassName from \"../../../helpers/dom/findUpClassName\";\nimport { fastRaf } from \"../../../helpers/schedulers\";\nimport { pause } from \"../../../helpers/schedulers/pause\";\nimport appEmojiManager from \"../../../lib/appManagers/appEmojiManager\";\nimport appImManager from \"../../../lib/appManagers/appImManager\";\nimport Config from \"../../../lib/config\";\nimport { i18n, LangPackKey } from \"../../../lib/langPack\";\nimport { RichTextProcessor } from \"../../../lib/richtextprocessor\";\nimport rootScope from \"../../../lib/rootScope\";\nimport { emojiFromCodePoints } from \"../../../vendor/emoji\";\nimport { putPreloader } from \"../../misc\";\nimport Scrollable from \"../../scrollable\";\nimport StickyIntersector from \"../../stickyIntersector\";\nimport IS_EMOJI_SUPPORTED from \"../../../environment/emojiSupport\";\nimport { IS_TOUCH_SUPPORTED } from \"../../../environment/touchSupport\";\nimport blurActiveElement from \"../../../helpers/dom/blurActiveElement\";\n\nconst loadedURLs: Set<string> = new Set();\nexport function appendEmoji(emoji: string, container: HTMLElement, prepend = false, unify = false) {\n  //const emoji = details.unified;\n  //const emoji = (details.unified as string).split('-')\n  //.reduce((prev, curr) => prev + String.fromCodePoint(parseInt(curr, 16)), '');\n\n  const spanEmoji = document.createElement('span');\n  spanEmoji.classList.add('super-emoji');\n\n  let kek: string;\n  if(unify && !IS_EMOJI_SUPPORTED) {\n    kek = RichTextProcessor.wrapSingleEmoji(emoji);\n  } else {\n    emoji = RichTextProcessor.fixEmoji(emoji);\n    kek = RichTextProcessor.wrapEmojiText(emoji);\n  }\n\n  /* if(!kek.includes('emoji')) {\n    console.log(emoji, kek, spanEmoji, emoji.length, new TextEncoder().encode(emoji), emojiUnicode(emoji));\n    return;\n  } */\n\n  //console.log(kek);\n\n  spanEmoji.innerHTML = kek;\n\n  if(spanEmoji.children.length > 1) {\n    const first = spanEmoji.firstElementChild;\n    spanEmoji.innerHTML = '';\n    spanEmoji.append(first);\n  }\n\n  if(spanEmoji.firstElementChild && !IS_EMOJI_SUPPORTED) {\n    const image = spanEmoji.firstElementChild as HTMLImageElement;\n    \n    const url = image.src;\n    if(!loadedURLs.has(url)) {\n      image.setAttribute('loading', 'lazy');\n      const placeholder = document.createElement('span');\n      placeholder.classList.add('emoji-placeholder');\n\n      if(rootScope.settings.animationsEnabled) {\n        image.style.opacity = '0';\n        placeholder.style.opacity = '1';\n      }\n\n      image.addEventListener('load', () => {\n        fastRaf(() => {\n          if(rootScope.settings.animationsEnabled) {\n            image.style.opacity = '';\n            placeholder.style.opacity = '';\n          }\n\n          spanEmoji.classList.remove('empty');\n\n          loadedURLs.add(url);\n        });\n      }, {once: true});\n\n      spanEmoji.append(placeholder);\n    }\n  }\n\n  //spanEmoji = spanEmoji.firstElementChild as HTMLSpanElement;\n  //spanEmoji.setAttribute('emoji', emoji);\n  if(prepend) container.prepend(spanEmoji);\n  else container.appendChild(spanEmoji);\n}\n\nexport function getEmojiFromElement(element: HTMLElement) {\n  if(!findUpClassName(element, 'super-emoji')) return '';\n\n  if(element.nodeType === 3) return element.nodeValue;\n  if(element.tagName === 'SPAN' && !element.classList.contains('emoji') && element.firstElementChild) {\n    element = element.firstElementChild as HTMLElement;\n  }\n  \n  return element.getAttribute('alt') || element.innerText;\n}\n\nexport default class EmojiTab implements EmoticonsTab {\n  private content: HTMLElement;\n\n  private recentItemsDiv: HTMLElement;\n\n  private scroll: Scrollable;\n  private stickyIntersector: StickyIntersector;\n  private menu: HTMLElement;\n\n  private closeScrollTop = 0;\n  private setMenuActive: (id: number) => boolean;\n\n  init() {\n    this.content = document.getElementById('content-emoji') as HTMLDivElement;\n\n    const categories: LangPackKey[] = [\n      'Emoji.SmilesAndPeople', \n      'Emoji.AnimalsAndNature', \n      'Emoji.FoodAndDrink', \n      'Emoji.TravelAndPlaces', \n      'Emoji.ActivityAndSport', \n      'Emoji.Objects', \n      /* 'Emoji.Symbols',  */\n      'Emoji.Flags', \n      'Skin Tones' as any\n    ];\n    const divs: {\n      [category in LangPackKey]?: HTMLDivElement\n    } = {};\n\n    const sorted: Map<LangPackKey, string[]> = new Map([\n      [\n        'Emoji.Recent',\n        []\n      ]\n    ]);\n\n    for(const emoji in Config.Emoji) {\n      const details = Config.Emoji[emoji];\n      const i = '' + details;\n      const category = categories[+i[0] - 1];\n      if(!category) continue; // maybe it's skin tones\n\n      let s = sorted.get(category);\n      if(!s) {\n        s = [];\n        sorted.set(category, s);\n      }\n      \n      s[+i.slice(1) || 0] = emoji;\n    }\n\n    //console.log('emoticons sorted:', sorted);\n\n    //Object.keys(sorted).forEach(c => sorted[c].sort((a, b) => a - b));\n\n    sorted.delete(categories.pop());\n\n    //console.time('emojiParse');\n    sorted.forEach((emojis, category) => {\n      const div = document.createElement('div');\n      div.classList.add('emoji-category');\n\n      const titleDiv = document.createElement('div');\n      titleDiv.classList.add('category-title');\n      titleDiv.append(i18n(category));\n\n      const itemsDiv = document.createElement('div');\n      itemsDiv.classList.add('super-emojis');\n\n      div.append(titleDiv, itemsDiv);\n\n      emojis.forEach(unified => {\n        /* if(emojiUnicode(emoji) === '1f481-200d-2642') {\n          console.log('append emoji', emoji, emojiUnicode(emoji));\n        } */\n\n        let emoji = emojiFromCodePoints(unified);\n        //if(emoji.includes('🕵')) {\n          //console.log('toCodePoints', toCodePoints(emoji));\n          //emoji = emoji.replace(/(\\u200d[\\u2640\\u2642\\u2695])(?!\\ufe0f)/, '\\ufe0f$1');\n          // const zwjIndex = emoji.indexOf('\\u200d');\n          // if(zwjIndex !== -1 && !emoji.includes('\\ufe0f')) {\n          //   /* if(zwjIndex !== (emoji.length - 1)) {\n          //     emoji = emoji.replace(/(\\u200d)/g, '\\ufe0f$1');\n          //   } */\n\n          //   emoji += '\\ufe0f';\n          //   //emoji += '\\ufe0f';\n          // }\n\n          //debugger;\n        //}\n\n        appendEmoji(emoji/* .replace(/[\\ufe0f\\u2640\\u2642\\u2695]/g, '') */, itemsDiv, false/* , false */);\n\n        /* if(category === 'Smileys & Emotion') {\n          console.log('appended emoji', emoji, itemsDiv.children[itemsDiv.childElementCount - 1].innerHTML, emojiUnicode(emoji));\n        } */\n      });\n\n      divs[category] = div;\n    });\n\n    //console.timeEnd('emojiParse');\n\n    const menu = this.menu = this.content.previousElementSibling as HTMLElement;\n    const emojiScroll = this.scroll = new Scrollable(this.content, 'EMOJI');\n\n    //emojiScroll.setVirtualContainer(emojiScroll.container);\n\n    const preloader = putPreloader(this.content, true);\n\n    Promise.all([\n      pause(200),\n      appEmojiManager.getRecentEmojis().then(recent => {\n        const hasRecent = !!recent.length;\n        const activeId = hasRecent ? 0 : 1;\n        this.menu.children[0].classList.toggle('hide', !hasRecent);\n        this.menu.children[activeId].classList.add('active');\n        const m = EmoticonsDropdown.menuOnClick(menu, emojiScroll, undefined, activeId);\n        this.stickyIntersector = m.stickyIntersector;\n        this.setMenuActive = m.setActive;\n        return recent;\n      })\n    ]).then(([_, recent]) => {\n      preloader.remove();\n\n      this.recentItemsDiv = divs['Emoji.Recent'].querySelector('.super-emojis');\n      for(const emoji of recent) {\n        appendEmoji(emoji, this.recentItemsDiv);\n      }\n\n      this.recentItemsDiv.parentElement.classList.toggle('hide', !this.recentItemsDiv.childElementCount);\n\n      categories.unshift('Emoji.Recent');\n      categories.map(category => {\n        const div = divs[category];\n  \n        if(!div) {\n          console.error('no div by category:', category);\n        }\n  \n        emojiScroll.container.append(div);\n        this.stickyIntersector.observeStickyHeaderChanges(div);\n        return div;\n      });\n    });\n\n    this.content.addEventListener('click', this.onContentClick);\n    this.init = null;\n\n    rootScope.addEventListener('emoji_recent', (emoji) => {\n      const children = Array.from(this.recentItemsDiv.children) as HTMLElement[];\n      for(let i = 0, length = children.length; i < length; ++i) {\n        const el = children[i];\n        const _emoji = RichTextProcessor.fixEmoji(getEmojiFromElement(el));\n        if(emoji === _emoji) {\n          if(i === 0) {\n            return;\n          }\n\n          el.remove();\n        }\n      }\n\n      appendEmoji(emoji, this.recentItemsDiv, true);\n      this.recentItemsDiv.parentElement.classList.remove('hide');\n      this.menu.children[0].classList.remove('hide');\n\n      if(!this.closeScrollTop) {\n        this.setMenuActive(0);\n      }\n    });\n\n    emoticonsDropdown.addEventListener('close', () => {\n      this.closeScrollTop = this.scroll.scrollTop;\n    });\n  }\n\n  onContentClick = (e: MouseEvent) => {\n    cancelEvent(e);\n    \n    const emoji = getEmojiFromElement(e.target as HTMLElement);\n    if(!emoji) {\n      return;\n    }\n\n    appImManager.chat.input.onEmojiSelected(emoji, false);\n    if(IS_TOUCH_SUPPORTED) {\n      blurActiveElement();\n    }\n  };\n\n  onClose() {\n\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appDocsManager, {MyDocument} from \"../lib/appManagers/appDocsManager\";\r\nimport { wrapVideo } from \"./wrappers\";\r\nimport { LazyLoadQueueRepeat2 } from \"./lazyLoadQueue\";\r\nimport animationIntersector from \"./animationIntersector\";\r\nimport Scrollable from \"./scrollable\";\r\nimport { CancellablePromise, deferredPromise } from \"../helpers/cancellablePromise\";\r\nimport renderImageFromUrl from \"../helpers/dom/renderImageFromUrl\";\r\nimport calcImageInBox from \"../helpers/calcImageInBox\";\r\nimport { doubleRaf } from \"../helpers/schedulers\";\r\n\r\nconst width = 400;\r\nconst maxSingleWidth = width - 100;\r\nconst height = 100;\r\n\r\nexport default class GifsMasonry {\r\n  public lazyLoadQueue: LazyLoadQueueRepeat2;\r\n  private scrollPromise: CancellablePromise<void> = Promise.resolve();\r\n  private timeout: number = 0;\r\n\r\n  constructor(private element: HTMLElement, private group: string, private scrollable: Scrollable, attach = true) {\r\n    this.lazyLoadQueue = new LazyLoadQueueRepeat2(undefined, (target, visible) => {\r\n      if(visible) {\r\n        this.processVisibleDiv(target);\r\n      } else {\r\n        this.processInvisibleDiv(target);\r\n      }\r\n    });\r\n\r\n    /* setInterval(() => {\r\n      // @ts-ignore\r\n      const players = animationIntersector.byGroups[group];\r\n\r\n      if(players) {\r\n        console.log(`GIFS RENDERED IN ${group}:`, players.length, players.filter(p => !p.animation.paused).length, this.lazyLoadQueue.intersector.getVisible().length);\r\n      }\r\n    }, .25e3); */\r\n\r\n    if(attach) {\r\n      this.attach();\r\n    }\r\n  }\r\n  \r\n  private onScroll = () => {\r\n    if(this.timeout) {\r\n      clearTimeout(this.timeout);\r\n    } else {\r\n      this.scrollPromise = deferredPromise<void>();\r\n      //animationIntersector.checkAnimations(true, group);\r\n    }\r\n\r\n    this.timeout = window.setTimeout(() => {\r\n      this.timeout = 0;\r\n      this.scrollPromise.resolve();\r\n      //animationIntersector.checkAnimations(false, group);\r\n    }, 150);\r\n  };\r\n\r\n  public attach() {\r\n    this.scrollable.container.addEventListener('scroll', this.onScroll);\r\n  }\r\n\r\n  public detach() {\r\n    this.clear();\r\n    this.scrollable.container.removeEventListener('scroll', this.onScroll);\r\n  }\r\n\r\n  public clear() {\r\n    this.lazyLoadQueue.clear();\r\n  }\r\n\r\n  private processVisibleDiv(div: HTMLElement) {\r\n    const video = div.querySelector('video');\r\n    if(video) {\r\n      return;\r\n    }\r\n\r\n    //console.log('processVisibleDiv');\r\n\r\n    const load = () => {\r\n      const docId = div.dataset.docId;\r\n      const doc = appDocsManager.getDoc(docId);\r\n\r\n      const promise = this.scrollPromise.then(() => {\r\n        const res = wrapVideo({\r\n          doc,\r\n          container: div as HTMLDivElement,\r\n          lazyLoadQueue: null,\r\n          //lazyLoadQueue: EmoticonsDropdown.lazyLoadQueue,\r\n          group: this.group,\r\n          noInfo: true,\r\n        });\r\n    \r\n        const promise = res.loadPromise;\r\n        promise.finally(() => {\r\n          const video = div.querySelector('video');\r\n\r\n          div.style.opacity = '';\r\n          const img = div.querySelector('img');\r\n          img && img.classList.add('hide');\r\n\r\n          if(video && !video.parentElement) {\r\n            setTimeout(() => {\r\n              video.src = '';\r\n              video.load();\r\n              const animations = animationIntersector.getAnimations(video);\r\n              animations.forEach(item => {\r\n                animationIntersector.checkAnimation(item, true, true);\r\n              });\r\n            }, 0);\r\n          }\r\n\r\n          //clearTimeout(timeout);\r\n          if(!this.lazyLoadQueue.intersector.isVisible(div)) {\r\n            this.processInvisibleDiv(div);\r\n          }\r\n        });\r\n\r\n        return promise;\r\n      });\r\n\r\n      /* let timeout = window.setTimeout(() => {\r\n        console.error('processVisibleDiv timeout', div, doc);\r\n      }, 1e3); */\r\n\r\n      return promise;\r\n    };\r\n\r\n    //return load();\r\n    \r\n    this.lazyLoadQueue.push({div, load});\r\n  }\r\n\r\n  public processInvisibleDiv = (div: HTMLElement) => {\r\n    return this.scrollPromise.then(async() => {\r\n      //return;\r\n\r\n      if(this.lazyLoadQueue.intersector.isVisible(div)) {\r\n        return;\r\n      }\r\n\r\n      const video = div.querySelector('video');\r\n      const img = div.querySelector('img');\r\n  \r\n      if(img) {\r\n        img && img.classList.remove('hide');\r\n  \r\n        await doubleRaf();\r\n      }\r\n\r\n      if(this.lazyLoadQueue.intersector.isVisible(div)) {\r\n        return;\r\n      }\r\n  \r\n      if(video) {\r\n        video.remove();\r\n        video.src = '';\r\n        video.load();\r\n        const animations = animationIntersector.getAnimations(video);\r\n        animations.forEach(item => {\r\n          animationIntersector.checkAnimation(item, true, true);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  public add(doc: MyDocument, appendTo = this.element) {\r\n    let gifWidth = doc.w;\r\n    let gifHeight = doc.h;\r\n    if(gifHeight < height) {\r\n      gifWidth = height / gifHeight * gifWidth;\r\n      gifHeight = height;\r\n    }\r\n\r\n    const willUseWidth = Math.min(maxSingleWidth, width, gifWidth);\r\n    const size = calcImageInBox(gifWidth, gifHeight, willUseWidth, height);\r\n\r\n    /* wastedWidth += w;\r\n\r\n    if(wastedWidth === width || h < height) {\r\n      wastedWidth = 0;\r\n      console.log('completed line', i, line);\r\n      line = [];\r\n      continue;\r\n    }\r\n\r\n    line.push(gif); */\r\n\r\n    //console.log('gif:', gif, w, h);\r\n\r\n    const div = document.createElement('div');\r\n    div.classList.add('gif', 'fade-in-transition');\r\n    div.style.width = size.width + 'px';\r\n    div.style.opacity = '0';\r\n    //div.style.height = h + 'px';\r\n    div.dataset.docId = '' + doc.id;\r\n\r\n    appendTo.append(div);\r\n\r\n    //this.lazyLoadQueue.observe({div, load: this.processVisibleDiv});\r\n    this.lazyLoadQueue.observe(div);\r\n\r\n    //let preloader = new ProgressivePreloader(div);\r\n\r\n    const gotThumb = appDocsManager.getThumb(doc, false);\r\n\r\n    const willBeAPoster = !!gotThumb;\r\n    let img: HTMLImageElement;\r\n    if(willBeAPoster) {\r\n      img = new Image();\r\n      img.classList.add('media-poster');\r\n\r\n      if(!gotThumb.cacheContext.url) {\r\n        gotThumb.promise.then(() => {\r\n          img.src = gotThumb.cacheContext.url;\r\n        });\r\n      }\r\n    }\r\n\r\n    const afterRender = () => {\r\n      if(img) {\r\n        div.append(img);\r\n        div.style.opacity = '';\r\n      }\r\n    };\r\n\r\n    (gotThumb?.cacheContext?.url ? renderImageFromUrl(img, gotThumb.cacheContext.url, afterRender) : afterRender());\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport emoticonsDropdown, { EmoticonsDropdown, EmoticonsTab, EMOTICONSSTICKERGROUP } from \"..\";\r\nimport GifsMasonry from \"../../gifsMasonry\";\r\nimport Scrollable from \"../../scrollable\";\r\nimport { putPreloader } from \"../../misc\";\r\nimport apiManager from \"../../../lib/mtproto/mtprotoworker\";\r\nimport appDocsManager, {MyDocument} from \"../../../lib/appManagers/appDocsManager\";\r\n\r\nexport default class GifsTab implements EmoticonsTab {\r\n  private content: HTMLElement;\r\n\r\n  init() {\r\n    this.content = document.getElementById('content-gifs');\r\n    const gifsContainer = this.content.firstElementChild as HTMLDivElement;\r\n    gifsContainer.addEventListener('click', EmoticonsDropdown.onMediaClick);\r\n\r\n    const scroll = new Scrollable(this.content, 'GIFS');\r\n    const masonry = new GifsMasonry(gifsContainer, EMOTICONSSTICKERGROUP, scroll);\r\n    const preloader = putPreloader(this.content, true);\r\n\r\n    apiManager.invokeApi('messages.getSavedGifs', {hash: '0'}).then((res) => {\r\n      //console.log('getSavedGifs res:', res);\r\n\r\n      if(res._ === 'messages.savedGifs') {\r\n        res.gifs.forEach((doc, idx) => {\r\n          res.gifs[idx] = doc = appDocsManager.saveDoc(doc);\r\n          //if(doc._ === 'documentEmpty') return;\r\n          masonry.add(doc as MyDocument);\r\n        });\r\n      }\r\n\r\n      preloader.remove();\r\n    });\r\n\r\n    emoticonsDropdown.addLazyLoadQueueRepeat(masonry.lazyLoadQueue, masonry.processInvisibleDiv);\r\n\r\n    this.init = null;\r\n  }\r\n\r\n  onClose() {\r\n\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport emoticonsDropdown, { EmoticonsDropdown, EMOTICONSSTICKERGROUP, EmoticonsTab } from \"..\";\r\nimport findUpAttribute from \"../../../helpers/dom/findUpAttribute\";\r\nimport findUpClassName from \"../../../helpers/dom/findUpClassName\";\r\nimport mediaSizes from \"../../../helpers/mediaSizes\";\r\nimport { MessagesAllStickers, StickerSet } from \"../../../layer\";\r\nimport appDocsManager, { MyDocument } from \"../../../lib/appManagers/appDocsManager\";\r\nimport appStickersManager from \"../../../lib/appManagers/appStickersManager\";\r\nimport { i18n } from \"../../../lib/langPack\";\r\nimport { RichTextProcessor } from \"../../../lib/richtextprocessor\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport animationIntersector from \"../../animationIntersector\";\r\nimport LazyLoadQueue, { LazyLoadQueueRepeat } from \"../../lazyLoadQueue\";\r\nimport { putPreloader } from \"../../misc\";\r\nimport PopupStickers from \"../../popups/stickers\";\r\nimport Scrollable, { ScrollableX } from \"../../scrollable\";\r\nimport StickyIntersector from \"../../stickyIntersector\";\r\nimport { wrapSticker, wrapStickerSetThumb } from \"../../wrappers\";\r\n\r\nexport class SuperStickerRenderer {\r\n  public lazyLoadQueue: LazyLoadQueueRepeat;\r\n  private animatedDivs: Set<HTMLDivElement> = new Set();\r\n\r\n  constructor(private regularLazyLoadQueue: LazyLoadQueue, private group: string) {\r\n    this.lazyLoadQueue = new LazyLoadQueueRepeat(undefined, (target, visible) => {\r\n      if(!visible) {\r\n        this.processInvisibleDiv(target as HTMLDivElement);\r\n      }\r\n    });\r\n  }\r\n\r\n  public clear() {\r\n    this.lazyLoadQueue.clear();\r\n  }\r\n\r\n  public renderSticker(doc: MyDocument, div?: HTMLDivElement, loadPromises?: Promise<any>[]) {\r\n    if(!div) {\r\n      div = document.createElement('div');\r\n      div.classList.add('grid-item', 'super-sticker');\r\n\r\n      if(doc.animated) {\r\n        this.observeAnimatedDiv(div);\r\n      }\r\n    }\r\n\r\n    // * This will wrap only a thumb\r\n    wrapSticker({\r\n      doc, \r\n      div,\r\n      lazyLoadQueue: this.regularLazyLoadQueue, \r\n      group: this.group, \r\n      onlyThumb: doc.animated,\r\n      loadPromises\r\n    });\r\n\r\n    return div;\r\n  }\r\n\r\n  public observeAnimatedDiv(div: HTMLDivElement) {\r\n    this.animatedDivs.add(div);\r\n\r\n    this.lazyLoadQueue.observe({\r\n      div, \r\n      load: this.processVisibleDiv\r\n    });\r\n  }\r\n\r\n  private checkAnimationContainer = (div: HTMLElement, visible: boolean) => {\r\n    //console.error('checkAnimationContainer', div, visible);\r\n    const players = animationIntersector.getAnimations(div);\r\n    players.forEach(player => {\r\n      if(!visible) {\r\n        animationIntersector.checkAnimation(player, true, true);\r\n      } else {\r\n        animationIntersector.checkAnimation(player, false);\r\n      }\r\n    });\r\n  };\r\n\r\n  private processVisibleDiv = (div: HTMLElement) => {\r\n    const docId = div.dataset.docId;\r\n    const doc = appDocsManager.getDoc(docId);\r\n    \r\n    const size = mediaSizes.active.esgSticker.width;\r\n\r\n    //console.log('processVisibleDiv:', div);\r\n\r\n    const promise = wrapSticker({\r\n      doc, \r\n      div: div as HTMLDivElement,\r\n      width: size,\r\n      height: size,\r\n      lazyLoadQueue: null, \r\n      group: this.group, \r\n      onlyThumb: false,\r\n      play: true,\r\n      loop: true\r\n    });\r\n\r\n    promise.then(() => {\r\n      //clearTimeout(timeout);\r\n      this.checkAnimationContainer(div, this.lazyLoadQueue.intersector.isVisible(div));\r\n    });\r\n\r\n    /* let timeout = window.setTimeout(() => {\r\n      console.error('processVisibleDiv timeout', div, doc);\r\n    }, 1e3); */\r\n\r\n    return promise;\r\n  };\r\n\r\n  public processInvisibleDiv = (div: HTMLElement) => {\r\n    const docId = div.dataset.docId;\r\n    const doc = appDocsManager.getDoc(docId);\r\n\r\n    //console.log('STICKER INvisible:', /* div,  */docId);\r\n\r\n    this.checkAnimationContainer(div, false);\r\n\r\n    div.innerHTML = '';\r\n    this.renderSticker(doc, div as HTMLDivElement);\r\n  };\r\n}\r\n\r\nexport default class StickersTab implements EmoticonsTab {\r\n  private content: HTMLElement;\r\n  private stickersDiv: HTMLElement;\r\n\r\n  private stickerSets: {[id: string]: {\r\n    stickers: HTMLElement,\r\n    tab: HTMLElement\r\n  }} = {};\r\n\r\n  private recentDiv: HTMLElement;\r\n  private recentStickers: MyDocument[] = [];\r\n\r\n  private scroll: Scrollable;\r\n\r\n  private menu: HTMLElement;\r\n  \r\n  private mounted = false;\r\n\r\n  private queueCategoryPush: {element: HTMLElement, prepend: boolean}[] = [];\r\n\r\n  private stickyIntersector: StickyIntersector;\r\n\r\n  private superStickerRenderer: SuperStickerRenderer;\r\n\r\n  categoryPush(categoryDiv: HTMLElement, categoryTitle: string = '', promise: Promise<MyDocument[]>, prepend?: boolean) {\r\n    //if((docs.length % 5) !== 0) categoryDiv.classList.add('not-full');\r\n\r\n    const itemsDiv = document.createElement('div');\r\n    itemsDiv.classList.add('category-items', 'super-stickers');\r\n\r\n    const titleDiv = document.createElement('div');\r\n    titleDiv.classList.add('category-title');\r\n\r\n    if(categoryTitle) {\r\n      titleDiv.innerHTML = categoryTitle;\r\n    }\r\n\r\n    categoryDiv.append(titleDiv, itemsDiv);\r\n\r\n    this.stickyIntersector.observeStickyHeaderChanges(categoryDiv);\r\n\r\n    this.queueCategoryPush.push({element: categoryDiv, prepend});\r\n\r\n    promise.then(documents => {\r\n      documents.forEach(doc => {\r\n        //if(doc._ === 'documentEmpty') return;\r\n        itemsDiv.append(this.superStickerRenderer.renderSticker(doc));\r\n      });\r\n\r\n      if(this.queueCategoryPush.length) {\r\n        this.queueCategoryPush.forEach(({element, prepend}) => {\r\n          if(prepend) {\r\n            if(this.recentDiv.parentElement) {\r\n              this.stickersDiv.prepend(element);\r\n              this.stickersDiv.prepend(this.recentDiv);\r\n            } else {\r\n              this.stickersDiv.prepend(element);\r\n            }\r\n          } else this.stickersDiv.append(element);\r\n        });\r\n\r\n        this.queueCategoryPush.length = 0;\r\n      }\r\n    });\r\n\r\n    return {titleDiv};\r\n  }\r\n\r\n  async renderStickerSet(set: StickerSet.stickerSet, prepend = false) {\r\n    const categoryDiv = document.createElement('div');\r\n    categoryDiv.classList.add('sticker-category');\r\n    categoryDiv.dataset.id = '' + set.id;\r\n    categoryDiv.dataset.access_hash = '' + set.access_hash;\r\n\r\n    const button = document.createElement('button');\r\n    button.classList.add('btn-icon', 'menu-horizontal-div-item');\r\n\r\n    this.stickerSets[set.id] = {\r\n      stickers: categoryDiv,\r\n      tab: button\r\n    };\r\n\r\n    if(prepend) {\r\n      this.menu.insertBefore(button, this.menu.firstElementChild.nextSibling);\r\n    } else {\r\n      this.menu.append(button);\r\n    }\r\n\r\n    //stickersScroll.append(categoryDiv);\r\n\r\n    const promise = appStickersManager.getStickerSet(set);\r\n    this.categoryPush(categoryDiv, RichTextProcessor.wrapEmojiText(set.title), promise.then(stickerSet => stickerSet.documents as MyDocument[]), prepend);\r\n    const stickerSet = await promise;\r\n\r\n    //console.log('got stickerSet', stickerSet, li);\r\n    \r\n    wrapStickerSetThumb({\r\n      set,\r\n      container: button,\r\n      group: EMOTICONSSTICKERGROUP,\r\n      lazyLoadQueue: EmoticonsDropdown.lazyLoadQueue,\r\n      width: 32,\r\n      height: 32,\r\n      autoplay: false\r\n    });\r\n  }\r\n\r\n  init() {\r\n    this.content = document.getElementById('content-stickers');\r\n    //let stickersDiv = contentStickersDiv.querySelector('.os-content') as HTMLDivElement;\r\n\r\n    this.recentDiv = document.createElement('div');\r\n    this.recentDiv.classList.add('sticker-category', 'stickers-recent');\r\n\r\n    let menuWrapper = this.content.previousElementSibling as HTMLDivElement;\r\n    this.menu = menuWrapper.firstElementChild as HTMLUListElement;\r\n\r\n    let menuScroll = new ScrollableX(menuWrapper);\r\n\r\n    this.stickersDiv = document.createElement('div');\r\n    this.stickersDiv.classList.add('stickers-categories');\r\n    this.content.append(this.stickersDiv);\r\n\r\n    /* stickersDiv.addEventListener('mouseover', (e) => {\r\n      let target = e.target as HTMLElement;\r\n\r\n      if(target.tagName === 'CANVAS') { // turn on sticker\r\n        let animation = lottieLoader.getAnimation(target.parentElement, EMOTICONSSTICKERGROUP);\r\n\r\n        if(animation) {\r\n          // @ts-ignore\r\n          if(animation.currentFrame === animation.totalFrames - 1) {\r\n            animation.goToAndPlay(0, true);\r\n          } else {\r\n            animation.play();\r\n          }\r\n        }\r\n      }\r\n    }); */\r\n\r\n    rootScope.addEventListener('stickers_installed', (e) => {\r\n      const set: StickerSet.stickerSet = e;\r\n      \r\n      if(!this.stickerSets[set.id] && this.mounted) {\r\n        this.renderStickerSet(set, true);\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('stickers_deleted', (e) => {\r\n      const set: StickerSet.stickerSet = e;\r\n      \r\n      if(this.stickerSets[set.id] && this.mounted) {\r\n        const elements = this.stickerSets[set.id];\r\n        elements.stickers.remove();\r\n        elements.tab.remove();\r\n        delete this.stickerSets[set.id];\r\n      }\r\n    });\r\n\r\n    this.stickersDiv.addEventListener('click', (e) => {\r\n      const target = e.target as HTMLElement;\r\n      if(findUpClassName(target, 'category-title')) {\r\n        const el = findUpAttribute(target, 'data-id');\r\n        new PopupStickers({id: el.dataset.id, access_hash: el.dataset.access_hash}).show();\r\n        return;\r\n      }\r\n\r\n      EmoticonsDropdown.onMediaClick(e);\r\n    });\r\n\r\n    const setTyping = (cancel = false) => {\r\n      rootScope.dispatchEvent('choosing_sticker', !cancel);\r\n    };\r\n\r\n    this.scroll = new Scrollable(this.content, 'STICKERS');\r\n    this.scroll.setVirtualContainer(this.stickersDiv);\r\n    this.scroll.onAdditionalScroll = () => {\r\n      setTyping();\r\n    };\r\n\r\n    emoticonsDropdown.addEventListener('closed', () => {\r\n      setTyping(true);\r\n    });\r\n\r\n    emoticonsDropdown.addEventListener('opened', () => {\r\n      setTyping();\r\n    });\r\n\r\n    this.stickyIntersector = EmoticonsDropdown.menuOnClick(this.menu, this.scroll, menuScroll).stickyIntersector;\r\n\r\n    const preloader = putPreloader(this.content, true);\r\n\r\n    Promise.all([\r\n      appStickersManager.getRecentStickers().then(stickers => {\r\n        this.recentStickers = stickers.stickers.slice(0, 20) as MyDocument[];\r\n  \r\n        //stickersScroll.prepend(categoryDiv);\r\n\r\n        this.stickerSets['recent'] = {\r\n          stickers: this.recentDiv,\r\n          tab: this.menu.firstElementChild as HTMLElement\r\n        };\r\n\r\n        preloader.remove();\r\n        const {titleDiv} = this.categoryPush(this.recentDiv, '', Promise.resolve(this.recentStickers), true);\r\n        titleDiv.append(i18n('Stickers.Recent'));\r\n      }),\r\n\r\n      appStickersManager.getAllStickers().then((res) => {\r\n        preloader.remove();\r\n\r\n        for(let set of (res as MessagesAllStickers.messagesAllStickers).sets) {\r\n          this.renderStickerSet(set);\r\n        }\r\n      })\r\n    ]).finally(() => {\r\n      this.mounted = true;\r\n      setTyping();\r\n    });\r\n\r\n    this.superStickerRenderer = new SuperStickerRenderer(EmoticonsDropdown.lazyLoadQueue, EMOTICONSSTICKERGROUP);\r\n\r\n    emoticonsDropdown.addLazyLoadQueueRepeat(this.superStickerRenderer.lazyLoadQueue, this.superStickerRenderer.processInvisibleDiv);\r\n\r\n    /* setInterval(() => {\r\n      // @ts-ignore\r\n      const players = Object.values(lottieLoader.players).filter(p => p.width === 80);\r\n      \r\n      console.log('STICKERS RENDERED IN PANEL:', players.length, players.filter(p => !p.paused).length, this.superStickerRenderer.lazyLoadQueue.intersector.getVisible().length);\r\n    }, .25e3); */\r\n    \r\n\r\n    this.init = null;\r\n  }\r\n\r\n  pushRecentSticker(doc: MyDocument) {\r\n    appStickersManager.pushRecentSticker(doc);\r\n    \r\n    if(!this.recentDiv?.parentElement) {\r\n      return;\r\n    }\r\n\r\n    let div = this.recentDiv.querySelector(`[data-doc-id=\"${doc.id}\"]`);\r\n    if(!div) {\r\n      div = this.superStickerRenderer.renderSticker(doc);\r\n    }\r\n\r\n    const items = this.recentDiv.querySelector('.category-items');\r\n    items.prepend(div);\r\n\r\n    if(items.childElementCount > 20) {\r\n      (Array.from(items.children) as HTMLElement[]).slice(20).forEach(el => el.remove());\r\n    }\r\n  }\r\n\r\n  onClose() {\r\n\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { toast } from \"../../components/toast\";\r\nimport { BotInlineResult, GeoPoint, InputGeoPoint, InputMedia, MessageEntity, MessagesBotResults, ReplyMarkup } from \"../../layer\";\r\nimport appPeersManager from \"./appPeersManager\";\r\nimport apiManagerProxy from \"../mtproto/mtprotoworker\";\r\nimport { RichTextProcessor } from \"../richtextprocessor\";\r\nimport appDocsManager, { MyDocument } from \"./appDocsManager\";\r\nimport appPhotosManager, { MyPhoto } from \"./appPhotosManager\";\r\nimport appUsersManager, { MyTopPeer } from \"./appUsersManager\";\r\nimport appMessagesManager from \"./appMessagesManager\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport rootScope from \"../rootScope\";\r\nimport appDraftsManager from \"./appDraftsManager\";\r\nimport appMessagesIdsManager from \"./appMessagesIdsManager\";\r\nimport appStateManager from \"./appStateManager\";\r\nimport insertInDescendSortedArray from \"../../helpers/array/insertInDescendSortedArray\";\r\n\r\nexport class AppInlineBotsManager {\r\n  private inlineResults: {[queryAndResultIds: string]: BotInlineResult} = {};\r\n  private setHash: {\r\n    [botId: UserId]: {\r\n      peerId: PeerId, \r\n      time: number\r\n    }\r\n  } = {};\r\n\r\n  public getGeoInput(geo: GeoPoint): InputGeoPoint {\r\n    return geo._ === 'geoPoint' ? {\r\n      _: 'inputGeoPoint',\r\n      lat: geo.lat,\r\n      long: geo.long,\r\n      accuracy_radius: geo.accuracy_radius\r\n    } : {\r\n      _: 'inputGeoPointEmpty'\r\n    };\r\n  }\r\n\r\n  public getInlineResults(peerId: PeerId, botId: BotId, query = '', offset = '', geo?: GeoPoint) {\r\n    return apiManagerProxy.invokeApi('messages.getInlineBotResults', {\r\n      bot: appUsersManager.getUserInput(botId),\r\n      peer: appPeersManager.getInputPeerById(peerId),\r\n      query,\r\n      geo_point: geo ? this.getGeoInput(geo) : undefined,\r\n      offset\r\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true}).then(botResults => {\r\n      const queryId = botResults.query_id;\r\n\r\n      /* if(botResults.switch_pm) {\r\n        botResults.switch_pm.rText = RichTextProcessor.wrapRichText(botResults.switch_pm.text, {noLinebreaks: true, noLinks: true});\r\n      } */\r\n      \r\n      botResults.results.forEach(result => {\r\n        if(result._ === 'botInlineMediaResult') {\r\n          if(result.document) {\r\n            result.document = appDocsManager.saveDoc(result.document);\r\n          }\r\n          \r\n          if(result.photo) {\r\n            result.photo = appPhotosManager.savePhoto(result.photo);\r\n          }\r\n        }\r\n        \r\n        this.inlineResults[this.generateQId(queryId, result.id)] = result;\r\n      });\r\n\r\n      return botResults;\r\n    });\r\n  }\r\n\r\n  public generateQId(queryId: MessagesBotResults.messagesBotResults['query_id'], resultId: string) {\r\n    return queryId + '_' + resultId;\r\n  }\r\n\r\n  private pushPopularBot(botId: BotId) {\r\n    appUsersManager.getTopPeers('bots_inline').then((topPeers) => {\r\n      const botPeerId = botId.toPeerId();\r\n      const index = topPeers.findIndex(topPeer => topPeer.id === botPeerId);\r\n      let topPeer: MyTopPeer;\r\n      if(index !== -1) {\r\n        topPeer = topPeers[index];\r\n      } else {\r\n        topPeer = {\r\n          id: botPeerId,\r\n          rating: 0\r\n        };\r\n      }\r\n\r\n      ++topPeer.rating;\r\n      insertInDescendSortedArray(topPeers, topPeer, 'rating');\r\n\r\n      appStateManager.setKeyValueToStorage('topPeersCache');\r\n      \r\n      // rootScope.$broadcast('inline_bots_popular')\r\n    });\r\n  }\r\n\r\n  public switchToPM(fromPeerId: PeerId, botId: BotId, startParam: string) {\r\n    this.setHash[botId] = {peerId: fromPeerId, time: Date.now()};\r\n    rootScope.dispatchEvent('history_focus', {peerId: botId.toPeerId()});\r\n    return appMessagesManager.startBot(botId, undefined, startParam);\r\n  }\r\n  \r\n  /*\r\n  function resolveInlineMention (username) {\r\n    return AppPeersManager.resolveUsername(username).then(function (peerId) {\r\n      if (peerId.isUser()) {\r\n        var bot = AppUsersManager.getUser(peerId)\r\n        if (bot.pFlags.bot && bot.bot_inline_placeholder !== undefined) {\r\n          var resolvedBot = {\r\n            username: username,\r\n            id: peerId,\r\n            placeholder: bot.bot_inline_placeholder\r\n          }\r\n          if (bot.pFlags.bot_inline_geo &&\r\n            GeoLocationManager.isAvailable()) {\r\n              return checkGeoLocationAccess(peerId).then(function () {\r\n                return GeoLocationManager.getPosition().then(function (coords) {\r\n                  resolvedBot.geo = coords\r\n                  return qSync.when(resolvedBot)\r\n                })\r\n              })['catch'](function () {\r\n                return qSync.when(resolvedBot)\r\n              })\r\n            }\r\n            return qSync.when(resolvedBot)\r\n          }\r\n        }\r\n        return $q.reject()\r\n      }, function (error) {\r\n        error.handled = true\r\n        return $q.reject(error)\r\n      })\r\n    }\r\n    \r\n    function regroupWrappedResults (results, rowW, rowH) {\r\n      if (!results ||\r\n        !results[0] ||\r\n        ['photo', 'gif', 'sticker'].indexOf(results[0].type) === -1) {\r\n          return\r\n        }\r\n        var ratios = []\r\n        angular.forEach(results, function (result) {\r\n          var w\r\n          var h, doc\r\n          var photo\r\n          if (result._ === 'botInlineMediaResult') {\r\n            if (doc = result.document) {\r\n              w = result.document.w\r\n              h = result.document.h\r\n            }\r\n            else if (photo = result.photo) {\r\n              var photoSize = (photo.sizes || [])[0]\r\n              w = photoSize && photoSize.w\r\n              h = photoSize && photoSize.h\r\n            }\r\n          }else {\r\n            w = result.w\r\n            h = result.h\r\n          }\r\n          if (!w || !h) {\r\n            w = h = 1\r\n          }\r\n          ratios.push(w / h)\r\n        })\r\n        \r\n        var rows = []\r\n        var curCnt = 0\r\n        var curW = 0\r\n        angular.forEach(ratios, function (ratio) {\r\n          var w = ratio * rowH\r\n          curW += w\r\n          if (!curCnt || curCnt < 4 && curW < (rowW * 1.1)) {\r\n            curCnt++\r\n          } else {\r\n            rows.push(curCnt)\r\n            curCnt = 1\r\n            curW = w\r\n          }\r\n        })\r\n        if (curCnt) {\r\n          rows.push(curCnt)\r\n        }\r\n        \r\n        var i = 0\r\n        var thumbs = []\r\n        var lastRowI = rows.length - 1\r\n        angular.forEach(rows, function (rowCnt, rowI) {\r\n          var lastRow = rowI === lastRowI\r\n          var curRatios = ratios.slice(i, i + rowCnt)\r\n          var sumRatios = 0\r\n          angular.forEach(curRatios, function (ratio) {\r\n            sumRatios += ratio\r\n          })\r\n          angular.forEach(curRatios, function (ratio, j) {\r\n            var thumbH = rowH\r\n            var thumbW = rowW * ratio / sumRatios\r\n            var realW = thumbH * ratio\r\n            if (lastRow && thumbW > realW) {\r\n              thumbW = realW\r\n            }\r\n            var result = results[i + j]\r\n            result.thumbW = Math.floor(thumbW) - 2\r\n            result.thumbH = Math.floor(thumbH) - 2\r\n          })\r\n          \r\n          i += rowCnt\r\n        })\r\n      } */\r\n\r\n  public async checkSwitchReturn(botId: BotId) {\r\n    const bot = appUsersManager.getUser(botId);\r\n    if(!bot || !bot.pFlags.bot || !bot.bot_inline_placeholder) {\r\n      return;\r\n    }\r\n\r\n    const peerData = this.setHash[botId];\r\n    if(peerData) {\r\n      delete this.setHash[botId];\r\n      if((Date.now() - peerData.time) < 3600e3) {\r\n        return peerData.peerId;\r\n      }\r\n    }\r\n  }\r\n\r\n  public switchInlineQuery(peerId: PeerId, threadId: number, botId: BotId, query: string) {\r\n    rootScope.dispatchEvent('history_focus', {peerId, threadId});\r\n    appDraftsManager.setDraft(peerId, threadId, '@' + appUsersManager.getUser(botId).username + ' ' + query);\r\n  }\r\n\r\n  public callbackButtonClick(peerId: PeerId, mid: number, button: any) {\r\n    return apiManagerProxy.invokeApi('messages.getBotCallbackAnswer', {\r\n      peer: appPeersManager.getInputPeerById(peerId),\r\n      msg_id: appMessagesIdsManager.getServerMessageId(mid),\r\n      data: button.data\r\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true}).then((callbackAnswer) => {\r\n      if(typeof callbackAnswer.message === 'string' && callbackAnswer.message.length) {\r\n        toast(RichTextProcessor.wrapRichText(callbackAnswer.message, {noLinks: true, noLinebreaks: true}));\r\n      }\r\n      \r\n      //console.log('callbackButtonClick callbackAnswer:', callbackAnswer);\r\n    });\r\n  }\r\n      \r\n  /* function gameButtonClick (id) {\r\n    var message = AppMessagesManager.getMessage(id)\r\n    var peerId = AppMessagesManager.getMessagePeer(message)\r\n    \r\n    return MtpApiManager.invokeApi('messages.getBotCallbackAnswer', {\r\n      peer: AppPeersManager.getInputPeerByID(peerId),\r\n      msg_id: AppMessagesIDsManager.getMessageLocalID(id)\r\n    }, {timeout: 1, stopTime: -1, noErrorBox: true}).then(function (callbackAnswer) {\r\n      if (typeof callbackAnswer.message === 'string' &&\r\n      callbackAnswer.message.length) {\r\n        showCallbackMessage(callbackAnswer.message, callbackAnswer.pFlags.alert)\r\n      }\r\n      else if (typeof callbackAnswer.url === 'string') {\r\n        AppGamesManager.openGame(message.media.game.id, id, callbackAnswer.url)\r\n      }\r\n    })\r\n  } */\r\n\r\n  public sendInlineResult(peerId: PeerId, botId: BotId, queryAndResultIds: string, options: Partial<{\r\n    viaBotId: BotId,\r\n    queryId: string,\r\n    resultId: string,\r\n    replyMarkup: ReplyMarkup,\r\n    entities: MessageEntity[],\r\n    replyToMsgId: number,\r\n    clearDraft: true,\r\n    scheduleDate: number,\r\n    silent: true,\r\n    sendAsPeerId: PeerId,\r\n    geoPoint: GeoPoint\r\n  }> = {}) {\r\n    const inlineResult = this.inlineResults[queryAndResultIds];\r\n    if(!inlineResult) {\r\n      return;\r\n    }\r\n\r\n    this.pushPopularBot(botId);\r\n    const splitted = queryAndResultIds.split('_');\r\n    const queryID = splitted.shift();\r\n    const resultID = splitted.join('_');\r\n    options.viaBotId = botId;\r\n    options.queryId = queryID;\r\n    options.resultId = resultID;\r\n    if(inlineResult.send_message.reply_markup) {\r\n      options.replyMarkup = inlineResult.send_message.reply_markup;\r\n    }\r\n    \r\n    if(inlineResult.send_message._ === 'botInlineMessageText') {\r\n      options.entities = inlineResult.send_message.entities;\r\n      appMessagesManager.sendText(peerId, inlineResult.send_message.message, options);\r\n    } else {\r\n      let caption = '';\r\n      let inputMedia: InputMedia;\r\n      const sendMessage = inlineResult.send_message;\r\n      switch(sendMessage._) {\r\n        case 'botInlineMessageMediaAuto': {\r\n          caption = sendMessage.message;\r\n\r\n          if(inlineResult._ === 'botInlineMediaResult') {\r\n            const {document, photo} = inlineResult;\r\n            if(document) {\r\n              inputMedia = appDocsManager.getMediaInput(document as MyDocument);\r\n            } else {\r\n              inputMedia = appPhotosManager.getMediaInput(photo as MyPhoto);\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaGeo': {\r\n          inputMedia = {\r\n            _: 'inputMediaGeoPoint',\r\n            geo_point: this.getGeoInput(sendMessage.geo)\r\n          };\r\n\r\n          options.geoPoint = sendMessage.geo;\r\n\r\n          break;\r\n        }\r\n        \r\n        case 'botInlineMessageMediaVenue': {\r\n          inputMedia = {\r\n            _: 'inputMediaVenue',\r\n            geo_point: this.getGeoInput(sendMessage.geo),\r\n            title: sendMessage.title,\r\n            address: sendMessage.address,\r\n            provider: sendMessage.provider,\r\n            venue_id: sendMessage.venue_id,\r\n            venue_type: sendMessage.venue_type\r\n          };\r\n\r\n          options.geoPoint = sendMessage.geo;\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaContact': {\r\n          inputMedia = {\r\n            _: 'inputMediaContact',\r\n            phone_number: sendMessage.phone_number,\r\n            first_name: sendMessage.first_name,\r\n            last_name: sendMessage.last_name,\r\n            vcard: sendMessage.vcard\r\n          };\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      if(!inputMedia) {\r\n        inputMedia = {\r\n          _: 'messageMediaPending',\r\n          type: inlineResult.type,\r\n          file_name: inlineResult.title || \r\n            (inlineResult as BotInlineResult.botInlineResult).content?.url || \r\n            (inlineResult as BotInlineResult.botInlineResult).url,\r\n          size: 0,\r\n          progress: {percent: 30, total: 0}\r\n        } as any;\r\n      }\r\n\r\n      appMessagesManager.sendOther(peerId, inputMedia, options);\r\n    }\r\n  }\r\n  \r\n  /* function checkGeoLocationAccess (botID) {\r\n    var key = 'bot_access_geo' + botID\r\n    return Storage.get(key).then(function (geoAccess) {\r\n      if (geoAccess && geoAccess.granted) {\r\n        return true\r\n      }\r\n      return ErrorService.confirm({\r\n        type: 'BOT_ACCESS_GEO_INLINE'\r\n      }).then(function () {\r\n        var setHash = {}\r\n        setHash[key] = {granted: true, time: tsNow()}\r\n        Storage.set(setHash)\r\n        return true\r\n      }, function () {\r\n        var setHash = {}\r\n        setHash[key] = {denied: true, time: tsNow()}\r\n        Storage.set(setHash)\r\n        return $q.reject()\r\n      })\r\n    })\r\n  } */\r\n}\r\n\r\nconst appInlineBotsManager = new AppInlineBotsManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appInlineBotsManager = appInlineBotsManager);\r\nexport default appInlineBotsManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport InputSearch from \"../../inputSearch\";\r\nimport animationIntersector from \"../../animationIntersector\";\r\nimport appSidebarRight from \"..\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport appInlineBotsManager, { AppInlineBotsManager } from \"../../../lib/appManagers/appInlineBotsManager\";\r\nimport GifsMasonry from \"../../gifsMasonry\";\r\nimport appImManager from \"../../../lib/appManagers/appImManager\";\r\nimport type { MyDocument } from \"../../../lib/appManagers/appDocsManager\";\r\nimport mediaSizes from \"../../../helpers/mediaSizes\";\r\nimport findUpClassName from \"../../../helpers/dom/findUpClassName\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport { NULL_PEER_ID } from \"../../../lib/mtproto/mtproto_config\";\r\n\r\nconst ANIMATIONGROUP = 'GIFS-SEARCH';\r\n\r\nexport default class AppGifsTab extends SliderSuperTab {\r\n  private inputSearch: InputSearch;\r\n  private gifsDiv: HTMLDivElement;\r\n\r\n  private nextOffset = '';\r\n  private loadedAll = false;\r\n\r\n  private gifBotPeerId: PeerId;\r\n  private masonry: GifsMasonry;\r\n\r\n  private searchPromise: ReturnType<AppInlineBotsManager['getInlineResults']>;\r\n\r\n  protected init() {\r\n    this.container.id = 'search-gifs-container';\r\n    \r\n    this.inputSearch = new InputSearch('SearchGifsTitle', (value) => {\r\n      this.reset();\r\n      this.search(value);\r\n    });\r\n    \r\n    this.title.replaceWith(this.inputSearch.container);\r\n    \r\n    this.gifsDiv = document.createElement('div');\r\n    this.gifsDiv.classList.add('gifs-masonry');\r\n    attachClickEvent(this.gifsDiv, this.onGifsClick, {listenerSetter: this.listenerSetter});\r\n    \r\n    this.scrollable.append(this.gifsDiv);\r\n    \r\n    this.masonry = new GifsMasonry(this.gifsDiv, ANIMATIONGROUP, this.scrollable);\r\n    //this.backBtn.parentElement.append(this.inputSearch.container);\r\n  }\r\n\r\n  private onGifsClick = (e: MouseEvent | TouchEvent) => {\r\n    const target = findUpClassName(e.target, 'gif');\r\n    if(!target) return;\r\n\r\n    const fileId = target.dataset.docId;\r\n    if(appImManager.chat.input.sendMessageWithDocument(fileId)) {\r\n      if(mediaSizes.isMobile) {\r\n        appSidebarRight.onCloseBtnClick();\r\n      }\r\n    } else {\r\n      console.warn('got no doc by id:', fileId);\r\n    }\r\n  };\r\n\r\n  public onClose() {\r\n    this.scrollable.onScrolledBottom = () => {};\r\n  }\r\n\r\n  public onCloseAfterTimeout() {\r\n    this.reset();\r\n    this.gifsDiv.innerHTML = '';\r\n    animationIntersector.checkAnimations(undefined, ANIMATIONGROUP);\r\n    this.inputSearch.remove();\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n\r\n  private reset() {\r\n    this.searchPromise = null;\r\n    this.nextOffset = '';\r\n    this.loadedAll = false;\r\n    this.masonry.clear();\r\n  }\r\n\r\n  public open() {\r\n    const ret = super.open();\r\n    appSidebarRight.toggleSidebar(true).then(() => {\r\n      this.search('', true);\r\n\r\n      this.scrollable.onScrolledBottom = () => {\r\n        this.search(this.inputSearch.value, false);\r\n      };\r\n    });\r\n    return ret;\r\n  }\r\n\r\n  public async search(query: string, newSearch = true) {\r\n    if(this.searchPromise || this.loadedAll) return;\r\n\r\n    if(!this.gifBotPeerId) {\r\n      this.gifBotPeerId = (await appUsersManager.resolveUsername('gif')).id.toPeerId(false);\r\n    }\r\n\r\n    try {\r\n      this.searchPromise = appInlineBotsManager.getInlineResults(NULL_PEER_ID, this.gifBotPeerId, query, this.nextOffset);\r\n      const { results, next_offset } = await this.searchPromise;\r\n\r\n      if(this.inputSearch.value !== query) {\r\n        return;\r\n      }\r\n\r\n      this.searchPromise = null;\r\n      this.nextOffset = next_offset;\r\n      if(newSearch) {\r\n        this.gifsDiv.innerHTML = '';\r\n      }\r\n\r\n      if(results.length) {\r\n        results.forEach((result) => {\r\n          if(result._ === 'botInlineMediaResult' && result.document) {\r\n            this.masonry.add(result.document as MyDocument);\r\n          }\r\n        });\r\n      } else {\r\n        this.loadedAll = true;\r\n      }\r\n\r\n      this.scrollable.onScroll();\r\n    } catch(err) {\r\n      this.searchPromise = null;\r\n      console.error('gifs loading error:', err);\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport InputSearch from \"../../inputSearch\";\r\nimport LazyLoadQueue from \"../../lazyLoadQueue\";\r\nimport appImManager from \"../../../lib/appManagers/appImManager\";\r\nimport appStickersManager from \"../../../lib/appManagers/appStickersManager\";\r\nimport PopupStickers from \"../../popups/stickers\";\r\nimport animationIntersector from \"../../animationIntersector\";\r\nimport { RichTextProcessor } from \"../../../lib/richtextprocessor\";\r\nimport { wrapSticker } from \"../../wrappers\";\r\nimport appSidebarRight from \"..\";\r\nimport { StickerSet, StickerSetCovered } from \"../../../layer\";\r\nimport { i18n } from \"../../../lib/langPack\";\r\nimport findUpClassName from \"../../../helpers/dom/findUpClassName\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport forEachReverse from \"../../../helpers/array/forEachReverse\";\r\n\r\nexport default class AppStickersTab extends SliderSuperTab {\r\n  private inputSearch: InputSearch;\r\n  private setsDiv: HTMLDivElement;\r\n  private lazyLoadQueue: LazyLoadQueue;\r\n\r\n  protected init() {\r\n    this.container.id = 'stickers-container';\r\n    this.container.classList.add('chatlist-container');\r\n\r\n    this.lazyLoadQueue = new LazyLoadQueue();\r\n\r\n    this.inputSearch = new InputSearch('StickersTab.SearchPlaceholder', (value) => {\r\n      this.search(value);\r\n    });\r\n\r\n    this.title.replaceWith(this.inputSearch.container);\r\n\r\n    this.setsDiv = document.createElement('div');\r\n    this.setsDiv.classList.add('sticker-sets');\r\n    this.scrollable.append(this.setsDiv);\r\n\r\n    attachClickEvent(this.setsDiv, (e) => {\r\n      const sticker = findUpClassName(e.target, 'sticker-set-sticker');\r\n      if(sticker) {\r\n        const docId = sticker.dataset.docId;\r\n        appImManager.chat.input.sendMessageWithDocument(docId);\r\n        return;\r\n      }\r\n\r\n      const target = findUpClassName(e.target, 'sticker-set');\r\n      if(!target) return;\r\n\r\n      const id = target.dataset.stickerSet as string;\r\n      const access_hash = target.dataset.access_hash as string;\r\n\r\n      const button = findUpClassName(e.target, 'sticker-set-button') as HTMLElement;\r\n      if(button) {\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n\r\n        button.setAttribute('disabled', 'true');\r\n        \r\n        appStickersManager.getStickerSet({id, access_hash}).then(full => {\r\n          appStickersManager.toggleStickerSet(full.set).then(changed => {\r\n            if(changed) {\r\n              button.textContent = '';\r\n              button.append(i18n(full.set.installed_date ? 'Stickers.SearchAdded' : 'Stickers.SearchAdd'));\r\n              button.classList.toggle('gray', !!full.set.installed_date);\r\n            }\r\n          }).finally(() => {\r\n            //button.style.width = set.installed_date ? '68px' : '52px';\r\n            button.removeAttribute('disabled');\r\n          });\r\n        });\r\n      } else {\r\n        appStickersManager.getStickerSet({id, access_hash}).then(full => {\r\n          new PopupStickers(full.set).show();\r\n        });\r\n      }\r\n    }, {listenerSetter: this.listenerSetter});\r\n  }\r\n\r\n  public onCloseAfterTimeout() {\r\n    this.setsDiv.innerHTML = '';\r\n    animationIntersector.checkAnimations(undefined, 'STICKERS-SEARCH');\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n\r\n  public renderSet(set: StickerSet.stickerSet) {\r\n    //console.log('renderSet:', set);\r\n    const div = document.createElement('div');\r\n    div.classList.add('sticker-set');\r\n\r\n    const header = document.createElement('div');\r\n    header.classList.add('sticker-set-header');\r\n\r\n    const details = document.createElement('div');\r\n    details.classList.add('sticker-set-details');\r\n    details.innerHTML = `\r\n      <div class=\"sticker-set-name\">${RichTextProcessor.wrapEmojiText(set.title)}</div>\r\n    `;\r\n\r\n    const countDiv = document.createElement('div');\r\n    countDiv.classList.add('sticker-set-count');\r\n    countDiv.append(i18n('Stickers', [set.count]));\r\n    details.append(countDiv);\r\n    \r\n    const button = document.createElement('button');\r\n    button.classList.add('btn-primary', 'btn-color-primary', 'sticker-set-button');\r\n    button.append(i18n(set.installed_date ? 'Stickers.SearchAdded' : 'Stickers.SearchAdd'));\r\n   // button.style.width = set.installed_date ? '68px' : '52px';\r\n\r\n    if(set.installed_date) {\r\n      button.classList.add('gray');\r\n    }\r\n\r\n    //ripple(button);\r\n\r\n    header.append(details, button);\r\n\r\n    const stickersDiv = document.createElement('div');\r\n    stickersDiv.classList.add('sticker-set-stickers');\r\n\r\n    const count = Math.min(5, set.count);\r\n    for(let i = 0; i < count; ++i) {\r\n      const stickerDiv = document.createElement('div');\r\n      stickerDiv.classList.add('sticker-set-sticker');\r\n\r\n      stickersDiv.append(stickerDiv);\r\n    }\r\n\r\n    appStickersManager.getStickerSet(set).then(set => {\r\n      //console.log('renderSet got set:', set);\r\n      \r\n      for(let i = 0; i < count; ++i) {\r\n        const div = stickersDiv.children[i] as HTMLDivElement;\r\n        const doc = set.documents[i];\r\n        if(doc._ === 'documentEmpty') {\r\n          continue;\r\n        }\r\n\r\n        wrapSticker({\r\n          doc, \r\n          div, \r\n          lazyLoadQueue: this.lazyLoadQueue, \r\n          group: 'STICKERS-SEARCH', \r\n          /* play: false,\r\n          loop: false, */\r\n          play: true,\r\n          loop: true,\r\n          width: 68,\r\n          height: 68\r\n        });\r\n      }\r\n    });\r\n\r\n    /* const onMouseOver = () => {\r\n      const animations: AnimationItem['animation'][] = [];\r\n      for(let i = 0; i < count; ++i) {\r\n        const stickerDiv = stickersDiv.children[i] as HTMLElement;\r\n        const animationItem = animationIntersector.getAnimation(stickerDiv);\r\n        if(!animationItem) continue;\r\n\r\n        const animation = animationItem.animation;\r\n\r\n        animations.push(animation);\r\n        animation.loop = true;\r\n        animation.play();\r\n      }\r\n\r\n      div.addEventListener('mouseout', () => {\r\n        animations.forEach(animation => {\r\n          animation.loop = false;\r\n        });\r\n\r\n        div.addEventListener('mouseover', onMouseOver, {once: true});\r\n      }, {once: true});\r\n    };\r\n\r\n    div.addEventListener('mouseover', onMouseOver, {once: true}); */\r\n\r\n    div.dataset.stickerSet = '' + set.id;\r\n    div.dataset.access_hash = '' + set.access_hash;\r\n    div.dataset.title = set.title;\r\n\r\n    div.append(header, stickersDiv);\r\n\r\n    this.setsDiv.append(div);\r\n  }\r\n\r\n  public open() {\r\n    const ret = super.open();\r\n    appSidebarRight.toggleSidebar(true).then(() => {\r\n      this.renderFeatured();\r\n    });\r\n\r\n    return ret;\r\n  }\r\n\r\n  public renderFeatured() {\r\n    return appStickersManager.getFeaturedStickers().then(coveredSets => {\r\n      if(this.inputSearch.value) {\r\n        return;\r\n      }\r\n\r\n      coveredSets = this.filterRendered('', coveredSets);\r\n      coveredSets.forEach(set => {\r\n        this.renderSet(set.set);\r\n      });\r\n    });\r\n  }\r\n\r\n  private filterRendered(query: string, coveredSets: StickerSetCovered[]) {\r\n    coveredSets = coveredSets.slice();\r\n\r\n    const children = Array.from(this.setsDiv.children) as HTMLElement[];\r\n    forEachReverse(children, el => {\r\n      const id = el.dataset.stickerSet;\r\n      const index = coveredSets.findIndex(covered => covered.set.id === id);\r\n  \r\n      if(index !== -1) {\r\n        coveredSets.splice(index, 1);\r\n      } else if(!query || !el.dataset.title.toLowerCase().includes(query.toLowerCase())) {\r\n        el.remove();\r\n      }\r\n    });\r\n\r\n    animationIntersector.checkAnimations(undefined, 'STICKERS-SEARCH');\r\n\r\n    return coveredSets;\r\n  }\r\n\r\n  public search(query: string) {\r\n    if(!query) {\r\n      return this.renderFeatured();\r\n    }\r\n\r\n    return appStickersManager.searchStickerSets(query, false).then(coveredSets => {\r\n      if(this.inputSearch.value !== query) {\r\n        return;\r\n      }\r\n\r\n      //console.log('search result:', coveredSets);\r\n\r\n      coveredSets = this.filterRendered(query, coveredSets);\r\n      coveredSets.forEach(set => {\r\n        this.renderSet(set.set);\r\n      });\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { attachClickEvent } from \"./dom/clickEvent\";\r\nimport findUpAsChild from \"./dom/findUpAsChild\";\r\nimport EventListenerBase from \"./eventListenerBase\";\r\nimport ListenerSetter from \"./listenerSetter\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\r\nimport safeAssign from \"./object/safeAssign\";\r\n\r\nconst KEEP_OPEN = false;\r\nconst TOGGLE_TIMEOUT = 200;\r\nconst ANIMATION_DURATION = 200;\r\n\r\nexport default class DropdownHover extends EventListenerBase<{\r\n  open: () => Promise<any> | void,\r\n  opened: () => any,\r\n  close: () => any,\r\n  closed: () => any\r\n}> {\r\n  protected element: HTMLElement;\r\n  protected displayTimeout: number;\r\n  protected forceClose = false;\r\n  protected inited = false;\r\n\r\n  constructor(options: {\r\n    element: DropdownHover['element']\r\n  }) {\r\n    super(false);\r\n    safeAssign(this, options);\r\n  }\r\n\r\n  public attachButtonListener(button: HTMLElement, listenerSetter: ListenerSetter) {\r\n    let firstTime = true;\r\n    if(IS_TOUCH_SUPPORTED) {\r\n      attachClickEvent(button, () => {\r\n        if(firstTime) {\r\n          firstTime = false;\r\n          this.toggle(true);\r\n        } else {\r\n          this.toggle();\r\n        }\r\n      }, {listenerSetter});\r\n    } else {\r\n      listenerSetter.add(button)('mouseover', (e) => {\r\n        //console.log('onmouseover button');\r\n        if(firstTime) {\r\n          listenerSetter.add(button)('mouseout', this.onMouseOut);\r\n          firstTime = false;\r\n        }\r\n\r\n        clearTimeout(this.displayTimeout);\r\n        this.displayTimeout = window.setTimeout(() => {\r\n          this.toggle(true);\r\n        }, TOGGLE_TIMEOUT);\r\n      });\r\n    }\r\n  }\r\n\r\n  private onMouseOut = (e: MouseEvent) => {\r\n    if(KEEP_OPEN) return;\r\n    clearTimeout(this.displayTimeout);\r\n    if(!this.isActive()) return;\r\n\r\n    const toElement = (e as any).toElement as Element;\r\n    if(toElement && findUpAsChild(toElement, this.element)) {\r\n      return;\r\n    }\r\n\r\n    this.displayTimeout = window.setTimeout(() => {\r\n      this.toggle(false);\r\n    }, TOGGLE_TIMEOUT);\r\n  };\r\n\r\n  protected init() {\r\n    if(!IS_TOUCH_SUPPORTED) {\r\n      this.element.onmouseout = this.onMouseOut;\r\n      this.element.onmouseover = (e) => {\r\n        if(this.forceClose) {\r\n          return;\r\n        }\r\n\r\n        //console.log('onmouseover element');\r\n        clearTimeout(this.displayTimeout);\r\n      };\r\n    }\r\n  }\r\n\r\n  public toggle = async(enable?: boolean) => {\r\n    //if(!this.element) return;\r\n    const willBeActive = (!!this.element.style.display && enable === undefined) || enable;\r\n    if(this.init) {\r\n      if(willBeActive) {\r\n        this.init();\r\n        this.init = null;\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if(willBeActive === this.isActive()) {\r\n      return;\r\n    }\r\n    \r\n    if((this.element.style.display && enable === undefined) || enable) {\r\n      const res = this.dispatchResultableEvent('open');\r\n      await Promise.all(res);\r\n\r\n      this.element.style.display = '';\r\n      void this.element.offsetLeft; // reflow\r\n      this.element.classList.add('active');\r\n\r\n      clearTimeout(this.displayTimeout);\r\n      this.displayTimeout = window.setTimeout(() => {\r\n        this.forceClose = false;\r\n        this.dispatchEvent('opened');\r\n      }, IS_TOUCH_SUPPORTED ? 0 : ANIMATION_DURATION);\r\n\r\n      // ! can't use together with resizeObserver\r\n      /* if(isTouchSupported) {\r\n        const height = this.element.scrollHeight + appImManager.chat.input.inputContainer.scrollHeight - 10;\r\n        console.log('[ESG]: toggle: enable height', height);\r\n        appImManager.chat.bubbles.scrollable.scrollTop += height;\r\n      } */\r\n\r\n      /* if(touchSupport) {\r\n        this.restoreScroll();\r\n      } */\r\n    } else {\r\n      this.dispatchEvent('close');\r\n\r\n      this.element.classList.remove('active');\r\n\r\n      clearTimeout(this.displayTimeout);\r\n      this.displayTimeout = window.setTimeout(() => {\r\n        this.element.style.display = 'none';\r\n        this.forceClose = false;\r\n        this.dispatchEvent('closed');\r\n      }, IS_TOUCH_SUPPORTED ? 0 : ANIMATION_DURATION);\r\n\r\n      /* if(isTouchSupported) {\r\n        const scrollHeight = this.container.scrollHeight;\r\n        if(scrollHeight) {\r\n          const height = this.container.scrollHeight + appImManager.chat.input.inputContainer.scrollHeight - 10;\r\n          appImManager.chat.bubbles.scrollable.scrollTop -= height;\r\n        }\r\n      } */\r\n\r\n      /* if(touchSupport) {\r\n        this.restoreScroll();\r\n      } */\r\n    }\r\n\r\n    //animationIntersector.checkAnimations(false, EMOTICONSSTICKERGROUP);\r\n  };\r\n\r\n  public isActive() {\r\n    return this.element.classList.contains('active');\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\nimport appImManager from \"../../lib/appManagers/appImManager\";\nimport rootScope from \"../../lib/rootScope\";\nimport animationIntersector from \"../animationIntersector\";\nimport { horizontalMenu } from \"../horizontalMenu\";\nimport LazyLoadQueue, { LazyLoadQueueIntersector } from \"../lazyLoadQueue\";\nimport Scrollable, { ScrollableX } from \"../scrollable\";\nimport appSidebarRight from \"../sidebarRight\";\nimport StickyIntersector from \"../stickyIntersector\";\nimport EmojiTab from \"./tabs/emoji\";\nimport GifsTab from \"./tabs/gifs\";\nimport StickersTab from \"./tabs/stickers\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport AppGifsTab from \"../sidebarRight/tabs/gifs\";\nimport AppStickersTab from \"../sidebarRight/tabs/stickers\";\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\nimport findUpTag from \"../../helpers/dom/findUpTag\";\nimport blurActiveElement from \"../../helpers/dom/blurActiveElement\";\nimport whichChild from \"../../helpers/dom/whichChild\";\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\nimport DropdownHover from \"../../helpers/dropdownHover\";\nimport { pause } from \"../../helpers/schedulers/pause\";\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\nimport { IS_APPLE_MOBILE } from \"../../environment/userAgent\";\n\nexport const EMOTICONSSTICKERGROUP = 'emoticons-dropdown';\n\nexport interface EmoticonsTab {\n  init: () => void,\n  onCloseAfterTimeout?: () => void\n}\n\nexport class EmoticonsDropdown extends DropdownHover {\n  public static lazyLoadQueue = new LazyLoadQueue();\n\n  private emojiTab: EmojiTab;\n  public stickersTab: StickersTab;\n  private gifsTab: GifsTab;\n\n  private container: HTMLElement;\n  private tabsEl: HTMLElement;\n  private tabId = -1;\n\n  private tabs: {[id: number]: EmoticonsTab};\n\n  private searchButton: HTMLElement;\n  private deleteBtn: HTMLElement;\n\n  private selectTab: ReturnType<typeof horizontalMenu>;\n\n  private savedRange: Range;\n\n  constructor() {\n    super({\n      element: document.getElementById('emoji-dropdown') as HTMLDivElement\n    });\n\n    this.addEventListener('open', async() => {\n      if(IS_TOUCH_SUPPORTED) {\n        //appImManager.chat.input.saveScroll();\n        if(blurActiveElement()) {\n          await pause(100);\n        }\n      }\n\n      if(this.element.parentElement !== appImManager.chat.input.chatInput) {\n        appImManager.chat.input.chatInput.append(this.element);\n      }\n\n      this.savedRange = this.getGoodRange();\n\n      EmoticonsDropdown.lazyLoadQueue.lock();\n      //EmoticonsDropdown.lazyLoadQueue.unlock();\n      animationIntersector.lockIntersectionGroup(EMOTICONSSTICKERGROUP);\n    });\n\n    this.addEventListener('opened', () => {\n      animationIntersector.unlockIntersectionGroup(EMOTICONSSTICKERGROUP);\n      EmoticonsDropdown.lazyLoadQueue.unlock();\n      EmoticonsDropdown.lazyLoadQueue.refresh();\n\n      this.container.classList.remove('disable-hover');\n    });\n\n    this.addEventListener('close', () => {\n      EmoticonsDropdown.lazyLoadQueue.lock();\n      //EmoticonsDropdown.lazyLoadQueue.lock();\n\n      // нужно залочить группу и выключить стикеры\n      animationIntersector.lockIntersectionGroup(EMOTICONSSTICKERGROUP);\n      animationIntersector.checkAnimations(true, EMOTICONSSTICKERGROUP);\n    });\n\n    this.addEventListener('closed', () => {\n      // теперь можно убрать visible, чтобы они не включились после фокуса\n      animationIntersector.unlockIntersectionGroup(EMOTICONSSTICKERGROUP);\n      EmoticonsDropdown.lazyLoadQueue.unlock();\n      EmoticonsDropdown.lazyLoadQueue.refresh();\n\n      this.container.classList.remove('disable-hover');\n\n      this.savedRange = undefined;\n    });\n  }\n\n  protected init() {\n    this.emojiTab = new EmojiTab();\n    this.stickersTab = new StickersTab();\n    this.gifsTab = new GifsTab();\n\n    this.tabs = {\n      0: this.emojiTab,\n      1: this.stickersTab,\n      2: this.gifsTab\n    };\n\n    this.container = this.element.querySelector('.emoji-container .tabs-container') as HTMLDivElement;\n    this.tabsEl = this.element.querySelector('.emoji-tabs') as HTMLUListElement;\n    this.selectTab = horizontalMenu(this.tabsEl, this.container, this.onSelectTabClick, () => {\n      const tab = this.tabs[this.tabId];\n      if(tab.init) {\n        tab.init();\n      }\n\n      tab.onCloseAfterTimeout && tab.onCloseAfterTimeout();\n      animationIntersector.checkAnimations(false, EMOTICONSSTICKERGROUP);\n    });\n\n    this.searchButton = this.element.querySelector('.emoji-tabs-search');\n    this.searchButton.addEventListener('click', () => {\n      if(this.tabId === 1) {\n        if(!appSidebarRight.isTabExists(AppStickersTab)) {\n          new AppStickersTab(appSidebarRight).open();\n        }\n      } else {\n        if(!appSidebarRight.isTabExists(AppGifsTab)) {\n          new AppGifsTab(appSidebarRight).open();\n        }\n      }\n    });\n\n    this.deleteBtn = this.element.querySelector('.emoji-tabs-delete');\n    this.deleteBtn.addEventListener('click', (e) => {\n      const input = appImManager.chat.input.messageInput;\n      if((input.lastChild as any)?.tagName) {\n        input.lastElementChild.remove();\n      } else if(input.lastChild) {\n        if(!input.lastChild.textContent.length) {\n          input.lastChild.remove();\n        } else {\n          input.lastChild.textContent = input.lastChild.textContent.slice(0, -1);\n        }\n      }\n\n      const event = new Event('input', {bubbles: true, cancelable: true});\n      appImManager.chat.input.messageInput.dispatchEvent(event);\n      //appSidebarRight.stickersTab.init();\n\n      cancelEvent(e);\n    });\n    \n    const HIDE_EMOJI_TAB = IS_APPLE_MOBILE;\n\n    const INIT_TAB_ID = HIDE_EMOJI_TAB ? 1 : 0;\n\n    if(HIDE_EMOJI_TAB) {\n      (this.tabsEl.children[1] as HTMLElement).classList.add('hide');\n    }\n\n    (this.tabsEl.children[INIT_TAB_ID + 1] as HTMLLIElement).click(); // set emoji tab\n    if(this.tabs[INIT_TAB_ID].init) {\n      this.tabs[INIT_TAB_ID].init(); // onTransitionEnd не вызовется, т.к. это первая открытая вкладка\n    }\n\n    rootScope.addEventListener('peer_changed', this.checkRights);\n    this.checkRights();\n\n    return super.init();\n  }\n\n  private onSelectTabClick = (id: number) => {\n    if(this.tabId === id) {\n      return;\n    }\n    \n    animationIntersector.checkAnimations(true, EMOTICONSSTICKERGROUP);\n\n    this.tabId = id;\n    this.searchButton.classList.toggle('hide', this.tabId === 0);\n    this.deleteBtn.classList.toggle('hide', this.tabId !== 0);\n  };\n\n  private checkRights = () => {\n    const {peerId, threadId} = appImManager.chat;\n    const children = this.tabsEl.children;\n    const tabsElements = Array.from(children) as HTMLElement[];\n\n    const canSendStickers = appMessagesManager.canSendToPeer(peerId, threadId, 'send_stickers');\n    tabsElements[2].toggleAttribute('disabled', !canSendStickers);\n\n    const canSendGifs = appMessagesManager.canSendToPeer(peerId, threadId, 'send_gifs');\n    tabsElements[3].toggleAttribute('disabled', !canSendGifs);\n\n    const active = this.tabsEl.querySelector('.active');\n    if(active && whichChild(active) !== 1 && (!canSendStickers || !canSendGifs)) {\n      this.selectTab(0, false);\n    }\n  };\n\n  public static menuOnClick = (menu: HTMLElement, scroll: Scrollable, menuScroll?: ScrollableX, prevId = 0) => {\n    let jumpedTo = -1;\n\n    const setActive = (id: number) => {\n      if(id === prevId) {\n        return false;\n      }\n\n      menu.children[prevId].classList.remove('active');\n      menu.children[id].classList.add('active');\n      prevId = id;\n\n      return true;\n    };\n\n    const stickyIntersector = new StickyIntersector(scroll.container, (stuck, target) => {\n      //console.log('sticky scrollTOp', stuck, target, scroll.container.scrollTop);\n\n      if(Math.abs(jumpedTo - scroll.container.scrollTop) <= 1) {\n        return;\n      } else {\n        jumpedTo = -1;\n      }\n\n      const which = whichChild(target);\n      if(!stuck && which) { // * due to stickyIntersector\n        return;\n      }\n\n      setActive(which);\n\n      if(menuScroll) {\n        if(which < menu.childElementCount - 4) {\n          menuScroll.container.scrollLeft = (which - 3) * 47;\n        } else {\n          menuScroll.container.scrollLeft = which * 47;\n        }\n      }\n    });\n\n    menu.addEventListener('click', (e) => {\n      let target = e.target as HTMLElement;\n      target = findUpClassName(target, 'menu-horizontal-div-item');\n\n      if(!target) {\n        return;\n      }\n\n      const which = whichChild(target);\n\n      /* if(menuScroll) {\n        menuScroll.scrollIntoView(target, false, 0);\n      } */\n\n      if(!setActive(which)) {\n        return;\n      }\n\n      const element = (scroll.splitUp || scroll.container).children[which] as HTMLElement;\n      const offsetTop = element.offsetTop + 1; // * due to stickyIntersector\n\n      scroll.container.scrollTop = jumpedTo = offsetTop;\n\n      //console.log('set scrollTop:', offsetTop);\n    });\n\n    return {stickyIntersector, setActive};\n  };\n\n  public static onMediaClick = (e: {target: EventTarget | Element}, clearDraft = false) => {\n    let target = e.target as HTMLElement;\n    target = findUpTag(target, 'DIV');\n\n    if(!target) return false;\n    \n    const fileId = target.dataset.docId;\n    if(!fileId) return false;\n\n    if(appImManager.chat.input.sendMessageWithDocument(fileId, undefined, clearDraft)) {\n      /* dropdown.classList.remove('active');\n      toggleEl.classList.remove('active'); */\n      if(emoticonsDropdown.container) {\n        emoticonsDropdown.forceClose = true;\n        emoticonsDropdown.container.classList.add('disable-hover');\n        emoticonsDropdown.toggle(false);\n      }\n\n      return true;\n    } else {\n      console.warn('got no doc by id:', fileId);\n      return false;\n    }\n  };\n\n  public addLazyLoadQueueRepeat(lazyLoadQueue: LazyLoadQueueIntersector, processInvisibleDiv: (div: HTMLElement) => void) {\n    this.addEventListener('close', () => {\n      lazyLoadQueue.lock();\n    });\n\n    this.addEventListener('closed', () => {\n      const divs = lazyLoadQueue.intersector.getVisible();\n\n      for(const div of divs) {\n        processInvisibleDiv(div);\n      }\n\n      lazyLoadQueue.intersector.clearVisible();\n    });\n\n    this.addEventListener('opened', () => {\n      lazyLoadQueue.unlockAndRefresh();\n    });\n  }\n\n  public getSavedRange() {\n    return this.getGoodRange() || this.savedRange;\n  }\n\n  private getGoodRange() {\n    const sel = document.getSelection();\n    if(sel.rangeCount && document.activeElement === appImManager.chat.input.messageInput) {\n      return sel.getRangeAt(0);\n    }\n  }\n}\n\nconst emoticonsDropdown = new EmoticonsDropdown();\nMOUNT_CLASS_TO.emoticonsDropdown = emoticonsDropdown;\nexport default emoticonsDropdown;\n","export const SEND_WHEN_ONLINE_TIMESTAMP = 0x7FFFFFFE;\n","import { IS_FIREFOX } from \"./userAgent\";\n\nconst IS_WEBRTC_SUPPORTED = !!(typeof(RTCPeerConnection) !== 'undefined' && !IS_FIREFOX);\n\nexport default IS_WEBRTC_SUPPORTED;\n","import IS_WEBRTC_SUPPORTED from \"./webrtcSupport\";\n\nconst IS_CALL_SUPPORTED = IS_WEBRTC_SUPPORTED;\n\nexport default IS_CALL_SUPPORTED;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function getVisibleRect(element: HTMLElement, overflowElement: HTMLElement, lookForSticky?: boolean, rect = element.getBoundingClientRect()) {\r\n  const overflowRect = overflowElement.getBoundingClientRect();\r\n\r\n  let {top: overflowTop, right: overflowRight, bottom: overflowBottom, left: overflowLeft} = overflowRect;\r\n\r\n  // * respect sticky headers\r\n  if(lookForSticky) {\r\n    const sticky = overflowElement.querySelector('.sticky');\r\n    if(sticky) {\r\n      const stickyRect = sticky.getBoundingClientRect();\r\n      overflowTop = stickyRect.bottom;\r\n    }\r\n  }\r\n\r\n  if(rect.top >= overflowBottom\r\n    || rect.bottom <= overflowTop\r\n    || rect.right <= overflowLeft\r\n    || rect.left >= overflowRight) {\r\n    return null;\r\n  }\r\n\r\n  const overflow = {\r\n    top: false,\r\n    right: false,\r\n    bottom: false,\r\n    left: false,\r\n    vertical: 0 as 0 | 1 | 2,\r\n    horizontal: 0 as 0 | 1 | 2\r\n  };\r\n\r\n  // @ts-ignore\r\n  const w: any = 'visualViewport' in window ? window.visualViewport : window;\r\n  const windowWidth = w.width || w.innerWidth;\r\n  const windowHeight = w.height || w.innerHeight;\r\n\r\n  return {\r\n    rect: {\r\n      top: rect.top < overflowTop && overflowTop !== 0 ? (overflow.top = true, ++overflow.vertical, overflowTop) : rect.top,\r\n      right: rect.right > overflowRight && overflowRight !== windowWidth ? (overflow.right = true, ++overflow.horizontal, overflowRight) : rect.right,\r\n      bottom: rect.bottom > overflowBottom && overflowBottom !== windowHeight ? (overflow.bottom = true, ++overflow.vertical, overflowBottom) : rect.bottom,\r\n      left: rect.left < overflowLeft && overflowLeft !== 0 ? (overflow.left = true, ++overflow.horizontal, overflowLeft) : rect.left\r\n    },\r\n    overflow\r\n  };\r\n}\r\n\r\n(window as any).getVisibleRect = getVisibleRect;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport enum INTERNAL_LINK_TYPE {\n  MESSAGE,\n  PRIVATE_POST,\n  STICKER_SET,\n  JOIN_CHAT,\n  VOICE_CHAT\n};\n\nexport type InternalLink = InternalLink.InternalLinkMessage | InternalLink.InternalLinkPrivatePost | InternalLink.InternalLinkStickerSet | InternalLink.InternalLinkJoinChat | InternalLink.InternalLinkVoiceChat;\n\nexport namespace InternalLink {\n  export interface InternalLinkMessage {\n    _: INTERNAL_LINK_TYPE.MESSAGE,\n    domain: string,\n    post?: string,\n    comment?: string,\n    start?: string\n  }\n\n  export interface InternalLinkPrivatePost {\n    _: INTERNAL_LINK_TYPE.PRIVATE_POST,\n    channel: string,\n    post: string,\n    thread?: string,\n    comment?: string\n  }\n\n  export interface InternalLinkStickerSet {\n    _: INTERNAL_LINK_TYPE.STICKER_SET,\n    set: string\n  }\n\n  export interface InternalLinkJoinChat {\n    _: INTERNAL_LINK_TYPE.JOIN_CHAT,\n    invite: string\n  }\n\n  /**\n   * LOCAL LINK\n   */\n  export interface InternalLinkVoiceChat {\n    _: INTERNAL_LINK_TYPE.VOICE_CHAT,\n    id: string,\n    access_hash: string,\n    chat_id: string\n  }\n}\n\nexport type InternalLinkTypeMap = {\n  [INTERNAL_LINK_TYPE.MESSAGE]: InternalLink.InternalLinkMessage,\n  [INTERNAL_LINK_TYPE.PRIVATE_POST]: InternalLink.InternalLinkPrivatePost,\n  [INTERNAL_LINK_TYPE.STICKER_SET]: InternalLink.InternalLinkStickerSet,\n  [INTERNAL_LINK_TYPE.JOIN_CHAT]: InternalLink.InternalLinkJoinChat,\n  [INTERNAL_LINK_TYPE.VOICE_CHAT]: InternalLink.InternalLinkVoiceChat\n};\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport PopupElement, { addCancelButton } from \".\";\r\nimport numberThousandSplitter from \"../../helpers/number/numberThousandSplitter\";\r\nimport { ChatInvite, Updates } from \"../../layer\";\r\nimport apiUpdatesManager from \"../../lib/appManagers/apiUpdatesManager\";\r\nimport appAvatarsManager from \"../../lib/appManagers/appAvatarsManager\";\r\nimport appPhotosManager from \"../../lib/appManagers/appPhotosManager\";\r\nimport { i18n, _i18n } from \"../../lib/langPack\";\r\nimport apiManager from \"../../lib/mtproto/mtprotoworker\";\r\nimport { NULL_PEER_ID } from \"../../lib/mtproto/mtproto_config\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport AvatarElement from \"../avatar\";\r\nimport { toastNew } from \"../toast\";\r\nimport { wrapPhoto } from \"../wrappers\";\r\n\r\n// const FAKE_CHAT_ID = Number.MAX_SAFE_INTEGER - 0x1000;\r\n\r\nexport default class PopupJoinChatInvite extends PopupElement {\r\n  constructor(hash: string, chatInvite: ChatInvite.chatInvite) {\r\n    super('popup-join-chat-invite', addCancelButton([{\r\n      langKey: chatInvite.pFlags.request_needed ? 'RequestJoin.Button' : (chatInvite.pFlags.broadcast ? 'JoinByPeekChannelTitle' : 'JoinByPeekGroupTitle'),\r\n      callback: () => {\r\n        apiManager.invokeApi('messages.importChatInvite', {hash})\r\n        .then((updates) => {\r\n          apiUpdatesManager.processUpdateMessage(updates);\r\n          const chat = (updates as Updates.updates).chats[0];\r\n          const peerId = chat.id.toPeerId(true);\r\n          rootScope.dispatchEvent('history_focus', {peerId});\r\n        }, (error) => {\r\n          if(error.type === 'INVITE_REQUEST_SENT') {\r\n            toastNew({langPackKey: 'RequestToJoinSent'});\r\n          }\r\n        });\r\n      }\r\n    }]), {closable: true, overlayClosable: true, body: true});\r\n\r\n    this.header.remove();\r\n\r\n    /* const fakeChat: Chat.channel | Chat.chat = {\r\n      _: chatInvite.pFlags.channel ? 'channel' : 'chat',\r\n      id: FAKE_CHAT_ID,\r\n      title: chatInvite.title,\r\n      photo: chatInvite.photo as any,\r\n      date: Date.now() / 1000 | 0,\r\n      version: 0,\r\n      participants_count: chatInvite.participants_count,\r\n      pFlags: chatInvite.pFlags as any\r\n    };\r\n\r\n    appChatsManager.saveApiChat(fakeChat); */\r\n    \r\n    const avatarElem = new AvatarElement();\r\n    avatarElem.setAttribute('dialog', '0');\r\n    avatarElem.classList.add('avatar-100');\r\n    if(chatInvite.photo._ === 'photo') {\r\n      chatInvite.photo = appPhotosManager.savePhoto(chatInvite.photo);\r\n      wrapPhoto({\r\n        container: avatarElem,\r\n        message: null,\r\n        photo: chatInvite.photo,\r\n        boxHeight: 100,\r\n        boxWidth: 100,\r\n        withoutPreloader: true\r\n      });\r\n      avatarElem.style.width = avatarElem.style.height = '';\r\n    } else {\r\n      appAvatarsManager.putPhoto(avatarElem, NULL_PEER_ID, false, chatInvite.title);\r\n    }\r\n\r\n    const title = document.createElement('div');\r\n    title.classList.add('chat-title');\r\n    title.innerHTML = RichTextProcessor.wrapEmojiText(chatInvite.title);\r\n    //avatarElem.setAttribute('peer', '' + -fakeChat.id);\r\n    \r\n    const isBroadcast = chatInvite.pFlags.broadcast;\r\n    const peopleCount = i18n(isBroadcast ? 'Subscribers' : 'Members', [numberThousandSplitter(chatInvite.participants_count)]);\r\n    peopleCount.classList.add('chat-participants-count');\r\n\r\n    this.body.append(avatarElem, title, peopleCount);\r\n\r\n    if(chatInvite.pFlags.request_needed) {\r\n      const caption = document.createElement('div');\r\n      _i18n(caption, isBroadcast ? 'RequestToJoinChannelDescription' : 'RequestToJoinGroupDescription');\r\n      caption.classList.add('chat-participants-count', 'request-caption');\r\n\r\n      this.body.append(caption);\r\n    }\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Scrollable from \"../components/scrollable\";\nimport { IS_SAFARI } from \"../environment/userAgent\";\nimport reflowScrollableElement from \"./dom/reflowScrollableElement\";\n\nexport default class ScrollSaver {\n  private previousScrollHeight: number;\n  private previousScrollHeightMinusTop: number/* , previousScrollHeight: number */;\n\n  /**\n   * \n   * @param scrollable to reset scroll position and direction\n   * @param reverse true means top\n   */\n  constructor(\n    private scrollable: Scrollable, \n    private reverse: boolean\n  ) {\n\n  }\n\n  private get container() {\n    return this.scrollable.container;\n  }\n\n  public save() {\n    const {scrollTop, scrollHeight} = this.container;\n\n    //previousScrollHeight = scrollHeight;\n    //previousScrollHeight = scrollHeight + padding;\n    this.previousScrollHeight = scrollHeight;\n    this.previousScrollHeightMinusTop = this.reverse ? scrollHeight - scrollTop : scrollTop;\n\n    //this.chatInner.style.paddingTop = padding + 'px';\n    /* if(reverse) {\n      previousScrollHeightMinusTop = this.scrollable.scrollHeight - scrollTop;\n    } else {\n      previousScrollHeightMinusTop = scrollTop;\n    } */\n\n    /* if(DEBUG) {\n      this.log('performHistoryResult: messagesQueueOnRender, scrollTop:', scrollTop, scrollHeight, previousScrollHeightMinusTop);\n    } */\n  }\n\n  public restore(useReflow?: boolean) {\n    const {container, previousScrollHeightMinusTop, scrollable} = this;\n    if(previousScrollHeightMinusTop !== undefined) {\n      const scrollHeight = container.scrollHeight;\n      if(scrollHeight === this.previousScrollHeight) {\n        return;\n      }\n\n      /* const scrollHeight = container.scrollHeight;\n      const addedHeight = scrollHeight - previousScrollHeight;\n      \n      this.chatInner.style.paddingTop = (10000 - addedHeight) + 'px'; */\n      /* const scrollHeight = scrollHeight;\n      const addedHeight = scrollHeight - previousScrollHeight;\n      \n      this.chatInner.style.paddingTop = (padding - addedHeight) + 'px';\n      \n      //const newScrollTop = reverse ? scrollHeight - previousScrollHeightMinusTop : previousScrollHeightMinusTop;\n      const newScrollTop = reverse ? scrollHeight - addedHeight - previousScrollHeightMinusTop : previousScrollHeightMinusTop;\n      this.log('performHistoryResult: will set scrollTop', \n      previousScrollHeightMinusTop, scrollHeight, \n      newScrollTop, container.container.clientHeight); */\n      //const newScrollTop = reverse ? scrollHeight - previousScrollHeightMinusTop : previousScrollHeightMinusTop;\n      const newScrollTop = this.reverse ? scrollHeight - previousScrollHeightMinusTop : previousScrollHeightMinusTop;\n      \n      /* if(DEBUG) {\n        this.log('performHistoryResult: will set up scrollTop:', newScrollTop, this.isHeavyAnimationInProgress);\n      } */\n\n      // touchSupport for safari iOS\n      //isTouchSupported && isApple && (container.container.style.overflow = 'hidden');\n      container.scrollTop = newScrollTop;\n      //container.scrollTop = scrollHeight;\n      //isTouchSupported && isApple && (container.container.style.overflow = '');\n\n      scrollable.lastScrollPosition = newScrollTop;\n      // scrollable.lastScrollDirection = 0;\n\n      if(IS_SAFARI && useReflow/*  && !isAppleMobile */) { // * fix blinking and jumping\n        reflowScrollableElement(container);\n      }\n\n      /* if(DEBUG) {\n        this.log('performHistoryResult: have set up scrollTop:', newScrollTop, container.scrollTop, container.scrollHeight, this.isHeavyAnimationInProgress);\n      } */\n    }\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppImManager } from \"../../lib/appManagers/appImManager\";\r\nimport type { AppMessagesManager, HistoryResult, HistoryStorage, MyMessage } from \"../../lib/appManagers/appMessagesManager\";\r\nimport type { AppStickersManager } from \"../../lib/appManagers/appStickersManager\";\r\nimport type { AppUsersManager } from \"../../lib/appManagers/appUsersManager\";\r\nimport type { AppInlineBotsManager } from \"../../lib/appManagers/appInlineBotsManager\";\r\nimport type { AppPhotosManager } from \"../../lib/appManagers/appPhotosManager\";\r\nimport type { MyDocument } from \"../../lib/appManagers/appDocsManager\";\r\nimport type { AppPeersManager } from \"../../lib/appManagers/appPeersManager\";\r\nimport type { AppChatsManager } from \"../../lib/appManagers/appChatsManager\";\r\nimport type { AppProfileManager } from \"../../lib/appManagers/appProfileManager\";\r\nimport type { AppDraftsManager } from \"../../lib/appManagers/appDraftsManager\";\r\nimport type { AppMessagesIdsManager } from \"../../lib/appManagers/appMessagesIdsManager\";\r\nimport type Chat from \"./chat\";\r\nimport { CHAT_ANIMATION_GROUP } from \"../../lib/appManagers/appImManager\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\r\nimport { logger } from \"../../lib/logger\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport BubbleGroups from \"./bubbleGroups\";\r\nimport PopupDatePicker from \"../popups/datePicker\";\r\nimport PopupForward from \"../popups/forward\";\r\nimport PopupStickers from \"../popups/stickers\";\r\nimport ProgressivePreloader from \"../preloader\";\r\nimport Scrollable, { SliceSides } from \"../scrollable\";\r\nimport StickyIntersector from \"../stickyIntersector\";\r\nimport animationIntersector from \"../animationIntersector\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport mediaSizes from \"../../helpers/mediaSizes\";\r\nimport { IS_ANDROID, IS_APPLE, IS_MOBILE, IS_SAFARI } from \"../../environment/userAgent\";\r\nimport I18n, { FormatterArguments, i18n, langPack, LangPackKey, UNSUPPORTED_LANG_PACK_KEY, _i18n } from \"../../lib/langPack\";\r\nimport AvatarElement from \"../avatar\";\r\nimport { ripple } from \"../ripple\";\r\nimport { wrapAlbum, wrapPhoto, wrapVideo, wrapDocument, wrapSticker, wrapPoll, wrapGroupedDocuments } from \"../wrappers\";\r\nimport { MessageRender } from \"./messageRender\";\r\nimport LazyLoadQueue from \"../lazyLoadQueue\";\r\nimport ListenerSetter from \"../../helpers/listenerSetter\";\r\nimport PollElement from \"../poll\";\r\nimport AudioElement from \"../audio\";\r\nimport { ChatInvite, Message, MessageEntity,  MessageMedia,  MessageReplyHeader, Photo, PhotoSize, ReactionCount, ReplyMarkup, SponsoredMessage, Update, WebPage } from \"../../layer\";\r\nimport { NULL_PEER_ID, REPLIES_PEER_ID } from \"../../lib/mtproto/mtproto_config\";\r\nimport { FocusDirection } from \"../../helpers/fastSmoothScroll\";\r\nimport useHeavyAnimationCheck, { getHeavyAnimationPromise, dispatchHeavyAnimationEvent, interruptHeavyAnimation } from \"../../hooks/useHeavyAnimationCheck\";\r\nimport { fastRaf, fastRafPromise } from \"../../helpers/schedulers\";\r\nimport { deferredPromise } from \"../../helpers/cancellablePromise\";\r\nimport RepliesElement from \"./replies\";\r\nimport DEBUG from \"../../config/debug\";\r\nimport { SliceEnd } from \"../../helpers/slicedArray\";\r\nimport serverTimeManager from \"../../lib/mtproto/serverTimeManager\";\r\nimport PeerTitle from \"../peerTitle\";\r\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\r\nimport findUpTag from \"../../helpers/dom/findUpTag\";\r\nimport { toast } from \"../toast\";\r\nimport { getElementByPoint } from \"../../helpers/dom/getElementByPoint\";\r\nimport { getMiddleware } from \"../../helpers/middleware\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent, simulateClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport htmlToDocumentFragment from \"../../helpers/dom/htmlToDocumentFragment\";\r\nimport positionElementByIndex from \"../../helpers/dom/positionElementByIndex\";\r\nimport reflowScrollableElement from \"../../helpers/dom/reflowScrollableElement\";\r\nimport replaceContent from \"../../helpers/dom/replaceContent\";\r\nimport setInnerHTML from \"../../helpers/dom/setInnerHTML\";\r\nimport whichChild from \"../../helpers/dom/whichChild\";\r\nimport { cancelAnimationByKey } from \"../../helpers/animation\";\r\nimport assumeType from \"../../helpers/assumeType\";\r\nimport { EmoticonsDropdown } from \"../emoticonsDropdown\";\r\nimport debounce from \"../../helpers/schedulers/debounce\";\r\nimport { SEND_WHEN_ONLINE_TIMESTAMP } from \"../../lib/mtproto/constants\";\r\nimport windowSize from \"../../helpers/windowSize\";\r\nimport { formatPhoneNumber } from \"../../helpers/formatPhoneNumber\";\r\nimport AppMediaViewer from \"../appMediaViewer\";\r\nimport SetTransition from \"../singleTransition\";\r\nimport handleHorizontalSwipe from \"../../helpers/dom/handleHorizontalSwipe\";\r\nimport { cancelContextMenuOpening } from \"../misc\";\r\nimport findUpAttribute from \"../../helpers/dom/findUpAttribute\";\r\nimport findUpAsChild from \"../../helpers/dom/findUpAsChild\";\r\nimport formatCallDuration from \"../../helpers/formatCallDuration\";\r\nimport IS_CALL_SUPPORTED from \"../../environment/callSupport\";\r\nimport Button from \"../button\";\r\nimport { CallType } from \"../../lib/calls/types\";\r\nimport getVisibleRect from \"../../helpers/dom/getVisibleRect\";\r\nimport PopupJoinChatInvite from \"../popups/joinChatInvite\";\r\nimport { InternalLink, INTERNAL_LINK_TYPE } from \"../../lib/appManagers/internalLink\";\r\nimport ReactionsElement, { REACTIONS_ELEMENTS } from \"./reactions\";\r\nimport type ReactionElement from \"./reaction\";\r\nimport type { AppReactionsManager } from \"../../lib/appManagers/appReactionsManager\";\r\nimport RLottiePlayer from \"../../lib/rlottie/rlottiePlayer\";\r\nimport { pause } from \"../../helpers/schedulers/pause\";\r\nimport ScrollSaver from \"../../helpers/scrollSaver\";\r\nimport getObjectKeysAndSort from \"../../helpers/object/getObjectKeysAndSort\";\r\nimport forEachReverse from \"../../helpers/array/forEachReverse\";\r\nimport formatNumber from \"../../helpers/number/formatNumber\";\r\n\r\nconst USE_MEDIA_TAILS = false;\r\nconst IGNORE_ACTIONS: Set<Message.messageService['action']['_']> = new Set([\r\n  'messageActionHistoryClear',\r\n  'messageActionChatCreate'/* ,\r\n  'messageActionChannelMigrateFrom' */\r\n]);\r\n\r\nconst SERVICE_AS_REGULAR: Set<Message.messageService['action']['_']> = new Set();\r\n\r\nif(IS_CALL_SUPPORTED) {\r\n  SERVICE_AS_REGULAR.add('messageActionPhoneCall');\r\n}\r\n\r\nconst TEST_SCROLL_TIMES: number = undefined;\r\nlet TEST_SCROLL = TEST_SCROLL_TIMES;\r\n\r\nlet queueId = 0;\r\n\r\ntype GenerateLocalMessageType<IsService> = IsService extends true ? Message.messageService : Message.message;\r\n\r\nconst SPONSORED_MESSAGE_ID_OFFSET = 1;\r\n\r\nexport default class ChatBubbles {\r\n  public bubblesContainer: HTMLDivElement;\r\n  private chatInner: HTMLDivElement;\r\n  public scrollable: Scrollable;\r\n\r\n  private getHistoryTopPromise: Promise<boolean>;\r\n  private getHistoryBottomPromise: Promise<boolean>;\r\n\r\n  public peerId: PeerId;\r\n  //public messagesCount: number = -1;\r\n\r\n  private unreadOut = new Set<number>();\r\n  public needUpdate: {replyToPeerId: PeerId, replyMid: number, mid: number}[] = []; // if need wrapSingleMessage\r\n\r\n  public bubbles: {[mid: string]: HTMLElement} = {};\r\n  public skippedMids: Set<number> = new Set();\r\n  private dateMessages: {[timestamp: number]: { \r\n    div: HTMLElement, \r\n    firstTimestamp: number, \r\n    container: HTMLElement,\r\n    timeout?: number \r\n  }} = {};\r\n\r\n  private scrolledDown = true;\r\n  private isScrollingTimeout = 0;\r\n\r\n  private stickyIntersector: StickyIntersector;\r\n\r\n  private unreadedObserver: IntersectionObserver;\r\n  private unreaded: Map<HTMLElement, number> = new Map();\r\n  private unreadedSeen: Set<number> = new Set();\r\n  private readPromise: Promise<void>;\r\n\r\n  private bubbleGroups: BubbleGroups;\r\n\r\n  private preloader: ProgressivePreloader = null;\r\n  \r\n  private loadedTopTimes = 0;\r\n  private loadedBottomTimes = 0;\r\n\r\n  public messagesQueuePromise: Promise<void> = null;\r\n  private messagesQueue: {message: any, bubble: HTMLElement, reverse: boolean, promises: Promise<void>[]}[] = [];\r\n  private messagesQueueOnRender: () => void = null;\r\n  private messagesQueueOnRenderAdditional: () => void = null;\r\n\r\n  private firstUnreadBubble: HTMLElement = null;\r\n  private attachedUnreadBubble: boolean;\r\n\r\n  public lazyLoadQueue: LazyLoadQueue;\r\n\r\n  private middleware = getMiddleware();\r\n\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  public listenerSetter: ListenerSetter;\r\n\r\n  private replyFollowHistory: number[] = [];\r\n\r\n  private isHeavyAnimationInProgress = false;\r\n  private scrollingToBubble: HTMLElement;\r\n\r\n  private isFirstLoad = true;\r\n  private needReflowScroll: boolean;\r\n\r\n  private fetchNewPromise: Promise<void>;\r\n  private historyStorage: HistoryStorage;\r\n\r\n  private passEntities: Partial<{\r\n    [_ in MessageEntity['_']]: boolean\r\n  }> = {};\r\n\r\n  private onAnimateLadder: () => Promise<any> | void;\r\n  // private ladderDeferred: CancellablePromise<void>;\r\n  private resolveLadderAnimation: () => Promise<any>;\r\n  private emptyPlaceholderMid: number;\r\n\r\n  private viewsObserver: IntersectionObserver;\r\n  private viewsMids: Set<number> = new Set();\r\n  private sendViewCountersDebounced: () => Promise<void>;\r\n\r\n  private isTopPaddingSet = false;\r\n\r\n  private getSponsoredMessagePromise: Promise<void>;\r\n\r\n  private previousStickyDate: HTMLElement;\r\n  private sponsoredMessage: SponsoredMessage.sponsoredMessage;\r\n  \r\n  private hoverBubble: HTMLElement;\r\n  private hoverReaction: HTMLElement;\r\n\r\n  private onUpdateScrollSaver: ScrollSaver;\r\n\r\n  // private reactions: Map<number, ReactionsElement>;\r\n\r\n  constructor(\r\n    private chat: Chat, \r\n    private appMessagesManager: AppMessagesManager, \r\n    private appStickersManager: AppStickersManager, \r\n    private appUsersManager: AppUsersManager, \r\n    private appInlineBotsManager: AppInlineBotsManager, \r\n    private appPhotosManager: AppPhotosManager, \r\n    private appPeersManager: AppPeersManager,\r\n    private appProfileManager: AppProfileManager,\r\n    private appDraftsManager: AppDraftsManager,\r\n    private appMessagesIdsManager: AppMessagesIdsManager,\r\n    private appChatsManager: AppChatsManager,\r\n    private appReactionsManager: AppReactionsManager\r\n  ) {\r\n    //this.chat.log.error('Bubbles construction');\r\n    \r\n    this.listenerSetter = new ListenerSetter();\r\n\r\n    this.bubblesContainer = document.createElement('div');\r\n    this.bubblesContainer.classList.add('bubbles', 'scrolled-down');\r\n\r\n    this.chatInner = document.createElement('div');\r\n    this.chatInner.classList.add('bubbles-inner');\r\n\r\n    this.setScroll();\r\n\r\n    this.bubblesContainer.append(this.scrollable.container);\r\n\r\n    // * constructor end\r\n\r\n    this.log = this.chat.log;\r\n    this.bubbleGroups = new BubbleGroups(this.chat);\r\n    this.preloader = new ProgressivePreloader({\r\n      cancelable: false\r\n    });\r\n    this.lazyLoadQueue = new LazyLoadQueue();\r\n    this.lazyLoadQueue.queueId = ++queueId;\r\n\r\n    // this.reactions = new Map();\r\n\r\n    // * events\r\n\r\n    // will call when sent for update pos\r\n    this.listenerSetter.add(rootScope)('history_update', ({storage, peerId, mid}) => {\r\n      if(this.chat.getMessagesStorage() === storage) {\r\n        const bubble = this.bubbles[mid];\r\n        if(!bubble) return;\r\n\r\n        const message = this.chat.getMessage(mid);\r\n        \r\n        if(+bubble.dataset.timestamp >= (message.date + serverTimeManager.serverTimeOffset - 1)) {\r\n          this.bubbleGroups.changeBubbleMid(bubble, mid);\r\n          return;\r\n        }\r\n\r\n        this.setBubblePosition(bubble, message, false);\r\n        //this.log('history_update', this.bubbles[mid], mid, message);\r\n\r\n        if(this.scrollingToBubble) {\r\n          this.scrollToEnd();\r\n        }\r\n\r\n        //this.renderMessage(message, false, false, bubble);\r\n      }\r\n    });\r\n\r\n    //this.listenerSetter.add(rootScope)('')\r\n\r\n    this.listenerSetter.add(rootScope)('dialog_flush', ({peerId}) => {\r\n      if(this.peerId === peerId) {\r\n        this.deleteMessagesByIds(Object.keys(this.bubbles).map(m => +m));\r\n      }\r\n    });\r\n\r\n    // Calls when message successfully sent and we have an id\r\n    this.listenerSetter.add(rootScope)('message_sent', (e) => {\r\n      const {storage, tempId, tempMessage, mid} = e;\r\n\r\n      // ! can't use peerId to validate here, because id can be the same in 'scheduled' and 'chat' types\r\n      if(this.chat.getMessagesStorage() !== storage) {\r\n        return;\r\n      }\r\n      \r\n      //this.log('message_sent', e);\r\n\r\n      const mounted = this.getMountedBubble(tempId, tempMessage) || this.getMountedBubble(mid);\r\n      if(mounted) {\r\n        const message = this.chat.getMessage(mid);\r\n        const bubble = mounted.bubble;\r\n        //this.bubbles[mid] = bubble;\r\n        \r\n        /////this.log('message_sent', bubble);\r\n\r\n        const reactionsElements = Array.from(bubble.querySelectorAll('reactions-element')) as ReactionsElement[];\r\n        if(reactionsElements.length) {\r\n          reactionsElements.forEach(reactionsElement => {\r\n            reactionsElement.changeMessage(message as Message.message);\r\n          });\r\n        }\r\n\r\n        if(message.replies) {\r\n          const repliesElement = bubble.querySelector('replies-element') as RepliesElement;\r\n          if(repliesElement) {\r\n            repliesElement.message = message;\r\n            repliesElement.init();\r\n          }\r\n        }\r\n\r\n        if(message.media?.document) {\r\n          const div = bubble.querySelector(`.document-container[data-mid=\"${tempId}\"] .document`);\r\n          if(div) {\r\n            const container = findUpClassName(div, 'document-container');\r\n\r\n            if(!tempMessage.media?.document?.thumbs?.length && message.media.document.thumbs?.length) {\r\n              div.replaceWith(wrapDocument({message}));\r\n            }\r\n\r\n            if(container) {\r\n              container.dataset.mid = '' + mid;\r\n            }\r\n          }\r\n        }\r\n\r\n        // set new mids to album items for mediaViewer\r\n        if(message.grouped_id) {\r\n          const item = (bubble.querySelector(`.grouped-item[data-mid=\"${tempId}\"]`) as HTMLElement) || bubble; // * it can be .document-container\r\n          if(item) {\r\n            item.dataset.mid = '' + mid;\r\n          }\r\n        }\r\n\r\n        if(message.media?.poll) {\r\n          const pollElement = bubble.querySelector('poll-element') as PollElement;\r\n          if(pollElement) {\r\n            const newPoll = message.media.poll;\r\n            pollElement.message = message;\r\n            pollElement.setAttribute('poll-id', newPoll.id);\r\n            pollElement.setAttribute('message-id', '' + mid);\r\n          }\r\n        }\r\n\r\n        if(message.media?.document) {\r\n          const element = bubble.querySelector(`audio-element[data-mid=\"${tempId}\"], .document[data-doc-id=\"${tempId}\"], .media-round[data-mid=\"${tempId}\"]`) as HTMLElement;\r\n          if(element) {\r\n            if(element instanceof AudioElement || element.classList.contains('media-round')) {\r\n              element.dataset.mid = '' + message.mid;\r\n              delete element.dataset.isOutgoing;\r\n              (element as any).message = message;\r\n              (element as any).onLoad(true);\r\n            } else {\r\n              element.dataset.docId = message.media.document.id;\r\n            }\r\n          }\r\n        }\r\n\r\n        /* bubble.classList.remove('is-sending');\r\n        bubble.classList.add('is-sent');\r\n        bubble.dataset.mid = '' + mid;\r\n\r\n        this.bubbleGroups.removeBubble(bubble, tempId); */\r\n\r\n        if(message.media?.webpage && !bubble.querySelector('.web')) {\r\n          getHeavyAnimationPromise().then(() => {\r\n            this.safeRenderMessage(message, true, false, bubble, false);\r\n            this.scrollToBubbleIfLast(bubble);\r\n          });\r\n          /* const mounted = this.getMountedBubble(mid);\r\n          if(!mounted) return;\r\n          this.renderMessage(mounted.message, true, false, mounted.bubble, false); */\r\n        }\r\n        \r\n        //delete this.bubbles[tempId];\r\n      } else {\r\n        this.log.warn('message_sent there is no bubble', e);\r\n      }\r\n\r\n      const bubbles = this.bubbles;\r\n      if(bubbles[tempId]) {\r\n        const bubble = bubbles[tempId];\r\n        bubbles[mid] = bubble;\r\n        delete bubbles[tempId];\r\n\r\n        //getHeavyAnimationPromise().then(() => {\r\n          fastRaf(() => {\r\n            if(bubble.classList.contains('is-outgoing')) {\r\n              bubble.classList.remove('is-sending', 'is-outgoing');\r\n              bubble.classList.add(this.peerId === rootScope.myId && this.chat.type !== 'scheduled' ? 'is-read' : 'is-sent');\r\n            }\r\n          });\r\n        //});\r\n\r\n        bubble.dataset.mid = '' + mid;\r\n      }\r\n\r\n      if(this.unreadOut.has(tempId)) {\r\n        this.unreadOut.delete(tempId);\r\n        this.unreadOut.add(mid);\r\n      }\r\n\r\n      // * check timing of scheduled message\r\n      if(this.chat.type === 'scheduled') {\r\n        const timestamp = Date.now() / 1000 | 0;\r\n        const maxTimestamp = tempMessage.date - 10;\r\n        //this.log('scheduled timing:', timestamp, maxTimestamp);\r\n        if(timestamp >= maxTimestamp) {\r\n          this.deleteMessagesByIds([mid]);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('message_edit', ({storage, peerId, mid}) => {\r\n      // fastRaf(() => {\r\n        if(storage !== this.chat.getMessagesStorage()) return;\r\n        const message = this.chat.getMessage(mid);\r\n        const mounted = message.grouped_id ? this.getGroupedBubble(message.grouped_id) : this.getMountedBubble(mid);\r\n        if(!mounted) return;\r\n\r\n        const updatePosition = this.chat.type === 'scheduled';\r\n        \r\n        this.saveOnUpdateScroll();\r\n        this.safeRenderMessage(mounted.message, true, false, mounted.bubble, updatePosition);\r\n\r\n        if(updatePosition) {\r\n          (this.messagesQueuePromise || Promise.resolve()).then(() => {\r\n            this.deleteEmptyDateGroups();\r\n          });\r\n        }\r\n      // });\r\n    });\r\n\r\n    if(this.chat.type !== 'scheduled') {\r\n      this.listenerSetter.add(rootScope)('missed_reactions_element', ({message, changedResults}) => {\r\n        if(this.peerId !== message.peerId || !message.reactions || !message.reactions.results.length) {\r\n          return;\r\n        }\r\n  \r\n        const bubble = this.getBubbleByMessage(message);\r\n        if(!bubble) {\r\n          return;\r\n        }\r\n\r\n        if(message.grouped_id) {\r\n          const grouped = this.getGroupedBubble(message.grouped_id);\r\n          message = grouped.message;\r\n        }\r\n\r\n        this.appendReactionsElementToBubble(bubble, message, changedResults);\r\n      });\r\n\r\n      this.listenerSetter.add(rootScope)('message_reactions', ({message, changedResults}) => {\r\n        if(this.peerId !== message.peerId) {\r\n          return;\r\n        }\r\n\r\n        const bubble = this.getBubbleByMessage(message);\r\n        if(!bubble) {\r\n          return;\r\n        }\r\n\r\n        this.saveOnUpdateScroll();\r\n\r\n        const key = message.peerId + '_' + message.mid;\r\n        const set = REACTIONS_ELEMENTS.get(key);\r\n        if(set) {\r\n          for(const element of set) {\r\n            element.update(message, changedResults);\r\n          }\r\n        } else {\r\n          rootScope.dispatchEvent('missed_reactions_element', {message, changedResults});\r\n        }\r\n      });\r\n    }\r\n\r\n    /* this.listenerSetter.add(rootScope)('message_reactions', ({peerId, mid}) => {\r\n      if(this.peerId !== peerId) {\r\n        return;\r\n      }\r\n\r\n      const reactionsElement = this.reactions.get(mid);\r\n      if(!reactionsElement) {\r\n        return;\r\n      }\r\n\r\n      \r\n    }); */\r\n\r\n    this.listenerSetter.add(rootScope)('album_edit', ({peerId, groupId, deletedMids}) => {\r\n      //fastRaf(() => { // ! can't use delayed smth here, need original bubble to be edited\r\n        if(peerId !== this.peerId) return;\r\n        const mids = this.appMessagesManager.getMidsByAlbum(groupId);\r\n        const renderedId = mids.concat(deletedMids).find(mid => this.bubbles[mid]);\r\n        if(!renderedId) return;\r\n\r\n        const renderMaxId = getObjectKeysAndSort(this.appMessagesManager.groupedMessagesStorage[groupId], 'asc').pop();\r\n\r\n        this.safeRenderMessage(this.chat.getMessage(renderMaxId), true, false, this.bubbles[renderedId], false);\r\n      //});\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('messages_downloaded', ({peerId, mids}) => {\r\n      const middleware = this.getMiddleware();\r\n      getHeavyAnimationPromise().then(() => {\r\n        if(!middleware()) return;\r\n\r\n        (mids as number[]).forEach(mid => {\r\n          /* const promise = (this.scrollable.scrollLocked && this.scrollable.scrollLockedPromise) || Promise.resolve();\r\n          promise.then(() => {\r\n  \r\n          }); */\r\n          forEachReverse(this.needUpdate, (obj, idx) => {\r\n            if(obj.replyMid === mid && obj.replyToPeerId === peerId) {\r\n              const {mid, replyMid} = this.needUpdate.splice(idx, 1)[0];\r\n              \r\n              //this.log('messages_downloaded', mid, replyMid, i, this.needUpdate, this.needUpdate.length, mids, this.bubbles[mid]);\r\n              const bubble = this.bubbles[mid];\r\n              if(!bubble) return;\r\n              \r\n              const message = this.chat.getMessage(mid);\r\n              \r\n              const repliedMessage = this.appMessagesManager.getMessageByPeer(obj.replyToPeerId, replyMid);\r\n              if(repliedMessage.deleted) { // ! чтобы не пыталось бесконечно загрузить удалённое сообщение\r\n                delete message.reply_to_mid; // ! WARNING!\r\n              }\r\n              \r\n              MessageRender.setReply({\r\n                chat: this.chat,\r\n                bubble,\r\n                message\r\n              });\r\n            }\r\n          });\r\n        });\r\n      });\r\n    });\r\n\r\n    if(IS_TOUCH_SUPPORTED) {\r\n      const className = 'is-gesturing-reply';\r\n      const MAX = 64;\r\n      const replyAfter = MAX * .75;\r\n      let shouldReply = false;\r\n      let target: HTMLElement;\r\n      let icon: HTMLElement;\r\n      handleHorizontalSwipe({\r\n        element: this.bubblesContainer,\r\n        verifyTouchTarget: (e) => {\r\n          if(this.chat.selection.isSelecting || !this.chat.canSend()) {\r\n            return false;\r\n          }\r\n\r\n          // cancelEvent(e);\r\n          target = findUpClassName(e.target, 'bubble');\r\n          if(target) {\r\n            SetTransition(target, className, true, 250);\r\n            void target.offsetLeft; // reflow\r\n\r\n            if(!icon) {\r\n              icon = document.createElement('span');\r\n              icon.classList.add('tgico-reply_filled', 'bubble-gesture-reply-icon');\r\n            } else {\r\n              icon.classList.remove('is-visible');\r\n              icon.style.opacity = '';\r\n            }\r\n\r\n            target/* .querySelector('.bubble-content') */.append(icon);\r\n          }\r\n\r\n          return !!target;\r\n        },\r\n        onSwipe: (xDiff, yDiff) => {\r\n          shouldReply = xDiff >= replyAfter;\r\n\r\n          if(shouldReply && !icon.classList.contains('is-visible')) {\r\n            icon.classList.add('is-visible');\r\n          }\r\n          icon.style.opacity = '' + Math.min(1, xDiff / replyAfter);\r\n\r\n          const x = -Math.max(0, Math.min(MAX, xDiff));\r\n          target.style.transform = `translateX(${x}px)`;\r\n          cancelContextMenuOpening();\r\n        },\r\n        onReset: () => {\r\n          const _target = target;\r\n          SetTransition(_target, className, false, 250, () => {\r\n            if(icon.parentElement === _target) {\r\n              icon.classList.remove('is-visible');\r\n              icon.remove();\r\n            }\r\n          });\r\n\r\n          fastRaf(() => {\r\n            _target.style.transform = ``;\r\n\r\n            if(shouldReply) {\r\n              const {mid} = _target.dataset;\r\n              this.chat.input.initMessageReply(+mid);\r\n              shouldReply = false;\r\n            }\r\n          });\r\n        },\r\n        listenerOptions: {capture: true}\r\n      });\r\n    }\r\n\r\n    attachClickEvent(this.bubblesContainer, this.onBubblesClick, {listenerSetter: this.listenerSetter});\r\n    // this.listenerSetter.add(this.bubblesContainer)('click', this.onBubblesClick/* , {capture: true, passive: false} */);\r\n\r\n    if(DEBUG) {\r\n      this.listenerSetter.add(this.bubblesContainer)('dblclick', (e) => {\r\n        const bubble = findUpClassName(e.target, 'grouped-item') || findUpClassName(e.target, 'bubble');\r\n        if(bubble) {\r\n          const mid = +bubble.dataset.mid\r\n          this.log('debug message:', this.chat.getMessage(mid));\r\n          this.highlightBubble(bubble);\r\n        }\r\n      });\r\n    }\r\n\r\n    if(!IS_MOBILE && this.chat.type !== 'pinned') {\r\n      this.listenerSetter.add(this.bubblesContainer)('dblclick', (e) => {\r\n        if(this.chat.selection.isSelecting || \r\n          !this.chat.canSend()) {\r\n          return;\r\n        }\r\n        \r\n        const target = e.target as HTMLElement;\r\n        const bubble = target.classList.contains('bubble') ? \r\n          target : \r\n          (target.classList.contains('document-selection') ? target.parentElement : null);\r\n        if(bubble && !bubble.classList.contains('bubble-first')) {\r\n          const mid = +bubble.dataset.mid;\r\n          const message = this.chat.getMessage(mid);\r\n          if(message.pFlags.is_outgoing) {\r\n            return;\r\n          }\r\n          \r\n          this.chat.input.initMessageReply(mid);\r\n        }\r\n      });\r\n    }\r\n\r\n    if(false) this.stickyIntersector = new StickyIntersector(this.scrollable.container, (stuck, target) => {\r\n      for(const timestamp in this.dateMessages) {\r\n        const dateMessage = this.dateMessages[timestamp];\r\n        if(dateMessage.container === target) {\r\n          dateMessage.div.classList.toggle('is-sticky', stuck);\r\n          break;\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n    let middleware: ReturnType<ChatBubbles['getMiddleware']>;\r\n    useHeavyAnimationCheck(() => {\r\n      this.isHeavyAnimationInProgress = true;\r\n      this.lazyLoadQueue.lock();\r\n      middleware = this.getMiddleware();\r\n    }, () => {\r\n      this.isHeavyAnimationInProgress = false;\r\n\r\n      if(middleware && middleware()) {\r\n        this.lazyLoadQueue.unlock();\r\n        this.lazyLoadQueue.refresh();\r\n      }\r\n\r\n      middleware = null;\r\n    }, this.listenerSetter);\r\n  }\r\n\r\n  public constructPeerHelpers() {\r\n    // will call when message is sent (only 1)\r\n    this.listenerSetter.add(rootScope)('history_append', ({storage, mid}) => {\r\n      if(storage !== this.chat.getMessagesStorage()) return;\r\n\r\n      if(!this.scrollable.loadedAll.bottom) {\r\n        this.chat.setMessageId();\r\n      } else {\r\n        this.renderNewMessagesByIds([mid], true);\r\n      }\r\n\r\n      if(rootScope.settings.animationsEnabled) {\r\n        const gradientRenderer = this.chat.gradientRenderer;\r\n        if(gradientRenderer) {\r\n          gradientRenderer.toNextPosition();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('history_multiappend', (msgIdsByPeer) => {\r\n      if(!(this.peerId in msgIdsByPeer)) return;\r\n      const msgIds = Array.from(msgIdsByPeer[this.peerId]).slice().sort((a, b) => b - a);\r\n      this.renderNewMessagesByIds(msgIds);\r\n    });\r\n    \r\n    this.listenerSetter.add(rootScope)('history_delete', ({peerId, msgs}) => {\r\n      if(peerId === this.peerId) {\r\n        this.deleteMessagesByIds(Array.from(msgs));\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('dialog_unread', ({peerId}) => {\r\n      if(peerId === this.peerId) {\r\n        this.chat.input.setUnreadCount();\r\n        this.updateUnreadByDialog();\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('dialogs_multiupdate', (dialogs) => {\r\n      if(dialogs[this.peerId]) {\r\n        this.chat.input.setUnreadCount();\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('dialog_notify_settings', (dialog) => {\r\n      if(this.peerId === dialog.peerId) {\r\n        this.chat.input.setUnreadCount();\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('chat_update', (chatId) => {\r\n      if(this.peerId === chatId.toPeerId(true)) {\r\n        const hadRights = this.chatInner.classList.contains('has-rights');\r\n        const hasRights = this.chat.canSend();\r\n\r\n        if(hadRights !== hasRights) {\r\n          this.finishPeerChange();\r\n          this.chat.input.finishPeerChange();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('settings_updated', (e) => {\r\n      if(e.key === 'settings.emoji.big') {\r\n        const isScrolledDown = this.scrollable.isScrolledDown;\r\n        if(!isScrolledDown) {\r\n          this.setMessagesQueuePromise();\r\n        }\r\n        \r\n        const mids = getObjectKeysAndSort(this.bubbles, 'desc');\r\n        mids.forEach(mid => {\r\n          const bubble = this.bubbles[mid];\r\n          if(bubble.classList.contains('can-have-big-emoji')) {\r\n            const message = this.chat.getMessage(mid);\r\n            this.safeRenderMessage(message, undefined, false, bubble);\r\n            // this.bubbleGroups.addBubble(bubble, message, false);\r\n          }\r\n        });\r\n\r\n        if(isScrolledDown) {\r\n          this.scrollable.scrollTop = 99999;\r\n        } else {\r\n          this.performHistoryResult([], true, false, undefined);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('message_views', ({peerId, views, mid}) => {\r\n      if(this.peerId !== peerId) return;\r\n\r\n      fastRaf(() => {\r\n        const bubble = this.bubbles[mid];\r\n        if(!bubble) return;\r\n\r\n        const postViewsElements = Array.from(bubble.querySelectorAll('.post-views')) as HTMLElement[];\r\n        if(postViewsElements.length) {\r\n          const str = formatNumber(views, 1);\r\n          let different = false;\r\n          postViewsElements.forEach(postViews => {\r\n            if(different || postViews.innerHTML !== str) {\r\n              this.saveOnUpdateScroll();\r\n              different = true;\r\n              postViews.innerHTML = str;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.unreadedObserver = new IntersectionObserver((entries) => {\r\n      entries.forEach(entry => {\r\n        if(entry.isIntersecting) {\r\n          const target = entry.target as HTMLElement;\r\n          const mid = this.unreaded.get(target as HTMLElement);\r\n          this.onUnreadedInViewport(target, mid);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.viewsObserver = new IntersectionObserver((entries) => {\r\n      entries.forEach(entry => {\r\n        if(entry.isIntersecting) {\r\n          const mid = +(entry.target as HTMLElement).dataset.mid;\r\n          this.viewsObserver.unobserve(entry.target);\r\n\r\n          if(mid) {\r\n            this.viewsMids.add(mid);\r\n            this.sendViewCountersDebounced();\r\n          } else {\r\n            const {sponsoredMessage} = this;\r\n            if(sponsoredMessage && sponsoredMessage.random_id) {\r\n              delete sponsoredMessage.random_id;\r\n              this.chat.apiManager.invokeApiSingle('channels.viewSponsoredMessage', {\r\n                channel: this.appChatsManager.getChannelInput(this.peerId.toChatId()),\r\n                random_id: sponsoredMessage.random_id\r\n              });\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    this.sendViewCountersDebounced = debounce(() => {\r\n      const mids = [...this.viewsMids];\r\n      this.viewsMids.clear();\r\n\r\n      this.appMessagesManager.incrementMessageViews(this.peerId, mids);\r\n    }, 1000, false, true);\r\n\r\n    if('ResizeObserver' in window) {\r\n      let wasHeight = this.scrollable.container.offsetHeight;\r\n      let resizing = false;\r\n      let skip = false;\r\n      let scrolled = 0;\r\n      let part = 0;\r\n      let rAF = 0;\r\n\r\n      const onResizeEnd = () => {\r\n        const height = this.scrollable.container.offsetHeight;\r\n        const isScrolledDown = this.scrollable.isScrolledDown;\r\n        if(height !== wasHeight && (!skip || !isScrolledDown)) { // * fix opening keyboard while ESG is active, offsetHeight will change right between 'start' and this first frame\r\n          part += wasHeight - height;\r\n        }\r\n\r\n        /* if(DEBUG) {\r\n          this.log('resize end', scrolled, part, this.scrollable.scrollTop, height, wasHeight, this.scrollable.isScrolledDown);\r\n        } */\r\n\r\n        if(part) {\r\n          this.scrollable.scrollTop += Math.round(part);\r\n        }\r\n\r\n        wasHeight = height;\r\n        scrolled = 0;\r\n        rAF = 0;\r\n        part = 0;\r\n        resizing = false;\r\n        skip = false;\r\n      };\r\n\r\n      const setEndRAF = (single: boolean) => {\r\n        if(rAF) window.cancelAnimationFrame(rAF);\r\n        rAF = window.requestAnimationFrame(single ? onResizeEnd : () => {\r\n          rAF = window.requestAnimationFrame(onResizeEnd);\r\n          //this.log('resize after RAF', part);\r\n        });\r\n      };\r\n\r\n      const processEntries = (entries: any) => {\r\n        if(skip) {\r\n          setEndRAF(false);\r\n          return;\r\n        }\r\n\r\n        const entry = entries[0];\r\n        const height = entry.contentRect.height;/* Math.ceil(entry.contentRect.height); */\r\n        \r\n        if(!wasHeight) {\r\n          wasHeight = height;\r\n          return;\r\n        }\r\n\r\n        const realDiff = wasHeight - height;\r\n        let diff = realDiff + part;\r\n        const _part = diff % 1;\r\n        diff -= _part;\r\n \r\n        if(!resizing) {\r\n          resizing = true;\r\n\r\n          /* if(DEBUG) {\r\n            this.log('resize start', realDiff, this.scrollable.scrollTop, this.scrollable.container.offsetHeight, this.scrollable.isScrolledDown);\r\n          } */\r\n\r\n          if(realDiff < 0 && this.scrollable.isScrolledDown) {\r\n            //if(isSafari) { // * fix opening keyboard while ESG is active \r\n              part = -realDiff;\r\n            //}\r\n\r\n            skip = true;\r\n            setEndRAF(false);\r\n            return;\r\n          }\r\n        }\r\n\r\n        scrolled += diff;\r\n\r\n        /* if(DEBUG) {\r\n          this.log('resize', wasHeight - height, diff, this.scrollable.container.offsetHeight, this.scrollable.isScrolledDown, height, wasHeight);\r\n        } */\r\n\r\n        if(diff) {\r\n          const needScrollTop = this.scrollable.scrollTop + diff;\r\n          this.scrollable.scrollTop = needScrollTop;\r\n        }\r\n        \r\n        setEndRAF(false);\r\n\r\n        part = _part;\r\n        wasHeight = height;\r\n      };\r\n\r\n      // @ts-ignore\r\n      const resizeObserver = new ResizeObserver(processEntries);\r\n      resizeObserver.observe(this.bubblesContainer);\r\n    }\r\n  }\r\n\r\n  private saveOnUpdateScroll() {\r\n    if(!this.onUpdateScrollSaver) {\r\n      this.onUpdateScrollSaver = new ScrollSaver(this.scrollable, true);\r\n      setTimeout(() => {\r\n        this.onUpdateScrollSaver.restore();\r\n        this.onUpdateScrollSaver = undefined;\r\n      }, 0);\r\n\r\n      this.onUpdateScrollSaver.save();\r\n    }\r\n  }\r\n\r\n  private onBubblesMouseMove = (e: MouseEvent) => {\r\n    const content = findUpClassName(e.target, 'bubble-content');\r\n    if(content && !this.chat.selection.isSelecting) {\r\n      const bubble = findUpClassName(content, 'bubble');\r\n      if(!this.chat.selection.canSelectBubble(bubble)) {\r\n        this.unhoverPrevious();\r\n        return;\r\n      }\r\n\r\n      let {hoverBubble, hoverReaction} = this;\r\n      if(bubble === hoverBubble) {\r\n        return;\r\n      }\r\n\r\n      this.unhoverPrevious();\r\n\r\n      hoverBubble = this.hoverBubble = bubble;\r\n      hoverReaction = this.hoverReaction;\r\n      // hoverReaction = contentWrapper.querySelector('.bubble-hover-reaction');\r\n      if(!hoverReaction) {\r\n        hoverReaction = this.hoverReaction = document.createElement('div');\r\n        hoverReaction.classList.add('bubble-hover-reaction');\r\n\r\n        const stickerWrapper = document.createElement('div');\r\n        stickerWrapper.classList.add('bubble-hover-reaction-sticker');\r\n        hoverReaction.append(stickerWrapper);\r\n\r\n        content.append(hoverReaction);\r\n\r\n        let message: Message.message = this.chat.getMessage(+bubble.dataset.mid);\r\n        message = this.appMessagesManager.getGroupsFirstMessage(message);\r\n\r\n        const middleware = this.getMiddleware(() => this.hoverReaction === hoverReaction);\r\n        Promise.all([\r\n          this.appReactionsManager.getAvailableReactionsByMessage(message),\r\n          pause(400)\r\n        ]).then(([availableReactions]) => {\r\n          const availableReaction = availableReactions[0];\r\n          if(!availableReaction) {\r\n            hoverReaction.remove();\r\n            return;\r\n          }\r\n\r\n          wrapSticker({\r\n            div: stickerWrapper,\r\n            doc: availableReaction.select_animation,\r\n            width: 18,\r\n            height: 18,\r\n            needUpscale: true,\r\n            middleware,\r\n            group: CHAT_ANIMATION_GROUP,\r\n            withThumb: false,\r\n            needFadeIn: false\r\n          }).then(player => {\r\n            assumeType<RLottiePlayer>(player);\r\n            if(!middleware()) {\r\n              return;\r\n            }\r\n\r\n            player.addEventListener('firstFrame', () => {\r\n              if(!middleware()) {\r\n                // debugger;\r\n                return;\r\n              }\r\n\r\n              hoverReaction.dataset.loaded = '1';\r\n              this.setHoverVisible(hoverReaction, true);\r\n            }, {once: true});\r\n\r\n            attachClickEvent(hoverReaction, (e) => {\r\n              cancelEvent(e); // cancel triggering selection\r\n\r\n              this.appReactionsManager.sendReaction(message, availableReaction.reaction);\r\n              this.unhoverPrevious();\r\n            }, {listenerSetter: this.listenerSetter});\r\n          });\r\n        });\r\n      } else if(hoverReaction.dataset.loaded) {\r\n        this.setHoverVisible(hoverReaction, true);\r\n      }\r\n    } else {\r\n      this.unhoverPrevious();\r\n    }\r\n  };\r\n\r\n  public setReactionsHoverListeners() {\r\n    this.listenerSetter.add(rootScope)('context_menu_toggle', this.unhoverPrevious);\r\n    this.listenerSetter.add(rootScope)('overlay_toggle', this.unhoverPrevious);\r\n    this.listenerSetter.add(this.chat.selection)('toggle', this.unhoverPrevious);\r\n    this.listenerSetter.add(this.bubblesContainer)('mousemove', this.onBubblesMouseMove);\r\n  }\r\n\r\n  private setHoverVisible(hoverReaction: HTMLElement, visible: boolean) {\r\n    SetTransition(hoverReaction, 'is-visible', visible, 200, visible ? undefined : () => {\r\n      hoverReaction.remove();\r\n    }, 2);\r\n  }\r\n\r\n  private unhoverPrevious = () => {\r\n    const {hoverBubble, hoverReaction} = this;\r\n    if(hoverBubble) {\r\n      this.setHoverVisible(hoverReaction, false);\r\n      this.hoverBubble = undefined;\r\n      this.hoverReaction = undefined;\r\n    }\r\n  };\r\n\r\n  public setStickyDateManually() {\r\n    const timestamps = Object.keys(this.dateMessages).map(k => +k).sort((a, b) => b - a);\r\n    let lastVisible: HTMLElement;\r\n\r\n    // if(this.chatInner.classList.contains('is-scrolling')) {\r\n      const {scrollTop} = this.scrollable.container;\r\n      const isOverflown = scrollTop > 0;\r\n      if(isOverflown) {\r\n        for(const timestamp of timestamps) {\r\n          const dateMessage = this.dateMessages[timestamp];\r\n          const visibleRect = getVisibleRect(dateMessage.container, this.scrollable.container);\r\n          if(visibleRect && visibleRect.overflow.top) {\r\n            lastVisible = dateMessage.div;\r\n          } else if(lastVisible) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    // }\r\n\r\n    if(lastVisible === this.previousStickyDate) {\r\n      return;\r\n    }\r\n\r\n    if(lastVisible) {\r\n      const needReflow = /* !!this.chat.setPeerPromise ||  */!this.previousStickyDate;\r\n      if(needReflow) {\r\n        lastVisible.classList.add('no-transition');\r\n      }\r\n\r\n      lastVisible.classList.add('is-sticky');\r\n\r\n      if(needReflow) {\r\n        void lastVisible.offsetLeft; // reflow\r\n        lastVisible.classList.remove('no-transition');\r\n      }\r\n    }\r\n\r\n    if(this.previousStickyDate && this.previousStickyDate !== lastVisible) {\r\n      this.previousStickyDate.classList.remove('is-sticky');\r\n    }\r\n\r\n    this.previousStickyDate = lastVisible;\r\n  }\r\n\r\n  public getRenderedLength() {\r\n    return Object.keys(this.bubbles).length - this.skippedMids.size;\r\n  }\r\n\r\n  private onUnreadedInViewport(target: HTMLElement, mid: number) {\r\n    this.unreadedSeen.add(mid);\r\n    this.unreadedObserver.unobserve(target);\r\n    this.unreaded.delete(target);\r\n    this.readUnreaded();\r\n  }\r\n\r\n  private readUnreaded() {\r\n    if(this.readPromise) return;\r\n\r\n    const middleware = this.getMiddleware();\r\n    this.readPromise = rootScope.idle.focusPromise.then(() => {\r\n      if(!middleware()) return;\r\n      let maxId = Math.max(...Array.from(this.unreadedSeen));\r\n\r\n      // ? if message with maxId is not rendered ?\r\n      if(this.scrollable.loadedAll.bottom) {\r\n        const bubblesMaxId = Math.max(...Object.keys(this.bubbles).map(i => +i));\r\n        if(maxId >= bubblesMaxId) {\r\n          maxId = Math.max(this.appMessagesManager.getHistoryStorage(this.peerId, this.chat.threadId).maxId || 0, maxId);\r\n        }\r\n      }\r\n\r\n      this.unreaded.forEach((mid, target) => {\r\n        if(mid <= maxId) {\r\n          this.onUnreadedInViewport(target, mid);\r\n        }\r\n      });\r\n\r\n      const readContents: number[] = [];\r\n      for(const mid of this.unreadedSeen) {\r\n        const message: MyMessage = this.chat.getMessage(mid);\r\n        if(this.appMessagesManager.isMentionUnread(message)) {\r\n          readContents.push(mid);\r\n        }\r\n      }\r\n\r\n      this.appMessagesManager.readMessages(this.peerId, readContents);\r\n\r\n      this.unreadedSeen.clear();\r\n\r\n      if(DEBUG) {\r\n        this.log('will readHistory by maxId:', maxId);\r\n      }\r\n\r\n      // return;\r\n      \r\n      return this.appMessagesManager.readHistory(this.peerId, maxId, this.chat.threadId).catch((err: any) => {\r\n        this.log.error('readHistory err:', err);\r\n        this.appMessagesManager.readHistory(this.peerId, maxId, this.chat.threadId);\r\n      }).finally(() => {\r\n        if(!middleware()) return;\r\n        this.readPromise = undefined;\r\n\r\n        if(this.unreadedSeen.size) {\r\n          this.readUnreaded();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public constructPinnedHelpers() {\r\n    this.listenerSetter.add(rootScope)('peer_pinned_messages', (e) => {\r\n      const {peerId, mids, pinned} = e;\r\n      if(peerId !== this.peerId) return;\r\n\r\n      if(mids) {\r\n        if(!pinned) {\r\n          this.deleteMessagesByIds(mids);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public constructScheduledHelpers() {\r\n    const onUpdate = () => {\r\n      this.chat.topbar.setTitle(this.appMessagesManager.getScheduledMessagesStorage(this.peerId).size);\r\n    };\r\n\r\n    this.listenerSetter.add(rootScope)('scheduled_new', ({peerId, mid}) => {\r\n      if(peerId !== this.peerId) return;\r\n\r\n      this.renderNewMessagesByIds([mid]);\r\n      onUpdate();\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('scheduled_delete', ({peerId, mids}) => {\r\n      if(peerId !== this.peerId) return;\r\n\r\n      this.deleteMessagesByIds(mids);\r\n      onUpdate();\r\n    });\r\n  }\r\n\r\n  public onBubblesClick = (e: Event) => {\r\n    let target = e.target as HTMLElement;\r\n    let bubble: HTMLElement = null;\r\n    try {\r\n      bubble = findUpClassName(target, 'bubble');\r\n    } catch(err) {}\r\n    \r\n    if(!bubble) return;\r\n\r\n    if(bubble.classList.contains('is-date') && findUpClassName(target, 'bubble-content')) {\r\n      if(bubble.classList.contains('is-sticky') && !this.chatInner.classList.contains('is-scrolling')) {\r\n        return;\r\n      }\r\n\r\n      for(const timestamp in this.dateMessages) {\r\n        const d = this.dateMessages[timestamp];\r\n        if(d.div === bubble) {\r\n          new PopupDatePicker(new Date(+timestamp), this.onDatePick).show();\r\n          break;\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if(!IS_TOUCH_SUPPORTED && findUpClassName(target, 'time')) {\r\n      this.chat.selection.toggleByElement(bubble);\r\n      return;\r\n    }\r\n\r\n    // ! Trusted - due to audio autoclick\r\n    if(this.chat.selection.isSelecting && e.isTrusted) {\r\n      if(bubble.classList.contains('service') && bubble.dataset.mid === undefined) {\r\n        return;\r\n      }\r\n\r\n      cancelEvent(e);\r\n      //console.log('bubble click', e);\r\n\r\n      if(IS_TOUCH_SUPPORTED && this.chat.selection.selectedText) {\r\n        this.chat.selection.selectedText = undefined;\r\n        return;\r\n      }\r\n\r\n      //this.chatSelection.toggleByBubble(bubble);\r\n      this.chat.selection.toggleByElement(findUpClassName(target, 'grouped-item') || bubble);\r\n      return;\r\n    }\r\n\r\n    const contactDiv: HTMLElement = findUpClassName(target, 'contact');\r\n    if(contactDiv) {\r\n      this.chat.appImManager.setInnerPeer({\r\n        peerId: contactDiv.dataset.peerId.toPeerId()\r\n      });\r\n      return;\r\n    }\r\n\r\n    const callDiv: HTMLElement = findUpClassName(target, 'bubble-call');\r\n    if(callDiv) {\r\n      this.chat.appImManager.callUser(this.peerId.toUserId(), callDiv.dataset.type as any);\r\n      return;\r\n    }\r\n\r\n    const spoiler: HTMLElement = findUpClassName(target, 'spoiler');\r\n    if(spoiler) {\r\n      const messageDiv = findUpClassName(spoiler, 'message');\r\n\r\n      const className = 'is-spoiler-visible';\r\n      const isVisible = messageDiv.classList.contains(className);\r\n      if(!isVisible) {\r\n        cancelEvent(e);\r\n      }\r\n\r\n      const duration = 400 / 2;\r\n      const showDuration = 5000;\r\n      const useRafs = !isVisible ? 2 : 0;\r\n      if(useRafs) {\r\n        messageDiv.classList.add('will-change');\r\n      }\r\n\r\n      const spoilerTimeout = messageDiv.dataset.spoilerTimeout;\r\n      if(spoilerTimeout !== null) {\r\n        clearTimeout(+spoilerTimeout);\r\n        delete messageDiv.dataset.spoilerTimeout;\r\n      }\r\n\r\n      SetTransition(messageDiv, className, true, duration, () => {\r\n        messageDiv.dataset.spoilerTimeout = '' + window.setTimeout(() => {\r\n          SetTransition(messageDiv, className, false, duration, () => {\r\n            messageDiv.classList.remove('will-change');\r\n            delete messageDiv.dataset.spoilerTimeout;\r\n          });\r\n        }, showDuration);\r\n      }, useRafs);\r\n\r\n      return;\r\n    }\r\n\r\n    const reactionElement = findUpTag(target, 'REACTION-ELEMENT') as ReactionElement;\r\n    if(reactionElement) {\r\n      cancelEvent(e);\r\n      if(reactionElement.classList.contains('is-inactive')) {\r\n        return;\r\n      }\r\n\r\n      const reactionsElement = reactionElement.parentElement as ReactionsElement;\r\n      const reactionCount = reactionsElement.getReactionCount(reactionElement);\r\n\r\n      const message = reactionsElement.getMessage();\r\n      this.appReactionsManager.sendReaction(message, reactionCount.reaction);\r\n\r\n      return;\r\n    }\r\n\r\n    const commentsDiv: HTMLElement = findUpClassName(target, 'replies');\r\n    if(commentsDiv) {\r\n      const bubbleMid = +bubble.dataset.mid;\r\n      if(this.peerId === REPLIES_PEER_ID) {\r\n        const message = this.chat.getMessage(bubbleMid) as Message.message;\r\n        const peerId = this.appPeersManager.getPeerId(message.reply_to.reply_to_peer_id);\r\n        const threadId = message.reply_to.reply_to_top_id;\r\n        const lastMsgId = message.fwd_from.saved_from_msg_id;\r\n        this.chat.appImManager.openThread(peerId, lastMsgId, threadId);\r\n      } else {\r\n        const message = this.appMessagesManager.filterMessages(this.chat.getMessage(bubbleMid), message => !!(message as Message.message).replies)[0] as Message.message;\r\n        const replies = message.replies;\r\n        if(replies) {\r\n          this.appMessagesManager.getDiscussionMessage(this.peerId, message.mid).then(message => {\r\n            this.chat.appImManager.setInnerPeer({\r\n              peerId: replies.channel_id.toPeerId(true),\r\n              type: 'discussion', \r\n              threadId: (message as MyMessage).mid\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const via = findUpClassName(target, 'is-via');\r\n    if(via) {\r\n      const el = via.querySelector('.peer-title') as HTMLElement;\r\n      if(target === el || findUpAsChild(target, el)) {\r\n        const message = el.innerText + ' ';\r\n        this.appDraftsManager.setDraft(this.peerId, this.chat.threadId, message);\r\n        cancelEvent(e);\r\n        \r\n        return;\r\n      }\r\n    }\r\n\r\n    const nameDiv = findUpClassName(target, 'peer-title') || findUpTag(target, 'AVATAR-ELEMENT') || findUpAttribute(target, 'data-saved-from');\r\n    if(nameDiv && nameDiv !== bubble) {\r\n      target = nameDiv || target;\r\n      const peerIdStr = target.dataset.peerId || target.getAttribute('peer');\r\n      const savedFrom = target.dataset.savedFrom;\r\n      if(typeof(peerIdStr) === 'string' || savedFrom) {\r\n        if(savedFrom) {\r\n          const [peerId, mid] = savedFrom.split('_');\r\n  \r\n          this.chat.appImManager.setInnerPeer({\r\n            peerId: peerId.toPeerId(), \r\n            lastMsgId: +mid\r\n          });\r\n        } else {\r\n          const peerId = peerIdStr.toPeerId();\r\n          if(peerId !== NULL_PEER_ID) {\r\n            this.chat.appImManager.setInnerPeer({peerId});\r\n          } else {\r\n            toast(I18n.format('HidAccount', true));\r\n          }\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    //this.log('chatInner click:', target);\r\n    // const isVideoComponentElement = target.tagName === 'SPAN' && findUpClassName(target, 'media-container');\r\n    /* if(isVideoComponentElement) {\r\n      const video = target.parentElement.querySelector('video') as HTMLElement;\r\n      if(video) {\r\n        video.click(); // hot-fix for time and play button\r\n        return;\r\n      }\r\n    } */\r\n\r\n    if(bubble.classList.contains('sticker') && target.parentElement.classList.contains('attachment')) {\r\n      const messageId = +bubble.dataset.mid;\r\n      const message = this.chat.getMessage(messageId);\r\n\r\n      const doc = message.media?.document;\r\n\r\n      if(doc?.stickerSetInput) {\r\n        new PopupStickers(doc.stickerSetInput).show();\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const documentDiv = findUpClassName(target, 'document-with-thumb');\r\n    if((target.tagName === 'IMG' && !target.classList.contains('emoji') && !target.classList.contains('document-thumb')) \r\n      || target.classList.contains('album-item')\r\n      // || isVideoComponentElement\r\n      || (target.tagName === 'VIDEO' && !bubble.classList.contains('round'))\r\n      || (documentDiv && !documentDiv.querySelector('.preloader-container'))) {\r\n      const groupedItem = findUpClassName(target, 'album-item') || findUpClassName(target, 'document-container');\r\n      const messageId = +(groupedItem || bubble).dataset.mid;\r\n      const message = this.chat.getMessage(messageId);\r\n      if(!message) {\r\n        this.log.warn('no message by messageId:', messageId);\r\n        return;\r\n      }\r\n\r\n      const preloader = (groupedItem || bubble).querySelector<HTMLElement>('.preloader-container');\r\n      if(preloader) {\r\n        simulateClickEvent(preloader);\r\n        cancelEvent(e);\r\n        return;\r\n      }\r\n\r\n      const SINGLE_MEDIA_CLASSNAME = 'webpage';\r\n      const isSingleMedia = bubble.classList.contains(SINGLE_MEDIA_CLASSNAME);\r\n\r\n      const f = documentDiv ? (media: any) => {\r\n        return AppMediaViewer.isMediaCompatibleForDocumentViewer(media);\r\n      } : (media: any) => {\r\n        return media._ === 'photo' || ['video', 'gif'].includes(media.type);\r\n      };\r\n\r\n      const targets: {element: HTMLElement, mid: number, peerId: PeerId}[] = [];\r\n      const ids = isSingleMedia ? [messageId] : Object.keys(this.bubbles).map(k => +k).filter(id => {\r\n        /* if(isSingleMedia && !this.bubbles[id].classList.contains(SINGLE_MEDIA_CLASSNAME)) {\r\n          return false;\r\n        }  */\r\n        //if(!this.scrollable.visibleElements.find(e => e.element === this.bubbles[id])) return false;\r\n\r\n        const message = this.chat.getMessage(id);\r\n        const media = this.appMessagesManager.getMediaFromMessage(message);\r\n        \r\n        return media && f(media);\r\n      }).sort((a, b) => a - b);\r\n\r\n      ids.forEach(id => {\r\n        let selector: string;\r\n        if(documentDiv) {\r\n          selector = '.document-container';\r\n        } else {\r\n          const withTail = this.bubbles[id].classList.contains('with-media-tail');\r\n          selector = '.album-item video, .album-item img, .preview video, .preview img, ';\r\n          if(withTail) {\r\n            selector += '.bubble__media-container';\r\n          } else {\r\n            selector += '.attachment video, .attachment img';\r\n          }\r\n        }\r\n\r\n        const elements = Array.from(this.bubbles[id].querySelectorAll(selector)) as HTMLElement[];\r\n        const parents: Set<HTMLElement> = new Set();\r\n        if(documentDiv) {\r\n          elements.forEach((element) => {\r\n            targets.push({\r\n              element: element.querySelector('.document-ico'),\r\n              mid: +element.dataset.mid,\r\n              peerId: this.peerId\r\n            });\r\n          });\r\n        } else {\r\n          const hasAspecter = !!this.bubbles[id].querySelector('.media-container-aspecter');\r\n          elements.forEach((element) => {\r\n            if(hasAspecter && !findUpClassName(element, 'media-container-aspecter')) return;\r\n            let albumItem = findUpClassName(element, 'album-item');\r\n            const parent = albumItem || element.parentElement;\r\n            if(parents.has(parent)) return;\r\n            parents.add(parent);\r\n            targets.push({\r\n              element,\r\n              mid: albumItem ? +albumItem.dataset.mid : id,\r\n              peerId: this.peerId\r\n            });\r\n          });\r\n        }\r\n      });\r\n\r\n      targets.sort((a, b) => a.mid - b.mid);\r\n\r\n      let idx = targets.findIndex(t => t.mid === messageId);\r\n\r\n      if(DEBUG) {\r\n        this.log('open mediaViewer single with ids:', ids, idx, targets);\r\n      }\r\n\r\n      if(!targets[idx]) {\r\n        this.log('no target for media viewer!', target);\r\n        return;\r\n      }\r\n\r\n      new AppMediaViewer()\r\n      .setSearchContext({\r\n        threadId: this.chat.threadId,\r\n        peerId: this.peerId,\r\n        inputFilter: {_: documentDiv ? 'inputMessagesFilterDocument' : 'inputMessagesFilterPhotoVideo'},\r\n        useSearch: this.chat.type !== 'scheduled' && !isSingleMedia,\r\n        isScheduled: this.chat.type === 'scheduled'\r\n      })\r\n      .openMedia(message, targets[idx].element, 0, true, targets.slice(0, idx), targets.slice(idx + 1));\r\n      \r\n      cancelEvent(e);\r\n      //appMediaViewer.openMedia(message, target as HTMLImageElement);\r\n      return;\r\n    }\r\n    \r\n    if(['IMG', 'DIV', 'SPAN'/* , 'A' */].indexOf(target.tagName) === -1) target = findUpTag(target, 'DIV');\r\n    \r\n    if(['DIV', 'SPAN'].indexOf(target.tagName) !== -1/*  || target.tagName === 'A' */) {\r\n      if(target.classList.contains('goto-original')) {\r\n        const savedFrom = bubble.dataset.savedFrom;\r\n        const [peerId, mid] = savedFrom.split('_');\r\n        ////this.log('savedFrom', peerId, msgID);\r\n        this.chat.appImManager.setInnerPeer({\r\n          peerId: peerId.toPeerId(), \r\n          lastMsgId: +mid\r\n        });\r\n        return;\r\n      } else if(target.classList.contains('forward')) {\r\n        const mid = +bubble.dataset.mid;\r\n        const message = this.appMessagesManager.getMessageByPeer(this.peerId, mid);\r\n        new PopupForward({\r\n          [this.peerId]: this.appMessagesManager.getMidsByMessage(message)\r\n        });\r\n        //appSidebarRight.forwardTab.open([mid]);\r\n        return;\r\n      }\r\n      \r\n      let isReplyClick = false;\r\n      \r\n      try {\r\n        isReplyClick = !!findUpClassName(e.target, 'reply');\r\n      } catch(err) {}\r\n      \r\n      if(isReplyClick && bubble.classList.contains('is-reply')/*  || bubble.classList.contains('forwarded') */) {\r\n        const bubbleMid = +bubble.dataset.mid;\r\n        this.replyFollowHistory.push(bubbleMid);\r\n\r\n        const message = this.chat.getMessage(bubbleMid) as Message.message;\r\n\r\n        const replyToPeerId = message.reply_to.reply_to_peer_id ? this.appPeersManager.getPeerId(message.reply_to.reply_to_peer_id) : this.peerId;\r\n        const replyToMid = message.reply_to.reply_to_msg_id;\r\n\r\n        this.chat.appImManager.setInnerPeer({\r\n          peerId: replyToPeerId, \r\n          lastMsgId: replyToMid, \r\n          type: this.chat.type, \r\n          threadId: this.chat.threadId\r\n        });\r\n\r\n        /* if(this.chat.type === 'discussion') {\r\n          this.chat.appImManager.setMessageId(, originalMessageId);\r\n        } else {\r\n          this.chat.appImManager.setInnerPeer(this.peerId, originalMessageId);\r\n        } */\r\n        //this.chat.setMessageId(, originalMessageId);\r\n      }\r\n    }\r\n    \r\n    //console.log('chatInner click', e);\r\n  };\r\n\r\n  public onGoDownClick() {\r\n    if(this.replyFollowHistory.length) {\r\n      forEachReverse(this.replyFollowHistory, (mid, idx) => {\r\n        const bubble = this.bubbles[mid];\r\n        let bad = true;\r\n        if(bubble) {\r\n          const rect = bubble.getBoundingClientRect();\r\n          bad = (windowSize.height / 2) > rect.top;\r\n        } else {\r\n          const message = this.chat.getMessage(mid);\r\n          if(!message.deleted) {\r\n            bad = false;\r\n          }\r\n        }\r\n  \r\n        if(bad) {\r\n          this.replyFollowHistory.splice(idx, 1);\r\n        }\r\n      });\r\n\r\n      this.replyFollowHistory.sort((a, b) => b - a);\r\n\r\n      const mid = this.replyFollowHistory.pop();\r\n      this.chat.setMessageId(mid);\r\n    } else {\r\n      this.chat.setMessageId(/* , dialog.top_message */);\r\n      // const dialog = this.appMessagesManager.getDialogByPeerId(this.peerId)[0];\r\n      \r\n      // if(dialog) {\r\n      //   this.chat.setPeer(this.peerId/* , dialog.top_message */);\r\n      // } else {\r\n      //   this.log('will scroll down 3');\r\n      //   this.scroll.scrollTop = this.scroll.scrollHeight;\r\n      // }\r\n    }\r\n  }\r\n\r\n  public getBubbleByPoint(verticalSide: 'top' | 'bottom') {\r\n    let element = getElementByPoint(this.scrollable.container, verticalSide, 'center');\r\n    /* if(element) {\r\n      if(element.classList.contains('bubbles-date-group')) {\r\n        const children = Array.from(element.children) as HTMLElement[];\r\n        if(verticalSide === 'top') {\r\n          element = children[this.stickyIntersector ? 2 : 1];\r\n        } else {\r\n          element = children[children.length - 1];\r\n        }\r\n      } else {\r\n        element = findUpClassName(element, 'bubble');\r\n        if(element && element.classList.contains('is-date')) {\r\n          element = element.nextElementSibling as HTMLElement;\r\n        }\r\n      }\r\n    } */\r\n    if(element) element = findUpClassName(element, 'bubble');\r\n\r\n    return element;\r\n  }\r\n\r\n  public getGroupedBubble(groupId: string) {\r\n    const group = this.appMessagesManager.groupedMessagesStorage[groupId];\r\n    for(const [mid] of group) {\r\n      if(this.bubbles[mid]) {\r\n        const maxId = Math.max(...group.keys()); // * because in scheduled album can be rendered by lowest mid during sending\r\n        return {\r\n          bubble: this.bubbles[mid], \r\n          mid: +mid,\r\n          message: this.chat.getMessage(maxId) as Message.message\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  public getBubbleByMessage(message: Message.message | Message.messageService) {\r\n    if(!(message as Message.message).grouped_id) return this.bubbles[message.mid];\r\n    const grouped = this.getGroupedBubble((message as Message.message).grouped_id);\r\n    return grouped?.bubble;\r\n  }\r\n\r\n  public getBubbleGroupedItems(bubble: HTMLElement) {\r\n    return Array.from(bubble.querySelectorAll('.grouped-item')) as HTMLElement[];\r\n  }\r\n\r\n  public getMountedBubble(mid: number, message = this.chat.getMessage(mid)) {\r\n    if(message.grouped_id && this.appMessagesManager.getMidsByAlbum(message.grouped_id).length > 1) {\r\n      const a = this.getGroupedBubble(message.grouped_id);\r\n      if(a) {\r\n        a.bubble = a.bubble.querySelector(`.document-container[data-mid=\"${mid}\"]`) || a.bubble;\r\n        return a;\r\n      }\r\n    }\r\n\r\n    const bubble = this.bubbles[mid];\r\n    if(!bubble) return;\r\n\r\n    return {bubble, mid, message};\r\n  }\r\n\r\n  private findNextMountedBubbleByMsgId(mid: number) {\r\n    return this.bubbles[getObjectKeysAndSort(this.bubbles).find(id => {\r\n      if(id < mid) return false;\r\n      return !!this.bubbles[id]?.parentElement;\r\n    })];\r\n  }\r\n\r\n  public loadMoreHistory(top: boolean, justLoad = false) {\r\n    //this.log('loadMoreHistory', top);\r\n    if(!this.peerId || \r\n      /* TEST_SCROLL || */ \r\n      this.chat.setPeerPromise || \r\n      this.isHeavyAnimationInProgress || \r\n      (top && (this.getHistoryTopPromise || this.scrollable.loadedAll.top)) || \r\n      (!top && (this.getHistoryBottomPromise || this.scrollable.loadedAll.bottom))\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // warning, если иды только отрицательные то вниз не попадёт (хотя мб и так не попадёт)\r\n    const history = Object.keys(this.bubbles).map(id => +id).sort((a, b) => a - b);\r\n    if(!history.length) return;\r\n    \r\n    if(top) {\r\n      if(DEBUG) {\r\n        this.log('Will load more (up) history by id:', history[0], 'maxId:', history[history.length - 1], justLoad/* , history */);\r\n      }\r\n\r\n      /* if(history.length === 75) {\r\n        this.log('load more', this.scrollable.scrollHeight, this.scrollable.scrollTop, this.scrollable);\r\n        return;\r\n      } */\r\n      /* false &&  */this.getHistory(history[0], true, undefined, undefined, justLoad);\r\n    } else {\r\n      //let dialog = this.appMessagesManager.getDialogByPeerId(this.peerId)[0];\r\n      const historyStorage = this.appMessagesManager.getHistoryStorage(this.peerId, this.chat.threadId);\r\n          \r\n      // if scroll down after search\r\n      if(history.indexOf(historyStorage.maxId) !== -1) {\r\n        this.setLoaded('bottom', true);\r\n        return;\r\n      }\r\n\r\n      if(DEBUG) {\r\n        this.log('Will load more (down) history by id:', history[history.length - 1], justLoad/* , history */);\r\n      }\r\n\r\n      /* false &&  */this.getHistory(history[history.length - 1], false, true, undefined, justLoad);\r\n    }\r\n  }\r\n\r\n  public onScroll = () => {\r\n    //return;\r\n    \r\n    // * В таком случае, кнопка не будет моргать если чат в самом низу, и правильно отработает случай написания нового сообщения и проскролла вниз\r\n    if(this.isHeavyAnimationInProgress && this.scrolledDown) return;\r\n    //lottieLoader.checkAnimations(false, 'chat');\r\n\r\n    const distanceToEnd = this.scrollable.getDistanceToEnd();\r\n    if(!IS_TOUCH_SUPPORTED && this.scrollable.lastScrollDirection !== 0 && distanceToEnd > 0) {\r\n      if(this.isScrollingTimeout) {\r\n        clearTimeout(this.isScrollingTimeout);\r\n      } else if(!this.chatInner.classList.contains('is-scrolling')) {\r\n        this.chatInner.classList.add('is-scrolling');\r\n      }\r\n  \r\n      this.isScrollingTimeout = window.setTimeout(() => {\r\n        this.chatInner.classList.remove('is-scrolling');\r\n        this.isScrollingTimeout = 0;\r\n      }, 1350);\r\n    }\r\n    \r\n    if(distanceToEnd < 300 && (this.scrollable.loadedAll.bottom || this.chat.setPeerPromise || !this.peerId)) {\r\n      this.bubblesContainer.classList.add('scrolled-down');\r\n      this.scrolledDown = true;\r\n    } else if(this.bubblesContainer.classList.contains('scrolled-down')) {\r\n      this.bubblesContainer.classList.remove('scrolled-down');\r\n      this.scrolledDown = false;\r\n    }\r\n\r\n    if(this.chat.topbar.pinnedMessage) {\r\n      this.chat.topbar.pinnedMessage.setCorrectIndex(this.scrollable.lastScrollDirection);\r\n    }\r\n\r\n    this.setStickyDateManually();\r\n  };\r\n\r\n  public setScroll() {\r\n    this.scrollable = new Scrollable(null, 'IM', /* 10300 */300);\r\n    this.setLoaded('top', false);\r\n    this.setLoaded('bottom', false);\r\n\r\n    this.scrollable.container.append(this.chatInner);\r\n\r\n    /* const getScrollOffset = () => {\r\n      //return Math.round(Math.max(300, appPhotosManager.windowH / 1.5));\r\n      return 300; \r\n    };\r\n\r\n    window.addEventListener('resize', () => {\r\n      this.scrollable.onScrollOffset = getScrollOffset();\r\n    });\r\n\r\n    this.scrollable = new Scrollable(this.bubblesContainer, 'y', 'IM', this.chatInner, getScrollOffset()); */\r\n\r\n    this.scrollable.onAdditionalScroll = this.onScroll;\r\n    this.scrollable.onScrolledTop = () => this.loadMoreHistory(true);\r\n    this.scrollable.onScrolledBottom = () => this.loadMoreHistory(false);\r\n    //this.scrollable.attachSentinels(undefined, 300);\r\n\r\n    if(IS_TOUCH_SUPPORTED) {\r\n      this.scrollable.container.addEventListener('touchmove', () => {\r\n        if(this.isScrollingTimeout) {\r\n          clearTimeout(this.isScrollingTimeout);\r\n        } else if(!this.chatInner.classList.contains('is-scrolling')) {\r\n          this.chatInner.classList.add('is-scrolling');\r\n        }\r\n      }, {passive: true});\r\n\r\n      this.scrollable.container.addEventListener('touchend', () => {\r\n        if(!this.chatInner.classList.contains('is-scrolling')) {\r\n          return;\r\n        }\r\n\r\n        if(this.isScrollingTimeout) {\r\n          clearTimeout(this.isScrollingTimeout);\r\n        }\r\n\r\n        this.isScrollingTimeout = window.setTimeout(() => {\r\n          this.chatInner.classList.remove('is-scrolling');\r\n          this.isScrollingTimeout = 0;\r\n        }, 1350);\r\n      }, {passive: true});\r\n    }\r\n  }\r\n\r\n  public updateUnreadByDialog() {\r\n    const historyStorage = this.appMessagesManager.getHistoryStorage(this.peerId, this.chat.threadId);\r\n    const maxId = this.peerId === rootScope.myId ? historyStorage.readMaxId : historyStorage.readOutboxMaxId;\r\n    \r\n    ///////this.log('updateUnreadByDialog', maxId, dialog, this.unreadOut);\r\n    \r\n    for(const msgId of this.unreadOut) {\r\n      if(msgId > 0 && msgId <= maxId) {\r\n        const bubble = this.bubbles[msgId];\r\n        if(bubble) {\r\n          if(bubble.classList.contains('is-outgoing')) {\r\n            continue;\r\n          }\r\n          \r\n          bubble.classList.remove('is-sent', 'is-sending', 'is-outgoing'); // is-sending can be when there are bulk of updates (e.g. sending command to Stickers bot)\r\n          bubble.classList.add('is-read');\r\n        }\r\n        \r\n        this.unreadOut.delete(msgId);\r\n      }\r\n    }\r\n  }\r\n  \r\n  public deleteMessagesByIds(mids: number[], permanent = true) {\r\n    let deleted = false;\r\n    mids.forEach(mid => {\r\n      if(!(mid in this.bubbles)) return;\r\n      \r\n      deleted = true;\r\n      /* const mounted = this.getMountedBubble(mid);\r\n      if(!mounted) return; */\r\n\r\n      const bubble = this.bubbles[mid];\r\n      delete this.bubbles[mid];\r\n      this.skippedMids.delete(mid);\r\n\r\n      if(this.firstUnreadBubble === bubble) {\r\n        this.firstUnreadBubble = null;\r\n      }\r\n\r\n      this.bubbleGroups.removeBubble(bubble);\r\n      if(this.unreadedObserver) {\r\n        this.unreadedObserver.unobserve(bubble);\r\n        this.unreaded.delete(bubble);\r\n      }\r\n      if(this.viewsObserver) {\r\n        this.viewsObserver.unobserve(bubble);\r\n        this.viewsMids.delete(mid);\r\n      }\r\n      //this.unreaded.findAndSplice(mid => mid === id);\r\n      bubble.remove();\r\n      //bubble.remove();\r\n\r\n      if(this.emptyPlaceholderMid === mid) {\r\n        this.emptyPlaceholderMid = undefined;\r\n      }\r\n\r\n      // this.reactions.delete(mid);\r\n    });\r\n\r\n    if(!deleted) {\r\n      return;\r\n    }\r\n\r\n    if(permanent && this.chat.selection.isSelecting) {\r\n      this.chat.selection.deleteSelectedMids(this.peerId, mids);\r\n    }\r\n    \r\n    animationIntersector.checkAnimations(false, CHAT_ANIMATION_GROUP);\r\n    this.deleteEmptyDateGroups();\r\n    this.onScroll();\r\n  }\r\n  \r\n  public renderNewMessagesByIds(mids: number[], scrolledDown?: boolean) {\r\n    if(!this.scrollable.loadedAll.bottom) { // seems search active or sliced\r\n      //this.log('renderNewMessagesByIds: seems search is active, skipping render:', mids);\r\n      const setPeerPromise = this.chat.setPeerPromise;\r\n      if(setPeerPromise) {\r\n        const middleware = this.getMiddleware();\r\n        setPeerPromise.then(() => {\r\n          if(!middleware()) return;\r\n          this.renderNewMessagesByIds(mids);\r\n        });\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if(this.chat.threadId) {\r\n      mids = mids.filter(mid => {\r\n        const message = this.chat.getMessage(mid);\r\n        const replyTo = message.reply_to as MessageReplyHeader;\r\n        return replyTo && (replyTo.reply_to_top_id || replyTo.reply_to_msg_id) === this.chat.threadId;\r\n      });\r\n    }\r\n\r\n    mids = mids.filter(mid => !this.bubbles[mid]);\r\n    // ! should scroll even without new messages\r\n    /* if(!mids.length) {\r\n      return;\r\n    } */\r\n\r\n    if(!scrolledDown) {\r\n      scrolledDown = this.scrolledDown && (\r\n        !this.scrollingToBubble || \r\n        this.scrollingToBubble === this.getLastBubble() || \r\n        this.scrollingToBubble === this.chatInner\r\n      );\r\n    }\r\n\r\n    const middleware = this.getMiddleware();\r\n    let isPaddingNeeded = false;\r\n    let setPaddingTo: HTMLElement;\r\n    if(!this.isTopPaddingSet) {\r\n      const {clientHeight, scrollHeight} = this.scrollable.container;\r\n      isPaddingNeeded = clientHeight === scrollHeight;\r\n      /* const firstEl = this.chatInner.firstElementChild as HTMLElement;\r\n      if(this.chatInner.firstElementChild) {\r\n        const visibleRect = getVisibleRect(firstEl, this.scrollable.container);\r\n        isPaddingNeeded = !visibleRect.overflow.top && (visibleRect.rect.top - firstEl.offsetTop) !== this.scrollable.container.getBoundingClientRect().top;\r\n      } else {\r\n        isPaddingNeeded = true;\r\n      } */\r\n\r\n      if(isPaddingNeeded) {\r\n        /* const add = clientHeight - scrollHeight;\r\n        this.chatInner.style.paddingTop = add + 'px';\r\n        this.scrollable.scrollTop += add; */\r\n        setPaddingTo = this.chatInner;\r\n        setPaddingTo.style.paddingTop = clientHeight + 'px';\r\n        this.scrollable.scrollTop = scrollHeight;\r\n        this.isTopPaddingSet = true;\r\n      }\r\n    }\r\n\r\n    const promise = this.performHistoryResult(mids, false, true);\r\n    if(scrolledDown) {\r\n      promise.then(() => {\r\n        if(!middleware()) return;\r\n        //this.log('renderNewMessagesByIDs: messagesQueuePromise after', this.scrollable.isScrolledDown);\r\n        //this.scrollable.scrollTo(this.scrollable.scrollHeight, 'top', true, true, 5000);\r\n        //const bubble = this.bubbles[Math.max(...mids)];\r\n\r\n        let bubble: HTMLElement;\r\n        if(this.chat.type === 'scheduled') {\r\n          bubble = this.bubbles[Math.max(...mids)];\r\n        }\r\n\r\n        const promise = bubble ? this.scrollToBubbleEnd(bubble) : this.scrollToEnd();\r\n        if(isPaddingNeeded) {\r\n          promise.then(() => { // it will be called only once even if was set multiple times (that won't happen)\r\n            if(middleware() && isPaddingNeeded) {\r\n              setPaddingTo.style.paddingTop = '';\r\n              this.isTopPaddingSet = false;\r\n            }\r\n          });\r\n        }\r\n\r\n        //this.scrollable.scrollIntoViewNew(this.chatInner, 'end');\r\n\r\n        /* setTimeout(() => {\r\n          this.log('messagesQueuePromise afterafter:', this.chatInner.childElementCount, this.scrollable.scrollHeight);\r\n        }, 10); */\r\n      });\r\n    }\r\n  }\r\n\r\n  public getLastBubble() {\r\n    const lastDateGroup = this.getLastDateGroup();\r\n    if(lastDateGroup) {\r\n      return lastDateGroup.lastElementChild as HTMLElement;\r\n    }\r\n  }\r\n\r\n  public scrollToBubble(\r\n    element: HTMLElement, \r\n    position: ScrollLogicalPosition,\r\n    forceDirection?: FocusDirection,\r\n    forceDuration?: number\r\n  ) {\r\n    const bubble = findUpClassName(element, 'bubble');\r\n\r\n    let fallbackToElementStartWhenCentering: HTMLElement;\r\n    // * if it's a start, then scroll to start of the group\r\n    if(bubble && position !== 'end' && whichChild(bubble) === (this.stickyIntersector ? 2 : 1)/*  && this.chat.setPeerPromise */) {\r\n      const dateGroup = bubble.parentElement;\r\n      // if(whichChild(dateGroup) === 0) {\r\n        fallbackToElementStartWhenCentering = dateGroup;\r\n        // position = 'start';\r\n        // element = dateGroup;\r\n      // }\r\n    }\r\n\r\n    // const isLastBubble = this.getLastBubble() === bubble;\r\n    /* if(isLastBubble) {\r\n      element = this.getLastDateGroup();\r\n    } */\r\n\r\n    let margin = 4; // * 4 = .25rem\r\n    /* if(isLastBubble && this.chat.type === 'chat' && this.bubblesContainer.classList.contains('is-chat-input-hidden')) {\r\n      margin = 20;\r\n    } */\r\n\r\n    const isChangingHeight = (this.chat.input.messageInput && this.chat.input.messageInput.classList.contains('is-changing-height')) || this.chat.container.classList.contains('is-toggling-helper');\r\n    return this.scrollable.scrollIntoViewNew({\r\n      element, \r\n      position, \r\n      margin, \r\n      forceDirection, \r\n      forceDuration, \r\n      axis: 'y', \r\n      getNormalSize: isChangingHeight ? ({rect}) => {\r\n        // return rect.height;\r\n\r\n        let height = windowSize.height;\r\n        // height -= this.chat.topbar.container.getBoundingClientRect().height;\r\n        height -= this.bubblesContainer.offsetTop;\r\n        height -= mediaSizes.isMobile || windowSize.height < 570 ? 58 : 78;\r\n        return height;\r\n\r\n        /* const rowsWrapperHeight = this.chat.input.rowsWrapper.getBoundingClientRect().height;\r\n        const diff = rowsWrapperHeight - 54;\r\n        return rect.height + diff; */\r\n      } : undefined,\r\n      fallbackToElementStartWhenCentering\r\n    });\r\n  }\r\n\r\n  public scrollToEnd() {\r\n    return this.scrollToBubbleEnd(this.chatInner);\r\n  }\r\n\r\n  public async scrollToBubbleEnd(bubble: HTMLElement) {\r\n    /* if(DEBUG) {\r\n      this.log('scrollToNewLastBubble: will scroll into view:', bubble);\r\n    } */\r\n\r\n    if(bubble) {\r\n      this.scrollingToBubble = bubble;\r\n      const middleware = this.getMiddleware();\r\n      await this.scrollToBubble(bubble, 'end', undefined, undefined);\r\n      if(!middleware()) return;\r\n      this.scrollingToBubble = undefined;\r\n    }\r\n  }\r\n\r\n  // ! can't get it by chatInner.lastElementChild because placeholder can be the last...\r\n  private getLastDateGroup() {\r\n    let lastTime = 0, lastElem: HTMLElement;\r\n    for(const i in this.dateMessages) {\r\n      const dateMessage = this.dateMessages[i];\r\n      if(dateMessage.firstTimestamp > lastTime) {\r\n        lastElem = dateMessage.container;\r\n        lastTime = dateMessage.firstTimestamp;\r\n      }\r\n    }\r\n\r\n    return lastElem;\r\n  }\r\n\r\n  public async scrollToBubbleIfLast(bubble: HTMLElement) {\r\n    if(this.getLastBubble() === bubble) {\r\n      // return this.scrollToBubbleEnd(bubble);\r\n      return this.scrollToEnd();\r\n    }\r\n  }\r\n\r\n  public highlightBubble(element: HTMLElement) {\r\n    const datasetKey = 'highlightTimeout';\r\n    if(element.dataset[datasetKey]) {\r\n      clearTimeout(+element.dataset[datasetKey]);\r\n      element.classList.remove('is-highlighted');\r\n      void element.offsetWidth; // reflow\r\n    }\r\n\r\n    element.classList.add('is-highlighted');\r\n    element.dataset[datasetKey] = '' + setTimeout(() => {\r\n      element.classList.remove('is-highlighted');\r\n      delete element.dataset[datasetKey];\r\n    }, 2000);\r\n  }\r\n\r\n  public getDateContainerByMessage(message: any, reverse: boolean) {\r\n    const date = new Date(message.date * 1000);\r\n    date.setHours(0, 0, 0);\r\n    const dateTimestamp = date.getTime();\r\n    if(!this.dateMessages[dateTimestamp]) {\r\n      let dateElement: HTMLElement;\r\n      \r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n\r\n      const isScheduled = this.chat.type === 'scheduled';\r\n      \r\n      if(today.getTime() === date.getTime()) {\r\n        dateElement = i18n(isScheduled ? 'Chat.Date.ScheduledForToday' : 'Date.Today');\r\n      } else if(isScheduled && message.date === SEND_WHEN_ONLINE_TIMESTAMP) {\r\n        dateElement = i18n('MessageScheduledUntilOnline');\r\n      } else {\r\n        const options: Intl.DateTimeFormatOptions = {\r\n          day: 'numeric',\r\n          month: 'long'\r\n        };\r\n\r\n        if(date.getFullYear() !== today.getFullYear()) {\r\n          options.year = 'numeric';\r\n        }\r\n\r\n        dateElement = new I18n.IntlDateElement({\r\n          date,\r\n          options\r\n        }).element;\r\n\r\n        if(isScheduled) {\r\n          dateElement = i18n('Chat.Date.ScheduledFor', [dateElement]);\r\n        }\r\n      }\r\n      \r\n      const bubble = document.createElement('div');\r\n      bubble.className = 'bubble service is-date';\r\n      const bubbleContent = document.createElement('div');\r\n      bubbleContent.classList.add('bubble-content');\r\n      const serviceMsg = document.createElement('div');\r\n      serviceMsg.classList.add('service-msg');\r\n\r\n      serviceMsg.append(dateElement);\r\n\r\n      bubbleContent.append(serviceMsg);\r\n      bubble.append(bubbleContent);\r\n      ////////this.log('need to render date message', dateTimestamp, str);\r\n\r\n      const container = document.createElement('section');\r\n      container.className = 'bubbles-date-group';\r\n      container.append(bubble);\r\n\r\n      this.dateMessages[dateTimestamp] = {\r\n        div: bubble,\r\n        container,\r\n        firstTimestamp: date.getTime()\r\n      };\r\n\r\n      const haveTimestamps = getObjectKeysAndSort(this.dateMessages, 'asc');\r\n      let i = 0, length = haveTimestamps.length, insertBefore: HTMLElement; // there can be 'first bubble' (e.g. bot description) so can't insert by index\r\n      for(; i < haveTimestamps.length; ++i) {\r\n        const t = haveTimestamps[i];\r\n        insertBefore = this.dateMessages[t].container;\r\n        if(dateTimestamp < t) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      if(i === length && insertBefore) {\r\n        insertBefore = insertBefore.nextElementSibling as HTMLElement;\r\n      }\r\n\r\n      if(!insertBefore) {\r\n        this.chatInner.append(container);\r\n      } else {\r\n        this.chatInner.insertBefore(container, insertBefore);\r\n      }\r\n\r\n      if(this.stickyIntersector) {\r\n        this.stickyIntersector.observeStickyHeaderChanges(container);\r\n      }\r\n    }\r\n\r\n    return this.dateMessages[dateTimestamp];\r\n  }\r\n\r\n  public destroy() {\r\n    //this.chat.log.error('Bubbles destroying');\r\n\r\n    this.scrollable.onScrolledTop = this.scrollable.onScrolledBottom = this.scrollable.onAdditionalScroll = null;\r\n\r\n    this.listenerSetter.removeAll();\r\n\r\n    this.lazyLoadQueue.clear();\r\n    this.unreadedObserver && this.unreadedObserver.disconnect();\r\n    this.viewsObserver && this.viewsObserver.disconnect();\r\n    this.stickyIntersector && this.stickyIntersector.disconnect();\r\n\r\n    delete this.lazyLoadQueue;\r\n    this.unreadedObserver && delete this.unreadedObserver;\r\n    this.viewsObserver && delete this.viewsObserver;\r\n    this.stickyIntersector && delete this.stickyIntersector;\r\n  }\r\n\r\n  public cleanup(bubblesToo = false) {\r\n    this.bubbles = {}; // clean it before so sponsored message won't be deleted faster on peer changing\r\n    ////console.time('appImManager cleanup');\r\n    this.setLoaded('top', false);\r\n    this.setLoaded('bottom', false);\r\n\r\n    // cancel scroll\r\n    cancelAnimationByKey(this.scrollable.container);\r\n\r\n    // do not wait ending of previous scale animation\r\n    interruptHeavyAnimation();\r\n\r\n    if(TEST_SCROLL !== undefined) {\r\n      TEST_SCROLL = TEST_SCROLL_TIMES;\r\n    }\r\n\r\n    this.skippedMids.clear();\r\n    this.dateMessages = {};\r\n    this.bubbleGroups.cleanup();\r\n    this.unreadOut.clear();\r\n    this.needUpdate.length = 0;\r\n    this.lazyLoadQueue.clear();\r\n    \r\n    // clear messages\r\n    if(bubblesToo) {\r\n      this.scrollable.container.textContent = '';\r\n    }\r\n    \r\n    this.firstUnreadBubble = null;\r\n    this.attachedUnreadBubble = false;\r\n    \r\n    this.messagesQueue.length = 0;\r\n    this.messagesQueuePromise = null;\r\n    \r\n    this.getHistoryTopPromise = this.getHistoryBottomPromise = undefined;\r\n    this.fetchNewPromise = undefined;\r\n    this.getSponsoredMessagePromise = undefined;\r\n    \r\n    if(this.stickyIntersector) {\r\n      this.stickyIntersector.disconnect();\r\n    }\r\n    \r\n    if(this.unreadedObserver) {\r\n      this.unreadedObserver.disconnect();\r\n      this.unreaded.clear();\r\n      this.unreadedSeen.clear();\r\n      this.readPromise = undefined;\r\n    }\r\n\r\n    if(this.viewsObserver) {\r\n      this.viewsObserver.disconnect();\r\n      this.viewsMids.clear();\r\n    }\r\n    \r\n    this.loadedTopTimes = this.loadedBottomTimes = 0;\r\n    \r\n    this.middleware.clean();\r\n    \r\n    this.onAnimateLadder = undefined;\r\n    this.resolveLadderAnimation = undefined;\r\n    this.emptyPlaceholderMid = undefined;\r\n    this.sponsoredMessage = undefined;\r\n    this.previousStickyDate = undefined;\r\n\r\n    this.scrollingToBubble = undefined;\r\n    ////console.timeEnd('appImManager cleanup');\r\n\r\n    this.isTopPaddingSet = false;\r\n\r\n    // this.reactions.clear();\r\n\r\n    if(this.isScrollingTimeout) {\r\n      clearTimeout(this.isScrollingTimeout);\r\n      this.isScrollingTimeout = 0;\r\n    }\r\n  }\r\n\r\n  public setPeer(peerId: PeerId, lastMsgId?: number, startParam?: string): {cached?: boolean, promise: Chat['setPeerPromise']} {\r\n    //console.time('appImManager setPeer');\r\n    //console.time('appImManager setPeer pre promise');\r\n    ////console.time('appImManager: pre render start');\r\n    if(!peerId) {\r\n      this.cleanup(true);\r\n      this.peerId = peerId;\r\n      return null;\r\n    }\r\n\r\n    const samePeer = this.peerId === peerId;\r\n\r\n    /* if(samePeer && this.chat.setPeerPromise) {\r\n      return {cached: true, promise: this.chat.setPeerPromise};\r\n    } */\r\n\r\n    const chatType = this.chat.type;\r\n\r\n    if(chatType === 'scheduled' || this.chat.isRestricted) {\r\n      lastMsgId = 0;\r\n    }\r\n\r\n    const historyStorage = this.historyStorage = this.appMessagesManager.getHistoryStorage(peerId, this.chat.threadId);\r\n    let topMessage = chatType === 'pinned' ? this.appMessagesManager.pinnedMessages[peerId].maxId : this.historyStorage.maxId ?? 0;\r\n    const isTarget = lastMsgId !== undefined;\r\n\r\n    // * this one will fix topMessage for null message in history (e.g. channel comments with only 1 comment and it is a topMessage)\r\n    /* if(chatType !== 'pinned' && topMessage && !historyStorage.history.slice.includes(topMessage)) {\r\n      topMessage = 0;\r\n    } */\r\n\r\n    let followingUnread: boolean;\r\n    let readMaxId = 0, savedPosition: ReturnType<AppImManager['getChatSavedPosition']>, overrideAdditionMsgId: number;\r\n    if(!isTarget) {\r\n      if(!samePeer) {\r\n        savedPosition = this.chat.appImManager.getChatSavedPosition(this.chat);\r\n      }\r\n\r\n      if(savedPosition) {\r\n        \r\n      } else if(topMessage) {\r\n        readMaxId = this.appMessagesManager.getReadMaxIdIfUnread(peerId, this.chat.threadId);\r\n        const dialog = this.appMessagesManager.getDialogOnly(peerId);\r\n        if(/* dialog.unread_count */readMaxId && !samePeer && (!dialog || dialog.unread_count !== 1)) {\r\n          const foundSlice = historyStorage.history.findSliceOffset(readMaxId);\r\n          if(foundSlice && foundSlice.slice.isEnd(SliceEnd.Bottom)) {\r\n            overrideAdditionMsgId = foundSlice.slice[foundSlice.offset - 25] || foundSlice.slice[0] || readMaxId;\r\n          }\r\n\r\n          followingUnread = !isTarget;\r\n          lastMsgId = readMaxId;\r\n        } else {\r\n          lastMsgId = topMessage;\r\n          //lastMsgID = topMessage;\r\n        }\r\n      }\r\n    }\r\n\r\n    const isJump = lastMsgId !== topMessage/*  && overrideAdditionMsgId === undefined */;\r\n\r\n    const {scrollable} = this;\r\n    \r\n    if(samePeer) {\r\n      const mounted = this.getMountedBubble(lastMsgId);\r\n      if(mounted) {\r\n        if(isTarget) {\r\n          this.scrollToBubble(mounted.bubble, 'center');\r\n          this.highlightBubble(mounted.bubble);\r\n          this.chat.dispatchEvent('setPeer', lastMsgId, false);\r\n        } else if(topMessage && !isJump) {\r\n          //this.log('will scroll down', this.scroll.scrollTop, this.scroll.scrollHeight);\r\n          scrollable.scrollTop = scrollable.scrollHeight;\r\n          this.chat.dispatchEvent('setPeer', lastMsgId, true);\r\n        }\r\n\r\n        if(startParam !== undefined) {\r\n          this.chat.input.setStartParam(startParam);\r\n        }\r\n        \r\n        return null;\r\n      }\r\n    } else {\r\n      if(this.peerId) { // * set new queue id if new peer (setting not from 0)\r\n        this.lazyLoadQueue.queueId = ++queueId;\r\n        this.chat.apiManager.setQueueId(this.chat.bubbles.lazyLoadQueue.queueId);\r\n      }\r\n\r\n      this.peerId = peerId;\r\n      this.replyFollowHistory.length = 0;\r\n\r\n      this.passEntities = {\r\n        messageEntityBotCommand: this.appPeersManager.isAnyGroup(peerId) || this.appUsersManager.isBot(peerId)\r\n      };\r\n    }\r\n\r\n    if(DEBUG) {\r\n      this.log('setPeer peerId:', peerId, this.historyStorage, lastMsgId, topMessage);\r\n    }\r\n\r\n    // add last message, bc in getHistory will load < max_id\r\n    const additionMsgId = overrideAdditionMsgId ?? (isJump || chatType === 'scheduled' || this.chat.isRestricted ? 0 : topMessage);\r\n\r\n    /* this.setPeerPromise = null;\r\n    this.preloader.detach();\r\n    return true; */\r\n\r\n    //////appSidebarRight.toggleSidebar(true);\r\n\r\n    let maxBubbleId = 0;\r\n    if(samePeer) {\r\n      let el = this.getBubbleByPoint('bottom'); // ! this may not work if being called when chat is hidden\r\n      //this.chat.log('[PM]: setCorrectIndex: get last element perf:', performance.now() - perf, el);\r\n      if(el) {\r\n        maxBubbleId = +el.dataset.mid;\r\n      }\r\n\r\n      if(maxBubbleId <= 0) {\r\n        maxBubbleId = Math.max(...Object.keys(this.bubbles).map(mid => +mid));\r\n      }\r\n    } else {\r\n      this.isFirstLoad = true;\r\n    }\r\n\r\n    const oldChatInner = this.chatInner;\r\n    this.cleanup();\r\n    const chatInner = this.chatInner = document.createElement('div');\r\n    if(samePeer) {\r\n      chatInner.className = oldChatInner.className;\r\n      chatInner.classList.remove('disable-hover', 'is-scrolling');\r\n    } else {\r\n      chatInner.classList.add('bubbles-inner');\r\n    }\r\n\r\n    this.lazyLoadQueue.lock();\r\n\r\n    let result: ReturnType<ChatBubbles['getHistory']>;\r\n    if(!savedPosition) {\r\n      result = this.getHistory(lastMsgId, true, isJump, additionMsgId);\r\n    } else {\r\n      result = {\r\n        promise: getHeavyAnimationPromise().then(() => {\r\n          return this.performHistoryResult(savedPosition.mids, true, false, undefined);\r\n        }) as any,\r\n        cached: true\r\n      };\r\n    }\r\n\r\n    const {promise, cached} = result;\r\n\r\n    // clear \r\n    if(!cached) {\r\n      if(!samePeer) {\r\n        scrollable.container.textContent = '';\r\n        //oldChatInner.remove();\r\n        this.chat.finishPeerChange(isTarget, isJump, lastMsgId, startParam);\r\n        this.preloader.attach(this.bubblesContainer);\r\n      }\r\n    }\r\n\r\n    //console.timeEnd('appImManager setPeer pre promise');\r\n    /* this.ladderDeferred && this.ladderDeferred.resolve();\r\n    this.ladderDeferred = deferredPromise<void>(); */\r\n    \r\n    animationIntersector.lockGroup(CHAT_ANIMATION_GROUP);\r\n    const setPeerPromise = promise.then(() => {\r\n      ////this.log('setPeer removing preloader');\r\n\r\n      if(cached) {\r\n        if(!samePeer) {\r\n          this.chat.finishPeerChange(isTarget, isJump, lastMsgId, startParam); // * костыль\r\n        }\r\n      } else {\r\n        this.preloader.detach();\r\n      }\r\n\r\n      if(this.resolveLadderAnimation) {\r\n        this.resolveLadderAnimation();\r\n        this.resolveLadderAnimation = undefined;\r\n      }\r\n\r\n      // this.ladderDeferred.resolve();\r\n\r\n      scrollable.lastScrollDirection = 0;\r\n      scrollable.lastScrollPosition = 0;\r\n      replaceContent(scrollable.container, chatInner);\r\n\r\n      animationIntersector.unlockGroup(CHAT_ANIMATION_GROUP);\r\n      animationIntersector.checkAnimations(false, CHAT_ANIMATION_GROUP/* , true */);\r\n\r\n      //fastRaf(() => {\r\n        this.lazyLoadQueue.unlock();\r\n      //});\r\n\r\n      //if(dialog && lastMsgID && lastMsgID !== topMessage && (this.bubbles[lastMsgID] || this.firstUnreadBubble)) {\r\n      if(savedPosition) {\r\n        scrollable.scrollTop = scrollable.lastScrollPosition = savedPosition.top;\r\n        /* const mountedByLastMsgId = this.getMountedBubble(lastMsgId);\r\n        let bubble: HTMLElement = mountedByLastMsgId?.bubble;\r\n        if(!bubble?.parentElement) {\r\n          bubble = this.findNextMountedBubbleByMsgId(lastMsgId);\r\n        }\r\n\r\n        if(bubble) {\r\n          const top = bubble.getBoundingClientRect().top;\r\n          const distance = savedPosition.top - top;\r\n          scrollable.scrollTop += distance;\r\n        } */\r\n      } else if((topMessage && isJump) || isTarget) {\r\n        const fromUp = maxBubbleId > 0 && (maxBubbleId < lastMsgId || lastMsgId < 0);\r\n        if(!fromUp && samePeer) {\r\n          scrollable.scrollTop = scrollable.lastScrollPosition = 99999;\r\n        } else if(fromUp/*  && (samePeer || forwardingUnread) */) {\r\n          scrollable.scrollTop = scrollable.lastScrollPosition = 0;\r\n        }\r\n\r\n        const mountedByLastMsgId = this.getMountedBubble(lastMsgId);\r\n        let bubble: HTMLElement = (followingUnread && this.firstUnreadBubble) || mountedByLastMsgId?.bubble;\r\n        if(!bubble?.parentElement) {\r\n          bubble = this.findNextMountedBubbleByMsgId(lastMsgId);\r\n        }\r\n        \r\n        // ! sometimes there can be no bubble\r\n        if(bubble) {\r\n          this.scrollToBubble(bubble, followingUnread ? 'start' : 'center', !samePeer ? FocusDirection.Static : undefined);\r\n          if(!followingUnread) {\r\n            this.highlightBubble(bubble);\r\n          }\r\n        }\r\n      } else {\r\n        scrollable.scrollTop = scrollable.lastScrollPosition = 99999;\r\n      }\r\n\r\n      this.onScroll();\r\n\r\n      const middleware = this.getMiddleware();\r\n      const afterSetPromise = Promise.all([setPeerPromise, getHeavyAnimationPromise()]);\r\n      afterSetPromise.then(() => { // check whether list isn't full\r\n        scrollable.checkForTriggers();\r\n      });\r\n\r\n      this.chat.dispatchEvent('setPeer', lastMsgId, !isJump);\r\n\r\n      const needReactionsInterval = this.appPeersManager.isChannel(peerId);\r\n      if(needReactionsInterval) {\r\n        const middleware = this.getMiddleware();\r\n        const fetchReactions = () => {\r\n          if(!middleware()) return;\r\n\r\n          const mids: number[] = [];\r\n          for(const mid in this.bubbles) {\r\n            let message: MyMessage = this.chat.getMessage(+mid);\r\n            if(message._ !== 'message') {\r\n              continue;\r\n            }\r\n\r\n            message = this.appMessagesManager.getGroupsFirstMessage(message);\r\n            mids.push(message.mid);\r\n          }\r\n\r\n          const promise = mids.length ? this.appReactionsManager.getMessagesReactions(this.peerId, mids) : Promise.resolve();\r\n          promise.then(() => {\r\n            setTimeout(fetchReactions, 10e3);\r\n          });\r\n        };\r\n\r\n        Promise.all([afterSetPromise, getHeavyAnimationPromise(), pause(500)]).then(() => {\r\n          fetchReactions();\r\n        });\r\n      }\r\n\r\n      const needFetchInterval = this.appMessagesManager.isFetchIntervalNeeded(peerId);\r\n      const needFetchNew = savedPosition || needFetchInterval;\r\n      if(!needFetchNew) {\r\n        // warning\r\n        if(!lastMsgId || this.bubbles[topMessage] || lastMsgId === topMessage) {\r\n          this.setLoaded('bottom', true);\r\n        }\r\n      } else {\r\n        afterSetPromise.then(() => {\r\n          if(!middleware()) {\r\n            return;\r\n          }\r\n\r\n          scrollable.checkForTriggers();\r\n\r\n          if(needFetchInterval) {\r\n            const f = () => {\r\n              this.fetchNewPromise = new Promise<void>((resolve) => {\r\n                if(!middleware() || !this.appMessagesManager.isFetchIntervalNeeded(peerId)) {\r\n                  resolve();\r\n                  return;\r\n                }\r\n  \r\n                this.appMessagesManager.getNewHistory(peerId, this.chat.threadId).then((historyStorage) => {\r\n                  if(!middleware() || !historyStorage) {\r\n                    resolve();\r\n                    return;\r\n                  }\r\n  \r\n                  const slice = historyStorage.history.slice;\r\n                  const isBottomEnd = slice.isEnd(SliceEnd.Bottom);\r\n                  if(scrollable.loadedAll.bottom && scrollable.loadedAll.bottom !== isBottomEnd) {\r\n                    this.setLoaded('bottom', isBottomEnd);\r\n                    this.onScroll();\r\n                  }\r\n\r\n                  setTimeout(f, 30e3);\r\n                  resolve();\r\n                });\r\n              }).finally(() => {\r\n                this.fetchNewPromise = undefined;\r\n              });\r\n            };\r\n            \r\n            if(samePeer) {\r\n              setTimeout(f, 30e3);\r\n            } else {\r\n              f();\r\n            }\r\n          }\r\n        });\r\n      }\r\n      \r\n      this.log('scrolledAllDown:', scrollable.loadedAll.bottom);\r\n\r\n      //if(!this.unreaded.length && dialog) { // lol\r\n      if(scrollable.loadedAll.bottom && topMessage && !this.unreaded.size) { // lol\r\n        this.onScrolledAllDown();\r\n      }\r\n\r\n      if(chatType === 'chat') {\r\n        const dialog = this.appMessagesManager.getDialogOnly(peerId);\r\n        if(dialog?.pFlags.unread_mark) {\r\n          this.appMessagesManager.markDialogUnread(peerId, true);\r\n        }\r\n      }\r\n\r\n      //this.chatInner.classList.remove('disable-hover', 'is-scrolling'); // warning, performance!\r\n\r\n      /* if(!document.body.classList.contains(RIGHT_COLUMN_ACTIVE_CLASSNAME)) {\r\n        return new Promise<void>((resolve) => fastRaf(resolve));\r\n      } */\r\n      //console.timeEnd('appImManager setPeer');\r\n    }).catch(err => {\r\n      this.log.error('getHistory promise error:', err);\r\n      this.preloader.detach();\r\n      throw err;\r\n    });\r\n\r\n    return {cached, promise: setPeerPromise};\r\n  }\r\n\r\n  public onScrolledAllDown() {\r\n    if(this.chat.type === 'chat' || this.chat.type === 'discussion') {\r\n      const storage = this.appMessagesManager.getHistoryStorage(this.peerId, this.chat.threadId);\r\n      this.appMessagesManager.readHistory(this.peerId, storage.maxId, this.chat.threadId, true);\r\n    }\r\n  }\r\n\r\n  public finishPeerChange() {\r\n    const isChannel = this.appPeersManager.isChannel(this.peerId);\r\n    const canWrite = this.chat.canSend();\r\n    \r\n    this.chatInner.classList.toggle('has-rights', canWrite);\r\n    this.bubblesContainer.classList.toggle('is-chat-input-hidden', !canWrite);\r\n\r\n    this.chatInner.classList.toggle('is-chat', this.chat.isAnyGroup());\r\n    this.chatInner.classList.toggle('is-channel', isChannel);\r\n  }\r\n\r\n  public renderMessagesQueue(message: any, bubble: HTMLElement, reverse: boolean, promises: Promise<any>[]) {\r\n    /* let dateMessage = this.getDateContainerByMessage(message, reverse);\r\n    if(reverse) dateMessage.container.insertBefore(bubble, dateMessage.div.nextSibling);\r\n    else dateMessage.container.append(bubble);\r\n    return; */\r\n\r\n    /* if(DEBUG && message.mid === 4314759167) {\r\n      this.log('renderMessagesQueue', message, bubble, reverse, promises);\r\n    } */\r\n\r\n    this.messagesQueue.push({message, bubble, reverse, promises});\r\n\r\n    return this.setMessagesQueuePromise();    \r\n  }\r\n\r\n  public setMessagesQueuePromise() {\r\n    if(this.messagesQueuePromise || !this.messagesQueue.length) return Promise.resolve();\r\n\r\n    return this.messagesQueuePromise = new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        const queue = this.messagesQueue.slice();\r\n        this.messagesQueue.length = 0;\r\n\r\n        const promises = queue.reduce((acc, {promises}) => (acc.push(...promises), acc), []);\r\n\r\n        // promises.push(pause(200));\r\n\r\n        // * это нужно для того, чтобы если захочет подгрузить reply или какое-либо сообщение, то скролл не прервался\r\n        // * если добавить этот промис - в таком случае нужно сделать, чтобы скроллило к последнему сообщению после рендера\r\n        // promises.push(getHeavyAnimationPromise());\r\n\r\n        this.log('promises to call', promises, queue, this.isHeavyAnimationInProgress);\r\n        const middleware = this.getMiddleware();\r\n        Promise.all(promises).then(() => {\r\n          if(!middleware()) {\r\n            throw 'setMessagesQueuePromise: peer changed!';\r\n          }\r\n\r\n          if(this.messagesQueueOnRender) {\r\n            this.messagesQueueOnRender();\r\n          }\r\n\r\n          if(this.messagesQueueOnRenderAdditional) {\r\n            this.messagesQueueOnRenderAdditional();\r\n          }\r\n\r\n          queue.forEach(({message, bubble, reverse}) => {\r\n            this.setBubblePosition(bubble, message, reverse);\r\n          });\r\n\r\n          //setTimeout(() => {\r\n            resolve();\r\n          //}, 500);\r\n          this.messagesQueuePromise = null;\r\n\r\n          if(this.messagesQueue.length) {\r\n            this.setMessagesQueuePromise();\r\n          }\r\n\r\n          this.setUnreadDelimiter(); // не нашёл места лучше\r\n          // this.setStickyDateManually();\r\n        }).catch(reject);\r\n      }, 0);\r\n    });\r\n\r\n    //this.messagesQueuePromise.catch(() => {});\r\n  }\r\n\r\n  public setBubblePosition(bubble: HTMLElement, message: Message.message | Message.messageService, reverse: boolean) {\r\n    if(message.pFlags.local) {\r\n      this.chatInner[(message as Message.message).pFlags.sponsored ? 'append' : 'prepend'](bubble);\r\n      return;\r\n    }\r\n\r\n    const dateMessage = this.getDateContainerByMessage(message, reverse);\r\n    if(this.chat.type === 'scheduled' || this.chat.type === 'pinned'/*  || true */) { // ! TEMP COMMENTED\r\n      const offset = this.stickyIntersector ? 2 : 1;\r\n      let children = Array.from(dateMessage.container.children).slice(offset) as HTMLElement[];\r\n      let i = 0, foundMidOnSameTimestamp = 0;\r\n      for(; i < children.length; ++i) {\r\n        const t = children[i];\r\n        const timestamp = +t.dataset.timestamp;\r\n        if(message.date < timestamp) {\r\n          break;\r\n        } else if(message.date === timestamp) {\r\n          foundMidOnSameTimestamp = +t.dataset.mid;\r\n        }\r\n        \r\n        if(foundMidOnSameTimestamp && message.mid < foundMidOnSameTimestamp) {\r\n          break;\r\n        }\r\n      }\r\n  \r\n      // * 1 for date, 1 for date sentinel\r\n      let index = offset + i;\r\n      /* if(bubble.parentElement) { // * if already mounted\r\n        const currentIndex = whichChild(bubble);\r\n        if(index > currentIndex) {\r\n          index -= 1; // * minus for already mounted\r\n        }\r\n      } */\r\n  \r\n      positionElementByIndex(bubble, dateMessage.container, index);\r\n    } else {\r\n      if(reverse) {\r\n        dateMessage.container.insertBefore(bubble, dateMessage.container.children[this.stickyIntersector ? 1 : 0].nextSibling);\r\n      } else {\r\n        dateMessage.container.append(bubble);\r\n      }\r\n    }\r\n\r\n    if(message._ === 'message' || (message.action && SERVICE_AS_REGULAR.has(message.action._))) {\r\n      this.bubbleGroups.addBubble(bubble, message, reverse);\r\n    } else {\r\n      bubble.classList.add('is-group-first', 'is-group-last');\r\n    }\r\n  }\r\n\r\n  public getMiddleware(additionalCallback?: () => boolean) {\r\n    return this.middleware.get(additionalCallback);\r\n  }\r\n  \r\n  // reverse means top\r\n  private renderMessage(message: Message.message | Message.messageService, reverse = false, multipleRender = false, bubble: HTMLElement = null, updatePosition = true) {\r\n    /* if(DEBUG) {\r\n      this.log.debug('message to render:', message);\r\n    } */\r\n    if(!bubble && this.bubbles[message.mid]) {\r\n      return;\r\n    }\r\n\r\n    const isMessage = message._ === 'message';\r\n    const groupId = isMessage && message.grouped_id;\r\n\r\n    //return;\r\n    const albumMustBeRenderedFull = this.chat.type !== 'pinned';\r\n    if(message.deleted) return;\r\n    else if(groupId && albumMustBeRenderedFull) { // will render only last album's message\r\n      const storage = this.appMessagesManager.groupedMessagesStorage[groupId];\r\n      const maxId = Math.max(...storage.keys());\r\n      if(message.mid < maxId) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    const peerId = this.peerId;\r\n    // * can't use 'message.pFlags.out' here because this check will be used to define side of message (left-right)\r\n    const our = message.fromId === rootScope.myId || (message.pFlags.out && this.appPeersManager.isMegagroup(peerId));\r\n    \r\n    const messageDiv = document.createElement('div');\r\n    messageDiv.classList.add('message');\r\n    \r\n    //messageDiv.innerText = message.message;\r\n\r\n    let bubbleContainer: HTMLDivElement;\r\n    let contentWrapper: HTMLElement;\r\n    \r\n    // bubble\r\n    if(!bubble) {\r\n      contentWrapper = document.createElement('div');\r\n      contentWrapper.classList.add('bubble-content-wrapper');\r\n      \r\n      bubbleContainer = document.createElement('div');\r\n      bubbleContainer.classList.add('bubble-content');\r\n      \r\n      bubble = document.createElement('div');\r\n      bubble.classList.add('bubble');\r\n      contentWrapper.appendChild(bubbleContainer);\r\n      bubble.appendChild(contentWrapper);\r\n\r\n      if(!our && !message.pFlags.out && this.unreadedObserver) {\r\n        //this.log('not our message', message, message.pFlags.unread);\r\n        const isUnread = message.pFlags.unread || \r\n          this.appMessagesManager.isMentionUnread(message) || \r\n          (this.historyStorage.readMaxId !== undefined && this.historyStorage.readMaxId < message.mid);\r\n        if(isUnread) {\r\n          this.unreadedObserver.observe(bubble); \r\n          this.unreaded.set(bubble, message.mid);\r\n        }\r\n      }\r\n    } else {\r\n      const save = ['is-highlighted', 'is-group-first', 'is-group-last'];\r\n      const wasClassNames = bubble.className.split(' ');\r\n      const classNames = ['bubble'].concat(save.filter(c => wasClassNames.includes(c)));\r\n      bubble.className = classNames.join(' ');\r\n\r\n      contentWrapper = bubble.lastElementChild as HTMLElement;\r\n      if(!contentWrapper.classList.contains('bubble-content-wrapper')) {\r\n        contentWrapper = bubble.querySelector('.bubble-content-wrapper');\r\n      }\r\n      \r\n      bubbleContainer = contentWrapper.firstElementChild as HTMLDivElement;\r\n      bubbleContainer.innerHTML = '';\r\n      bubbleContainer.style.cssText = '';\r\n      contentWrapper.innerHTML = '';\r\n      contentWrapper.appendChild(bubbleContainer);\r\n      //bubbleContainer.style.marginBottom = '';\r\n      const transitionDelay = contentWrapper.style.transitionDelay;\r\n      contentWrapper.style.cssText = '';\r\n      contentWrapper.style.transitionDelay = transitionDelay;\r\n\r\n      if(bubble === this.firstUnreadBubble) {\r\n        bubble.classList.add('is-first-unread');\r\n      }\r\n\r\n      // * Нужно очистить прошлую информацию, полезно если удалить последний элемент из альбома в ПОСЛЕДНЕМ БАББЛЕ ГРУППЫ (видно по аватару)\r\n      const originalMid = +bubble.dataset.mid;\r\n      const sameMid = +message.mid === originalMid;\r\n      /* if(updatePosition) {\r\n        bubble.remove(); // * for positionElementByIndex\r\n      } */\r\n\r\n      if(!sameMid) {\r\n        delete this.bubbles[originalMid];\r\n        this.skippedMids.delete(originalMid);\r\n      }\r\n\r\n      //bubble.innerHTML = '';\r\n    }\r\n\r\n    // ! reset due to album edit or delete item\r\n    this.bubbles[+message.mid] = bubble;\r\n    bubble.dataset.mid = '' + message.mid;\r\n    bubble.dataset.peerId = '' + message.peerId;\r\n    bubble.dataset.timestamp = '' + message.date;\r\n\r\n    const loadPromises: Promise<any>[] = [];\r\n\r\n    if(message._ === 'messageService' && (!message.action || !SERVICE_AS_REGULAR.has(message.action._))) {\r\n      const action = message.action;\r\n      if(action) {\r\n        const _ = action._;\r\n        if(IGNORE_ACTIONS.has(_) || (langPack.hasOwnProperty(_) && !langPack[_])) {\r\n          this.skippedMids.add(+message.mid);\r\n          return bubble;\r\n        }\r\n      }\r\n\r\n      bubble.className = 'bubble service';\r\n\r\n      bubbleContainer.innerHTML = '';\r\n      const s = document.createElement('div');\r\n      s.classList.add('service-msg');\r\n      if(action) {\r\n        if(action._ === 'messageActionChannelMigrateFrom') {\r\n          s.append(i18n('ChatMigration.From', [new PeerTitle({peerId: action.chat_id.toPeerId(true)}).element]));\r\n        } else if(action._ === 'messageActionChatMigrateTo') {\r\n          s.append(i18n('ChatMigration.To', [new PeerTitle({peerId: action.channel_id.toPeerId(true)}).element]));\r\n        } else {\r\n          s.append(this.appMessagesManager.wrapMessageActionTextNew(message));\r\n        }\r\n      }\r\n      bubbleContainer.append(s);\r\n\r\n      if(updatePosition) {\r\n        this.renderMessagesQueue(message, bubble, reverse, loadPromises);\r\n\r\n        if(message.pFlags.is_single) { // * Ignore 'Discussion started'\r\n          bubble.classList.add('is-group-last');\r\n        }\r\n      }\r\n\r\n      return bubble;\r\n    }\r\n\r\n    let messageMedia: MessageMedia = isMessage && message.media;\r\n\r\n    let messageMessage: string, totalEntities: MessageEntity[];\r\n    if(isMessage) {\r\n      if((messageMedia as MessageMedia.messageMediaDocument)?.document && \r\n        !['video', 'gif'].includes(((messageMedia as MessageMedia.messageMediaDocument).document as MyDocument).type)) {\r\n        // * just filter these cases for documents caption\r\n      } else if(groupId && albumMustBeRenderedFull) {\r\n        const t = this.appMessagesManager.getAlbumText(groupId);\r\n        messageMessage = t.message;\r\n        //totalEntities = t.entities;\r\n        totalEntities = t.totalEntities;\r\n      } else if(((messageMedia as MessageMedia.messageMediaDocument)?.document as MyDocument)?.type !== 'sticker') {\r\n        messageMessage = message.message;\r\n        //totalEntities = message.entities;\r\n        totalEntities = message.totalEntities;\r\n      }\r\n    } else {\r\n      if(message.action._ === 'messageActionPhoneCall') {\r\n        messageMedia = {\r\n          _: 'messageMediaCall',\r\n          action: message.action\r\n        };\r\n      }\r\n    }\r\n    \r\n    /* let richText = RichTextProcessor.wrapRichText(messageMessage, {\r\n      entities: totalEntities\r\n    }); */\r\n    let richText = RichTextProcessor.wrapRichText(messageMessage, {\r\n      entities: totalEntities,\r\n      passEntities: this.passEntities\r\n    });\r\n\r\n    let canHaveTail = true;\r\n    let isStandaloneMedia = false;\r\n    let needToSetHTML = true;\r\n    if(totalEntities && !messageMedia) {\r\n      let emojiEntities = totalEntities.filter((e) => e._ === 'messageEntityEmoji');\r\n      let strLength = messageMessage.length;\r\n      let emojiStrLength = emojiEntities.reduce((acc, curr) => acc + curr.length, 0);\r\n      \r\n      if(emojiStrLength === strLength && emojiEntities.length <= 3 && totalEntities.length === emojiEntities.length) {\r\n        if(rootScope.settings.emoji.big) {\r\n          let sticker = this.appStickersManager.getAnimatedEmojiSticker(messageMessage);\r\n          if(emojiEntities.length === 1 && !messageMedia && sticker) {\r\n            messageMedia = {\r\n              _: 'messageMediaDocument',\r\n              document: sticker\r\n            };\r\n          } else {\r\n            let attachmentDiv = document.createElement('div');\r\n            attachmentDiv.classList.add('attachment');\r\n            \r\n            attachmentDiv.innerHTML = richText;\r\n            \r\n            bubble.classList.add('emoji-' + emojiEntities.length + 'x');\r\n            \r\n            bubbleContainer.append(attachmentDiv);\r\n          }\r\n\r\n          bubble.classList.add('is-message-empty', 'emoji-big');\r\n          isStandaloneMedia = true;\r\n          canHaveTail = false;\r\n          needToSetHTML = false;\r\n        }\r\n        \r\n        bubble.classList.add('can-have-big-emoji');\r\n      }\r\n      \r\n      /* if(strLength === emojiStrLength) {\r\n        messageDiv.classList.add('emoji-only');\r\n        messageDiv.classList.add('message-empty');\r\n      } */\r\n    }\r\n\r\n    if(needToSetHTML) {\r\n      setInnerHTML(messageDiv, richText);\r\n    }\r\n\r\n    const timeSpan = MessageRender.setTime({\r\n      chatType: this.chat.type, \r\n      message\r\n    });\r\n    messageDiv.append(timeSpan);\r\n    bubbleContainer.prepend(messageDiv);\r\n    //bubble.prepend(timeSpan, messageDiv); // that's bad\r\n\r\n    if(isMessage && message.views) {\r\n      bubble.classList.add('channel-post');\r\n\r\n      if(!message.fwd_from?.saved_from_msg_id && this.chat.type !== 'pinned') {\r\n        const forward = document.createElement('div');\r\n        forward.classList.add('bubble-beside-button', 'forward', 'tgico-forward_filled');\r\n        bubbleContainer.prepend(forward);\r\n        bubble.classList.add('with-beside-button');\r\n      }\r\n  \r\n      if(!message.pFlags.is_outgoing && this.viewsObserver) {\r\n        this.viewsObserver.observe(bubble);\r\n      }\r\n    }\r\n\r\n    const replyMarkup = isMessage && message.reply_markup;\r\n    if(replyMarkup && replyMarkup._ === 'replyInlineMarkup' && replyMarkup.rows && replyMarkup.rows.length) {\r\n      const rows = replyMarkup.rows;\r\n\r\n      const containerDiv = document.createElement('div');\r\n      containerDiv.classList.add('reply-markup');\r\n      rows.forEach((row) => {\r\n        const buttons = row.buttons;\r\n        if(!buttons || !buttons.length) return;\r\n\r\n        const rowDiv = document.createElement('div');\r\n        rowDiv.classList.add('reply-markup-row');\r\n\r\n        buttons.forEach((button) => {\r\n          const text = RichTextProcessor.wrapRichText(button.text, {noLinks: true, noLinebreaks: true});\r\n\r\n          let buttonEl: HTMLButtonElement | HTMLAnchorElement;\r\n          \r\n          switch(button._) {\r\n            case 'keyboardButtonUrl': {\r\n              const r = RichTextProcessor.wrapRichText(' ', {\r\n                entities: [{\r\n                  _: 'messageEntityTextUrl',\r\n                  length: 1,\r\n                  offset: 0,\r\n                  url: button.url\r\n                }]\r\n              });\r\n\r\n              buttonEl = htmlToDocumentFragment(r).firstElementChild as HTMLAnchorElement;\r\n              buttonEl.classList.add('is-link', 'tgico');\r\n\r\n              break;\r\n            }\r\n\r\n            case 'keyboardButtonSwitchInline': {\r\n              buttonEl = document.createElement('button');\r\n              buttonEl.classList.add('is-switch-inline', 'tgico');\r\n              attachClickEvent(buttonEl, (e) => {\r\n                cancelEvent(e);\r\n\r\n                const botId = message.viaBotId || message.fromId;\r\n                let promise: Promise<PeerId>;\r\n                if(button.pFlags.same_peer) promise = Promise.resolve(this.peerId);\r\n                else promise = this.appInlineBotsManager.checkSwitchReturn(botId).then(peerId => {\r\n                  if(peerId) {\r\n                    return peerId;\r\n                  }\r\n                  \r\n                  return new Promise<PeerId>((resolve, reject) => {\r\n                    const popup = new PopupForward({\r\n                      [this.peerId]: []\r\n                    }, (peerId) => {\r\n                      resolve(peerId);\r\n                    }, true);\r\n\r\n                    popup.addEventListener('close', () => {\r\n                      reject();\r\n                    });\r\n                  });\r\n                });\r\n                \r\n                promise.then(peerId => {\r\n                  const threadId = this.peerId === peerId ? this.chat.threadId : undefined;\r\n                  this.appInlineBotsManager.switchInlineQuery(peerId, threadId, botId, button.query);\r\n                });\r\n              });\r\n              break;\r\n            }\r\n\r\n            default: {\r\n              buttonEl = document.createElement('button');\r\n              break;\r\n            }\r\n          }\r\n          \r\n          buttonEl.classList.add('reply-markup-button', 'rp');\r\n          buttonEl.insertAdjacentHTML('beforeend', text);\r\n\r\n          ripple(buttonEl);\r\n\r\n          rowDiv.append(buttonEl);\r\n        });\r\n\r\n        containerDiv.append(rowDiv);\r\n      });\r\n\r\n      attachClickEvent(containerDiv, (e) => {\r\n        let target = e.target as HTMLElement;\r\n        \r\n        if(!target.classList.contains('reply-markup-button')) target = findUpClassName(target, 'reply-markup-button');\r\n        if(!target || target.classList.contains('is-link') || target.classList.contains('is-switch-inline')) return;\r\n\r\n        cancelEvent(e);\r\n\r\n        const column = whichChild(target);\r\n        const row = rows[whichChild(target.parentElement)];\r\n\r\n        if(!row.buttons || !row.buttons[column]) {\r\n          this.log.warn('no such button', row, column, message);\r\n          return;\r\n        }\r\n\r\n        const button = row.buttons[column];\r\n        this.appInlineBotsManager.callbackButtonClick(this.peerId, message.mid, button);\r\n      });\r\n\r\n      canHaveTail = false;\r\n      bubble.classList.add('with-reply-markup');\r\n      contentWrapper.append(containerDiv);\r\n    }\r\n    \r\n    const isOutgoing = message.pFlags.is_outgoing/*  && this.peerId !== rootScope.myId */;\r\n    if(our) {\r\n      if(message.pFlags.unread || isOutgoing) this.unreadOut.add(message.mid);\r\n      let status = '';\r\n      if(isOutgoing) status = 'is-sending';\r\n      else status = message.pFlags.unread || (message as Message.message).pFlags.is_scheduled ? 'is-sent' : 'is-read';\r\n      bubble.classList.add(status);\r\n    }\r\n\r\n    if(isOutgoing) {\r\n      bubble.classList.add('is-outgoing');\r\n    }\r\n\r\n    const messageWithReplies = isMessage && this.appMessagesManager.getMessageWithReplies(message);\r\n    const withReplies = !!messageWithReplies && message.mid > 0;\r\n\r\n    if(withReplies) {\r\n      bubble.classList.add('with-replies');\r\n    }\r\n\r\n    const fwdFrom = isMessage && message.fwd_from;\r\n    const fwdFromId = isMessage && message.fwdFromId;\r\n\r\n    const isOut = our && (!fwdFrom || this.peerId !== rootScope.myId);\r\n    let nameContainer: HTMLElement = bubbleContainer;\r\n\r\n    const canHideNameIfMedia = !message.viaBotId && (message.fromId === rootScope.myId || !message.pFlags.out);\r\n\r\n    // media\r\n    if(messageMedia/*  && messageMedia._ === 'messageMediaPhoto' */) {\r\n      let attachmentDiv = document.createElement('div');\r\n      attachmentDiv.classList.add('attachment');\r\n      \r\n      if(!messageMessage) {\r\n        bubble.classList.add('is-message-empty');\r\n      }\r\n      \r\n      let processingWebPage = false;\r\n      \r\n      /* if(isMessage)  */switch(messageMedia._) {\r\n        case 'messageMediaPhoto': {\r\n          const photo = messageMedia.photo;\r\n          ////////this.log('messageMediaPhoto', photo);\r\n\r\n          if(!messageMessage) {\r\n            canHaveTail = false;\r\n          }\r\n          \r\n          if(canHideNameIfMedia) {\r\n            bubble.classList.add('hide-name');  \r\n          }\r\n\r\n          bubble.classList.add('photo');\r\n          \r\n          const storage = this.appMessagesManager.groupedMessagesStorage[groupId];\r\n          if(groupId && storage.size !== 1 && albumMustBeRenderedFull) {\r\n            bubble.classList.add('is-album', 'is-grouped');\r\n            wrapAlbum({\r\n              groupId: groupId, \r\n              attachmentDiv,\r\n              middleware: this.getMiddleware(),\r\n              isOut: our,\r\n              lazyLoadQueue: this.lazyLoadQueue,\r\n              chat: this.chat,\r\n              loadPromises,\r\n              autoDownload: this.chat.autoDownload,\r\n            });\r\n            \r\n            break;\r\n          }\r\n          \r\n          const withTail = !IS_ANDROID && canHaveTail && !withReplies && USE_MEDIA_TAILS;\r\n          if(withTail) bubble.classList.add('with-media-tail');\r\n          wrapPhoto({\r\n            photo: photo as Photo.photo, \r\n            message,\r\n            container: attachmentDiv,\r\n            withTail, \r\n            isOut, \r\n            lazyLoadQueue: this.lazyLoadQueue,\r\n            middleware: this.getMiddleware(),\r\n            loadPromises,\r\n            autoDownloadSize: this.chat.autoDownload.photo,\r\n          });\r\n\r\n          break;\r\n        }\r\n        \r\n        case 'messageMediaWebPage': {\r\n          processingWebPage = true;\r\n          \r\n          let webpage: WebPage = messageMedia.webpage;\r\n          ////////this.log('messageMediaWebPage', webpage);\r\n          if(webpage._ !== 'webPage') {\r\n            break;\r\n          } \r\n          \r\n          bubble.classList.add('webpage');\r\n          \r\n          let box = document.createElement('div');\r\n          box.classList.add('web');\r\n          \r\n          let quote = document.createElement('div');\r\n          quote.classList.add('quote');\r\n\r\n          let previewResizer: HTMLDivElement, preview: HTMLDivElement;\r\n          const photo: Photo.photo = webpage.photo as any;\r\n          if(photo || webpage.document) {\r\n            previewResizer = document.createElement('div');\r\n            previewResizer.classList.add('preview-resizer');\r\n            preview = document.createElement('div');\r\n            preview.classList.add('preview');\r\n            previewResizer.append(preview);\r\n          }\r\n          \r\n          const doc = webpage.document as MyDocument;\r\n          if(doc) {\r\n            if(doc.type === 'gif' || doc.type === 'video' || doc.type === 'round') {\r\n              //if(doc.size <= 20e6) {\r\n              const mediaSize = doc.type === 'round' ? mediaSizes.active.round : mediaSizes.active.webpage;\r\n              if(doc.type === 'round') {\r\n                bubble.classList.add('round');\r\n                preview.classList.add('is-round');\r\n              } else {\r\n                bubble.classList.add('video');\r\n              }\r\n              wrapVideo({\r\n                doc, \r\n                container: preview, \r\n                message: message as Message.message, \r\n                boxWidth: mediaSize.width,\r\n                boxHeight: mediaSize.height,\r\n                lazyLoadQueue: this.lazyLoadQueue,\r\n                middleware: this.getMiddleware(),\r\n                isOut,\r\n                group: CHAT_ANIMATION_GROUP,\r\n                loadPromises,\r\n                autoDownload: this.chat.autoDownload,\r\n              });\r\n              //}\r\n            } else {\r\n              const docDiv = wrapDocument({\r\n                message,\r\n                autoDownloadSize: this.chat.autoDownload.file,\r\n                lazyLoadQueue: this.lazyLoadQueue,\r\n                loadPromises\r\n              });\r\n              preview.append(docDiv);\r\n              preview.classList.add('preview-with-document');\r\n              //messageDiv.classList.add((webpage.type || 'document') + '-message');\r\n              //doc = null;\r\n            }\r\n          }\r\n          \r\n          let quoteTextDiv = document.createElement('div');\r\n          quoteTextDiv.classList.add('quote-text');\r\n\r\n          if(previewResizer) {\r\n            quoteTextDiv.append(previewResizer);\r\n          }\r\n\r\n          let t: HTMLElement;\r\n          if(webpage.site_name) {\r\n            const html = RichTextProcessor.wrapRichText(webpage.url);\r\n            const a: HTMLAnchorElement = htmlToDocumentFragment(html).firstElementChild as any;\r\n            a.classList.add('webpage-name');\r\n            const strong = document.createElement('strong');\r\n            setInnerHTML(strong, RichTextProcessor.wrapEmojiText(webpage.site_name));\r\n            a.textContent = '';\r\n            a.append(strong);\r\n            quoteTextDiv.append(a);\r\n            t = a;\r\n          }\r\n\r\n          if(webpage.rTitle) {\r\n            let titleDiv = document.createElement('div');\r\n            titleDiv.classList.add('title');\r\n            const strong = document.createElement('strong');\r\n            setInnerHTML(strong, webpage.rTitle);\r\n            titleDiv.append(strong);\r\n            quoteTextDiv.append(titleDiv);\r\n            t = titleDiv;\r\n          }\r\n\r\n          if(webpage.rDescription) {\r\n            let textDiv = document.createElement('div');\r\n            textDiv.classList.add('text');\r\n            setInnerHTML(textDiv, webpage.rDescription);\r\n            quoteTextDiv.append(textDiv);\r\n            t = textDiv;\r\n          }\r\n\r\n          /* if(t) {\r\n            t.append(timeSpan);\r\n          } else {\r\n            box.classList.add('no-text');\r\n          } */\r\n\r\n          quote.append(quoteTextDiv);\r\n\r\n          if(photo && !doc) {\r\n            bubble.classList.add('photo');\r\n\r\n            const size: PhotoSize.photoSize = photo.sizes[photo.sizes.length - 1] as any;\r\n            let isSquare = false;\r\n            if(size.w === size.h && t) {\r\n              bubble.classList.add('is-square-photo');\r\n              isSquare = true;\r\n              this.appPhotosManager.setAttachmentSize(photo, preview, 48, 48, false);\r\n\r\n              /* if(t) {\r\n                t.append(timeSpan);\r\n              } */\r\n            } else if(size.h > size.w) {\r\n              bubble.classList.add('is-vertical-photo');\r\n            }\r\n\r\n            wrapPhoto({\r\n              photo, \r\n              message, \r\n              container: preview, \r\n              boxWidth: isSquare ? 0 : mediaSizes.active.webpage.width, \r\n              boxHeight: isSquare ? 0 : mediaSizes.active.webpage.height, \r\n              isOut, \r\n              lazyLoadQueue: this.lazyLoadQueue, \r\n              middleware: this.getMiddleware(),\r\n              loadPromises,\r\n              withoutPreloader: isSquare,\r\n              autoDownloadSize: this.chat.autoDownload.photo,\r\n            });\r\n          }\r\n          \r\n          box.append(quote);\r\n          \r\n          //bubble.prepend(box);\r\n          // if(timeSpan.parentElement === messageDiv) {\r\n            messageDiv.insertBefore(box, timeSpan);\r\n          // } else {\r\n          //   messageDiv.append(box);\r\n          // }\r\n          \r\n          //this.log('night running', bubble.scrollHeight);\r\n          \r\n          break;\r\n        }\r\n        \r\n        case 'messageMediaDocument': {\r\n          const doc = messageMedia.document as MyDocument;\r\n\r\n          //this.log('messageMediaDocument', doc, bubble);\r\n          \r\n          if(doc.sticker/*  && doc.size <= 1e6 */) {\r\n            bubble.classList.add('sticker');\r\n            canHaveTail = false;\r\n            isStandaloneMedia = true;\r\n            \r\n            if(doc.animated) {\r\n              bubble.classList.add('sticker-animated');\r\n            }\r\n            \r\n            const sizes = mediaSizes.active;\r\n            const size = bubble.classList.contains('emoji-big') ? sizes.emojiSticker : (doc.animated ? sizes.animatedSticker : sizes.staticSticker);\r\n            this.appPhotosManager.setAttachmentSize(doc, attachmentDiv, size.width, size.height);\r\n            //let preloader = new ProgressivePreloader(attachmentDiv, false);\r\n            bubbleContainer.style.minWidth = attachmentDiv.style.width;\r\n            bubbleContainer.style.minHeight = attachmentDiv.style.height;\r\n            //appPhotosManager.setAttachmentSize(doc, bubble);\r\n            wrapSticker({\r\n              doc, \r\n              div: attachmentDiv,\r\n              middleware: this.getMiddleware(),\r\n              lazyLoadQueue: this.lazyLoadQueue,\r\n              group: CHAT_ANIMATION_GROUP,\r\n              //play: !!message.pending || !multipleRender,\r\n              play: true,\r\n              loop: true,\r\n              emoji: bubble.classList.contains('emoji-big') ? messageMessage : undefined,\r\n              withThumb: true,\r\n              loadPromises\r\n            });\r\n          } else if(doc.type === 'video' || doc.type === 'gif' || doc.type === 'round'/*  && doc.size <= 20e6 */) {\r\n            //this.log('never get free 2', doc);\r\n\r\n            const isRound = doc.type === 'round';\r\n            if(isRound) {\r\n              isStandaloneMedia = true;\r\n            }\r\n\r\n            if(isRound || !messageMessage) {\r\n              canHaveTail = false;\r\n            }\r\n\r\n            if(canHideNameIfMedia) {\r\n              bubble.classList.add('hide-name');\r\n            }\r\n            \r\n            bubble.classList.add(isRound ? 'round' : 'video');\r\n            const storage = this.appMessagesManager.groupedMessagesStorage[groupId];\r\n            if(groupId && storage.size !== 1 && albumMustBeRenderedFull) {\r\n              bubble.classList.add('is-album', 'is-grouped');\r\n  \r\n              wrapAlbum({\r\n                groupId: groupId, \r\n                attachmentDiv,\r\n                middleware: this.getMiddleware(),\r\n                isOut: our,\r\n                lazyLoadQueue: this.lazyLoadQueue,\r\n                chat: this.chat,\r\n                loadPromises,\r\n                autoDownload: this.chat.autoDownload,\r\n              });\r\n            } else {\r\n              const withTail = !IS_ANDROID && !IS_APPLE && !isRound && canHaveTail && !withReplies && USE_MEDIA_TAILS;\r\n              if(withTail) bubble.classList.add('with-media-tail');\r\n              wrapVideo({\r\n                doc, \r\n                container: attachmentDiv, \r\n                message: message as Message.message, \r\n                boxWidth: mediaSizes.active.regular.width,\r\n                boxHeight: mediaSizes.active.regular.height, \r\n                withTail, \r\n                isOut,\r\n                lazyLoadQueue: this.lazyLoadQueue,\r\n                middleware: this.getMiddleware(),\r\n                group: CHAT_ANIMATION_GROUP,\r\n                loadPromises,\r\n                autoDownload: this.chat.autoDownload,\r\n                searchContext: isRound ? {\r\n                  peerId: this.peerId,\r\n                  inputFilter: {_: 'inputMessagesFilterRoundVoice'},\r\n                  threadId: this.chat.threadId,\r\n                  useSearch: !(message as Message.message).pFlags.is_scheduled,\r\n                  isScheduled: (message as Message.message).pFlags.is_scheduled\r\n                } : undefined,\r\n              });\r\n            }\r\n          } else {\r\n\r\n            const newNameContainer = wrapGroupedDocuments({\r\n              albumMustBeRenderedFull,\r\n              message,\r\n              bubble,\r\n              messageDiv,\r\n              chat: this.chat,\r\n              loadPromises,\r\n              autoDownloadSize: this.chat.autoDownload.file,\r\n              lazyLoadQueue: this.lazyLoadQueue,\r\n              searchContext: doc.type === 'voice' || doc.type === 'audio' ? {\r\n                peerId: this.peerId,\r\n                inputFilter: {_: doc.type === 'voice' ? 'inputMessagesFilterRoundVoice' : 'inputMessagesFilterMusic'},\r\n                threadId: this.chat.threadId,\r\n                useSearch: !(message as Message.message).pFlags.is_scheduled,\r\n                isScheduled: (message as Message.message).pFlags.is_scheduled\r\n              } : undefined,\r\n            });\r\n\r\n            if(newNameContainer) {\r\n              nameContainer = newNameContainer;\r\n            }\r\n\r\n            const lastContainer = messageDiv.lastElementChild.querySelector('.document-message, .document-size, .audio');\r\n            // lastContainer && lastContainer.append(timeSpan.cloneNode(true));\r\n            lastContainer && lastContainer.append(timeSpan);\r\n\r\n            bubble.classList.remove('is-message-empty');\r\n            messageDiv.classList.add((!(['photo', 'pdf'] as MyDocument['type'][]).includes(doc.type) ? doc.type || 'document' : 'document') + '-message');\r\n            processingWebPage = true;\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n        case 'messageMediaCall': {\r\n          const action = messageMedia.action;\r\n          const div = document.createElement('div');\r\n          div.classList.add('bubble-call', action.pFlags.video ? 'tgico-videocamera' : 'tgico-phone');\r\n\r\n          const type: CallType = action.pFlags.video ? 'video' : 'voice';\r\n          div.dataset.type = type;\r\n\r\n          const title = document.createElement('div');\r\n          title.classList.add('bubble-call-title');\r\n\r\n          _i18n(title, isOut ? \r\n            (action.pFlags.video ? 'CallMessageVideoOutgoing' : 'CallMessageOutgoing') : \r\n            (action.pFlags.video ? 'CallMessageVideoIncoming' : 'CallMessageIncoming'));\r\n\r\n          const subtitle = document.createElement('div');\r\n          subtitle.classList.add('bubble-call-subtitle');\r\n\r\n          if(action.duration !== undefined) {\r\n            subtitle.append(formatCallDuration(action.duration));\r\n          } else {\r\n            let langPackKey: LangPackKey;\r\n            switch(action.reason._) {\r\n              case 'phoneCallDiscardReasonBusy':\r\n                langPackKey = 'Call.StatusBusy';\r\n                break;\r\n              case 'phoneCallDiscardReasonMissed':\r\n                langPackKey = 'Chat.Service.Call.Missed';\r\n                break;\r\n              // case 'phoneCallDiscardReasonHangup':\r\n              default:\r\n                langPackKey = 'Chat.Service.Call.Cancelled';\r\n                break;\r\n            }\r\n\r\n            subtitle.classList.add('is-reason');\r\n            _i18n(subtitle, langPackKey);\r\n          }\r\n\r\n          subtitle.classList.add('tgico', 'arrow-' + (action.duration !== undefined ? 'green' : 'red'));\r\n\r\n          div.append(title, subtitle);\r\n\r\n          processingWebPage = true;\r\n\r\n          bubble.classList.remove('is-message-empty');\r\n          messageDiv.classList.add('call-message');\r\n          messageDiv.append(div);\r\n\r\n          break;\r\n        }\r\n\r\n        case 'messageMediaContact': {\r\n          //this.log('wrapping contact', message);\r\n\r\n          const contact = messageMedia;\r\n          const contactDiv = document.createElement('div');\r\n          contactDiv.classList.add('contact');\r\n          contactDiv.dataset.peerId = '' + contact.user_id;\r\n\r\n          processingWebPage = true;\r\n\r\n          const texts = [];\r\n          if(contact.first_name) texts.push(RichTextProcessor.wrapEmojiText(contact.first_name));\r\n          if(contact.last_name) texts.push(RichTextProcessor.wrapEmojiText(contact.last_name));\r\n\r\n          contactDiv.innerHTML = `\r\n            <div class=\"contact-details\">\r\n              <div class=\"contact-name\">${texts.join(' ')}</div>\r\n              <div class=\"contact-number\">${contact.phone_number ? '+' + formatPhoneNumber(contact.phone_number).formatted : 'Unknown phone number'}</div>\r\n            </div>`;\r\n\r\n          const avatarElem = new AvatarElement();\r\n          avatarElem.lazyLoadQueue = this.lazyLoadQueue;\r\n          avatarElem.setAttribute('peer', '' + contact.user_id.toPeerId());\r\n          avatarElem.classList.add('contact-avatar', 'avatar-54');\r\n\r\n          contactDiv.prepend(avatarElem);\r\n\r\n          bubble.classList.remove('is-message-empty');\r\n          messageDiv.classList.add('contact-message');\r\n          messageDiv.append(contactDiv);\r\n\r\n          break;\r\n        }\r\n\r\n        case 'messageMediaPoll': {\r\n          bubble.classList.remove('is-message-empty');\r\n          \r\n          const pollElement = wrapPoll(message);\r\n          messageDiv.prepend(pollElement);\r\n          messageDiv.classList.add('poll-message');\r\n\r\n          break;\r\n        }\r\n        \r\n        default:\r\n          bubble.classList.remove('is-message-empty');\r\n          messageDiv.append(i18n(UNSUPPORTED_LANG_PACK_KEY), timeSpan);\r\n          this.log.warn('unrecognized media type:', messageMedia._, message);\r\n          break;\r\n      }\r\n      \r\n      if(!processingWebPage) {\r\n        bubbleContainer.append(attachmentDiv);\r\n      }\r\n\r\n      /* if(bubble.classList.contains('is-message-empty') && (bubble.classList.contains('photo') || bubble.classList.contains('video'))) {\r\n        bubble.classList.add('no-tail');\r\n\r\n        if(!bubble.classList.contains('with-media-tail')) {\r\n          bubble.classList.add('use-border-radius');\r\n        }\r\n      } */\r\n    }\r\n\r\n    if(isStandaloneMedia) {\r\n      bubble.classList.add('just-media');\r\n    }\r\n\r\n    if(this.chat.selection.isSelecting) {\r\n      this.chat.selection.toggleElementCheckbox(bubble, true);\r\n    }\r\n\r\n    let savedFrom = '';\r\n    \r\n    // const needName = ((peerId.isAnyChat() && (peerId !== message.fromId || our)) && message.fromId !== rootScope.myId) || message.viaBotId;\r\n    const needName = (message.fromId !== rootScope.myId && this.appPeersManager.isAnyGroup(peerId)) || message.viaBotId || (message as Message.message).pFlags.sponsored;\r\n    if(needName || fwdFrom || message.reply_to_mid) { // chat\r\n      let title: HTMLElement | DocumentFragment;\r\n      let titleVia: typeof title;\r\n\r\n      const isForwardFromChannel = message.from_id && message.from_id._ === 'peerChannel' && message.fromId === fwdFromId;\r\n      \r\n      let isHidden = fwdFrom && !fwdFrom.from_id;\r\n      if(message.viaBotId) {\r\n        titleVia = document.createElement('span');\r\n        titleVia.innerText = '@' + this.appUsersManager.getUser(message.viaBotId).username;\r\n        titleVia.classList.add('peer-title');\r\n        bubble.classList.add('must-have-name');\r\n      }\r\n      \r\n      if(isHidden) {\r\n        ///////this.log('message to render hidden', message);\r\n        title = document.createElement('span');\r\n        title.innerHTML = RichTextProcessor.wrapEmojiText(fwdFrom.from_name);\r\n        title.classList.add('peer-title');\r\n        //title = fwdFrom.from_name;\r\n        bubble.classList.add('hidden-profile');\r\n      } else {\r\n        title = new PeerTitle({peerId: fwdFromId || message.fromId}).element;\r\n      }\r\n\r\n      if(message.reply_to_mid && message.reply_to_mid !== this.chat.threadId && isMessage) {\r\n        MessageRender.setReply({\r\n          chat: this.chat,\r\n          bubble,\r\n          bubbleContainer,\r\n          message\r\n        });\r\n      }\r\n      \r\n      //this.log(title);\r\n      \r\n      let nameDiv: HTMLElement;\r\n      if((fwdFromId || fwdFrom)) {\r\n        if(this.peerId !== rootScope.myId && !isForwardFromChannel) {\r\n          bubble.classList.add('forwarded');\r\n        }\r\n        \r\n        if(message.savedFrom) {\r\n          savedFrom = message.savedFrom;\r\n          title.dataset.savedFrom = savedFrom;\r\n        }\r\n        \r\n        nameDiv = document.createElement('div');\r\n        title.dataset.peerId = '' + fwdFromId;\r\n\r\n        if((this.peerId === rootScope.myId || this.peerId === REPLIES_PEER_ID || isForwardFromChannel) && !isStandaloneMedia) {\r\n          nameDiv.style.color = this.appPeersManager.getPeerColorById(fwdFromId, false);\r\n          nameDiv.append(title);\r\n        } else {\r\n          /* const fromTitle = message.fromId === this.myID || appPeersManager.isBroadcast(fwdFromId || message.fromId) ? '' : `<div class=\"name\" data-peer-id=\"${message.fromId}\" style=\"color: ${appPeersManager.getPeerColorByID(message.fromId, false)};\">${appPeersManager.getPeerTitle(message.fromId)}</div>`;\r\n          nameDiv.innerHTML = fromTitle + 'Forwarded from ' + title; */\r\n          const args: FormatterArguments = [title];\r\n          if(isStandaloneMedia) {\r\n            args.unshift(document.createElement('br'));\r\n          }\r\n          nameDiv.append(i18n('ForwardedFrom', [args]));\r\n        }\r\n      } else if(!message.viaBotId) {\r\n        if(!isStandaloneMedia && needName) {\r\n          nameDiv = document.createElement('div');\r\n          nameDiv.append(title);\r\n\r\n          if(!our) {\r\n            nameDiv.style.color = this.appPeersManager.getPeerColorById(message.fromId, false);\r\n          }\r\n\r\n          nameDiv.dataset.peerId = '' + message.fromId;\r\n        } else /* if(!message.reply_to_mid) */ {\r\n          bubble.classList.add('hide-name');\r\n        }\r\n      }\r\n\r\n      if(message.viaBotId) {\r\n        if(!nameDiv) {\r\n          nameDiv = document.createElement('div');\r\n        } else {\r\n          nameDiv.append(' ');\r\n        }\r\n\r\n        const span = document.createElement('span');\r\n        span.append(i18n('ViaBot'), ' ', titleVia);\r\n        span.classList.add('is-via');\r\n\r\n        nameDiv.append(span);\r\n      }\r\n\r\n      if(nameDiv) {\r\n        nameDiv.classList.add('name');\r\n        nameContainer.append(nameDiv);\r\n      }\r\n\r\n      const needAvatar = this.chat.isAnyGroup() && !isOut;\r\n      if(needAvatar) {\r\n        let avatarElem = new AvatarElement();\r\n        avatarElem.lazyLoadQueue = this.lazyLoadQueue;\r\n        avatarElem.classList.add('user-avatar', 'avatar-40');\r\n        avatarElem.loadPromises = loadPromises;\r\n\r\n        if(!fwdFromId && fwdFrom && fwdFrom.from_name) {\r\n          avatarElem.setAttribute('peer-title', /* '🔥 FF 🔥' */fwdFrom.from_name);\r\n        }\r\n\r\n        avatarElem.setAttribute('peer', '' + (((fwdFrom && (this.peerId === rootScope.myId || this.peerId === REPLIES_PEER_ID)) || isForwardFromChannel ? fwdFromId : message.fromId) || NULL_PEER_ID));\r\n        //avatarElem.update();\r\n        \r\n        //this.log('exec loadDialogPhoto', message);\r\n\r\n        contentWrapper.append(avatarElem);\r\n      }\r\n    } else {\r\n      bubble.classList.add('hide-name');\r\n    }\r\n\r\n    if(this.chat.type === 'pinned') {\r\n      savedFrom = `${this.chat.peerId}_${message.mid}`;\r\n    }\r\n\r\n    const isThreadStarter = messageWithReplies && messageWithReplies.mid === this.chat.threadId;\r\n    if(isThreadStarter) {\r\n      bubble.classList.add('is-thread-starter', 'is-group-last');\r\n    }\r\n\r\n    if(savedFrom && (this.chat.type === 'pinned' || fwdFrom.saved_from_msg_id) && this.peerId !== REPLIES_PEER_ID) {\r\n      const goto = document.createElement('div');\r\n      goto.classList.add('bubble-beside-button', 'goto-original', 'tgico-arrow_next');\r\n      bubbleContainer.append(goto);\r\n      bubble.dataset.savedFrom = savedFrom;\r\n      bubble.classList.add('with-beside-button');\r\n    }\r\n    \r\n    bubble.classList.add(isOut ? 'is-out' : 'is-in');\r\n    if(updatePosition) {\r\n      this.renderMessagesQueue(message, bubble, reverse, loadPromises);\r\n    }\r\n\r\n    if(withReplies) {\r\n      const isFooter = MessageRender.renderReplies({\r\n        bubble,\r\n        bubbleContainer,\r\n        message: messageWithReplies,\r\n        messageDiv,\r\n        loadPromises,\r\n        lazyLoadQueue: this.lazyLoadQueue\r\n      });\r\n\r\n      if(isFooter) {\r\n        canHaveTail = true;\r\n      }\r\n    }\r\n\r\n    if(isMessage) {\r\n      this.appendReactionsElementToBubble(bubble, message);\r\n    }\r\n\r\n    /* if(isMessage) {\r\n      const reactionHover = document.createElement('div');\r\n      reactionHover.classList.add('bubble-reaction-hover');\r\n      contentWrapper.append(reactionHover);\r\n    } */\r\n\r\n    if(canHaveTail) {\r\n      bubble.classList.add('can-have-tail');\r\n\r\n      bubbleContainer.append(generateTail());\r\n    }\r\n\r\n    return bubble;\r\n  }\r\n\r\n  private appendReactionsElementToBubble(bubble: HTMLElement, message: Message.message, changedResults?: ReactionCount[]) {\r\n    if(this.peerId.isUser()) {\r\n      return;\r\n    }\r\n\r\n    const reactionsMessage = this.appMessagesManager.getGroupsFirstMessage(message);\r\n    if(!reactionsMessage.reactions || !reactionsMessage.reactions.results.length) {\r\n      return;\r\n    }\r\n\r\n    // message = this.appMessagesManager.getMessageWithReactions(message);\r\n\r\n    const reactionsElement = new ReactionsElement();\r\n    reactionsElement.init(reactionsMessage, 'block');\r\n    reactionsElement.render(changedResults);\r\n\r\n    if(bubble.classList.contains('is-message-empty')) {\r\n      bubble.querySelector('.bubble-content-wrapper').append(reactionsElement);\r\n    } else {\r\n      const messageDiv = bubble.querySelector('.message');\r\n      if(bubble.classList.contains('is-multiple-documents')) {\r\n        const documentContainer = messageDiv.lastElementChild as HTMLElement;\r\n        let documentMessageDiv = documentContainer.querySelector('.document-message');\r\n\r\n        let timeSpan: HTMLElement = documentMessageDiv && documentMessageDiv.querySelector('.time');\r\n        if(!timeSpan) {\r\n          timeSpan = MessageRender.setTime({\r\n            chatType: this.chat.type,\r\n            message\r\n          });\r\n        }\r\n        \r\n        reactionsElement.append(timeSpan);\r\n\r\n        if(!documentMessageDiv) {\r\n          documentMessageDiv = document.createElement('div');\r\n          documentMessageDiv.classList.add('document-message');\r\n          documentContainer.querySelector('.document-wrapper').prepend(documentMessageDiv);\r\n        }\r\n\r\n        documentMessageDiv.append(reactionsElement);\r\n      } else {\r\n        const timeSpan = Array.from(bubble.querySelectorAll('.time')).pop();\r\n        reactionsElement.append(timeSpan);\r\n        \r\n        messageDiv.append(reactionsElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  private safeRenderMessage(message: any, reverse?: boolean, multipleRender?: boolean, bubble?: HTMLElement, updatePosition?: boolean) {\r\n    try {\r\n      return this.renderMessage(message, reverse, multipleRender, bubble, updatePosition);\r\n    } catch(err) {\r\n      this.log.error('renderMessage error:', err);\r\n    }\r\n  }\r\n\r\n  public async performHistoryResult(history: (Message.message | Message.messageService | number)[], reverse: boolean, isBackLimit: boolean, additionMsgId?: number) {\r\n    // commented bot getProfile in getHistory!\r\n    // if(!history/* .filter((id: number) => id > 0) */.length) {\r\n    //   if(!isBackLimit) {\r\n    //     this.scrollable.loadedAll.top = true;\r\n\r\n    //     /* if(this.chat.type === 'discussion') {\r\n    //       const serviceStartMessageId = this.appMessagesManager.threadsServiceMessagesIdsStorage[this.peerId + '_' + this.chat.threadId];\r\n    //       if(serviceStartMessageId) history.push(serviceStartMessageId);\r\n    //       history.push(this.chat.threadId);\r\n    //     } */\r\n    //   } else {\r\n    //     this.scrollable.loadedAll.bottom = true;\r\n    //   }\r\n    // }\r\n\r\n    history = history.slice(); // need\r\n\r\n    if(additionMsgId) {\r\n      history.unshift(additionMsgId);\r\n    }\r\n\r\n    /* if(testScroll && additionMsgID) {\r\n      for(let i = 0; i < 3; ++i) {\r\n        let _history = history.slice();\r\n        setTimeout(() => {\r\n          this.performHistoryResult(_history, reverse, isBackLimit, 0, resetPromises);\r\n        }, 0);\r\n      }\r\n    } */\r\n\r\n    //console.time('appImManager render history');\r\n\r\n    //await new Promise((resolve) => setTimeout(resolve, 1e3));\r\n\r\n    /* if(DEBUG) {\r\n      this.log('performHistoryResult: will render some messages:', history.length, this.isHeavyAnimationInProgress, this.messagesQueuePromise);\r\n    } */\r\n\r\n    let scrollSaver: ScrollSaver;\r\n    this.messagesQueueOnRender = () => {\r\n      scrollSaver = new ScrollSaver(this.scrollable, reverse);\r\n      scrollSaver.save();\r\n    };\r\n\r\n    if(this.needReflowScroll) {\r\n      reflowScrollableElement(this.scrollable.container);\r\n      this.needReflowScroll = false;\r\n    }\r\n\r\n    const cb = (mid: typeof history[0]) => {\r\n      const message: Message.message | Message.messageService = typeof(mid) === 'number' ? this.chat.getMessage(mid) : mid;\r\n      if(message.pFlags.local) {\r\n        this.processLocalMessageRender(message);\r\n      } else {\r\n        this.safeRenderMessage(message, reverse, true);\r\n      }\r\n    };\r\n\r\n    const length = history.length;\r\n    if(reverse) for(let i = 0; i < length; ++i) cb(history[i]);\r\n    else for(let i = length - 1; i >= 0; --i) cb(history[i]);\r\n\r\n    if(this.chat.type !== 'scheduled') {\r\n      const historyStorage = this.appMessagesManager.getHistoryStorage(this.peerId, this.chat.threadId);\r\n      const firstSlice = historyStorage.history.first;\r\n      const lastSlice = historyStorage.history.last;\r\n      if(firstSlice.isEnd(SliceEnd.Bottom) && (!firstSlice.length || history.includes(firstSlice[0]))) {\r\n        this.setLoaded('bottom', true, false);\r\n      }\r\n      \r\n      if(lastSlice.isEnd(SliceEnd.Top) && (!lastSlice.length || history.includes(lastSlice[lastSlice.length - 1]))) {\r\n        this.setLoaded('top', true, false);\r\n      }\r\n    } else {\r\n      this.setLoaded('top', true);\r\n      this.setLoaded('bottom', true);\r\n    }\r\n\r\n    await this.messagesQueuePromise;//.then(() => new Promise(resolve => setTimeout(resolve, 100)))\r\n\r\n    if(this.scrollable.loadedAll.top && this.messagesQueueOnRenderAdditional) {\r\n      this.messagesQueueOnRenderAdditional();\r\n\r\n      if(this.messagesQueueOnRenderAdditional) {\r\n        this.messagesQueueOnRenderAdditional();\r\n      }\r\n    }\r\n\r\n    if(scrollSaver) {\r\n      scrollSaver.restore(history.length === 1 && !reverse ? false : true);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  onDatePick = (timestamp: number) => {\r\n    const peerId = this.peerId;\r\n    this.appMessagesManager.requestHistory(peerId, 0, 2, -1, timestamp, this.chat.threadId).then(history => {\r\n      if(!history?.messages?.length) {\r\n        this.log.error('no history!');\r\n        return;\r\n      } else if(this.peerId !== peerId) {\r\n        return;\r\n      }\r\n\r\n      this.chat.setMessageId((history.messages[0] as MyMessage).mid);\r\n      //console.log('got history date:', history);\r\n    });\r\n  };\r\n\r\n  public requestHistory(maxId: number, loadCount: number, backLimit: number) {\r\n    //const middleware = this.getMiddleware();\r\n    if(this.chat.type === 'chat' || this.chat.type === 'discussion') {\r\n      return this.appMessagesManager.getHistory(this.peerId, maxId, loadCount, backLimit, this.chat.threadId);\r\n    } else if(this.chat.type === 'pinned') {\r\n      const promise = this.appMessagesManager.getSearch({\r\n        peerId: this.peerId, \r\n        inputFilter: {_: 'inputMessagesFilterPinned'}, \r\n        maxId, \r\n        limit: loadCount, \r\n        backLimit\r\n      })\r\n      .then(value => ({history: value.history.map(m => m.mid)}));\r\n\r\n      return promise;\r\n    } else if(this.chat.type === 'scheduled') {\r\n      return this.appMessagesManager.getScheduledMessages(this.peerId).then(mids => {\r\n        // this.setLoaded('top', true);\r\n        // this.setLoaded('bottom', true);\r\n        return {history: mids.slice().reverse()};\r\n      });\r\n    }\r\n  }\r\n\r\n  private async animateAsLadder(additionMsgId: number, additionMsgIds: number[], isAdditionRender: boolean, backLimit: number, maxId: number) {\r\n    /* const middleware = this.getMiddleware();\r\n    await this.ladderDeferred; */\r\n\r\n    if(this.chat.setPeerPromise && !this.resolveLadderAnimation) {\r\n      // @ts-ignore\r\n      this.resolveLadderAnimation = this.animateAsLadder.bind(this, additionMsgId, additionMsgIds, isAdditionRender, backLimit, maxId);\r\n      return;\r\n    }\r\n\r\n    /* if(!middleware()) {\r\n      return;\r\n    } */\r\n\r\n    if(!Object.keys(this.bubbles).length) {\r\n      return;\r\n    }\r\n\r\n    let sortedMids = getObjectKeysAndSort(this.bubbles, 'desc');\r\n\r\n    if(isAdditionRender && additionMsgIds.length) {\r\n      sortedMids = sortedMids.filter(mid => !additionMsgIds.includes(mid));\r\n    }\r\n\r\n    let targetMid: number;\r\n    if(backLimit) {\r\n      targetMid = maxId || Math.max(...sortedMids); // * on discussion enter\r\n    } else {\r\n      if(additionMsgId) {\r\n        targetMid = additionMsgId;\r\n      } else { // * if maxId === 0\r\n        targetMid = Math.max(...sortedMids);\r\n      }\r\n    }\r\n\r\n    const topIds = sortedMids.slice(sortedMids.findIndex(mid => targetMid > mid));\r\n    const middleIds = isAdditionRender ? [] : [targetMid];\r\n    const bottomIds = isAdditionRender ? [] : sortedMids.slice(0, sortedMids.findIndex(mid => targetMid >= mid)).reverse();\r\n    \r\n    if(DEBUG) {\r\n      this.log('getHistory: targeting mid:', targetMid, maxId, additionMsgId, \r\n        topIds.map(m => this.appMessagesIdsManager.getServerMessageId(m)), \r\n        bottomIds.map(m => this.appMessagesIdsManager.getServerMessageId(m)));\r\n    }\r\n\r\n    const setBubbles: HTMLElement[] = [];\r\n\r\n    this.chatInner.classList.add('zoom-fading');\r\n    const delay = isAdditionRender ? 10 : 40;\r\n    const offsetIndex = isAdditionRender ? 0 : 1;\r\n    const animateAsLadder = (mids: number[], offsetIndex = 0) => {\r\n      const animationPromise = deferredPromise<void>();\r\n      let lastMsDelay = 0;\r\n      mids.forEach((mid, idx) => {\r\n        if(!this.bubbles[mid] || this.skippedMids.has(mid)) {\r\n          this.log.warn('animateAsLadder: no bubble by mid:', mid);\r\n          return;\r\n        }\r\n\r\n        const contentWrapper = this.bubbles[mid].lastElementChild as HTMLElement;\r\n\r\n        lastMsDelay = ((idx + offsetIndex) || 0.1) * delay;\r\n        //lastMsDelay = (idx + offsetIndex) * delay;\r\n        //lastMsDelay = (idx || 0.1) * 1000;\r\n        \r\n        contentWrapper.classList.add('zoom-fade');\r\n        contentWrapper.style.transitionDelay = lastMsDelay + 'ms';\r\n\r\n        if(idx === (mids.length - 1)) {\r\n          const onTransitionEnd = (e: TransitionEvent) => {\r\n            if(e.target !== contentWrapper) {\r\n              return;\r\n            }\r\n\r\n            animationPromise.resolve();\r\n            contentWrapper.removeEventListener('transitionend', onTransitionEnd);\r\n          };\r\n\r\n          contentWrapper.addEventListener('transitionend', onTransitionEnd);\r\n        }\r\n        \r\n        //this.log('supa', bubble);\r\n\r\n        setBubbles.push(contentWrapper);\r\n      });\r\n\r\n      if(!mids.length) {\r\n        animationPromise.resolve();\r\n      }\r\n\r\n      return {lastMsDelay, animationPromise};\r\n    };\r\n\r\n    const topRes = animateAsLadder(topIds, offsetIndex);\r\n    const middleRes = animateAsLadder(middleIds);\r\n    const bottomRes = animateAsLadder(bottomIds, offsetIndex);\r\n    const promises = [topRes.animationPromise, middleRes.animationPromise, bottomRes.animationPromise];\r\n    const delays: number[] = [topRes.lastMsDelay, middleRes.lastMsDelay, bottomRes.lastMsDelay];\r\n\r\n    if(this.onAnimateLadder) {\r\n      await this.onAnimateLadder();\r\n    }\r\n\r\n    // fastRaf(() => {\r\n    fastRaf(() => {\r\n      this.setStickyDateManually(); // ! maybe it's not efficient\r\n\r\n      setBubbles.forEach(contentWrapper => {\r\n        contentWrapper.classList.remove('zoom-fade');\r\n      });\r\n    });\r\n    // });\r\n\r\n    let promise: Promise<any>;\r\n    if(topIds.length || middleIds.length || bottomIds.length) {\r\n      promise = Promise.all(promises);\r\n\r\n      dispatchHeavyAnimationEvent(promise, Math.max(...delays) + 200) // * 200 - transition time\r\n      .then(() => { \r\n        fastRaf(() => {\r\n          setBubbles.forEach(contentWrapper => {\r\n            contentWrapper.style.transitionDelay = '';\r\n          });\r\n\r\n          this.chatInner.classList.remove('zoom-fading');\r\n        });\r\n\r\n        // ! в хроме, каким-то образом из-за zoom-fade класса начинает прыгать скролл при подгрузке сообщений вверх, \r\n        // ! т.е. скролл не ставится, так же, как в сафари при translateZ на блок выше scrollable\r\n        if(!IS_SAFARI) {\r\n          this.needReflowScroll = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  private renderEmptyPlaceholder(type: 'group' | 'saved' | 'noMessages' | 'noScheduledMessages' | 'greeting' | 'restricted', bubble: HTMLElement, message: any, elements: (Node | string)[]) {\r\n    const BASE_CLASS = 'empty-bubble-placeholder';\r\n    bubble.classList.add(BASE_CLASS, BASE_CLASS + '-' + type);\r\n\r\n    let title: HTMLElement; \r\n    if(type === 'group') title = i18n('GroupEmptyTitle1');\r\n    else if(type === 'saved') title = i18n('ChatYourSelfTitle');\r\n    else if(type === 'noMessages' || type === 'greeting') title = i18n('NoMessages');\r\n    else if(type === 'noScheduledMessages') title = i18n('NoScheduledMessages');\r\n    else if(type === 'restricted') {\r\n      title = document.createElement('span');\r\n      title.innerText = this.appPeersManager.getRestrictionReasonText(this.peerId);\r\n    }\r\n    title.classList.add('center', BASE_CLASS + '-title');\r\n\r\n    elements.push(title);\r\n\r\n    let listElements: HTMLElement[];\r\n    if(type === 'group') {\r\n      elements.push(i18n('GroupEmptyTitle2'));\r\n      listElements = [\r\n        i18n('GroupDescription1'),\r\n        i18n('GroupDescription2'),\r\n        i18n('GroupDescription3'),\r\n        i18n('GroupDescription4')\r\n      ];\r\n    } else if(type === 'saved') {\r\n      listElements = [\r\n        i18n('ChatYourSelfDescription1'),\r\n        i18n('ChatYourSelfDescription2'),\r\n        i18n('ChatYourSelfDescription3'),\r\n        i18n('ChatYourSelfDescription4')\r\n      ];\r\n    } else if(type === 'greeting') {\r\n      const subtitle = i18n('NoMessagesGreetingsDescription');\r\n      subtitle.classList.add('center', BASE_CLASS + '-subtitle');\r\n\r\n      this.messagesQueue.findAndSplice(q => q.bubble === bubble);\r\n\r\n      const stickerDiv = document.createElement('div');\r\n      stickerDiv.classList.add(BASE_CLASS + '-sticker');\r\n\r\n      const middleware = this.getMiddleware();\r\n      \r\n      const loadPromise = this.appStickersManager.getGreetingSticker().then(doc => {\r\n        if(!middleware()) return;\r\n\r\n        const loadPromises: Promise<any>[] = [];\r\n        wrapSticker({\r\n          doc, \r\n          // doc: appDocsManager.getDoc(\"5431607541660389336\"), // cubigator mockup\r\n          div: stickerDiv,\r\n          middleware,\r\n          lazyLoadQueue: this.lazyLoadQueue,\r\n          group: CHAT_ANIMATION_GROUP,\r\n          //play: !!message.pending || !multipleRender,\r\n          play: true,\r\n          loop: true,\r\n          withThumb: true,\r\n          loadPromises\r\n        });\r\n\r\n        attachClickEvent(stickerDiv, (e) => {\r\n          cancelEvent(e);\r\n          EmoticonsDropdown.onMediaClick({target: e.target});\r\n        });\r\n\r\n        return Promise.all(loadPromises);\r\n      });\r\n\r\n      this.renderMessagesQueue(message, bubble, false, [loadPromise]);\r\n\r\n      elements.push(subtitle, stickerDiv);\r\n    }\r\n\r\n    if(listElements) {\r\n      elements.push(\r\n        ...listElements.map(elem => {\r\n          const span = document.createElement('span');\r\n          span.classList.add(BASE_CLASS + '-list-item');\r\n          span.append(elem);\r\n          return span;\r\n        })\r\n      );\r\n  \r\n      if(type === 'group') {\r\n        listElements.forEach(elem => {\r\n          const i = document.createElement('span');\r\n          i.classList.add('tgico-check');\r\n          elem.prepend(i);\r\n        });\r\n      } else if(type === 'saved') {\r\n        listElements.forEach(elem => {\r\n          const i = document.createElement('span');\r\n          i.classList.add(BASE_CLASS + '-list-bullet');\r\n          i.innerText = '•';\r\n          elem.prepend(i);\r\n        });\r\n      }\r\n    }\r\n\r\n    if(elements.length > 1) {\r\n      bubble.classList.add('has-description');\r\n    }\r\n\r\n    elements.forEach((element: any) => element.classList.add(BASE_CLASS + '-line'));\r\n  }\r\n\r\n  private processLocalMessageRender(message: Message.message | Message.messageService) {\r\n    const isSponsored = !!(message as Message.message).pFlags.sponsored;\r\n    const bubble = this.safeRenderMessage(message, undefined, undefined, undefined, isSponsored);\r\n    bubble.classList.add('is-group-last', 'is-group-first');\r\n\r\n    if(!isSponsored) {\r\n      bubble.classList.add('bubble-first');\r\n      bubble.classList.remove('can-have-tail', 'is-in');\r\n    }\r\n\r\n    const elements: (Node | string)[] = [];\r\n    const isBot = this.appPeersManager.isBot(this.peerId);\r\n    if(this.chat.isRestricted) {\r\n      this.renderEmptyPlaceholder('restricted', bubble, message, elements);\r\n    } else if(isSponsored) {\r\n      let text: LangPackKey, mid: number, startParam: string, callback: () => void;\r\n\r\n      bubble.classList.add('avoid-selection');\r\n\r\n      const sponsoredMessage = this.sponsoredMessage = (message as Message.message).sponsoredMessage;\r\n      const peerId = this.appPeersManager.getPeerId(sponsoredMessage.from_id);\r\n      // const peer = this.appPeersManager.getPeer(peerId);\r\n      if(sponsoredMessage.channel_post) {\r\n        text = 'OpenChannelPost';\r\n        mid = this.appMessagesIdsManager.generateMessageId(sponsoredMessage.channel_post);\r\n      } else if(sponsoredMessage.start_param || this.appUsersManager.isBot(peerId.toUserId())) {\r\n        text = 'Chat.Message.ViewBot';\r\n        startParam = sponsoredMessage.start_param;\r\n      } else {\r\n        text = this.appPeersManager.isAnyGroup(peerId) ? 'Chat.Message.ViewGroup' : 'Chat.Message.ViewChannel';\r\n      }\r\n\r\n      if(sponsoredMessage.chat_invite) {\r\n        callback = () => {\r\n          new PopupJoinChatInvite(sponsoredMessage.chat_invite_hash, sponsoredMessage.chat_invite as ChatInvite.chatInvite).show();\r\n        };\r\n      } else if(sponsoredMessage.chat_invite_hash) {\r\n        callback = () => {\r\n          const link: InternalLink = {\r\n            _: INTERNAL_LINK_TYPE.JOIN_CHAT,\r\n            invite: sponsoredMessage.chat_invite_hash\r\n          };\r\n          \r\n          this.chat.appImManager.processInternalLink(link);\r\n        };\r\n      } else {\r\n        callback = () => {\r\n          rootScope.dispatchEvent('history_focus', {\r\n            peerId,\r\n            mid,\r\n            startParam\r\n          });\r\n        };\r\n      }\r\n\r\n      const button = Button('btn-primary btn-primary-transparent bubble-view-button', {\r\n        text\r\n      });\r\n\r\n      this.viewsObserver.observe(button); \r\n\r\n      if(callback) {\r\n        attachClickEvent(button, callback);\r\n      }\r\n\r\n      bubble.querySelector('.bubble-content').prepend(button);\r\n\r\n      return;\r\n    } else if(isBot && message._ === 'message') {\r\n      const b = document.createElement('b');\r\n      b.append(i18n('BotInfoTitle'));\r\n      elements.push(b, '\\n\\n');\r\n    } else if(this.appPeersManager.isAnyGroup(this.peerId) && this.appPeersManager.getPeer(this.peerId).pFlags.creator) {\r\n      this.renderEmptyPlaceholder('group', bubble, message, elements);\r\n    } else if(this.chat.type === 'scheduled') {\r\n      this.renderEmptyPlaceholder('noScheduledMessages', bubble, message, elements);\r\n    } else if(rootScope.myId === this.peerId) {\r\n      this.renderEmptyPlaceholder('saved', bubble, message, elements);\r\n    } else if(this.appPeersManager.isUser(this.peerId) && !isBot && this.chat.canSend() && this.chat.type === 'chat') {\r\n      this.renderEmptyPlaceholder('greeting', bubble, message, elements);\r\n    } else {\r\n      this.renderEmptyPlaceholder('noMessages', bubble, message, elements);\r\n    }\r\n\r\n    /* for(let i = 1; i < elements.length; i += 2) {\r\n      elements.splice(i, 0, '\\n');\r\n    } */\r\n\r\n    if(elements.length) {\r\n      const messageDiv = bubble.querySelector('.message, .service-msg');\r\n      messageDiv.prepend(...elements);\r\n    }\r\n\r\n    const method: 'append' | 'prepend' = isSponsored ? 'append' : 'prepend';\r\n    if(this.messagesQueueOnRenderAdditional) {\r\n      this.onAnimateLadder = () => {\r\n        this.chatInner[method](bubble);\r\n        this.onAnimateLadder = undefined;\r\n\r\n        // need raf here because animation won't fire if this message is single\r\n        if(!this.messagesQueuePromise) {\r\n          return fastRafPromise();\r\n        }\r\n      };\r\n    } else {\r\n      this.chatInner[method](bubble);\r\n    }\r\n\r\n    // if(!isSponsored) {\r\n      this.emptyPlaceholderMid = message.mid;\r\n    // }\r\n  }\r\n\r\n  private generateLocalMessageId(addOffset = 0) {\r\n    // const INCREMENT = 0x10;\r\n    let offset = (this.chat.type === 'scheduled' ? -1 : 0) + addOffset;\r\n    // offset = this.appMessagesIdsManager.generateMessageId(offset);\r\n    // id: -Math.abs(+this.peerId * INCREMENT + offset),\r\n    const id = -Math.abs(offset);\r\n    const mid = -Math.abs(this.appMessagesIdsManager.generateMessageId(id));\r\n    return {id, mid};\r\n  }\r\n\r\n  private generateLocalFirstMessage<T extends boolean>(service?: T, fill?: (message: GenerateLocalMessageType<T>) => void, addOffset = 0): GenerateLocalMessageType<T> {\r\n    const {id, mid} = this.generateLocalMessageId(addOffset);\r\n    const message: Omit<Message.message | Message.messageService, 'message'> & {message?: string} = {\r\n      _: service ? 'messageService' : 'message',\r\n      date: 0,\r\n      id,\r\n      mid,\r\n      peer_id: this.appPeersManager.getOutputPeer(this.peerId),\r\n      pFlags: {\r\n        local: true\r\n      }\r\n    };\r\n\r\n    if(!service) {\r\n      message.message = '';\r\n    }/*  else {\r\n      (message as Message.messageService).action = {} as any;\r\n    } */\r\n\r\n    assumeType<GenerateLocalMessageType<T>>(message);\r\n\r\n    fill && fill(message);\r\n\r\n    this.appMessagesManager.saveMessages([message], {storage: new Map()});\r\n    message.mid = mid;\r\n    return message;\r\n  }\r\n\r\n  private setLoaded(side: SliceSides, value: boolean, checkPlaceholders = true) {\r\n    const willChange = this.scrollable.loadedAll[side] !== value;\r\n    if(!willChange) {\r\n      return;\r\n    }\r\n\r\n    this.scrollable.loadedAll[side] = value;\r\n\r\n    /* if(!checkPlaceholders) {\r\n      return;\r\n    } */\r\n\r\n    if(side === 'bottom' && this.appPeersManager.isBroadcast(this.peerId) && !this.chat.isRestricted/*  && false */) {\r\n      const {mid} = this.generateLocalMessageId(SPONSORED_MESSAGE_ID_OFFSET);\r\n      if(value) {\r\n        const middleware = this.getMiddleware(() => {\r\n          return this.scrollable.loadedAll.bottom && !this.bubbles[mid] && this.getSponsoredMessagePromise === promise;\r\n        });\r\n  \r\n        const promise = this.getSponsoredMessagePromise = this.chat.apiManager.invokeApiCacheable('channels.getSponsoredMessages', {\r\n          channel: this.appChatsManager.getChannelInput(this.peerId.toChatId())\r\n        }, {cacheSeconds: 300}).then(sponsoredMessages => {\r\n          if(!middleware()) return;\r\n\r\n          /* forEachReverse(sponsoredMessages.messages, (message, idx, arr) => {\r\n            if(message.chat_invite || message.chat_invite_hash) {\r\n              arr.splice(idx, 1);\r\n            }\r\n          }); */\r\n\r\n          this.appUsersManager.saveApiUsers(sponsoredMessages.users);\r\n          this.appChatsManager.saveApiChats(sponsoredMessages.chats);\r\n    \r\n          const sponsoredMessage = sponsoredMessages.messages.shift();\r\n          if(!sponsoredMessage) {\r\n            return;\r\n          }\r\n\r\n          sponsoredMessages.messages.push(sponsoredMessage);\r\n          const message = this.generateLocalFirstMessage(false, (message) => {\r\n            message.message = sponsoredMessage.message;\r\n            message.from_id = sponsoredMessage.from_id;\r\n            message.entities = sponsoredMessage.entities;\r\n            message.pFlags.sponsored = true;\r\n            message.sponsoredMessage = sponsoredMessage;\r\n          }, SPONSORED_MESSAGE_ID_OFFSET);\r\n    \r\n          return Promise.all([\r\n            this.getHistoryTopPromise, // wait for top load and execute rendering after or with it\r\n            this.messagesQueuePromise\r\n          ]).then(() => {\r\n            if(!middleware()) return;\r\n            // this.processLocalMessageRender(message);\r\n            const promise = this.performHistoryResult([message], false, true);\r\n          });\r\n        }).finally(() => {\r\n          this.getSponsoredMessagePromise = undefined;\r\n        });\r\n      } else {\r\n        this.deleteMessagesByIds([mid]);\r\n        this.getSponsoredMessagePromise = undefined;\r\n      }\r\n    }\r\n\r\n    if(side === 'top' && value && this.appPeersManager.isBot(this.peerId) && !this.chat.isRestricted) {\r\n      this.log('inject bot description');\r\n\r\n      const middleware = this.getMiddleware();\r\n      return Promise.resolve(this.appProfileManager.getProfile(this.peerId.toUserId())).then(userFull => {\r\n        if(!middleware()) {\r\n          return;\r\n        }\r\n\r\n        if(!userFull.bot_info?.description) {\r\n          this.checkIfEmptyPlaceholderNeeded();\r\n          return;\r\n        }\r\n\r\n        const message = this.generateLocalFirstMessage(false, message => {\r\n          message.message = userFull.bot_info.description;\r\n        });\r\n\r\n        this.processLocalMessageRender(message);\r\n      });\r\n    }\r\n\r\n    this.checkIfEmptyPlaceholderNeeded();\r\n  }\r\n\r\n  public checkIfEmptyPlaceholderNeeded() {\r\n    if(this.scrollable.loadedAll.top && \r\n      this.scrollable.loadedAll.bottom && \r\n      this.emptyPlaceholderMid === undefined && \r\n      (\r\n        this.chat.isRestricted || \r\n        !this.appMessagesManager.getHistoryStorage(this.peerId).count || \r\n        (\r\n          Object.keys(this.bubbles).length && \r\n          !this.getRenderedLength()\r\n        ) ||\r\n        (this.chat.type === 'scheduled' && !Object.keys(this.bubbles).length)\r\n      )\r\n    ) {\r\n      this.log('inject empty peer placeholder');\r\n\r\n      const message = this.generateLocalFirstMessage(true);\r\n      this.processLocalMessageRender(message);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Load and render history\r\n   * @param maxId max message id\r\n   * @param reverse 'true' means up\r\n   * @param isBackLimit is search\r\n   * @param additionMsgId for the last message\r\n   * @param justLoad do not render\r\n   */\r\n  public getHistory(maxId = 0, reverse = false, isBackLimit = false, additionMsgId = 0, justLoad = false): {cached: boolean, promise: Promise<boolean>} {\r\n    const peerId = this.peerId;\r\n\r\n    const isBroadcast = this.appPeersManager.isBroadcast(peerId);\r\n    //console.time('appImManager call getHistory');\r\n    const pageCount = Math.min(30, windowSize.height / 48/*  * 1.25 */ | 0);\r\n    //const loadCount = Object.keys(this.bubbles).length > 0 ? 50 : pageCount;\r\n    const realLoadCount = isBroadcast ? 20 : (Object.keys(this.bubbles).length > 0 ? Math.max(35, pageCount) : pageCount);\r\n    //const realLoadCount = pageCount;//const realLoadCount = 50;\r\n    let loadCount = realLoadCount;\r\n    \r\n    /* if(TEST_SCROLL) {\r\n      //loadCount = 1;\r\n      if(Object.keys(this.bubbles).length > 0)\r\n      return {cached: false, promise: Promise.resolve(true)};\r\n    } */\r\n    if(TEST_SCROLL !== undefined) {\r\n      if(TEST_SCROLL) {\r\n        if(Object.keys(this.bubbles).length > 0) {\r\n          --TEST_SCROLL;\r\n        }\r\n      } else {\r\n        return {cached: false, promise: Promise.resolve(true)};\r\n      }\r\n    }\r\n    \r\n    ////console.time('render history total');\r\n    \r\n    let backLimit = 0;\r\n    if(isBackLimit) {\r\n      backLimit = loadCount;\r\n\r\n      if(!reverse) { // if not jump\r\n        loadCount = 0;\r\n        //maxId = this.appMessagesManager.incrementMessageId(maxId, 1);\r\n      }\r\n    }\r\n\r\n    let additionMsgIds: number[];\r\n    if(additionMsgId && !isBackLimit) {\r\n      if(this.chat.type === 'pinned') {\r\n        additionMsgIds = [additionMsgId];\r\n      } else {\r\n        const historyStorage = this.appMessagesManager.getHistoryStorage(peerId, this.chat.threadId);\r\n        const slice = historyStorage.history.slice;\r\n        if(slice.length < loadCount && !slice.isEnd(SliceEnd.Both)) {\r\n          additionMsgIds = slice.slice();\r\n\r\n          // * filter last album, because we don't know is it the last item\r\n          for(let i = additionMsgIds.length - 1; i >= 0; --i) {\r\n            const message = this.chat.getMessage(additionMsgIds[i]);\r\n            if(message.grouped_id) additionMsgIds.splice(i, 1);\r\n            else break;\r\n          }\r\n\r\n          maxId = additionMsgIds[additionMsgIds.length - 1] || maxId;\r\n        }\r\n      }\r\n    }\r\n\r\n    /* const result = additionMsgID ? \r\n      {history: [additionMsgID]} : \r\n      appMessagesManager.getHistory(this.peerId, maxId, loadCount, backLimit); */\r\n    let result: ReturnType<AppMessagesManager['getHistory']> | {history: number[]} = this.requestHistory(maxId, loadCount, backLimit) as any;\r\n    let resultPromise: Promise<any>;\r\n\r\n    //const isFirstMessageRender = !!additionMsgID && result instanceof Promise && !appMessagesManager.getMessage(additionMsgID).grouped_id;\r\n    const isAdditionRender = additionMsgIds?.length && result instanceof Promise;\r\n    const isFirstMessageRender = (this.isFirstLoad && backLimit && result instanceof Promise) || isAdditionRender;\r\n    if(isAdditionRender) {\r\n      resultPromise = result as Promise<any>;\r\n      result = {history: additionMsgIds};\r\n      //additionMsgID = 0;\r\n    }\r\n\r\n    this.isFirstLoad = false;\r\n\r\n    const processResult = async(historyResult: typeof result) => {\r\n      if('offsetIdOffset' in historyResult && historyResult.history.isEnd(SliceEnd.Top)) {\r\n        if(this.chat.type === 'discussion') { // * inject discussion start\r\n          //this.log('discussion got history', loadCount, backLimit, historyResult, isTopEnd);\r\n          const serviceStartMessageId = this.appMessagesManager.threadsServiceMessagesIdsStorage[this.peerId + '_' + this.chat.threadId];\r\n          if(serviceStartMessageId) historyResult.history.push(serviceStartMessageId);\r\n          historyResult.history.push(...this.chat.getMidsByMid(this.chat.threadId).reverse());\r\n        }\r\n\r\n        await this.setLoaded('top', true);\r\n      }\r\n    };\r\n\r\n    const sup = (result: HistoryResult) => {\r\n      /* if(maxId && result.history?.length) {\r\n        if(this.bubbles[maxId]) {\r\n          result.history.findAndSplice(mid => mid === maxId);  \r\n        }\r\n      } */\r\n\r\n      ////console.timeEnd('render history total');\r\n      \r\n      return getHeavyAnimationPromise().then(() => {\r\n        return processResult(result);\r\n      }).then(() => {\r\n        return this.performHistoryResult(result.history || [], reverse, isBackLimit, !isAdditionRender && additionMsgId);\r\n      });\r\n    };\r\n\r\n    const processPromise = (result: Promise<HistoryResult>) => {\r\n      const promise = result.then((result) => {\r\n        //this.log('getHistory not cached result by maxId:', maxId, reverse, isBackLimit, result, peerId, justLoad);\r\n\r\n        if(reverse ? this.getHistoryTopPromise !== promise : this.getHistoryBottomPromise !== promise) {\r\n          this.log.warn('getHistory: peer changed');\r\n          ////console.timeEnd('render history total');\r\n          return Promise.reject();\r\n        }\r\n\r\n        if(justLoad) {\r\n          this.scrollable.onScroll(); // нужно делать из-за ранней прогрузки\r\n          return true;\r\n        }\r\n        //console.timeEnd('appImManager call getHistory');\r\n\r\n        return sup(result);\r\n      }, (err) => {\r\n        this.log.error('getHistory error:', err);\r\n        throw err;\r\n      });\r\n      \r\n      return promise;\r\n    };\r\n\r\n    let promise: Promise<boolean>, cached: boolean;\r\n    if(result instanceof Promise) {\r\n      cached = false;\r\n      promise = processPromise(result);\r\n    } else if(justLoad) {\r\n      return null;\r\n    } else {\r\n      cached = true;\r\n      //this.log('getHistory cached result by maxId:', maxId, reverse, isBackLimit, result, peerId, justLoad);\r\n      promise = sup(result as HistoryResult);\r\n      //return (reverse ? this.getHistoryTopPromise = promise : this.getHistoryBottomPromise = promise);\r\n      //return this.performHistoryResult(result.history || [], reverse, isBackLimit, additionMsgID, true);\r\n    }\r\n\r\n    const waitPromise = isAdditionRender ? processPromise(resultPromise) : promise;\r\n\r\n    if(isFirstMessageRender && rootScope.settings.animationsEnabled/*  && false */) {\r\n      let times = isAdditionRender ? 2 : 1;\r\n      this.messagesQueueOnRenderAdditional = () => {\r\n        this.log('ship went past rocks of magnets');\r\n\r\n        if(--times) return;\r\n\r\n        this.messagesQueueOnRenderAdditional = undefined;\r\n        \r\n        const promise = this.animateAsLadder(additionMsgId, additionMsgIds, isAdditionRender, backLimit, maxId);\r\n        promise.then(() => {\r\n          setTimeout(() => { // preload messages\r\n            this.loadMoreHistory(reverse, true);\r\n          }, 0);\r\n        });\r\n      };\r\n    } else {\r\n      this.messagesQueueOnRenderAdditional = undefined;\r\n    }\r\n\r\n    (reverse ? this.getHistoryTopPromise = waitPromise : this.getHistoryBottomPromise = waitPromise);\r\n    waitPromise.then(() => {\r\n      (reverse ? this.getHistoryTopPromise = undefined : this.getHistoryBottomPromise = undefined);\r\n    });\r\n\r\n    if(justLoad) {\r\n      return null;\r\n    }\r\n\r\n    /* false &&  */!isFirstMessageRender && promise.then(() => {\r\n      if(reverse) {\r\n        this.loadedTopTimes++;\r\n        this.loadedBottomTimes = Math.max(0, --this.loadedBottomTimes);\r\n      } else {\r\n        this.loadedBottomTimes++;\r\n        this.loadedTopTimes = Math.max(0, --this.loadedTopTimes);\r\n      }\r\n\r\n      let ids: number[];\r\n      if((reverse && this.loadedTopTimes > 2) || (!reverse && this.loadedBottomTimes > 2)) {\r\n        ids = getObjectKeysAndSort(this.bubbles);\r\n      }\r\n\r\n      //let removeCount = loadCount / 2;\r\n      const safeCount = realLoadCount * 2; // cause i've been runningrunningrunning all day\r\n      //this.log('getHistory: slice loadedTimes:', reverse, pageCount, this.loadedTopTimes, this.loadedBottomTimes, ids?.length, safeCount);\r\n      if(ids && ids.length > safeCount) {\r\n        if(reverse) {\r\n          //ids = ids.slice(-removeCount);\r\n          //ids = ids.slice(removeCount * 2);\r\n          ids = ids.slice(safeCount);\r\n          this.setLoaded('bottom', false);\r\n\r\n          //this.log('getHistory: slice bottom messages:', ids.length, loadCount);\r\n          //this.getHistoryBottomPromise = undefined; // !WARNING, это нужно для обратной загрузки истории, если запрос словил флуд\r\n        } else {\r\n          //ids = ids.slice(0, removeCount);\r\n          //ids = ids.slice(0, ids.length - (removeCount * 2));\r\n          ids = ids.slice(0, ids.length - safeCount);\r\n          this.setLoaded('top', false);\r\n\r\n          //this.log('getHistory: slice up messages:', ids.length, loadCount);\r\n          //this.getHistoryTopPromise = undefined; // !WARNING, это нужно для обратной загрузки истории, если запрос словил флуд\r\n        }\r\n\r\n        //this.log('getHistory: will slice ids:', ids, reverse);\r\n\r\n        this.deleteMessagesByIds(ids, false);\r\n      }\r\n    });\r\n\r\n    promise.then(() => {\r\n      // preload more\r\n      //if(!isFirstMessageRender) {\r\n      if(this.chat.type === 'chat'/*  || this.chat.type === 'discussion' */) {\r\n        /* const storage = this.appMessagesManager.getHistoryStorage(peerId, this.chat.threadId);\r\n        const isMaxIdInHistory = storage.history.indexOf(maxId) !== -1;\r\n        if(isMaxIdInHistory || true) { // * otherwise it is a search or jump */\r\n          setTimeout(() => {\r\n            if(reverse) {\r\n              this.loadMoreHistory(true, true);\r\n            } else {\r\n              this.loadMoreHistory(false, true);\r\n            }\r\n          }, 0);\r\n        //}\r\n      }\r\n      //}\r\n    });\r\n\r\n    return {cached, promise};\r\n  }\r\n\r\n  public setUnreadDelimiter() {\r\n    if(!(this.chat.type === 'chat' || this.chat.type === 'discussion')) {\r\n      return;\r\n    }\r\n\r\n    if(this.attachedUnreadBubble) {\r\n      return;\r\n    }\r\n\r\n    const historyStorage = this.appMessagesManager.getHistoryStorage(this.peerId, this.chat.threadId);\r\n    let readMaxId = this.appMessagesManager.getReadMaxIdIfUnread(this.peerId, this.chat.threadId);\r\n    if(!readMaxId) return;\r\n\r\n    readMaxId = Object.keys(this.bubbles)\r\n    .filter(mid => !this.bubbles[mid].classList.contains('is-out'))\r\n    .map(i => +i)\r\n    .sort((a, b) => a - b)\r\n    .find(i => i > readMaxId);\r\n\r\n    if(readMaxId && this.bubbles[readMaxId]) {\r\n      let bubble = this.bubbles[readMaxId];\r\n      if(this.firstUnreadBubble && this.firstUnreadBubble !== bubble) {\r\n        this.firstUnreadBubble.classList.remove('is-first-unread');\r\n        this.firstUnreadBubble = null;\r\n      }\r\n\r\n      if(readMaxId !== historyStorage.maxId) {\r\n        bubble.classList.add('is-first-unread');\r\n      }\r\n\r\n      this.firstUnreadBubble = bubble;\r\n      this.attachedUnreadBubble = true;\r\n    }\r\n  }\r\n\r\n  public deleteEmptyDateGroups() {\r\n    const mustBeCount = 1 + +!!this.stickyIntersector;\r\n    let deleted = false;\r\n    for(const i in this.dateMessages) {\r\n      const dateMessage = this.dateMessages[i];\r\n\r\n      if(dateMessage.container.childElementCount === mustBeCount) { // only date div + sentinel div\r\n        dateMessage.container.remove();\r\n        if(this.stickyIntersector) {\r\n          this.stickyIntersector.unobserve(dateMessage.container, dateMessage.div);\r\n        }\r\n        delete this.dateMessages[i];\r\n        deleted = true;\r\n\r\n        // * no sense in it\r\n        /* if(dateMessage.div === this.previousStickyDate) {\r\n          this.previousStickyDate = undefined;\r\n        } */\r\n      }\r\n    }\r\n\r\n    if(!deleted) {\r\n      return;\r\n    }\r\n\r\n    this.checkIfEmptyPlaceholderNeeded();\r\n    this.setStickyDateManually();\r\n  }\r\n}\r\n\r\nexport function generateTail() {\r\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n  svg.setAttributeNS(null, 'viewBox', '0 0 11 20');\r\n  svg.setAttributeNS(null, 'width', '11');\r\n  svg.setAttributeNS(null, 'height', '20');\r\n  svg.classList.add('bubble-tail');\r\n\r\n  const use = document.createElementNS('http://www.w3.org/2000/svg', 'use');\r\n  use.setAttributeNS(null, 'href', '#message-tail-filled');\r\n\r\n  svg.append(use);\r\n\r\n  return svg;\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\nimport { addCancelButton } from \".\";\nimport PopupPeer, { PopupPeerButtonCallbackCheckboxes, PopupPeerOptions } from \"./peer\";\nimport appPeersManager from \"../../lib/appManagers/appPeersManager\";\nimport rootScope from \"../../lib/rootScope\";\nimport { FormatterArguments, LangPackKey } from \"../../lib/langPack\";\nimport appChatsManager from \"../../lib/appManagers/appChatsManager\";\nimport PeerTitle from \"../peerTitle\";\n\nexport default class PopupPinMessage {\n  constructor(peerId: PeerId, mid: number, unpin?: true, onConfirm?: () => void) {\n    let title: LangPackKey, description: LangPackKey, descriptionArgs: FormatterArguments, \n      buttons: PopupPeerOptions['buttons'] = [], checkboxes: PopupPeerOptions['checkboxes'] = [];\n\n    const canUnpin = appPeersManager.canPinMessage(peerId);\n\n    const callback = (checked: PopupPeerButtonCallbackCheckboxes, oneSide?: boolean, silent?: boolean) => {\n      setTimeout(() => { // * костыль, потому что document.elementFromPoint вернёт popup-peer пока он будет закрываться\n        let promise: Promise<any>;\n        if(unpin && !mid) {\n          if(canUnpin) {\n            promise = appMessagesManager.unpinAllMessages(peerId);\n          } else {\n            promise = appMessagesManager.hidePinnedMessages(peerId);\n          }\n        } else {\n          promise = appMessagesManager.updatePinnedMessage(peerId, mid, unpin, silent, oneSide);\n        }\n\n        if(onConfirm) {\n          promise.then(onConfirm);\n        }\n      }, 300);\n    };\n\n    if(unpin) {\n      let buttonText: LangPackKey = 'UnpinMessage';\n      if(!mid) {\n        if(canUnpin) {\n          title = 'Popup.Unpin.AllTitle';\n          description = 'Chat.UnpinAllMessagesConfirmation';\n          descriptionArgs = ['' + (appMessagesManager.pinnedMessages[peerId]?.count || 1)];\n        } else {\n          title = 'Popup.Unpin.HideTitle';\n          description = 'Popup.Unpin.HideDescription';\n          buttonText = 'Popup.Unpin.Hide';\n        }\n      } else {\n        title = 'UnpinMessageAlertTitle';\n        description = 'Chat.Confirm.Unpin';\n      }\n      \n      buttons.push({\n        langKey: buttonText,\n        isDanger: true,\n        callback\n      });\n    } else {\n      title = 'PinMessageAlertTitle';\n      const pinButtonText: LangPackKey = 'PinMessage';\n      \n      if(peerId.isAnyChat()) {\n        buttons.push({\n          langKey: pinButtonText,\n          callback: (checked) => callback(checked, false, !checked.size)\n        });\n\n        if(appChatsManager.isBroadcast(peerId.toChatId())) {\n          description = 'PinMessageAlertChannel';\n        } else {\n          description = 'PinMessageAlert';\n  \n          checkboxes.push({\n            text: 'PinNotify',\n            checked: true\n          });\n        }\n      } else {\n        description = 'PinMessageAlertChat';\n\n        if(peerId === rootScope.myId) {\n          buttons.push({\n            langKey: pinButtonText,\n            callback\n          });\n        } else {\n          buttons.push({\n            langKey: pinButtonText,\n            callback: (checked) => callback(checked, !checked.size)\n          });\n\n          checkboxes.push({\n            text: 'PinAlsoFor',\n            textArgs: [new PeerTitle({peerId}).element],\n            checked: true\n          });\n        }\n      }\n    }\n\n    addCancelButton(buttons);\n\n    const popup = new PopupPeer('popup-delete-chat', {\n      peerId,\n      titleLangKey: title,\n      descriptionLangKey: description,\n      descriptionLangArgs: descriptionArgs,\n      buttons,\n      checkboxes\n    });\n\n    popup.show();\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function isSelectionEmpty(selection = window.getSelection()) {\r\n  if(!selection || !selection.rangeCount) {\r\n    return true;\r\n  }\r\n\r\n  const selectionRange = selection.getRangeAt(0);\r\n  if(!selectionRange.toString() || !selectionRange.START_TO_END) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { ReportReason } from \"../../layer\";\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\nimport appStickersManager from \"../../lib/appManagers/appStickersManager\";\nimport InputField from \"../inputField\";\nimport { toastNew } from \"../toast\";\nimport { wrapSticker } from \"../wrappers\";\nimport PopupPeer from \"./peer\";\n\nexport default class PopupReportMessagesConfirm extends PopupPeer {\n  public static STICKER_EMOJI = '👮‍♀️';\n  constructor(peerId: PeerId, mids: number[], reason: ReportReason['_'], onConfirm?: () => void) {\n    super('popup-report-messages-confirm', {\n      noTitle: true, \n      descriptionLangKey: 'ReportInfo', \n      buttons: [{\n        langKey: 'ReportChat',\n        callback: () => {\n          if(!inputField.isValid()) {\n            return;\n          }\n\n          onConfirm && onConfirm();\n          appMessagesManager.reportMessages(peerId, mids, reason, inputField.value).then(bool => {\n            if(!bool) return;\n\n            toastNew({\n              langPackKey: 'ReportSentInfo'\n            });\n          });\n        }\n      }], \n      body: true\n    });\n\n    const div = document.createElement('div');\n    const doc = appStickersManager.getAnimatedEmojiSticker(PopupReportMessagesConfirm.STICKER_EMOJI);\n    const size = 100;\n    wrapSticker({\n      doc,\n      div,\n      emoji: PopupReportMessagesConfirm.STICKER_EMOJI,\n      width: size,\n      height: size,\n      loop: false,\n      play: true\n    }).finally(() => {\n      this.show();\n    });\n\n    this.header.append(div);\n\n    const inputField = new InputField({\n      label: 'ReportHint',\n      maxLength: 512,\n      placeholder: 'ReportChatDescription'\n    });\n\n    inputField.input.addEventListener('input', () => {\n      this.buttons[0].element.toggleAttribute('disabled', !inputField.isValid());\n    });\n\n    this.body.append(inputField.container);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\nimport whichChild from \"../../helpers/dom/whichChild\";\nimport { ReportReason } from \"../../layer\";\nimport appStickersManager from \"../../lib/appManagers/appStickersManager\";\nimport { LangPackKey } from \"../../lib/langPack\";\nimport Button from \"../button\";\nimport PopupPeer from \"./peer\";\nimport PopupReportMessagesConfirm from \"./reportMessagesConfirm\";\n\nexport default class PopupReportMessages extends PopupPeer {\n  constructor(peerId: PeerId, mids: number[], onConfirm?: () => void) {\n    super('popup-report-messages', {titleLangKey: 'ChatTitle.ReportMessages', buttons: [], body: true});\n\n    mids = mids.slice();\n\n    const buttons: [LangPackKey, ReportReason['_']][] = [\n      ['ReportChatSpam', 'inputReportReasonSpam'],\n      ['ReportChatViolence', 'inputReportReasonViolence'],\n      ['ReportChatChild', 'inputReportReasonChildAbuse'],\n      ['ReportChatPornography', 'inputReportReasonPornography'],\n      ['ReportChatOther', 'inputReportReasonOther']\n    ];\n\n    const className = 'btn-primary btn-transparent';\n    buttons.forEach(b => {\n      const button = Button(className, {/* icon: 'edit',  */text: b[0]});\n      this.body.append(button);\n    });\n\n    const preloadStickerPromise = appStickersManager.preloadAnimatedEmojiSticker(PopupReportMessagesConfirm.STICKER_EMOJI);\n\n    attachClickEvent(this.body, (e) => {\n      const target = findUpClassName(e.target, 'btn-primary');\n      const reason = buttons[whichChild(target)][1];\n\n      preloadStickerPromise.then(() => {\n        this.hide();\n\n        new PopupReportMessagesConfirm(peerId, mids, reason, onConfirm);\n      });\n    }, {listenerSetter: this.listenerSetter});\n    \n    this.body.style.margin = '0 -1rem';\n    this.buttonsEl.style.marginTop = '.5rem';\n\n    this.show();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport I18n, { i18n } from \"../../lib/langPack\";\nimport Scrollable from \"../scrollable\";\nimport PopupPeer from \"./peer\";\n\nexport default class PopupSponsored extends PopupPeer {\n  constructor() {\n    super('popup-sponsored', {\n      titleLangKey: 'Chat.Message.Sponsored.What',\n      descriptionLangKey: 'Chat.Message.Ad.Text',\n      descriptionLangArgs: [i18n('Chat.Message.Sponsored.Link')],\n      buttons: [{\n        langKey: 'OK',\n        isCancel: true\n      }, {\n        langKey: 'Chat.Message.Ad.ReadMore',\n        callback: () => {\n          window.open(I18n.format('Chat.Message.Sponsored.Link', true));\n        },\n        isCancel: true\n      }]\n    });\n\n    const scrollable = new Scrollable(undefined);\n    scrollable.onAdditionalScroll = () => {\n      scrollable.container.classList.toggle('scrolled-top', !scrollable.scrollTop);\n      scrollable.container.classList.toggle('scrolled-bottom', scrollable.isScrolledDown);\n    };\n\n    this.description.replaceWith(scrollable.container);\n\n    scrollable.container.append(this.description);\n    scrollable.container.classList.add('scrolled-top');\n\n    this.show();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\nimport PopupElement from \".\";\nimport { Message } from \"../../layer\";\nimport { generateDelimiter, SettingSection } from \"../sidebarLeft\";\nimport ReactionsElement from \"../chat/reactions\";\nimport { horizontalMenu } from \"../horizontalMenu\";\nimport Scrollable from \"../scrollable\";\nimport ScrollableLoader from \"../../helpers/scrollableLoader\";\nimport appDialogsManager from \"../../lib/appManagers/appDialogsManager\";\nimport replaceContent from \"../../helpers/dom/replaceContent\";\nimport appUsersManager from \"../../lib/appManagers/appUsersManager\";\nimport appReactionsManager from \"../../lib/appManagers/appReactionsManager\";\nimport { wrapSticker } from \"../wrappers\";\nimport ReactionElement from \"../chat/reaction\";\n\nexport default class PopupReactedList extends PopupElement {\n  constructor(\n    private appMessagesManager: AppMessagesManager, \n    private message: Message.message\n  ) {\n    super('popup-reacted-list', /* [{\n      langKey: 'Close',\n      isCancel: true\n    }] */null, {closable: true, overlayClosable: true, body: true});\n\n    this.init();\n  }\n\n  private async init() {\n    const message = this.appMessagesManager.getGroupsFirstMessage(this.message);\n\n    const canViewReadParticipants = this.appMessagesManager.canViewMessageReadParticipants(message);\n\n    // this.body.append(generateDelimiter());\n\n    const reactionsElement = new ReactionsElement();\n    const newMessage: Message.message = {\n      ...message,\n      mid: 0,\n      id: 0,\n      reactions: {\n        _: 'messageReactions',\n        results: [],\n\n        ...message.reactions,\n\n        pFlags: {},\n        recent_reactions: []\n      }\n    };\n\n    newMessage.reactions.results = newMessage.reactions.results.map(reactionCount => {\n      return {\n        ...reactionCount,\n        pFlags: {}\n      };\n    });\n\n    reactionsElement.init(newMessage, 'block');\n    reactionsElement.render();\n    reactionsElement.classList.add('no-stripe');\n    reactionsElement.classList.remove('has-no-reactions');\n    \n    reactionsElement.append(this.btnClose);\n\n    this.header.append(reactionsElement);\n\n    const tabsContainer = document.createElement('div');\n    tabsContainer.classList.add('tabs-container');\n    tabsContainer.dataset.animation = 'tabs';\n\n    const loaders: Map<HTMLElement, ScrollableLoader> = new Map();\n\n    let hasAllReactions = false;\n    if(newMessage.reactions.results.length) {\n      const reaction = this.createFakeReaction('reactions', newMessage.reactions.results.reduce((acc, r) => acc + r.count, 0));\n\n      reactionsElement.prepend(reaction);\n      newMessage.reactions.results.unshift(reaction.reactionCount);\n      hasAllReactions = true;\n    }\n\n    let hasReadParticipants = false;\n    if(canViewReadParticipants) {\n      try {\n        const readUserIds = await this.appMessagesManager.getMessageReadParticipants(message.peerId, message.mid);\n        if(!readUserIds.length) {\n          throw '';\n        }\n\n        const reaction = this.createFakeReaction('checks', readUserIds.length);\n\n        reactionsElement.prepend(reaction);\n        newMessage.reactions.results.unshift(reaction.reactionCount);\n        hasReadParticipants = true;\n      } catch(err) {\n\n      }\n    }\n    \n    newMessage.reactions.results.forEach(reactionCount => {\n      const scrollable = new Scrollable(undefined);\n      scrollable.container.classList.add('tabs-tab');\n\n      const section = new SettingSection({\n        noShadow: true,\n        noDelimiter: true\n      });\n\n      const chatlist = appDialogsManager.createChatList({\n        dialogSize: 72\n      });\n\n      appDialogsManager.setListClickListener(chatlist, () => {\n        this.hide();\n      }, undefined, false, true);\n\n      section.content.append(chatlist);\n      scrollable.container.append(section.container);\n\n      const skipReadParticipants = reactionCount.reaction !== 'checks';\n      const skipReactionsList = reactionCount.reaction === 'checks';\n      if(['checks', 'reactions'].includes(reactionCount.reaction)) {\n        reactionCount.reaction = undefined;\n      }\n\n      let nextOffset: string;\n      const loader = new ScrollableLoader({\n        scrollable,\n        getPromise: async() => {\n          const result = await this.appMessagesManager.getMessageReactionsListAndReadParticipants(message, undefined, reactionCount.reaction, nextOffset, skipReadParticipants, skipReactionsList);\n          nextOffset = result.nextOffset;\n\n          result.combined.forEach(({peerId, reaction}) => {\n            const {dom} = appDialogsManager.addDialogNew({\n              dialog: peerId,\n              autonomous: true,\n              container: chatlist,\n              avatarSize: 54,\n              rippleEnabled: false,\n              meAsSaved: false,\n              drawStatus: false\n            });\n\n            if(reaction) {\n              const stickerContainer = document.createElement('div');\n              stickerContainer.classList.add('reacted-list-reaction-icon');\n              const availableReaction = appReactionsManager.getReactionCached(reaction);\n\n              wrapSticker({\n                doc: availableReaction.static_icon,\n                div: stickerContainer,\n                width: 24,\n                height: 24\n              });\n  \n              dom.listEl.append(stickerContainer);\n            }\n\n            replaceContent(dom.lastMessageSpan, appUsersManager.getUserStatusString(peerId.toUserId()));\n          });\n\n          return !nextOffset;\n        }\n      });\n\n      loaders.set(scrollable.container, loader);\n\n      tabsContainer.append(scrollable.container);\n    });\n\n    this.body.append(tabsContainer);\n\n    const selectTab = horizontalMenu(reactionsElement, tabsContainer, (id, tabContent) => {\n      if(id === (reactionsElement.childElementCount - 1)) {\n        return false;\n      }\n\n      const reaction = reactionsElement.children[id] as ReactionElement;\n      const prevId = selectTab.prevId();\n      if(prevId !== -1) {\n        (reactionsElement.children[prevId] as ReactionElement).setIsChosen(false);\n      }\n      \n      reaction.setIsChosen(true);\n\n      const loader = loaders.get(tabContent);\n      loader.load();\n    });\n\n    // selectTab(hasAllReactions && hasReadParticipants ? 1 : 0, false);\n    selectTab(0, false);\n\n    this.show();\n  }\n\n  private createFakeReaction(icon: string, count: number) {\n    const reaction = new ReactionElement();\n    reaction.init('block');\n    reaction.reactionCount = {\n      _: 'reactionCount',\n      count: count,\n      reaction: icon\n    };\n    reaction.setCanRenderAvatars(false);\n    reaction.renderCounter();\n\n    const allReactionsSticker = document.createElement('div');\n    allReactionsSticker.classList.add('reaction-counter', 'reaction-sticker-icon', 'tgico-' + icon);\n    reaction.prepend(allReactionsSticker);\n\n    return reaction;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\nimport { IS_SAFARI } from \"../../environment/userAgent\";\nimport assumeType from \"../../helpers/assumeType\";\nimport callbackify from \"../../helpers/callbackify\";\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\nimport getVisibleRect from \"../../helpers/dom/getVisibleRect\";\nimport { getMiddleware } from \"../../helpers/middleware\";\nimport noop from \"../../helpers/noop\";\nimport { fastRaf } from \"../../helpers/schedulers\";\nimport { Message, AvailableReaction } from \"../../layer\";\nimport type { AppReactionsManager } from \"../../lib/appManagers/appReactionsManager\";\nimport lottieLoader from \"../../lib/rlottie/lottieLoader\";\nimport RLottiePlayer from \"../../lib/rlottie/rlottiePlayer\";\nimport rootScope from \"../../lib/rootScope\";\nimport animationIntersector from \"../animationIntersector\";\nimport Scrollable, { ScrollableBase, ScrollableX } from \"../scrollable\";\nimport { wrapSticker } from \"../wrappers\";\n\nconst REACTIONS_CLASS_NAME = 'btn-menu-reactions';\nconst REACTION_CLASS_NAME = REACTIONS_CLASS_NAME + '-reaction';\n\nconst REACTION_SIZE = 28;\nconst PADDING = 4;\nconst REACTION_CONTAINER_SIZE = REACTION_SIZE + PADDING * 2;\n\nconst CAN_USE_TRANSFORM = !IS_SAFARI;\n\ntype ChatReactionsMenuPlayers = {\n  select?: RLottiePlayer,\n  appear?: RLottiePlayer,\n  selectWrapper: HTMLElement,\n  appearWrapper: HTMLElement,\n  reaction: string\n};\nexport class ChatReactionsMenu {\n  public widthContainer: HTMLElement;\n  private container: HTMLElement;\n  private reactionsMap: Map<HTMLElement, ChatReactionsMenuPlayers>;\n  private scrollable: ScrollableBase;\n  private animationGroup: string;\n  private middleware: ReturnType<typeof getMiddleware>;\n  private message: Message.message;\n\n  constructor(\n    private appReactionsManager: AppReactionsManager,\n    private type: 'horizontal' | 'vertical',\n    middleware: ChatReactionsMenu['middleware']\n  ) {\n    const widthContainer = this.widthContainer = document.createElement('div');\n    widthContainer.classList.add(REACTIONS_CLASS_NAME + '-container');\n    widthContainer.classList.add(REACTIONS_CLASS_NAME + '-container-' + type);\n\n    const reactionsContainer = this.container = document.createElement('div');\n    reactionsContainer.classList.add(REACTIONS_CLASS_NAME);\n\n    const reactionsScrollable = this.scrollable = type === 'vertical' ? new Scrollable(undefined) : new ScrollableX(undefined);\n    reactionsContainer.append(reactionsScrollable.container);\n    reactionsScrollable.onAdditionalScroll = this.onScroll;\n    reactionsScrollable.setListeners();\n\n    reactionsScrollable.container.classList.add('no-scrollbar');\n\n    ['big'].forEach(type => {\n      const bubble = document.createElement('div');\n      bubble.classList.add(REACTIONS_CLASS_NAME + '-bubble', REACTIONS_CLASS_NAME + '-bubble-' + type);\n      reactionsContainer.append(bubble);\n    });\n\n    this.reactionsMap = new Map();\n    this.animationGroup = 'CHAT-MENU-REACTIONS-' + Date.now();\n    animationIntersector.setOverrideIdleGroup(this.animationGroup, true);\n\n    if(!IS_TOUCH_SUPPORTED) {\n      reactionsContainer.addEventListener('mousemove', this.onMouseMove);\n    }\n\n    attachClickEvent(reactionsContainer, (e) => {\n      const reactionDiv = findUpClassName(e.target, REACTION_CLASS_NAME);\n      if(!reactionDiv) return;\n\n      const players = this.reactionsMap.get(reactionDiv);\n      if(!players) return;\n\n      this.appReactionsManager.sendReaction(this.message, players.reaction);\n    });\n\n    widthContainer.append(reactionsContainer);\n\n    this.middleware = middleware ?? getMiddleware();\n  }\n\n  public init(message: Message.message) {\n    this.message = message;\n\n    const middleware = this.middleware.get();\n    // const result = Promise.resolve(this.appReactionsManager.getAvailableReactionsForPeer(message.peerId)).then((res) => pause(1000).then(() => res));\n    const result = this.appReactionsManager.getAvailableReactionsByMessage(message);\n    callbackify(result, (reactions) => {\n      if(!middleware() || !reactions.length) return;\n      reactions.forEach(reaction => {\n        this.renderReaction(reaction);\n      });\n\n      const setVisible = () => {\n        this.container.classList.add('is-visible');\n      };\n\n      if(result instanceof Promise) {\n        fastRaf(setVisible);\n      } else {\n        setVisible();\n      }\n    });\n  }\n\n  public cleanup() {\n    this.middleware.clean();\n    this.scrollable.removeListeners();\n    this.reactionsMap.clear();\n    animationIntersector.setOverrideIdleGroup(this.animationGroup, false);\n    animationIntersector.checkAnimations(true, this.animationGroup, true);\n  }\n\n  private onScroll = () => {\n    this.reactionsMap.forEach((players, div) => {\n      this.onScrollProcessItem(div, players);\n    });\n  };\n\n  private renderReaction(reaction: AvailableReaction) {\n    const reactionDiv = document.createElement('div');\n    reactionDiv.classList.add(REACTION_CLASS_NAME);\n\n    const scaleContainer = document.createElement('div');\n    scaleContainer.classList.add(REACTION_CLASS_NAME + '-scale');\n\n    const appearWrapper = document.createElement('div');\n    let selectWrapper: HTMLElement;;\n    appearWrapper.classList.add(REACTION_CLASS_NAME + '-appear');\n\n    if(rootScope.settings.animationsEnabled) {\n      selectWrapper = document.createElement('div');\n      selectWrapper.classList.add(REACTION_CLASS_NAME + '-select', 'hide');\n    }\n\n    const players: ChatReactionsMenuPlayers = {\n      selectWrapper,\n      appearWrapper,\n      reaction: reaction.reaction\n    };\n    this.reactionsMap.set(reactionDiv, players);\n\n    const middleware = this.middleware.get();\n\n    const hoverScale = IS_TOUCH_SUPPORTED ? 1 : 1.25;\n    const size = REACTION_SIZE * hoverScale;\n\n    const options = {\n      width: size,\n      height: size,\n      skipRatio: 1,\n      needFadeIn: false,\n      withThumb: false,\n      group: this.animationGroup,\n      middleware\n    };\n\n    if(!rootScope.settings.animationsEnabled) {\n      delete options.needFadeIn;\n      delete options.withThumb;\n\n      wrapSticker({\n        doc: reaction.static_icon,\n        div: appearWrapper,\n        ...options\n      });\n    } else {\n      let isFirst = true;\n      wrapSticker({\n        doc: reaction.appear_animation,\n        div: appearWrapper,\n        play: true,\n        ...options\n      }).then(player => {\n        assumeType<RLottiePlayer>(player);\n  \n        players.appear = player;\n  \n        player.addEventListener('enterFrame', (frameNo) => {\n          if(player.maxFrame === frameNo) {\n            selectLoadPromise.then((selectPlayer) => {\n              assumeType<RLottiePlayer>(selectPlayer);\n              appearWrapper.classList.add('hide');\n              selectWrapper.classList.remove('hide');\n  \n              if(isFirst) {\n                players.select = selectPlayer;\n                isFirst = false;\n              }\n            }, noop);\n          }\n        });\n      }, noop);\n  \n      const selectLoadPromise = wrapSticker({\n        doc: reaction.select_animation,\n        div: selectWrapper,\n        ...options\n      }).then(player => {\n        assumeType<RLottiePlayer>(player);\n\n        return lottieLoader.waitForFirstFrame(player);\n      }).catch(noop);\n    }\n    \n    scaleContainer.append(appearWrapper);\n    selectWrapper && scaleContainer.append(selectWrapper);\n    reactionDiv.append(scaleContainer);\n    this.scrollable.append(reactionDiv);\n  }\n\n  private onScrollProcessItem(div: HTMLElement, players: ChatReactionsMenuPlayers) {\n    // return;\n\n    const scaleContainer = div.firstElementChild as HTMLElement;\n    const visibleRect = getVisibleRect(div, this.scrollable.container);\n    let transform: string;\n    if(!visibleRect) {\n      if(!players.appearWrapper.classList.contains('hide') || !players.appear) {\n        return;\n      }\n\n      if(players.select) {\n        players.select.stop();\n      }\n\n      players.appear.stop();\n      players.appear.autoplay = true;\n      players.appearWrapper.classList.remove('hide');\n      players.selectWrapper.classList.add('hide');\n\n      transform = '';\n    } else if(visibleRect.overflow.left || visibleRect.overflow.right) {\n      const diff = Math.abs(visibleRect.rect.left - visibleRect.rect.right);\n      const scale = Math.min(diff ** 2 / REACTION_CONTAINER_SIZE ** 2, 1);\n\n      transform = 'scale(' + scale + ')';\n    } else {\n      transform = '';\n    }\n\n    if(CAN_USE_TRANSFORM) {\n      scaleContainer.style.transform = transform;\n    }\n  }\n\n  private onMouseMove = (e: MouseEvent) => {\n    const reactionDiv = findUpClassName(e.target, REACTION_CLASS_NAME);\n    if(!reactionDiv) {\n      return;\n    }\n    \n    const players = this.reactionsMap.get(reactionDiv);\n    if(!players) {\n      return;\n    }\n\n    // do not play select animation when appearing\n    if(!players.appear?.paused) {\n      return;\n    }\n\n    const player = players.select;\n    if(!player) {\n      return;\n    }\n\n    if(player.paused) {\n      player.autoplay = true;\n      player.restart();\n    }\n  };\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\r\nimport type { AppPeersManager } from \"../../lib/appManagers/appPeersManager\";\r\nimport type { AppPollsManager } from \"../../lib/appManagers/appPollsManager\";\r\nimport type { AppDocsManager, MyDocument } from \"../../lib/appManagers/appDocsManager\";\r\nimport type { AppMessagesIdsManager } from \"../../lib/appManagers/appMessagesIdsManager\";\r\nimport type { AppReactionsManager } from \"../../lib/appManagers/appReactionsManager\";\r\nimport type Chat from \"./chat\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\r\nimport ButtonMenu, { ButtonMenuItemOptions } from \"../buttonMenu\";\r\nimport { attachContextMenuListener, MenuPositionPadding, openBtnMenu, positionMenu } from \"../misc\";\r\nimport PopupDeleteMessages from \"../popups/deleteMessages\";\r\nimport PopupForward from \"../popups/forward\";\r\nimport PopupPinMessage from \"../popups/unpinMessage\";\r\nimport { copyTextToClipboard } from \"../../helpers/clipboard\";\r\nimport PopupSendNow from \"../popups/sendNow\";\r\nimport { toast } from \"../toast\";\r\nimport I18n, { i18n, LangPackKey } from \"../../lib/langPack\";\r\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent, simulateClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport isSelectionEmpty from \"../../helpers/dom/isSelectionEmpty\";\r\nimport { Message, Poll, Chat as MTChat, MessageMedia, AvailableReaction } from \"../../layer\";\r\nimport PopupReportMessages from \"../popups/reportMessages\";\r\nimport assumeType from \"../../helpers/assumeType\";\r\nimport PopupSponsored from \"../popups/sponsored\";\r\nimport ListenerSetter from \"../../helpers/listenerSetter\";\r\nimport { getMiddleware } from \"../../helpers/middleware\";\r\nimport PeerTitle from \"../peerTitle\";\r\nimport StackedAvatars from \"../stackedAvatars\";\r\nimport { IS_APPLE } from \"../../environment/userAgent\";\r\nimport PopupReactedList from \"../popups/reactedList\";\r\nimport { ChatReactionsMenu } from \"./reactionsMenu\";\r\n\r\nexport default class ChatContextMenu {\r\n  private buttons: (ButtonMenuItemOptions & {verify: () => boolean, notDirect?: () => boolean, withSelection?: true, isSponsored?: true})[];\r\n  private element: HTMLElement;\r\n\r\n  private isSelectable: boolean;\r\n  private isSelected: boolean;\r\n  private target: HTMLElement;\r\n  private isTargetAGroupedItem: boolean;\r\n  private isTextSelected: boolean;\r\n  private isAnchorTarget: boolean;\r\n  private isUsernameTarget: boolean;\r\n  private isSponsored: boolean;\r\n  private isOverBubble: boolean;\r\n  private peerId: PeerId;\r\n  private mid: number;\r\n  private message: Message.message | Message.messageService;\r\n  private noForwards: boolean;\r\n\r\n  private reactionsMenu: ChatReactionsMenu;\r\n  private listenerSetter: ListenerSetter;\r\n\r\n  private viewerPeerId: PeerId;\r\n  private middleware: ReturnType<typeof getMiddleware>;\r\n  private canOpenReactedList: boolean;\r\n\r\n  constructor(\r\n    private attachTo: HTMLElement, \r\n    private chat: Chat, \r\n    private appMessagesManager: AppMessagesManager, \r\n    private appPeersManager: AppPeersManager, \r\n    private appPollsManager: AppPollsManager,\r\n    private appDocsManager: AppDocsManager,\r\n    private appMessagesIdsManager: AppMessagesIdsManager,\r\n    private appReactionsManager: AppReactionsManager\r\n  ) {\r\n    this.listenerSetter = new ListenerSetter();\r\n    this.middleware = getMiddleware();\r\n\r\n    if(IS_TOUCH_SUPPORTED/*  && false */) {\r\n      attachClickEvent(attachTo, (e) => {\r\n        if(chat.selection.isSelecting) {\r\n          return;\r\n        }\r\n\r\n        const className = (e.target as HTMLElement).className;\r\n        if(!className || !className.includes) return;\r\n\r\n        chat.log('touchend', e);\r\n\r\n        const good = ['bubble', 'bubble-content-wrapper', 'bubble-content', 'message', 'time', 'inner'].find(c => className.match(new RegExp(c + '($|\\\\s)')));\r\n        if(good) {\r\n          cancelEvent(e);\r\n          //onContextMenu((e as TouchEvent).changedTouches[0]);\r\n          // onContextMenu((e as TouchEvent).changedTouches ? (e as TouchEvent).changedTouches[0] : e as MouseEvent);\r\n          this.onContextMenu(e);\r\n        }\r\n      }, {listenerSetter: this.chat.bubbles.listenerSetter});\r\n    } else attachContextMenuListener(attachTo, this.onContextMenu, this.chat.bubbles.listenerSetter);\r\n  }\r\n\r\n  private onContextMenu = (e: MouseEvent | Touch | TouchEvent) => {\r\n    let bubble: HTMLElement, contentWrapper: HTMLElement;\r\n\r\n    try {\r\n      contentWrapper = findUpClassName(e.target, 'bubble-content-wrapper');\r\n      bubble = contentWrapper ? contentWrapper.parentElement : findUpClassName(e.target, 'bubble');\r\n    } catch(e) {}\r\n\r\n    // ! context menu click by date bubble (there is no pointer-events)\r\n    if(!bubble || bubble.classList.contains('bubble-first')) return;\r\n\r\n    let element = this.element;\r\n    if(e instanceof MouseEvent || e.hasOwnProperty('preventDefault')) (e as any).preventDefault();\r\n    if(element && element.classList.contains('active')) {\r\n      return false;\r\n    }\r\n    if(e instanceof MouseEvent || e.hasOwnProperty('cancelBubble')) (e as any).cancelBubble = true;\r\n\r\n    let mid = +bubble.dataset.mid;\r\n    if(!mid) return;\r\n\r\n    const isSponsored = this.isSponsored = mid < 0;\r\n    this.isSelectable = this.chat.selection.canSelectBubble(bubble);\r\n    this.peerId = this.chat.peerId;\r\n    //this.msgID = msgID;\r\n    this.target = e.target as HTMLElement;\r\n    this.isTextSelected = !isSelectionEmpty();\r\n    this.isAnchorTarget = this.target.tagName === 'A' && (\r\n      (this.target as HTMLAnchorElement).target === '_blank' || \r\n      this.target.classList.contains('anchor-url')\r\n    );\r\n    this.isUsernameTarget = this.target.tagName === 'A' && this.target.classList.contains('mention');\r\n\r\n    // * если открыть контекстное меню для альбома не по бабблу, и последний элемент не выбран, чтобы показать остальные пункты\r\n    if(this.chat.selection.isSelecting && !contentWrapper) {\r\n      if(isSponsored) {\r\n        return;\r\n      }\r\n\r\n      const mids = this.chat.getMidsByMid(mid);\r\n      if(mids.length > 1) {\r\n        const selectedMid = this.chat.selection.isMidSelected(this.peerId, mid) ? \r\n          mid : \r\n          mids.find(mid => this.chat.selection.isMidSelected(this.peerId, mid));\r\n        if(selectedMid) {\r\n          mid = selectedMid;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.isOverBubble = !!contentWrapper;\r\n\r\n    const groupedItem = findUpClassName(this.target, 'grouped-item');\r\n    this.isTargetAGroupedItem = !!groupedItem;\r\n    if(groupedItem) {\r\n      this.mid = +groupedItem.dataset.mid;\r\n    } else {\r\n      this.mid = mid;\r\n    }\r\n\r\n    this.isSelected = this.chat.selection.isMidSelected(this.peerId, this.mid);\r\n    this.message = this.chat.getMessage(this.mid);\r\n    this.noForwards = !isSponsored && !this.appMessagesManager.canForward(this.message);\r\n    this.viewerPeerId = undefined;\r\n    this.canOpenReactedList = undefined;\r\n\r\n    const initResult = this.init();\r\n    element = initResult.element;\r\n    const {cleanup, destroy, menuPadding} = initResult;\r\n\r\n    const side: 'left' | 'right' = bubble.classList.contains('is-in') ? 'left' : 'right';\r\n    //bubble.parentElement.append(element);\r\n    //appImManager.log('contextmenu', e, bubble, side);\r\n    positionMenu((e as TouchEvent).touches ? (e as TouchEvent).touches[0] : e as MouseEvent, element, side, menuPadding);\r\n    openBtnMenu(element, () => {\r\n      this.mid = 0;\r\n      this.peerId = undefined;\r\n      this.target = null;\r\n      this.viewerPeerId = undefined;\r\n      this.canOpenReactedList = undefined;\r\n      cleanup();\r\n\r\n      setTimeout(() => {\r\n        destroy();\r\n      }, 300);\r\n    });\r\n  };\r\n\r\n  public cleanup() {\r\n    this.listenerSetter.removeAll();\r\n    this.reactionsMenu && this.reactionsMenu.cleanup();\r\n    this.middleware.clean();\r\n  }\r\n\r\n  public destroy() {\r\n    this.cleanup();\r\n  }\r\n\r\n  private filterButtons(buttons: ChatContextMenu['buttons']) {\r\n    if(this.isSponsored) {\r\n      return buttons.filter(button => {\r\n        return button.isSponsored;\r\n      });\r\n    } else {\r\n      return buttons.filter(button => {\r\n        let good: boolean;\r\n\r\n        //if((appImManager.chatSelection.isSelecting && !button.withSelection) || (button.withSelection && !appImManager.chatSelection.isSelecting)) {\r\n        if(this.chat.selection.isSelecting && !button.withSelection) {\r\n          good = false;\r\n        } else {\r\n          good = this.isOverBubble || IS_TOUCH_SUPPORTED || true ? \r\n            button.verify() : \r\n            button.notDirect && button.verify() && button.notDirect();\r\n        }\r\n\r\n        return good;\r\n      });\r\n    }\r\n  }\r\n\r\n  private setButtons() {\r\n    this.buttons = [{\r\n      icon: 'send2',\r\n      text: 'MessageScheduleSend',\r\n      onClick: this.onSendScheduledClick,\r\n      verify: () => this.chat.type === 'scheduled' && !this.message.pFlags.is_outgoing\r\n    }, {\r\n      icon: 'send2',\r\n      text: 'Message.Context.Selection.SendNow',\r\n      onClick: this.onSendScheduledClick,\r\n      verify: () => this.chat.type === 'scheduled' && this.isSelected && !this.chat.selection.selectionSendNowBtn.hasAttribute('disabled'),\r\n      notDirect: () => true,\r\n      withSelection: true\r\n    }, {\r\n      icon: 'schedule',\r\n      text: 'MessageScheduleEditTime',\r\n      onClick: () => {\r\n        this.chat.input.scheduleSending(() => {\r\n          assumeType<Message.message>(this.message);\r\n          this.appMessagesManager.editMessage(this.message, this.message.message, {\r\n            scheduleDate: this.chat.input.scheduleDate,\r\n            entities: this.message.entities\r\n          });\r\n\r\n          this.chat.input.onMessageSent(false, false);\r\n        }, new Date(this.message.date * 1000));\r\n      },\r\n      verify: () => this.chat.type === 'scheduled'\r\n    }, {\r\n      icon: 'reply',\r\n      text: 'Reply',\r\n      onClick: this.onReplyClick,\r\n      verify: () => this.chat.canSend() && \r\n        !this.message.pFlags.is_outgoing && \r\n        !!this.chat.input.messageInput && \r\n        this.chat.type !== 'scheduled'/* ,\r\n      cancelEvent: true */\r\n    }, {\r\n      icon: 'edit',\r\n      text: 'Edit',\r\n      onClick: this.onEditClick,\r\n      verify: () => this.appMessagesManager.canEditMessage(this.message, 'text') && !!this.chat.input.messageInput\r\n    }, {\r\n      icon: 'copy',\r\n      text: 'Copy',\r\n      onClick: this.onCopyClick,\r\n      verify: () => !this.noForwards && !!(this.message as Message.message).message && !this.isTextSelected && (!this.isAnchorTarget || (this.message as Message.message).message !== this.target.innerText)\r\n    }, {\r\n      icon: 'copy',\r\n      text: 'Chat.CopySelectedText',\r\n      onClick: this.onCopyClick,\r\n      verify: () => !this.noForwards && !!(this.message as Message.message).message && this.isTextSelected\r\n    }, {\r\n      icon: 'copy',\r\n      text: 'Message.Context.Selection.Copy',\r\n      onClick: this.onCopyClick,\r\n      verify: () => {\r\n        if(!this.isSelected || this.noForwards) {\r\n          return false;\r\n        }\r\n\r\n        for(const [peerId, mids] of this.chat.selection.selectedMids) {\r\n          for(const mid of mids) {\r\n            if(!!this.appMessagesManager.getMessageByPeer(peerId, mid).message) {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n\r\n        return false;\r\n      },\r\n      notDirect: () => true,\r\n      withSelection: true\r\n    }, {\r\n      icon: 'copy',\r\n      text: 'CopyLink',\r\n      onClick: this.onCopyAnchorLinkClick,\r\n      verify: () => this.isAnchorTarget,\r\n      withSelection: true\r\n    }, {\r\n      icon: 'copy',\r\n      text: 'Text.Context.Copy.Username',\r\n      onClick: () => {\r\n        copyTextToClipboard(this.target.innerHTML);\r\n      },\r\n      verify: () => this.isUsernameTarget,\r\n      withSelection: true\r\n    }, {\r\n      icon: 'copy',\r\n      text: 'Text.Context.Copy.Hashtag',\r\n      onClick: () => {\r\n        copyTextToClipboard(this.target.innerHTML);\r\n      },\r\n      verify: () => this.target.classList.contains('anchor-hashtag'),\r\n      withSelection: true\r\n    }, {\r\n      icon: 'link',\r\n      text: 'MessageContext.CopyMessageLink1',\r\n      onClick: this.onCopyLinkClick,\r\n      verify: () => this.appPeersManager.isChannel(this.peerId) && !this.message.pFlags.is_outgoing\r\n    }, {\r\n      icon: 'pin',\r\n      text: 'Message.Context.Pin',\r\n      onClick: this.onPinClick,\r\n      verify: () => !this.message.pFlags.is_outgoing && \r\n        this.message._ !== 'messageService' && \r\n        !this.message.pFlags.pinned && \r\n        this.appPeersManager.canPinMessage(this.peerId) && \r\n        this.chat.type !== 'scheduled',\r\n    }, {\r\n      icon: 'unpin',\r\n      text: 'Message.Context.Unpin',\r\n      onClick: this.onUnpinClick,\r\n      verify: () => (this.message as Message.message).pFlags.pinned && this.appPeersManager.canPinMessage(this.peerId),\r\n    }, {\r\n      icon: 'download',\r\n      text: 'MediaViewer.Context.Download',\r\n      onClick: () => {\r\n        this.appDocsManager.saveDocFile((this.message as any).media.document);\r\n      },\r\n      verify: () => {\r\n        if(this.message.pFlags.is_outgoing) {\r\n          return false;\r\n        }\r\n        \r\n        const doc: MyDocument = ((this.message as Message.message).media as MessageMedia.messageMediaDocument)?.document as any;\r\n        if(!doc) return false;\r\n        \r\n        let hasTarget = !!IS_TOUCH_SUPPORTED;\r\n        const isGoodType = !doc.type || !(['gif', 'video', 'sticker'] as MyDocument['type'][]).includes(doc.type);\r\n        if(isGoodType) hasTarget = hasTarget || !!findUpClassName(this.target, 'document') || !!findUpClassName(this.target, 'audio');\r\n        return isGoodType && hasTarget;\r\n      }\r\n    }, {\r\n      icon: 'checkretract',\r\n      text: 'Chat.Poll.Unvote',\r\n      onClick: this.onRetractVote,\r\n      verify: () => {\r\n        const poll = (this.message as any).media?.poll as Poll;\r\n        return poll && poll.chosenIndexes.length && !poll.pFlags.closed && !poll.pFlags.quiz;\r\n      }/* ,\r\n      cancelEvent: true */\r\n    }, {\r\n      icon: 'stop',\r\n      text: 'Chat.Poll.Stop',\r\n      onClick: this.onStopPoll,\r\n      verify: () => {\r\n        const poll = (this.message as any).media?.poll;\r\n        return this.appMessagesManager.canEditMessage(this.message, 'poll') && poll && !poll.pFlags.closed && !this.message.pFlags.is_outgoing;\r\n      }/* ,\r\n      cancelEvent: true */\r\n    }, {\r\n      icon: 'forward',\r\n      text: 'Forward',\r\n      onClick: this.onForwardClick, // let forward the message if it's outgoing but not ours (like a changelog)\r\n      verify: () => !this.noForwards && this.chat.type !== 'scheduled' && (!this.message.pFlags.is_outgoing || !this.message.pFlags.out) && this.message._ !== 'messageService'\r\n    }, {\r\n      icon: 'forward',\r\n      text: 'Message.Context.Selection.Forward',\r\n      onClick: this.onForwardClick,\r\n      verify: () => this.chat.selection.selectionForwardBtn && \r\n        this.isSelected && \r\n        !this.chat.selection.selectionForwardBtn.hasAttribute('disabled'),\r\n      notDirect: () => true,\r\n      withSelection: true\r\n    }, {\r\n      icon: 'flag',\r\n      text: 'ReportChat',\r\n      onClick: () => {\r\n        new PopupReportMessages(this.peerId, [this.mid]);\r\n      },\r\n      verify: () => !this.message.pFlags.out && this.message._ === 'message' && !this.message.pFlags.is_outgoing && this.appPeersManager.isChannel(this.peerId),\r\n      notDirect: () => true,\r\n      withSelection: true\r\n    }, {\r\n      icon: 'select',\r\n      text: 'Message.Context.Select',\r\n      onClick: this.onSelectClick,\r\n      verify: () => !(this.message as Message.messageService).action && !this.isSelected && this.isSelectable,\r\n      notDirect: () => true,\r\n      withSelection: true\r\n    }, {\r\n      icon: 'select',\r\n      text: 'Message.Context.Selection.Clear',\r\n      onClick: this.onClearSelectionClick,\r\n      verify: () => this.isSelected,\r\n      notDirect: () => true,\r\n      withSelection: true\r\n    }, {\r\n      onClick: () => {\r\n        if(this.viewerPeerId) {\r\n          this.chat.appImManager.setInnerPeer({\r\n            peerId: this.viewerPeerId\r\n          });\r\n        } else if(this.canOpenReactedList) {\r\n          new PopupReactedList(this.appMessagesManager, this.message as Message.message);\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      verify: () => !this.peerId.isUser() && (!!(this.message as Message.message).reactions?.recent_reactions?.length || this.appMessagesManager.canViewMessageReadParticipants(this.message)),\r\n      notDirect: () => true\r\n    }, {\r\n      icon: 'delete danger',\r\n      text: 'Delete',\r\n      onClick: this.onDeleteClick,\r\n      verify: () => this.appMessagesManager.canDeleteMessage(this.message)\r\n    }, {\r\n      icon: 'delete danger',\r\n      text: 'Message.Context.Selection.Delete',\r\n      onClick: this.onDeleteClick,\r\n      verify: () => this.isSelected && !this.chat.selection.selectionDeleteBtn.hasAttribute('disabled'),\r\n      notDirect: () => true,\r\n      withSelection: true\r\n    }, {\r\n      icon: 'info',\r\n      text: 'Chat.Message.Sponsored.What',\r\n      onClick: () => {\r\n        new PopupSponsored();\r\n      },\r\n      verify: () => false,\r\n      isSponsored: true\r\n    }];\r\n  }\r\n\r\n  private init() {\r\n    this.cleanup();\r\n    this.setButtons();\r\n    \r\n    const filteredButtons = this.filterButtons(this.buttons);\r\n    const element = this.element = ButtonMenu(filteredButtons, this.listenerSetter);\r\n    element.id = 'bubble-contextmenu';\r\n    element.classList.add('contextmenu');\r\n\r\n    const viewsButton = filteredButtons.find(button => !button.icon);\r\n    if(viewsButton) {\r\n      const reactions = (this.message as Message.message).reactions;\r\n      const recentReactions = reactions?.recent_reactions;\r\n      const isViewingReactions = !!recentReactions?.length;\r\n      const participantsCount = this.appMessagesManager.canViewMessageReadParticipants(this.message) ? (this.appPeersManager.getPeer(this.peerId) as MTChat.chat).participants_count : undefined;\r\n      const reactedLength = reactions ? reactions.results.reduce((acc, r) => acc + r.count, 0) : undefined;\r\n\r\n      viewsButton.element.classList.add('tgico-' + (isViewingReactions ? 'reactions' : 'checks'));\r\n      const i18nElem = new I18n.IntlElement({\r\n        key: isViewingReactions ? (\r\n          participantsCount === undefined ? 'Chat.Context.ReactedFast' : 'Chat.Context.Reacted'\r\n        ) : 'NobodyViewed',\r\n        args: isViewingReactions ? (\r\n          participantsCount === undefined ? [reactedLength] : [participantsCount, participantsCount]\r\n        ) : undefined,\r\n        element: viewsButton.textElement\r\n      });\r\n\r\n      let fakeText: HTMLElement;\r\n      if(isViewingReactions) {\r\n        if(participantsCount === undefined) {\r\n          fakeText = i18n('Chat.Context.ReactedFast', [reactedLength]);\r\n        } else {\r\n          fakeText = i18n(\r\n            recentReactions.length === participantsCount ? 'Chat.Context.ReactedFast' : 'Chat.Context.Reacted', \r\n            [recentReactions.length, participantsCount]\r\n          );\r\n        }\r\n      } else {\r\n        fakeText = i18n('Loading');\r\n      }\r\n\r\n      fakeText.classList.add('btn-menu-item-text-fake');\r\n      viewsButton.element.append(fakeText);\r\n\r\n      const MAX_AVATARS = 3;\r\n      const PADDING_PER_AVATAR = .875;\r\n      i18nElem.element.style.visibility = 'hidden';\r\n      i18nElem.element.style.paddingRight = isViewingReactions ? PADDING_PER_AVATAR * Math.min(MAX_AVATARS, recentReactions.length) + 'rem' : '1rem';\r\n      const middleware = this.middleware.get();\r\n      this.appMessagesManager.getMessageReactionsListAndReadParticipants(this.message as Message.message).then((result) => {\r\n        if(!middleware()) {\r\n          return;\r\n        }\r\n\r\n        if(fakeText) {\r\n          fakeText.remove();\r\n        }\r\n\r\n        const reactions = result.combined;\r\n        const reactedLength = participantsCount === undefined ? \r\n          result.reactionsCount : \r\n          (\r\n            isViewingReactions ? \r\n              reactions.filter(reaction => reaction.reaction).length : \r\n              reactions.length\r\n          );\r\n\r\n        let fakeElem: HTMLElement;\r\n        if(reactions.length === 1) {\r\n          fakeElem = new PeerTitle({\r\n            peerId: reactions[0].peerId,\r\n            onlyFirstName: true,\r\n            dialog: false,\r\n          }).element;\r\n\r\n          if(!isViewingReactions || result.readParticipants.length <= 1) {\r\n            this.viewerPeerId = reactions[0].peerId;\r\n          }\r\n        } else if(isViewingReactions) {\r\n          const isFull = reactedLength === reactions.length || participantsCount === undefined;\r\n          fakeElem = i18n(\r\n            isFull ? 'Chat.Context.ReactedFast' : 'Chat.Context.Reacted', \r\n            isFull ? [reactedLength] : [reactedLength, reactions.length]\r\n          );\r\n        } else {\r\n          if(!reactions.length) {\r\n            i18nElem.element.style.visibility = '';\r\n          } else {\r\n            fakeElem = i18n('MessageSeen', [reactions.length]);\r\n          }\r\n        }\r\n\r\n        if(fakeElem) {\r\n          fakeElem.style.paddingRight = PADDING_PER_AVATAR * Math.min(MAX_AVATARS, reactedLength) + 'rem';\r\n          fakeElem.classList.add('btn-menu-item-text-fake');\r\n          viewsButton.element.append(fakeElem);\r\n        }\r\n\r\n        if(reactions.length) {\r\n          const avatars = new StackedAvatars({avatarSize: 24});\r\n          avatars.render(recentReactions ? recentReactions.map(r => this.appPeersManager.getPeerId(r.peer_id)) : reactions.map(reaction => reaction.peerId));\r\n          viewsButton.element.append(avatars.container);\r\n\r\n          // if(reactions.length > 1) {\r\n          // if(isViewingReactions) {\r\n            this.canOpenReactedList = true;\r\n          // }\r\n        }\r\n      });\r\n    }\r\n\r\n    let menuPadding: MenuPositionPadding;\r\n    let reactionsMenu: ChatReactionsMenu;\r\n    if(this.message._ === 'message' && !this.chat.selection.isSelecting && !this.message.pFlags.is_outgoing && !this.message.pFlags.is_scheduled) {\r\n      const position: 'horizontal' | 'vertical' = (IS_APPLE || IS_TOUCH_SUPPORTED)/*  && false */ ? 'horizontal' : 'vertical';\r\n      reactionsMenu = this.reactionsMenu = new ChatReactionsMenu(this.appReactionsManager, position, this.middleware);\r\n      reactionsMenu.init(this.appMessagesManager.getGroupsFirstMessage(this.message));\r\n      element.prepend(reactionsMenu.widthContainer);\r\n\r\n      const size = 42;\r\n      const margin = 8;\r\n      const totalSize = size + margin;\r\n      if(position === 'vertical') {\r\n        menuPadding = {\r\n          top: 24,\r\n          // bottom: 36, // positionMenu will detect it itself somehow\r\n          left: totalSize\r\n        };\r\n      } else {\r\n        menuPadding = {\r\n          top: totalSize,\r\n          right: 36,\r\n          left: 24\r\n        };\r\n      }\r\n    }\r\n\r\n    this.chat.container.append(element);\r\n\r\n    return {\r\n      element, \r\n      cleanup: () => {\r\n        this.cleanup();\r\n        reactionsMenu && reactionsMenu.cleanup();\r\n      },\r\n      destroy: () => {\r\n        element.remove();\r\n      },\r\n      menuPadding\r\n    };\r\n  }\r\n\r\n  private onSendScheduledClick = () => {\r\n    if(this.chat.selection.isSelecting) {\r\n      simulateClickEvent(this.chat.selection.selectionSendNowBtn);\r\n    } else {\r\n      new PopupSendNow(this.peerId, this.chat.getMidsByMid(this.mid));\r\n    }\r\n  };\r\n\r\n  private onReplyClick = () => {\r\n    this.chat.input.initMessageReply(this.mid);\r\n  };\r\n\r\n  private onEditClick = () => {\r\n    this.chat.input.initMessageEditing(this.mid);\r\n  };\r\n\r\n  private onCopyClick = () => {\r\n    if(isSelectionEmpty()) {\r\n      const mids = this.chat.selection.isSelecting ? \r\n        [...this.chat.selection.selectedMids.get(this.peerId)].sort((a, b) => a - b) : \r\n        [this.mid];\r\n\r\n      const str = mids.reduce((acc, mid) => {\r\n        const message = this.chat.getMessage(mid);\r\n        return acc + (message?.message ? message.message + '\\n' : '');\r\n      }, '').trim();\r\n\r\n      copyTextToClipboard(str);\r\n    } else {\r\n      document.execCommand('copy');\r\n      //cancelSelection();\r\n    }\r\n  };\r\n\r\n  private onCopyAnchorLinkClick = () => {\r\n    copyTextToClipboard((this.target as HTMLAnchorElement).href);\r\n  };\r\n\r\n  private onCopyLinkClick = () => {\r\n    let threadMessage: Message.message;\r\n    if(this.chat.type === 'discussion') {\r\n      threadMessage = this.appMessagesManager.getMessageByPeer(this.peerId, this.chat.threadId);\r\n    }\r\n\r\n    const username = this.appPeersManager.getPeerUsername(threadMessage ? threadMessage.fromId : this.peerId);\r\n    const msgId = this.appMessagesIdsManager.getServerMessageId(this.mid);\r\n    let url = 'https://t.me/';\r\n    let key: LangPackKey;\r\n    if(username) {\r\n      url += username + '/' + (threadMessage ? this.appMessagesIdsManager.getServerMessageId(threadMessage.fwd_from.channel_post) : msgId);\r\n      if(threadMessage) url += '?comment=' + msgId;\r\n      key = 'LinkCopied';\r\n    } else {\r\n      url += 'c/' + this.peerId.toChatId() + '/' + msgId;\r\n      if(threadMessage) url += '?thread=' + this.appMessagesIdsManager.getServerMessageId(threadMessage.mid);\r\n      key = 'LinkCopiedPrivateInfo';\r\n    }\r\n\r\n    toast(I18n.format(key, true));\r\n\r\n    copyTextToClipboard(url);\r\n  };\r\n\r\n  private onPinClick = () => {\r\n    new PopupPinMessage(this.peerId, this.mid);\r\n  };\r\n\r\n  private onUnpinClick = () => {\r\n    new PopupPinMessage(this.peerId, this.mid, true);\r\n  };\r\n\r\n  private onRetractVote = () => {\r\n    this.appPollsManager.sendVote(this.message, []);\r\n  };\r\n\r\n  private onStopPoll = () => {\r\n    this.appPollsManager.stopPoll(this.message);\r\n  };\r\n\r\n  private onForwardClick = () => {\r\n    if(this.chat.selection.isSelecting) {\r\n      simulateClickEvent(this.chat.selection.selectionForwardBtn);\r\n    } else {\r\n      const mids = this.isTargetAGroupedItem ? [this.mid] : this.chat.getMidsByMid(this.mid);\r\n      new PopupForward({\r\n        [this.peerId]: mids\r\n      });\r\n    }\r\n  };\r\n\r\n  private onSelectClick = () => {\r\n    this.chat.selection.toggleByElement(findUpClassName(this.target, 'grouped-item') || findUpClassName(this.target, 'bubble'));\r\n  };\r\n\r\n  private onClearSelectionClick = () => {\r\n    this.chat.selection.cancelSelection();\r\n  };\r\n\r\n  private onDeleteClick = () => {\r\n    if(this.chat.selection.isSelecting) {\r\n      simulateClickEvent(this.chat.selection.selectionDeleteBtn);\r\n    } else {\r\n      new PopupDeleteMessages(this.peerId, this.isTargetAGroupedItem ? [this.mid] : this.chat.getMidsByMid(this.mid), this.chat.type);\r\n    }\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport ListenerSetter from \"../../helpers/listenerSetter\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport ButtonMenu, { ButtonMenuItemOptions } from \"../buttonMenu\";\r\nimport { attachContextMenuListener, openBtnMenu } from \"../misc\";\r\n\r\nexport default class SendMenu {\r\n  public sendMenu: HTMLDivElement;\r\n  private sendMenuButtons: (ButtonMenuItemOptions & {verify: () => boolean})[];\r\n  private type: 'schedule' | 'reminder';\r\n  \r\n  constructor(options: {\r\n    onSilentClick: () => void,\r\n    onScheduleClick: () => void,\r\n    listenerSetter?: ListenerSetter,\r\n    openSide: string,\r\n    onContextElement: HTMLElement,\r\n    onOpen?: () => boolean\r\n  }) {\r\n    this.sendMenuButtons = [{\r\n      icon: 'mute',\r\n      text: 'Chat.Send.WithoutSound',\r\n      onClick: options.onSilentClick,\r\n      verify: () => this.type === 'schedule'\r\n    }, {\r\n      icon: 'schedule',\r\n      text: 'Chat.Send.ScheduledMessage',\r\n      onClick: options.onScheduleClick,\r\n      verify: () => this.type === 'schedule'\r\n    }, {\r\n      icon: 'schedule',\r\n      text: 'Chat.Send.SetReminder',\r\n      onClick: options.onScheduleClick,\r\n      verify: () => this.type === 'reminder'\r\n    }];\r\n  \r\n    this.sendMenu = ButtonMenu(this.sendMenuButtons, options.listenerSetter);\r\n    this.sendMenu.classList.add('menu-send', options.openSide);\r\n\r\n    attachContextMenuListener(options.onContextElement, (e: any) => {\r\n      if(options.onOpen && !options.onOpen()) {\r\n        return;\r\n      }\r\n\r\n      this.sendMenuButtons.forEach(button => {\r\n        button.element.classList.toggle('hide', !button.verify());\r\n      });\r\n      \r\n      cancelEvent(e);\r\n      openBtnMenu(this.sendMenu);\r\n    }, options.listenerSetter);\r\n  }\r\n\r\n  public setPeerId(peerId: PeerId) {\r\n    this.type = peerId === rootScope.myId ? 'reminder' : 'schedule';\r\n  }\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type Chat from \"../chat/chat\";\r\nimport PopupElement from \".\";\r\nimport CheckboxField from \"../checkboxField\";\r\nimport InputField from \"../inputField\";\r\nimport RadioField from \"../radioField\";\r\nimport Scrollable from \"../scrollable\";\r\nimport SendContextMenu from \"../chat/sendContextMenu\";\r\nimport I18n, { _i18n } from \"../../lib/langPack\";\r\nimport findUpTag from \"../../helpers/dom/findUpTag\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport getRichValue from \"../../helpers/dom/getRichValue\";\r\nimport isInputEmpty from \"../../helpers/dom/isInputEmpty\";\r\nimport whichChild from \"../../helpers/dom/whichChild\";\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport { Poll } from \"../../layer\";\r\n\r\nconst MAX_LENGTH_QUESTION = 255;\r\nconst MAX_LENGTH_OPTION = 100;\r\nconst MAX_LENGTH_SOLUTION = 200;\r\n\r\nexport default class PopupCreatePoll extends PopupElement {\r\n  private questionInputField: InputField;\r\n  private questions: HTMLElement;\r\n  private scrollable: Scrollable;\r\n  private tempId = 0;\r\n\r\n  private anonymousCheckboxField: CheckboxField;\r\n  private multipleCheckboxField: PopupCreatePoll['anonymousCheckboxField'];\r\n  private quizCheckboxField: PopupCreatePoll['anonymousCheckboxField'];\r\n\r\n  private correctAnswers: Uint8Array[];\r\n  private quizSolutionField: InputField;\r\n  private optionInputFields: InputField[];\r\n\r\n  constructor(private chat: Chat) {\r\n    super('popup-create-poll popup-new-media', null, {closable: true, withConfirm: 'Create', body: true});\r\n\r\n    _i18n(this.title, 'NewPoll');\r\n\r\n    this.questionInputField = new InputField({\r\n      placeholder: 'AskAQuestion',\r\n      label: 'AskAQuestion', \r\n      name: 'question', \r\n      maxLength: MAX_LENGTH_QUESTION\r\n    });\r\n\r\n    this.listenerSetter.add(this.questionInputField.input)('input', () => {\r\n      this.handleChange();\r\n    });\r\n\r\n    this.optionInputFields = [];\r\n\r\n    if(this.chat.type !== 'scheduled') {\r\n      const sendMenu = new SendContextMenu({\r\n        onSilentClick: () => {\r\n          this.chat.input.sendSilent = true;\r\n          this.send();\r\n        },\r\n        onScheduleClick: () => {\r\n          this.chat.input.scheduleSending(() => {\r\n            this.send();\r\n          });\r\n        },\r\n        openSide: 'bottom-left',\r\n        onContextElement: this.btnConfirm,\r\n      });\r\n  \r\n      sendMenu.setPeerId(this.chat.peerId);\r\n\r\n      this.header.append(sendMenu.sendMenu);\r\n    }\r\n\r\n    this.header.append(this.questionInputField.container);\r\n\r\n    const hr = document.createElement('hr');\r\n    const d = document.createElement('div');\r\n    d.classList.add('caption');\r\n    _i18n(d, 'PollOptions');\r\n\r\n    this.questions = document.createElement('form');\r\n    this.questions.classList.add('poll-create-questions');\r\n\r\n    const dd = document.createElement('div');\r\n    dd.classList.add('poll-create-settings');\r\n    \r\n    const settingsCaption = document.createElement('div');\r\n    settingsCaption.classList.add('caption');\r\n    _i18n(settingsCaption, 'Settings');\r\n\r\n    if(!this.chat.appPeersManager.isBroadcast(this.chat.peerId)) {\r\n      this.anonymousCheckboxField = new CheckboxField({\r\n        text: 'NewPoll.Anonymous', \r\n        name: 'anonymous'\r\n      });\r\n      this.anonymousCheckboxField.input.checked = true;\r\n      dd.append(this.anonymousCheckboxField.label);\r\n    }\r\n    \r\n    this.multipleCheckboxField = new CheckboxField({\r\n      text: 'NewPoll.MultipleChoice', \r\n      name: 'multiple'\r\n    });\r\n    this.quizCheckboxField = new CheckboxField({\r\n      text: 'NewPoll.Quiz', \r\n      name: 'quiz'\r\n    });\r\n\r\n    this.listenerSetter.add(this.multipleCheckboxField.input)('change', () => {\r\n      const checked = this.multipleCheckboxField.input.checked;\r\n      this.quizCheckboxField.input.toggleAttribute('disabled', checked);\r\n    });\r\n\r\n    this.listenerSetter.add(this.quizCheckboxField.input)('change', () => {\r\n      const checked = this.quizCheckboxField.input.checked;\r\n\r\n      (Array.from(this.questions.children) as HTMLElement[]).map(el => {\r\n        el.classList.toggle('radio-field', checked);\r\n      });\r\n\r\n      if(!checked) {\r\n        this.correctAnswers = undefined;\r\n        this.quizSolutionField.setValueSilently('');\r\n      }\r\n\r\n      quizElements.forEach(el => el.classList.toggle('hide', !checked));\r\n\r\n      this.multipleCheckboxField.input.toggleAttribute('disabled', checked);\r\n      this.handleChange();\r\n    });\r\n\r\n    dd.append(this.multipleCheckboxField.label, this.quizCheckboxField.label);\r\n\r\n    const quizElements: HTMLElement[] = [];\r\n\r\n    const quizSolutionCaption = document.createElement('div');\r\n    quizSolutionCaption.classList.add('caption');\r\n    _i18n(quizSolutionCaption, 'AccDescrQuizExplanation');\r\n\r\n    const quizHr = document.createElement('hr');\r\n\r\n    const quizSolutionContainer = document.createElement('div');\r\n    quizSolutionContainer.classList.add('poll-create-questions');\r\n\r\n    this.quizSolutionField = new InputField({\r\n      placeholder: 'NewPoll.Explanation.Placeholder', \r\n      label: 'NewPoll.Explanation.Placeholder',\r\n      name: 'solution',\r\n      maxLength: MAX_LENGTH_SOLUTION\r\n    });\r\n\r\n    this.listenerSetter.add(this.questionInputField.input)('input', () => {\r\n      this.handleChange();\r\n    });\r\n\r\n    const quizSolutionSubtitle = document.createElement('div');\r\n    quizSolutionSubtitle.classList.add('subtitle');\r\n    _i18n(quizSolutionSubtitle, 'AddAnExplanationInfo');\r\n\r\n    quizSolutionContainer.append(this.quizSolutionField.container, quizSolutionSubtitle);\r\n\r\n    quizElements.push(quizHr, quizSolutionCaption, quizSolutionContainer);\r\n    quizElements.forEach(el => el.classList.add('hide'));\r\n\r\n    this.body.parentElement.insertBefore(hr, this.body);\r\n    this.body.append(d, this.questions, document.createElement('hr'), settingsCaption, dd, ...quizElements);\r\n\r\n    attachClickEvent(this.btnConfirm, this.onSubmitClick, {listenerSetter: this.listenerSetter});\r\n\r\n    this.scrollable = new Scrollable(this.body);\r\n    this.appendMoreField();\r\n\r\n    this.onEscape = () => {\r\n      return !this.getFilledAnswers().length;\r\n    };\r\n\r\n    this.handleChange();\r\n  }\r\n\r\n  private getFilledAnswers() {\r\n    const answers = Array.from(this.questions.children).map((el, idx) => {\r\n      const input = el.querySelector('.input-field-input') as HTMLElement;\r\n      return input instanceof HTMLInputElement ? input.value : getRichValue(input, false).value;\r\n    }).filter(v => !!v.trim());\r\n\r\n    return answers;\r\n  }\r\n\r\n  private onSubmitClick = () => {\r\n    this.send();\r\n  };\r\n\r\n  private validate() {\r\n    const question = this.questionInputField.value;\r\n    if(!question) {\r\n      return false;\r\n    }\r\n\r\n    if(question.length > MAX_LENGTH_QUESTION) {\r\n      return false;\r\n    }\r\n\r\n    if(this.quizCheckboxField.input.checked && !this.correctAnswers?.length) {\r\n      return false;\r\n    }\r\n\r\n    const answers = this.getFilledAnswers();\r\n    if(answers.length < 2) {\r\n      return false;\r\n    }\r\n    \r\n    const tooLongOption = answers.find(a => a.length > MAX_LENGTH_OPTION);\r\n    if(tooLongOption) {\r\n      return false;\r\n    }\r\n\r\n    const {value: quizSolution} = getRichValue(this.quizSolutionField.input, false);\r\n    if(quizSolution.length > MAX_LENGTH_SOLUTION) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private handleChange() {\r\n    const valid = this.validate();\r\n    this.btnConfirm.toggleAttribute('disabled', !valid);\r\n  }\r\n\r\n  public send(force = false) {\r\n    const question = this.questionInputField.value;\r\n\r\n    const answers = this.getFilledAnswers();\r\n\r\n    const {value: quizSolution, entities: quizSolutionEntities} = getRichValue(this.quizSolutionField.input);\r\n\r\n    if(this.chat.type === 'scheduled' && !force) {\r\n      this.chat.input.scheduleSending(() => {\r\n        this.send(true);\r\n      });\r\n      \r\n      return;\r\n    }\r\n\r\n    this.hide();\r\n\r\n    //const randomID = [nextRandomInt(0xFFFFFFFF), nextRandomInt(0xFFFFFFFF)];\r\n    //const randomIDS = bigint(randomID[0]).shiftLeft(32).add(bigint(randomID[1])).toString();\r\n\r\n    const pFlags: Poll['pFlags'] = {};\r\n\r\n    if(this.anonymousCheckboxField && !this.anonymousCheckboxField.input.checked) {\r\n      pFlags.public_voters = true;\r\n    }\r\n\r\n    if(this.multipleCheckboxField.input.checked) {\r\n      pFlags.multiple_choice = true;\r\n    }\r\n\r\n    if(this.quizCheckboxField.input.checked) {\r\n      pFlags.quiz = true;\r\n    }\r\n\r\n    const poll: Poll = {\r\n      _: 'poll',\r\n      pFlags,\r\n      question,\r\n      answers: answers.map((value, idx) => {\r\n        return {\r\n          _: 'pollAnswer',\r\n          text: value,\r\n          option: new Uint8Array([idx])\r\n        };\r\n      }),\r\n      id: undefined\r\n    };\r\n    //poll.id = randomIDS;\r\n\r\n    const inputMediaPoll = this.chat.appPollsManager.getInputMediaPoll(poll, this.correctAnswers, quizSolution, quizSolutionEntities);\r\n\r\n    //console.log('Will try to create poll:', inputMediaPoll);\r\n\r\n    this.chat.appMessagesManager.sendOther(this.chat.peerId, inputMediaPoll, {\r\n      ...this.chat.getMessageSendingParams()\r\n    });\r\n\r\n    if(this.chat.input.helperType === 'reply') {\r\n      this.chat.input.clearHelper();\r\n    }\r\n\r\n    this.chat.input.onMessageSent(false, false);\r\n  }\r\n\r\n  onInput = (e: Event) => {\r\n    const target = e.target as HTMLInputElement;\r\n\r\n    const radioLabel = findUpTag(target, 'LABEL');\r\n    const isEmpty = isInputEmpty(target);\r\n    if(!isEmpty) {\r\n      target.parentElement.classList.add('is-filled');\r\n      radioLabel.classList.remove('hidden-widget');\r\n      radioLabel.firstElementChild.removeAttribute('disabled');\r\n    }\r\n\r\n    const isLast = !radioLabel.nextElementSibling;\r\n    if(isLast && !isEmpty && this.questions.childElementCount < 10) {\r\n      this.appendMoreField();\r\n    }\r\n\r\n    this.handleChange();\r\n  };\r\n\r\n  onDeleteClick = (e: MouseEvent) => {\r\n    const target = e.target as HTMLSpanElement;\r\n    const label = findUpTag(target, 'LABEL');\r\n    const idx = whichChild(label);\r\n\r\n    if(this.correctAnswers && this.correctAnswers[0][0] === idx) {\r\n      this.correctAnswers = undefined;\r\n    }\r\n\r\n    label.remove();\r\n    this.optionInputFields.splice(idx, 1);\r\n\r\n    this.optionInputFields.forEach((inputField, idx) => {\r\n      inputField.options.labelOptions.length = 0;\r\n      inputField.options.labelOptions.push(idx + 1);\r\n      const i18nElement = I18n.weakMap.get(inputField.label.firstElementChild as HTMLElement);\r\n      i18nElement.update();\r\n    });\r\n\r\n    this.handleChange();\r\n  };\r\n\r\n  private appendMoreField() {\r\n    const tempId = this.tempId++;\r\n    const idx = this.questions.childElementCount + 1;\r\n    const questionField = new InputField({\r\n      placeholder: 'NewPoll.OptionsAddOption', \r\n      label: 'NewPoll.OptionLabel',\r\n      labelOptions: [idx],\r\n      name: 'question-' + tempId, \r\n      maxLength: MAX_LENGTH_OPTION\r\n    });\r\n    this.listenerSetter.add(questionField.input)('input', this.onInput);\r\n\r\n    const radioField = new RadioField({\r\n      text: '', \r\n      name: 'question'\r\n    });\r\n    radioField.main.append(questionField.container);\r\n    attachClickEvent(questionField.input, cancelEvent, {listenerSetter: this.listenerSetter});\r\n    radioField.label.classList.add('hidden-widget');\r\n    radioField.input.disabled = true;\r\n    if(!this.quizCheckboxField.input.checked) {\r\n      radioField.label.classList.remove('radio-field');\r\n    }\r\n    this.listenerSetter.add(radioField.input)('change', () => {\r\n      const checked = radioField.input.checked;\r\n      if(checked) {\r\n        const idx = whichChild(radioField.label);\r\n        this.correctAnswers = [new Uint8Array([idx])];\r\n        this.handleChange();\r\n      }\r\n    });\r\n\r\n    const deleteBtn = document.createElement('span');\r\n    deleteBtn.classList.add('btn-icon', 'tgico-close');\r\n    questionField.container.append(deleteBtn);\r\n  \r\n    attachClickEvent(deleteBtn, this.onDeleteClick, {listenerSetter: this.listenerSetter, once: true});\r\n\r\n    this.questions.append(radioField.label);\r\n\r\n    this.scrollable.scrollIntoViewNew({\r\n      element: this.questions.lastElementChild as HTMLElement, \r\n      position: 'center'\r\n    });\r\n    //this.scrollable.scrollTo(this.scrollable.scrollHeight, 'top', true, true);\r\n\r\n    this.optionInputFields.push(questionField);\r\n  }\r\n}\r\n","/**\n * @returns duration in ms\n */\nexport default function getGifDuration(image: HTMLImageElement) {\n  const src = image.src;\n\n  return fetch(src)\n  .then(response => response.arrayBuffer())\n  .then(arrayBuffer => {\n    const d = new Uint8Array(arrayBuffer);\n    // Thanks to http://justinsomnia.org/2006/10/gif-animation-duration-calculation/\n    // And http://www.w3.org/Graphics/GIF/spec-gif89a.txt\n    let duration = 0;\n    for(let i = 0, length = d.length; i < length; ++i) {\n      // Find a Graphic Control Extension hex(21F904__ ____ __00)\n      if(d[i] == 0x21 \n       && d[i + 1] == 0xF9 \n       && d[i + 2] == 0x04 \n       && d[i + 7] == 0x00) {\n        // Swap 5th and 6th bytes to get the delay per frame\n        const delay = (d[i + 5] << 8) | (d[i + 4] & 0xFF);\n        \n        // Should be aware browsers have a minimum frame delay \n        // e.g. 6ms for IE, 2ms modern browsers (50fps)\n        duration += delay < 2 ? 10 : delay;\n      }\n    }\n\n    return duration / 1000;\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type Chat from \"../chat/chat\";\nimport InputField from \"../inputField\";\nimport PopupElement from \".\";\nimport Scrollable from \"../scrollable\";\nimport { toast } from \"../toast\";\nimport { prepareAlbum, wrapDocument } from \"../wrappers\";\nimport CheckboxField from \"../checkboxField\";\nimport SendContextMenu from \"../chat/sendContextMenu\";\nimport { createPosterFromMedia, createPosterFromVideo, onMediaLoad } from \"../../helpers/files\";\nimport { MyDocument } from \"../../lib/appManagers/appDocsManager\";\nimport I18n, { FormatterArguments, i18n, LangPackKey } from \"../../lib/langPack\";\nimport appDownloadManager from \"../../lib/appManagers/appDownloadManager\";\nimport calcImageInBox from \"../../helpers/calcImageInBox\";\nimport placeCaretAtEnd from \"../../helpers/dom/placeCaretAtEnd\";\nimport rootScope from \"../../lib/rootScope\";\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\nimport { MediaSize } from \"../../helpers/mediaSizes\";\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\nimport MEDIA_MIME_TYPES_SUPPORTED from '../../environment/mediaMimeTypesSupport';\nimport getGifDuration from \"../../helpers/getGifDuration\";\nimport replaceContent from \"../../helpers/dom/replaceContent\";\n\ntype SendFileParams = Partial<{\n  file: File,\n  objectURL: string,\n  thumb: {\n    blob: Blob,\n    url: string,\n    size: MediaSize\n  },\n  width: number,\n  height: number,\n  duration: number,\n  noSound: boolean,\n  itemDiv: HTMLElement\n}>;\n\nlet currentPopup: PopupNewMedia;\n\nexport function getCurrentNewMediaPopup() {\n  return currentPopup;\n}\n\nexport default class PopupNewMedia extends PopupElement {\n  private input: HTMLElement;\n  private mediaContainer: HTMLElement;\n  private groupCheckboxField: CheckboxField;\n  private mediaCheckboxField: CheckboxField;\n  private wasInputValue: string;\n\n  private willAttach: Partial<{\n    type: 'media' | 'document',\n    isMedia: true,\n    group: boolean,\n    sendFileDetails: SendFileParams[]\n  }>;\n  private inputField: InputField;\n\n  constructor(private chat: Chat, private files: File[], willAttachType: PopupNewMedia['willAttach']['type']) {\n    super('popup-send-photo popup-new-media', null, {closable: true, withConfirm: 'Modal.Send', confirmShortcutIsSendShortcut: true, body: true});\n\n    this.willAttach = {\n      type: willAttachType,\n      sendFileDetails: [],\n      group: false\n    };\n\n    attachClickEvent(this.btnConfirm, () => this.send(), {listenerSetter: this.listenerSetter});\n\n    if(this.chat.type !== 'scheduled') {\n      const sendMenu = new SendContextMenu({\n        onSilentClick: () => {\n          this.chat.input.sendSilent = true;\n          this.send();\n        },\n        onScheduleClick: () => {\n          this.chat.input.scheduleSending(() => {\n            this.send();\n          });\n        },\n        openSide: 'bottom-left',\n        onContextElement: this.btnConfirm,\n        listenerSetter: this.listenerSetter\n      });\n\n      sendMenu.setPeerId(this.chat.peerId);\n\n      this.header.append(sendMenu.sendMenu);\n    }\n\n    this.mediaContainer = document.createElement('div');\n    this.mediaContainer.classList.add('popup-photo');\n    const scrollable = new Scrollable(null);\n    scrollable.container.append(this.mediaContainer);\n    \n    this.inputField = new InputField({\n      placeholder: 'PreviewSender.CaptionPlaceholder',\n      label: 'Caption',\n      name: 'photo-caption',\n      maxLength: rootScope.config.caption_length_max\n    });\n    this.input = this.inputField.input;\n\n    this.inputField.value = this.wasInputValue = this.chat.input.messageInputField.input.innerHTML;\n    this.chat.input.messageInputField.value = '';\n\n    this.body.append(scrollable.container);\n    this.container.append(this.inputField.container);\n\n    this.attachFiles();\n\n    this.addEventListener('close', () => {\n      this.files = [];\n      currentPopup = undefined;\n    });\n\n    currentPopup = this;\n  }\n\n  public appendDrops(element: HTMLElement) {\n    this.body.append(element);\n  }\n\n  get type() {\n    return this.willAttach.type;\n  }\n\n  set type(type: PopupNewMedia['willAttach']['type']) {\n    this.willAttach.type = type;\n  }\n\n  private appendGroupCheckboxField() {\n    const good = this.files.length > 1;\n    if(good && !this.groupCheckboxField) {\n      this.groupCheckboxField = new CheckboxField({\n        text: 'PreviewSender.GroupItems', \n        name: 'group-items'\n      });\n      this.container.append(...[this.groupCheckboxField.label, this.mediaCheckboxField?.label, this.inputField.container].filter(Boolean));\n  \n      this.willAttach.group = true;\n      this.groupCheckboxField.setValueSilently(this.willAttach.group);\n\n      this.listenerSetter.add(this.groupCheckboxField.input)('change', () => {\n        const checked = this.groupCheckboxField.checked;\n  \n        this.willAttach.group = checked;\n\n        this.attachFiles();\n      });\n    } else if(this.groupCheckboxField) {\n      this.groupCheckboxField.label.classList.toggle('hide', !good);\n    }\n  }\n\n  private appendMediaCheckboxField() {\n    const good = !!this.files.find(file => MEDIA_MIME_TYPES_SUPPORTED.has(file.type));\n    if(good && !this.mediaCheckboxField) {\n      this.mediaCheckboxField = new CheckboxField({\n        text: 'PreviewSender.CompressFile',\n        name: 'compress-items'\n      });\n      this.container.append(...[this.groupCheckboxField?.label, this.mediaCheckboxField.label, this.inputField.container].filter(Boolean));\n\n      this.mediaCheckboxField.setValueSilently(this.willAttach.type === 'media');\n\n      this.listenerSetter.add(this.mediaCheckboxField.input)('change', () => {\n        const checked = this.mediaCheckboxField.checked;\n  \n        this.willAttach.type = checked ? 'media' : 'document';\n\n        this.attachFiles();\n      });\n    } else if(this.mediaCheckboxField) {\n      this.mediaCheckboxField.label.classList.toggle('hide', !good);\n    }\n  }\n\n  public addFiles(files: File[]) {\n    const toPush = files.filter(file => {\n      const found = this.files.find(_file => {\n        return _file.lastModified === file.lastModified && _file.name === file.name && _file.size === file.size;\n      });\n      \n      return !found;\n    });\n\n    if(toPush.length) {\n      this.files.push(...toPush);\n      this.attachFiles();\n    }\n  }\n\n  private onKeyDown = (e: KeyboardEvent) => {\n    const target = e.target as HTMLElement;\n    if(target !== this.input) {\n      if(target.tagName === 'INPUT' || target.hasAttribute('contenteditable')) {\n        return;\n      }\n\n      this.input.focus();\n      placeCaretAtEnd(this.input);\n    }\n  };\n\n  private send(force = false) {\n    if(this.chat.type === 'scheduled' && !force) {\n      this.chat.input.scheduleSending(() => {\n        this.send(true);\n      });\n      \n      return;\n    }\n\n    let caption = this.inputField.value;\n    if(caption.length > rootScope.config.caption_length_max) {\n      toast(I18n.format('Error.PreviewSender.CaptionTooLong', true));\n      return;\n    }\n\n    this.hide();\n    const willAttach = this.willAttach;\n    willAttach.isMedia = willAttach.type === 'media' ? true : undefined;\n    const {sendFileDetails, isMedia} = willAttach;\n\n    //console.log('will send files with options:', willAttach);\n\n    const {peerId, input} = this.chat;\n\n    sendFileDetails.forEach(d => {\n      d.itemDiv = undefined;\n    });\n\n    const {length} = sendFileDetails;\n    const sendingParams = this.chat.getMessageSendingParams();\n    this.iterate((sendFileDetails) => {\n      if(caption && sendFileDetails.length !== length) {\n        this.chat.appMessagesManager.sendText(peerId, caption, {\n          ...sendingParams,\n          clearDraft: true\n        });\n\n        caption = undefined;\n      }\n\n      const w = {\n        ...willAttach,\n        sendFileDetails\n      };\n\n      this.chat.appMessagesManager.sendAlbum(peerId, w.sendFileDetails.map(d => d.file), Object.assign({\n        ...sendingParams,\n        caption,\n        isMedia: isMedia,\n        clearDraft: true as true\n      }, w));\n\n      caption = undefined;\n    });\n    \n    input.replyToMsgId = this.chat.threadId;\n    input.onMessageSent();\n  }\n\n  private attachMedia(file: File, params: SendFileParams, itemDiv: HTMLElement) {\n    itemDiv.classList.add('popup-item-media');\n\n    const isVideo = file.type.startsWith('video/');\n\n    let promise: Promise<void>;\n    if(isVideo) {\n      const video = document.createElement('video');\n      const source = document.createElement('source');\n      source.src = params.objectURL = URL.createObjectURL(file);\n      video.autoplay = true;\n      video.controls = false;\n      video.muted = true;\n      video.setAttribute('playsinline', 'true');\n\n      video.addEventListener('timeupdate', () => {\n        video.pause();\n      }, {once: true});\n\n      promise = onMediaLoad(video).then(() => {\n        params.width = video.videoWidth;\n        params.height = video.videoHeight;\n        params.duration = Math.floor(video.duration);\n        \n        const audioDecodedByteCount = (video as any).webkitAudioDecodedByteCount;\n        if(audioDecodedByteCount !== undefined) {\n          params.noSound = !audioDecodedByteCount;\n        }\n\n        itemDiv.append(video);\n        return createPosterFromVideo(video).then(thumb => {\n          params.thumb = {\n            url: URL.createObjectURL(thumb.blob),\n            ...thumb\n          };\n        });\n      });\n\n      video.append(source);\n    } else {\n      const img = new Image();\n      promise = new Promise<void>((resolve) => {\n        img.onload = () => {\n          params.width = img.naturalWidth;\n          params.height = img.naturalHeight;\n          \n          itemDiv.append(img);\n          \n          if(file.type === 'image/gif') {\n            params.noSound = true;\n            \n            Promise.all([\n              getGifDuration(img).then(duration => {\n                params.duration = Math.ceil(duration);\n              }),\n              \n              createPosterFromMedia(img).then(thumb => {\n                params.thumb = {\n                  url: URL.createObjectURL(thumb.blob),\n                  ...thumb\n                };\n              })\n            ]).then(() => {\n              resolve();\n            });\n          } else {\n            resolve();\n          }\n        };\n      });\n      \n      img.src = params.objectURL = URL.createObjectURL(file);\n    }\n\n    return promise;\n  }\n\n  private attachDocument(file: File, params: SendFileParams, itemDiv: HTMLElement): ReturnType<PopupNewMedia['attachMedia']> {\n    itemDiv.classList.add('popup-item-document');\n\n    const isPhoto = file.type.startsWith('image/');\n    const isAudio = file.type.startsWith('audio/');\n    if(isPhoto || isAudio) {\n      params.objectURL = URL.createObjectURL(file);\n    }\n\n    const doc = {\n      _: 'document',\n      file: file,\n      file_name: file.name || '',\n      fileName: file.name ? RichTextProcessor.wrapEmojiText(file.name) : '',\n      size: file.size,\n      type: isPhoto ? 'photo' : 'doc'\n    } as MyDocument;\n\n    const cacheContext = appDownloadManager.getCacheContext(doc);\n    cacheContext.url = params.objectURL;\n    cacheContext.downloaded = file.size;\n\n    const docDiv = wrapDocument({\n      message: {\n        _: 'message',\n        pFlags: {\n          is_outgoing: true\n        },\n        mid: 0,\n        peerId: 0,\n        media: {\n          _: 'messageMediaDocument',\n          document: doc\n        }\n      } as any\n    });\n\n    const promise = new Promise<void>((resolve) => {\n      const finish = () => {\n        itemDiv.append(docDiv);\n        resolve();\n      };\n  \n      if(isPhoto) {\n        const img = new Image();\n        img.src = params.objectURL;\n        img.onload = () => {\n          params.width = img.naturalWidth;\n          params.height = img.naturalHeight;\n  \n          finish();\n        };\n  \n        img.onerror = finish;\n      } else {\n        finish();\n      }\n    });\n\n    return promise;\n  }\n\n  private attachFile = (file: File) => {\n    const willAttach = this.willAttach;\n    const shouldCompress = this.shouldCompress(file.type);\n\n    const params: SendFileParams = {};\n    params.file = file;\n\n    const itemDiv = document.createElement('div');\n    itemDiv.classList.add('popup-item');\n\n    params.itemDiv = itemDiv;\n\n    const promise = shouldCompress ? this.attachMedia(file, params, itemDiv) : this.attachDocument(file, params, itemDiv);\n    willAttach.sendFileDetails.push(params);\n    return promise;\n  };\n  \n  private shouldCompress(mimeType: string) {\n    return this.willAttach.type === 'media' && MEDIA_MIME_TYPES_SUPPORTED.has(mimeType);\n  }\n\n  private onRender() {\n    // show now\n    if(!this.element.classList.contains('active')) {\n      this.listenerSetter.add(document.body)('keydown', this.onKeyDown);\n      this.addEventListener('close', () => {\n        if(this.wasInputValue) {\n          this.chat.input.messageInputField.value = this.wasInputValue;\n        }\n      });\n      this.show();\n    }\n  }\n\n  private setTitle() {\n    const {willAttach, title, files} = this;\n    let key: LangPackKey;\n    const args: FormatterArguments = [];\n    if(willAttach.type === 'document') {\n      key = 'PreviewSender.SendFile';\n      args.push(files.length);\n    } else {\n      let foundPhotos = 0, foundVideos = 0, foundFiles = 0;\n      files.forEach(file => {\n        if(file.type.startsWith('image/')) ++foundPhotos;\n        else if(file.type.startsWith('video/')) ++foundVideos;\n        else ++foundFiles;\n      });\n\n      if([foundPhotos, foundVideos, foundFiles].filter(n => n > 0).length > 1) {\n        key = 'PreviewSender.SendFile';\n        args.push(files.length);\n      } else \n      \n      /* const sum = foundPhotos + foundVideos;\n      if(sum > 1 && willAttach.group) {\n        key = 'PreviewSender.SendAlbum';\n        const albumsLength = Math.ceil(sum / 10);\n        args.push(albumsLength);\n      } else  */if(foundPhotos) {\n        key = 'PreviewSender.SendPhoto';\n        args.push(foundPhotos);\n      } else if(foundVideos) {\n        key = 'PreviewSender.SendVideo';\n        args.push(foundVideos);\n      }\n    }\n\n    replaceContent(title, i18n(key, args));\n  }\n\n  private appendMediaToContainer(div: HTMLElement, params: SendFileParams) {\n    if(this.shouldCompress(params.file.type)) {\n      const size = calcImageInBox(params.width, params.height, 380, 320);\n      div.style.width = size.width + 'px';\n      div.style.height = size.height + 'px';\n    }\n\n    this.mediaContainer.append(div);\n  }\n\n  private iterate(cb: (sendFileDetails: SendFileParams[]) => void) {\n    const {sendFileDetails} = this.willAttach;\n    if(!this.willAttach.group) {\n      sendFileDetails.forEach(p => cb([p]));\n      return;\n    }\n\n    const length = sendFileDetails.length;\n    for(let i = 0; i < length;) {\n      const firstType = sendFileDetails[i].file.type;\n      let k = 0;\n      for(; k < 10 && i < length; ++i, ++k) {\n        const type = sendFileDetails[i].file.type;\n        if(this.shouldCompress(firstType) !== this.shouldCompress(type)) {\n          break;\n        }\n      }\n\n      cb(sendFileDetails.slice(i - k, i));\n    }\n  }\n\n  private attachFiles() {\n    const {files, willAttach, mediaContainer} = this;\n    willAttach.sendFileDetails.length = 0;\n\n    this.appendGroupCheckboxField();\n    this.appendMediaCheckboxField();\n\n    Promise.all(files.map(this.attachFile)).then(() => {\n      mediaContainer.innerHTML = '';\n\n      if(!files.length) {\n        return;\n      }\n\n      this.setTitle();\n\n      this.iterate((sendFileDetails) => {\n        if(this.shouldCompress(sendFileDetails[0].file.type) && sendFileDetails.length > 1) {\n          const albumContainer = document.createElement('div');\n          albumContainer.classList.add('popup-item-album', 'popup-item');\n          albumContainer.append(...sendFileDetails.map(s => s.itemDiv));\n\n          prepareAlbum({\n            container: albumContainer,\n            items: sendFileDetails.map(o => ({w: o.width, h: o.height})),\n            maxWidth: 380,\n            minWidth: 100,\n            spacing: 4\n          });\n\n          mediaContainer.append(albumContainer);\n        } else {\n          sendFileDetails.forEach((params) => {\n            this.appendMediaToContainer(params.itemDiv, params);\n          });\n        }\n      });\n    }).then(() => {\n      this.onRender();\n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport fastSmoothScroll from \"../fastSmoothScroll\";\r\nimport { cancelEvent } from \"./cancelEvent\";\r\nimport { attachClickEvent, detachClickEvent } from \"./clickEvent\";\r\nimport findUpAsChild from \"./findUpAsChild\";\r\nimport findUpClassName from \"./findUpClassName\";\r\n\r\ntype ArrowKey = 'ArrowUp' | 'ArrowDown' | 'ArrowLeft' | 'ArrowRight';\r\nconst HANDLE_EVENT = 'keydown';\r\nconst ACTIVE_CLASS_NAME = 'active';\r\n\r\nconst AXIS_Y_KEYS: ArrowKey[] = ['ArrowUp', 'ArrowDown'];\r\nconst AXIS_X_KEYS: ArrowKey[] = ['ArrowLeft', 'ArrowRight'];\r\n\r\nexport default function attachListNavigation({list, type, onSelect, once, waitForKey}: {\r\n  list: HTMLElement, \r\n  type: 'xy' | 'x' | 'y',\r\n  onSelect: (target: Element) => void | boolean,\r\n  once: boolean,\r\n  waitForKey?: string[]\r\n}) {\r\n  let waitForKeySet = waitForKey?.length ? new Set(waitForKey) : undefined;\r\n  const keyNames = new Set(type === 'xy' ? AXIS_Y_KEYS.concat(AXIS_X_KEYS) : (type === 'x' ? AXIS_X_KEYS : AXIS_Y_KEYS)); \r\n\r\n  let target: Element;\r\n  const getCurrentTarget = () => {\r\n    return target || list.querySelector('.' + ACTIVE_CLASS_NAME) || list.firstElementChild;\r\n  };\r\n\r\n  const setCurrentTarget = (_target: Element, scrollTo: boolean) => {\r\n    if(target === _target) {\r\n      return;\r\n    }\r\n\r\n    let hadTarget = false;\r\n    if(target) {\r\n      hadTarget = true;\r\n      target.classList.remove(ACTIVE_CLASS_NAME);\r\n    }\r\n\r\n    target = _target;\r\n    if(!target) return;\r\n    target.classList.add(ACTIVE_CLASS_NAME);\r\n\r\n    if(hadTarget && scrollable && scrollTo) {\r\n      fastSmoothScroll({\r\n        container: scrollable, \r\n        element: target as HTMLElement, \r\n        position: 'center', \r\n        forceDuration: 100, \r\n        axis: type === 'x' ? 'x' : 'y'\r\n      });\r\n    }\r\n  };\r\n\r\n  const getNextTargetX = (currentTarget: Element, isNext: boolean) => {\r\n    let nextTarget: Element;\r\n    if(isNext) nextTarget = currentTarget.nextElementSibling || list.firstElementChild;\r\n    else nextTarget = currentTarget.previousElementSibling || list.lastElementChild;\r\n\r\n    return nextTarget;\r\n  };\r\n\r\n  const getNextTargetY = (currentTarget: Element, isNext: boolean) => {\r\n    const property = isNext ? 'nextElementSibling' : 'previousElementSibling';\r\n    const endProperty = isNext ? 'firstElementChild' : 'lastElementChild';\r\n    const currentRect = currentTarget.getBoundingClientRect();\r\n\r\n    let nextTarget = currentTarget[property] || list[endProperty];\r\n    while(nextTarget !== currentTarget) {\r\n      const targetRect = nextTarget.getBoundingClientRect();\r\n      if(targetRect.x === currentRect.x && targetRect.y !== currentRect.y) {\r\n        break;\r\n      }\r\n\r\n      nextTarget = nextTarget[property] || list[endProperty];\r\n    }\r\n\r\n    return nextTarget;\r\n  };\r\n\r\n  let handleArrowKey: (currentTarget: Element, key: ArrowKey) => Element;\r\n  if(type === 'xy') { // flex-direction: row; flex-wrap: wrap;\r\n    handleArrowKey = (currentTarget, key) => {\r\n      if(key === 'ArrowUp' || key === 'ArrowDown') return getNextTargetY(currentTarget, key === 'ArrowDown');\r\n      else return getNextTargetX(currentTarget, key === 'ArrowRight');\r\n    };\r\n  } else { // flex-direction: row | column;\r\n    handleArrowKey = (currentTarget, key) => getNextTargetX(currentTarget, key === 'ArrowRight' || key === 'ArrowDown');\r\n  }\r\n\r\n  let onKeyDown = (e: KeyboardEvent) => {\r\n    const key = e.key;\r\n    if(!keyNames.has(key as any)) {\r\n      if(key === 'Enter' || (type !== 'xy' && key === 'Tab')) {\r\n        cancelEvent(e);\r\n        fireSelect(getCurrentTarget());\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    cancelEvent(e);\r\n\r\n    if(list.childElementCount > 1) {\r\n      let currentTarget = getCurrentTarget();\r\n      currentTarget = handleArrowKey(currentTarget, key as any);\r\n      setCurrentTarget(currentTarget, true);\r\n    }\r\n  };\r\n\r\n  const scrollable = findUpClassName(list, 'scrollable');\r\n  list.classList.add('navigable-list');\r\n\r\n  const onMouseMove = (e: MouseEvent) => {\r\n    const target = findUpAsChild(e.target, list) as HTMLElement;\r\n    if(!target) {\r\n      return;\r\n    }\r\n\r\n    setCurrentTarget(target, false);\r\n  };\r\n\r\n  const onClick = (e: Event) => {\r\n    cancelEvent(e); // cancel keyboard closening\r\n\r\n    const target = findUpAsChild(e.target, list) as HTMLElement;\r\n    if(!target) {\r\n      return;\r\n    }\r\n\r\n    setCurrentTarget(target, false);\r\n    fireSelect(getCurrentTarget());\r\n  };\r\n\r\n  const fireSelect = (target: Element) => {\r\n    const canContinue = onSelect(target);\r\n    if(canContinue !== undefined ? !canContinue : once) {\r\n      detach();\r\n    }\r\n  };\r\n\r\n  let attached = false;\r\n  const attach = () => {\r\n    if(attached) return;\r\n    attached = true;\r\n    // const input = document.activeElement as HTMLElement;\r\n    // input.addEventListener(HANDLE_EVENT, onKeyDown, {capture: true, passive: false});\r\n    document.addEventListener(HANDLE_EVENT, onKeyDown, {capture: true, passive: false});\r\n    list.addEventListener('mousemove', onMouseMove, {passive: true});\r\n    attachClickEvent(list, onClick);\r\n  };\r\n\r\n  const detach = () => {\r\n    if(!attached) return;\r\n    attached = false;\r\n    // input.removeEventListener(HANDLE_EVENT, onKeyDown, {capture: true});\r\n    document.removeEventListener(HANDLE_EVENT, onKeyDown, {capture: true});\r\n    list.removeEventListener('mousemove', onMouseMove);\r\n    detachClickEvent(list, onClick);\r\n  };\r\n\r\n  const resetTarget = () => {\r\n    if(waitForKeySet) return;\r\n    setCurrentTarget(list.firstElementChild, false);\r\n  };\r\n\r\n  if(waitForKeySet) {\r\n    const _onKeyDown = onKeyDown;\r\n    onKeyDown = (e) => {\r\n      if(waitForKeySet.has(e.key)) {\r\n        cancelEvent(e);\r\n\r\n        document.removeEventListener(HANDLE_EVENT, onKeyDown, {capture: true});\r\n        onKeyDown = _onKeyDown;\r\n        document.addEventListener(HANDLE_EVENT, onKeyDown, {capture: true, passive: false});\r\n\r\n        waitForKeySet = undefined;\r\n        resetTarget();\r\n      }\r\n    };\r\n  } else {\r\n    resetTarget();\r\n  }\r\n\r\n  attach();\r\n\r\n  return {\r\n    attach,\r\n    detach,\r\n    resetTarget\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport attachListNavigation from \"../../helpers/dom/attachListNavigation\";\r\nimport EventListenerBase from \"../../helpers/eventListenerBase\";\r\nimport { IS_MOBILE } from \"../../environment/userAgent\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport appNavigationController, { NavigationItem } from \"../appNavigationController\";\r\nimport SetTransition from \"../singleTransition\";\r\nimport AutocompleteHelperController from \"./autocompleteHelperController\";\r\nimport safeAssign from \"../../helpers/object/safeAssign\";\r\n\r\nexport default class AutocompleteHelper extends EventListenerBase<{\r\n  hidden: () => void,\r\n  visible: () => void,\r\n  hiding: () => void\r\n}> {\r\n  protected hidden = true;\r\n  protected container: HTMLElement;\r\n  protected list: HTMLElement;\r\n  protected resetTarget: () => void;\r\n  protected attach: () => void;\r\n  protected detach: () => void;\r\n  protected init?(): void;\r\n\r\n  protected controller: AutocompleteHelperController;\r\n  protected listType: 'xy' | 'x' | 'y';\r\n  protected onSelect: (target: Element) => boolean | void;\r\n  protected waitForKey?: string[];\r\n\r\n  protected navigationItem: NavigationItem;\r\n\r\n  constructor(options: {\r\n    appendTo: HTMLElement,\r\n    controller?: AutocompleteHelper['controller'],\r\n    listType: AutocompleteHelper['listType'],\r\n    onSelect: AutocompleteHelper['onSelect'],\r\n    waitForKey?: AutocompleteHelper['waitForKey']\r\n  }) {\r\n    super(false);\r\n\r\n    safeAssign(this, options);\r\n    \r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('autocomplete-helper', 'z-depth-1');\r\n    \r\n    options.appendTo.append(this.container);\r\n    \r\n    this.attachNavigation();\r\n\r\n    this.controller && this.controller.addHelper(this);\r\n  }\r\n\r\n  public toggleListNavigation(enabled: boolean) {\r\n    if(enabled) {\r\n      this.attach && this.attach();\r\n    } else {\r\n      this.detach && this.detach();\r\n    }\r\n  }\r\n\r\n  protected onVisible = () => {\r\n    if(this.detach) { // it can be so because 'visible' calls before animation's end\r\n      this.detach();\r\n    }\r\n\r\n    const list = this.list;\r\n    const {attach, detach, resetTarget} = attachListNavigation({\r\n      list, \r\n      type: this.listType,\r\n      onSelect: this.onSelect,\r\n      once: true,\r\n      waitForKey: this.waitForKey\r\n    });\r\n\r\n    this.attach = attach;\r\n    this.detach = detach;\r\n    this.resetTarget = resetTarget;\r\n    if(!IS_MOBILE && !this.navigationItem) {\r\n      this.navigationItem = {\r\n        type: 'autocomplete-helper',\r\n        onPop: () => {\r\n          this.navigationItem = undefined;\r\n          this.toggle(true);\r\n        },\r\n        noBlurOnPop: true\r\n      };\r\n\r\n      appNavigationController.pushItem(this.navigationItem);\r\n    }\r\n\r\n    this.addEventListener('hidden', () => {\r\n      this.resetTarget = undefined;\r\n      this.attach = undefined;\r\n      this.detach = undefined;\r\n\r\n      list.innerHTML = '';\r\n      detach();\r\n\r\n      if(this.navigationItem) {\r\n        appNavigationController.removeItem(this.navigationItem);\r\n        this.navigationItem = undefined;\r\n      }\r\n    }, {once: true});\r\n  };\r\n\r\n  protected attachNavigation() {\r\n    this.addEventListener('visible', this.onVisible);\r\n  }\r\n\r\n  public toggle(hide?: boolean, fromController = false, skipAnimation?: boolean) {\r\n    if(this.init) {\r\n      return;\r\n    }\r\n    \r\n    if(hide === undefined) {\r\n      hide = this.container.classList.contains('is-visible') && !this.container.classList.contains('backwards');\r\n    }\r\n\r\n    if(this.hidden === hide) {\r\n      if(!hide) {\r\n        this.dispatchEvent('visible'); // reset target and listener\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    this.hidden = hide;\r\n\r\n    if(!hide) {\r\n      this.controller && this.controller.hideOtherHelpers(this);\r\n      this.dispatchEvent('visible'); // fire it before so target will be set\r\n    } else {\r\n      if(this.navigationItem) {\r\n        appNavigationController.removeItem(this.navigationItem);\r\n        this.navigationItem = undefined;\r\n      }\r\n\r\n      if(!fromController && this.controller) {\r\n        this.controller.hideOtherHelpers();\r\n      }\r\n\r\n      if(this.detach) { // force detach here\r\n        this.detach();\r\n      }\r\n    }\r\n\r\n    const useRafs = this.controller || hide ? 0 : 2;\r\n\r\n    if(hide) {\r\n      this.dispatchEvent('hiding');\r\n    }\r\n\r\n    SetTransition(\r\n      this.container, \r\n      'is-visible', \r\n      !hide, \r\n      rootScope.settings.animationsEnabled && !skipAnimation ? 300 : 0, \r\n      () => {\r\n        this.hidden && this.dispatchEvent('hidden');\r\n      }, \r\n      useRafs\r\n    );\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport mediaSizes from \"../../helpers/mediaSizes\";\r\nimport { MyDocument } from \"../../lib/appManagers/appDocsManager\";\r\nimport { CHAT_ANIMATION_GROUP } from \"../../lib/appManagers/appImManager\";\r\nimport appStickersManager from \"../../lib/appManagers/appStickersManager\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport { EmoticonsDropdown } from \"../emoticonsDropdown\";\r\nimport { SuperStickerRenderer } from \"../emoticonsDropdown/tabs/stickers\";\r\nimport LazyLoadQueue from \"../lazyLoadQueue\";\r\nimport Scrollable from \"../scrollable\";\r\nimport AutocompleteHelper from \"./autocompleteHelper\";\r\nimport AutocompleteHelperController from \"./autocompleteHelperController\";\r\n\r\nexport default class StickersHelper extends AutocompleteHelper {\r\n  private scrollable: Scrollable;\r\n  private superStickerRenderer: SuperStickerRenderer;\r\n  private lazyLoadQueue: LazyLoadQueue;\r\n  private onChangeScreen: () => void;\r\n\r\n  constructor(appendTo: HTMLElement, controller: AutocompleteHelperController) {\r\n    super({\r\n      appendTo, \r\n      controller,\r\n      listType: 'xy', \r\n      onSelect: (target) => {\r\n        return !EmoticonsDropdown.onMediaClick({target}, true);\r\n      }, \r\n      waitForKey: ['ArrowUp', 'ArrowDown']\r\n    });\r\n\r\n    this.container.classList.add('stickers-helper');\r\n\r\n    this.addEventListener('visible', () => {\r\n      setTimeout(() => { // it is not rendered yet\r\n        this.scrollable.container.scrollTop = 0;\r\n      }, 0);\r\n\r\n      rootScope.dispatchEvent('choosing_sticker', true);\r\n    });\r\n\r\n    this.addEventListener('hidden', () => {\r\n      if(this.onChangeScreen) {\r\n        mediaSizes.removeEventListener('changeScreen', this.onChangeScreen);\r\n        this.onChangeScreen = undefined;\r\n      }\r\n\r\n      rootScope.dispatchEvent('choosing_sticker', false);\r\n    });\r\n  }\r\n\r\n  public checkEmoticon(emoticon: string) {\r\n    const middleware = this.controller.getMiddleware();\r\n\r\n    if(this.lazyLoadQueue) {\r\n      this.lazyLoadQueue.clear();\r\n    }\r\n\r\n    appStickersManager.preloadAnimatedEmojiSticker(emoticon);\r\n    appStickersManager.getStickersByEmoticon(emoticon)\r\n    .then((stickers) => {\r\n      if(!middleware()) {\r\n        return;\r\n      }\r\n\r\n      if(this.init) {\r\n        this.init();\r\n        this.init = null;\r\n      }\r\n\r\n      const container = this.list.cloneNode() as HTMLElement;\r\n\r\n      let ready: Promise<void>;\r\n\r\n      this.lazyLoadQueue.clear();\r\n      if(stickers.length) {\r\n        ready = new Promise<void>((resolve) => {\r\n          const promises: Promise<any>[] = [];\r\n          stickers.forEach(sticker => {\r\n            container.append(this.superStickerRenderer.renderSticker(sticker as MyDocument, undefined, promises));\r\n          });\r\n\r\n          (Promise.all(promises) as Promise<any>).finally(resolve);\r\n        });\r\n      } else {\r\n        ready = Promise.resolve();\r\n      }\r\n\r\n      ready.then(() => {\r\n        this.list.replaceWith(container);\r\n        this.list = container;\r\n\r\n        if(!this.onChangeScreen) {\r\n          this.onChangeScreen = () => {\r\n            const width = (this.list.childElementCount * mediaSizes.active.esgSticker.width) + (this.list.childElementCount - 1 * 1);\r\n            this.list.style.width = width + 'px';\r\n          };\r\n          mediaSizes.addEventListener('changeScreen', this.onChangeScreen);\r\n        }\r\n\r\n        this.onChangeScreen();\r\n\r\n        this.toggle(!stickers.length);\r\n        this.scrollable.scrollTop = 0;\r\n      });\r\n    });\r\n  }\r\n\r\n  protected init() {\r\n    this.list = document.createElement('div');\r\n    this.list.classList.add('stickers-helper-stickers', 'super-stickers');\r\n\r\n    this.container.append(this.list);\r\n\r\n    this.scrollable = new Scrollable(this.container);\r\n    this.lazyLoadQueue = new LazyLoadQueue();\r\n    this.superStickerRenderer = new SuperStickerRenderer(this.lazyLoadQueue, CHAT_ANIMATION_GROUP);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport { SEND_WHEN_ONLINE_TIMESTAMP } from \"../../lib/mtproto/constants\";\r\nimport Button from \"../button\";\r\nimport PopupDatePicker from \"./datePicker\";\r\n\r\nconst getMinDate = () => {\r\n  const date = new Date();\r\n  //date.setDate(date.getDate() - 1);\r\n  date.setHours(0, 0, 0, 0);\r\n  return date;\r\n};\r\n\r\nconst getMaxDate = () => {\r\n  const date = new Date();\r\n  date.setFullYear(date.getFullYear() + 1);\r\n  date.setDate(date.getDate() - 1);\r\n  return date;\r\n};\r\n\r\nconst checkDate = (date: Date) => {\r\n  return date.getTime() > getMaxDate().getTime() ? new Date() : date;\r\n};\r\n\r\nexport default class PopupSchedule extends PopupDatePicker {\r\n  constructor(initDate: Date, onPick: (timestamp: number) => void, canSendWhenOnline: boolean) {\r\n    super(checkDate(initDate), onPick, {\r\n      noButtons: true,\r\n      noTitle: true,\r\n      closable: true,\r\n      withConfirm: true,\r\n      minDate: getMinDate(),\r\n      maxDate: getMaxDate(),\r\n      withTime: true,\r\n      showOverflowMonths: true,\r\n      confirmShortcutIsSendShortcut: true\r\n    });\r\n\r\n    this.element.classList.add('popup-schedule');\r\n    this.header.append(this.controlsDiv);\r\n    this.title.replaceWith(this.monthTitle);\r\n    this.body.append(this.btnConfirm);\r\n\r\n    if(canSendWhenOnline) {\r\n      const btnSendWhenOnline = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Schedule.SendWhenOnline'});\r\n      this.body.append(btnSendWhenOnline);\r\n\r\n      attachClickEvent(btnSendWhenOnline, () => {\r\n        onPick(SEND_WHEN_ONLINE_TIMESTAMP);\r\n        this.hide();\r\n      });\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MessageEntity } from \"../../layer\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport getRichElementValue from \"./getRichElementValue\";\r\n\r\nexport default function getRichValueWithCaret(field: HTMLElement, withEntities = true) {\r\n  const lines: string[] = [];\r\n  const line: string[] = [];\r\n\r\n  const sel = window.getSelection();\r\n  let selNode: Node;\r\n  let selOffset: number;\r\n  if(sel && sel.rangeCount) {\r\n    const range = sel.getRangeAt(0);\r\n    const startOffset = range.startOffset;\r\n    if(\r\n      range.startContainer &&\r\n      range.startContainer == range.endContainer &&\r\n      startOffset == range.endOffset\r\n    ) {\r\n      // * if focused on img, or caret has been set via placeCaretAtEnd\r\n      const possibleChildrenFocusOffset = startOffset - 1;\r\n      const childNodes = field.childNodes;\r\n      if(range.startContainer === field && childNodes[possibleChildrenFocusOffset]) {\r\n        selNode = childNodes[possibleChildrenFocusOffset];\r\n        selOffset = 0;\r\n\r\n        for(let i = 0; i < range.endOffset; ++i) {\r\n          const node = childNodes[i];\r\n          const value = node.nodeValue || (node as HTMLImageElement).alt;\r\n\r\n          if(value) {\r\n            selOffset += value.length;\r\n          }\r\n        }\r\n      } else {\r\n        selNode = range.startContainer;\r\n        selOffset = startOffset;\r\n      }\r\n    }\r\n  }\r\n\r\n  const entities: MessageEntity[] = withEntities ? [] : undefined;\r\n  getRichElementValue(field, lines, line, selNode, selOffset, entities);\r\n\r\n  if(line.length) {\r\n    lines.push(line.join(''));\r\n  }\r\n\r\n  let value = lines.join('\\n');\r\n  const caretPos = value.indexOf('\\x01');\r\n  if(caretPos != -1) {\r\n    value = value.substr(0, caretPos) + value.substr(caretPos + 1);\r\n  }\r\n  value = value.replace(/\\u00A0/g, ' ');\r\n\r\n  if(entities) {\r\n    RichTextProcessor.combineSameEntities(entities);\r\n  }\r\n\r\n  return {value, entities, caretPos};\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type ChatInput from \"./input\";\r\nimport type { AppEmojiManager } from \"../../lib/appManagers/appEmojiManager\";\r\nimport { appendEmoji, getEmojiFromElement } from \"../emoticonsDropdown/tabs/emoji\";\r\nimport { ScrollableX } from \"../scrollable\";\r\nimport AutocompleteHelper from \"./autocompleteHelper\";\r\nimport AutocompleteHelperController from \"./autocompleteHelperController\";\r\n\r\nexport default class EmojiHelper extends AutocompleteHelper {\r\n  private scrollable: ScrollableX;\r\n\r\n  constructor(appendTo: HTMLElement, \r\n    controller: AutocompleteHelperController, \r\n    chatInput: ChatInput, \r\n    private appEmojiManager: AppEmojiManager) {\r\n    super({\r\n      appendTo,\r\n      controller, \r\n      listType: 'x', \r\n      onSelect: (target) => {\r\n        chatInput.onEmojiSelected(getEmojiFromElement(target as any), true);\r\n      }\r\n    });\r\n\r\n    this.container.classList.add('emoji-helper');\r\n  }\r\n\r\n  protected init() {\r\n    this.list = document.createElement('div');\r\n    this.list.classList.add('emoji-helper-emojis', 'super-emojis');\r\n\r\n    this.container.append(this.list);\r\n\r\n    this.scrollable = new ScrollableX(this.container);\r\n\r\n    this.addEventListener('visible', () => {\r\n      setTimeout(() => { // it is not rendered yet\r\n        this.scrollable.container.scrollLeft = 0;\r\n      }, 0);\r\n    });\r\n  }\r\n\r\n  public render(emojis: string[], waitForKey: boolean) {\r\n    if(this.init) {\r\n      if(!emojis.length) {\r\n        return;\r\n      }\r\n\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n    \r\n    emojis = emojis.slice(0, 80);\r\n\r\n    if(emojis.length) {\r\n      this.list.innerHTML = '';\r\n      emojis.forEach(emoji => {\r\n        appendEmoji(emoji, this.list, false, true);\r\n      });\r\n    }\r\n\r\n    this.waitForKey = waitForKey ? ['ArrowUp', 'ArrowDown'] : undefined;\r\n    this.toggle(!emojis.length);\r\n\r\n    /* window.requestAnimationFrame(() => {\r\n      this.container.style.width = (3 * 2) + (emojis.length * 44) + 'px';\r\n    }); */\r\n  }\r\n\r\n  public checkQuery(query: string, firstChar: string) {\r\n    const middleware = this.controller.getMiddleware();\r\n    this.appEmojiManager.getBothEmojiKeywords().then(() => {\r\n      if(!middleware()) {\r\n        return;\r\n      }\r\n\r\n      const q = query.replace(/^:/, '');\r\n      const emojis = this.appEmojiManager.searchEmojis(q);\r\n      this.render(emojis, firstChar !== ':');\r\n      //console.log(emojis);\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport AvatarElement from \"../avatar\";\r\nimport PeerTitle from \"../peerTitle\";\r\nimport Scrollable from \"../scrollable\";\r\nimport AutocompleteHelper from \"./autocompleteHelper\";\r\nimport AutocompleteHelperController from \"./autocompleteHelperController\";\r\n\r\nexport default class AutocompletePeerHelper extends AutocompleteHelper {\r\n  protected static BASE_CLASS = 'autocomplete-peer-helper';\r\n  protected static BASE_CLASS_LIST_ELEMENT = AutocompletePeerHelper.BASE_CLASS + '-list-element';\r\n  private scrollable: Scrollable;\r\n\r\n  constructor(\r\n    appendTo: HTMLElement, \r\n    controller: AutocompleteHelperController, \r\n    protected className: string, \r\n    onSelect: (target: Element) => boolean | void\r\n  ) {\r\n    super({\r\n      appendTo, \r\n      controller,\r\n      listType: 'y', \r\n      onSelect\r\n    });\r\n\r\n    this.container.classList.add(AutocompletePeerHelper.BASE_CLASS, className);\r\n  }\r\n\r\n  protected init() {\r\n    this.list = document.createElement('div');\r\n    this.list.classList.add(AutocompletePeerHelper.BASE_CLASS + '-list', this.className + '-list');\r\n\r\n    this.container.append(this.list);\r\n\r\n    this.scrollable = new Scrollable(this.container);\r\n\r\n    this.addEventListener('visible', () => {\r\n      setTimeout(() => { // it is not rendered yet\r\n        this.scrollable.container.scrollTop = 0;\r\n      }, 0);\r\n    });\r\n  }\r\n\r\n  public render(data: {peerId: PeerId, name?: string, description?: string}[], doNotShow?: boolean) {\r\n    if(this.init) {\r\n      if(!data.length) {\r\n        return;\r\n      }\r\n\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n\r\n    if(data.length) {\r\n      this.list.innerHTML = '';\r\n      data.forEach(d => {\r\n        const div = AutocompletePeerHelper.listElement({\r\n          className: this.className,\r\n          peerId: d.peerId,\r\n          name: d.name,\r\n          description: d.description\r\n        });\r\n\r\n        this.list.append(div);\r\n      });\r\n    }\r\n\r\n    if(!doNotShow) {\r\n      this.toggle(!data.length);\r\n    }\r\n  }\r\n\r\n  public static listElement(options: {\r\n    className: string,\r\n    peerId: PeerId,\r\n    name?: string,\r\n    description?: string\r\n  }) {\r\n    const BASE = AutocompletePeerHelper.BASE_CLASS_LIST_ELEMENT;\r\n    options.className += '-list-element';\r\n\r\n    const div = document.createElement('div');\r\n    div.classList.add(BASE, options.className);\r\n    div.dataset.peerId = '' + options.peerId;\r\n  \r\n    const avatar = new AvatarElement();\r\n    avatar.classList.add('avatar-30', BASE + '-avatar', options.className + '-avatar');\r\n    avatar.setAttribute('dialog', '0');\r\n    avatar.setAttribute('peer', '' + options.peerId);\r\n  \r\n    const name = document.createElement('div');\r\n    name.classList.add(BASE + '-name', options.className + '-name');\r\n    if(!options.name) {\r\n      name.append(new PeerTitle({\r\n        peerId: options.peerId,\r\n        dialog: false,\r\n        onlyFirstName: false,\r\n        plainText: false\r\n      }).element);\r\n    } else {\r\n      name.innerHTML = RichTextProcessor.wrapEmojiText(options.name);\r\n    }\r\n  \r\n    div.append(avatar, name);\r\n\r\n    if(options.description) {\r\n      const description = document.createElement('div');\r\n      description.classList.add(BASE + '-description', options.className + '-description');\r\n      description.innerHTML = RichTextProcessor.wrapEmojiText(options.description);\r\n      div.append(description);\r\n    }\r\n  \r\n    return div;\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type ChatInput from \"./input\";\nimport type { AppProfileManager } from \"../../lib/appManagers/appProfileManager\";\nimport type { AppUsersManager } from \"../../lib/appManagers/appUsersManager\";\nimport type { BotInfo, ChatFull, UserFull } from \"../../layer\";\nimport AutocompleteHelperController from \"./autocompleteHelperController\";\nimport AutocompletePeerHelper from \"./autocompletePeerHelper\";\nimport SearchIndex from \"../../lib/searchIndex\";\n\nexport function processPeerFullForCommands(full: ChatFull.chatFull | ChatFull.channelFull | UserFull.userFull, query?: string) {\n  const botInfos: BotInfo.botInfo[] = [].concat(full.bot_info);\n  let index: SearchIndex<string>; \n  \n  if(query !== undefined) {\n    index = new SearchIndex<string>({\n      ignoreCase: true\n    });\n  }\n  \n  type T = {peerId: PeerId, name: string, description: string, index: number, command: string};\n  const commands: Map<string, T> = new Map();\n  botInfos.forEach(botInfo => {\n    botInfo.commands.forEach((botCommand, idx) => {\n      const c = '/' + botCommand.command;\n      commands.set(botCommand.command, {\n        peerId: botInfo.user_id.toPeerId(false), \n        command: botCommand.command, \n        name: c, \n        description: botCommand.description,\n        index: idx\n      });\n\n      if(index) {\n        index.indexObject(botCommand.command, c);\n      }\n    });\n  });\n\n  let out: T[];\n  if(!index) {\n    out = [...commands.values()];\n  } else {\n    const found = index.search(query);\n    out = Array.from(found).map(command => commands.get(command));\n  }\n\n  out = out.sort((a, b) => commands.get(a.command).index - commands.get(b.command).index);\n  \n  return out;\n}\n\nexport default class CommandsHelper extends AutocompletePeerHelper {\n  constructor(appendTo: HTMLElement, \n    controller: AutocompleteHelperController, \n    chatInput: ChatInput, \n    private appProfileManager: AppProfileManager,\n    private appUsersManager: AppUsersManager) {\n    super(appendTo, \n      controller,\n      'commands-helper',\n      (target) => {\n        const innerHTML = target.querySelector(`.${AutocompletePeerHelper.BASE_CLASS_LIST_ELEMENT}-name`).innerHTML;\n        return chatInput.getReadyToSend(() => {\n          chatInput.messageInput.innerHTML = innerHTML;\n          chatInput.sendMessage(true);\n        });\n      }\n    );\n  }\n\n  public checkQuery(query: string, peerId: PeerId) {\n    if(!this.appUsersManager.isBot(peerId)) {\n      return false;\n    }\n\n    const middleware = this.controller.getMiddleware();\n    Promise.resolve(this.appProfileManager.getProfileByPeerId(peerId)).then(full => {\n      if(!middleware()) {\n        return;\n      }\n\n      const filtered = processPeerFullForCommands(full, query);\n      this.render(filtered);\n      // console.log('found commands', found, filtered);\n    });\n\n    return true;\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { getMiddleware } from \"../../helpers/middleware\";\r\nimport AutocompleteHelper from \"./autocompleteHelper\";\r\n\r\nexport default class AutocompleteHelperController {\r\n  private helpers: Set<AutocompleteHelper> = new Set();\r\n  private middleware = getMiddleware();\r\n  /* private tempId = 0;\r\n\r\n  public incrementToggleCount() {\r\n    return ++this.tempId;\r\n  }\r\n\r\n  public getToggleCount() {\r\n    return this.tempId;\r\n  } */\r\n\r\n  public toggleListNavigation(enabled: boolean) {\r\n    for(const helper of this.helpers) {\r\n      helper.toggleListNavigation(enabled);\r\n    }\r\n  }\r\n\r\n  public getMiddleware() {\r\n    this.middleware.clean();\r\n    return this.middleware.get();\r\n  }\r\n\r\n  public addHelper(helper: AutocompleteHelper) {\r\n    this.helpers.add(helper);\r\n  }\r\n\r\n  public hideOtherHelpers(preserveHelper?: AutocompleteHelper) {\r\n    this.helpers.forEach(helper => {\r\n      if(helper !== preserveHelper) {\r\n        helper.toggle(true, true);\r\n      }\r\n    });\r\n\r\n    if(!preserveHelper) {\r\n      this.middleware.clean();\r\n    }\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type ChatInput from \"./input\";\nimport type { MessageEntity } from \"../../layer\";\nimport type { AppProfileManager } from \"../../lib/appManagers/appProfileManager\";\nimport type { AppUsersManager } from \"../../lib/appManagers/appUsersManager\";\nimport AutocompleteHelperController from \"./autocompleteHelperController\";\nimport AutocompletePeerHelper from \"./autocompletePeerHelper\";\n\nexport default class MentionsHelper extends AutocompletePeerHelper {\n  constructor(appendTo: HTMLElement, \n    controller: AutocompleteHelperController, \n    chatInput: ChatInput, \n    private appProfileManager: AppProfileManager,\n    private appUsersManager: AppUsersManager) {\n    super(appendTo, \n      controller,\n      'mentions-helper',\n      (target) => {\n        const user = appUsersManager.getUser((target as HTMLElement).dataset.peerId.toUserId());\n        let str = '', entity: MessageEntity;\n        if(user.username) {\n          str = '@' + user.username;\n        } else {\n          str = user.first_name || user.last_name;\n          entity = {\n            _: 'messageEntityMentionName',\n            length: str.length,\n            offset: 0,\n            user_id: user.id\n          };\n        }\n\n        str += ' ';\n        chatInput.insertAtCaret(str, entity);\n      }\n    );\n  }\n\n  public checkQuery(query: string, peerId: PeerId, topMsgId: number) {\n    const trimmed = query.trim(); // check that there is no whitespace\n    if(query.length !== trimmed.length) return false;\n\n    const middleware = this.controller.getMiddleware();\n    this.appProfileManager.getMentions(peerId && peerId.toChatId(), trimmed, topMsgId).then(peerIds => {\n      if(!middleware()) return;\n      \n      const username = trimmed.slice(1).toLowerCase();\n      this.render(peerIds.map(peerId => {\n        const user = this.appUsersManager.getUser(peerId);\n        if(user.username && user.username.toLowerCase() === username) { // hide full matched suggestion\n          return;\n        }\n\n        return {\n          peerId,\n          description: user.username ? '@' + user.username : undefined\n        };\n      }).filter(Boolean));\n    });\n\n    return true;\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\r\nimport type ChatInput from \"./input\";\r\nimport DropdownHover from \"../../helpers/dropdownHover\";\r\nimport { KeyboardButton, ReplyMarkup } from \"../../layer\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport ListenerSetter, { Listener } from \"../../helpers/listenerSetter\";\r\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\r\nimport findUpAsChild from \"../../helpers/dom/findUpAsChild\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport { getHeavyAnimationPromise } from \"../../hooks/useHeavyAnimationCheck\";\r\nimport confirmationPopup from \"../confirmationPopup\";\r\nimport safeAssign from \"../../helpers/object/safeAssign\";\r\n\r\nexport default class ReplyKeyboard extends DropdownHover {\r\n  private static BASE_CLASS = 'reply-keyboard';\r\n  private appendTo: HTMLElement;\r\n  private listenerSetter: ListenerSetter;\r\n  private appMessagesManager: AppMessagesManager;\r\n  private btnHover: HTMLElement;\r\n  private peerId: PeerId;\r\n  private touchListener: Listener;\r\n  private chatInput: ChatInput;\r\n\r\n  constructor(options: {\r\n    listenerSetter: ListenerSetter,\r\n    appMessagesManager: AppMessagesManager,\r\n    appendTo: HTMLElement,\r\n    btnHover: HTMLElement,\r\n    chatInput: ChatInput\r\n  }) {\r\n    super({\r\n      element: document.createElement('div')\r\n    });\r\n\r\n    safeAssign(this, options);\r\n\r\n    this.element.classList.add(ReplyKeyboard.BASE_CLASS);\r\n    this.element.style.display = 'none';\r\n\r\n    this.attachButtonListener(this.btnHover, this.listenerSetter);\r\n    this.listenerSetter.add(rootScope)('history_reply_markup', ({peerId}) => {\r\n      if(this.peerId === peerId) {\r\n        if(this.checkAvailability() && this.isActive()) {\r\n          this.render();\r\n        }\r\n\r\n        getHeavyAnimationPromise().then(() => {\r\n          this.checkForceReply();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  protected init() {\r\n    this.appendTo.append(this.element);\r\n\r\n    this.listenerSetter.add(this)('open', () => {\r\n      this.render();\r\n\r\n      if(IS_TOUCH_SUPPORTED) {\r\n        this.touchListener = this.listenerSetter.add(document.body)('touchstart', this.onBodyTouchStart, {passive: false, capture: true}) as any as Listener;\r\n        this.listenerSetter.add(this)('close', () => {\r\n          this.listenerSetter.remove(this.touchListener);\r\n        }, {once: true});\r\n      }\r\n    });\r\n    \r\n    this.listenerSetter.add(this.element)('click', (e) => {\r\n      const target = findUpClassName(e.target, 'btn');\r\n      if(!target) {\r\n        return;\r\n      }\r\n\r\n      const type = target.dataset.type as KeyboardButton['_'];\r\n      const {peerId} = this;\r\n      switch(type) {\r\n        case 'keyboardButtonRequestPhone': {\r\n          confirmationPopup({\r\n            titleLangKey: 'ShareYouPhoneNumberTitle',\r\n            button: {\r\n              langKey: 'OK'\r\n            },\r\n            descriptionLangKey: 'AreYouSureShareMyContactInfoBot'\r\n          }).then(() => {\r\n            this.appMessagesManager.sendContact(peerId, rootScope.myId);\r\n          });\r\n          break;\r\n        }\r\n\r\n        default: {\r\n          this.appMessagesManager.sendText(peerId, target.dataset.text);\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.toggle(false);\r\n    });\r\n\r\n    return super.init();\r\n  }\r\n\r\n  private onBodyTouchStart = (e: TouchEvent) => {\r\n    const target = e.touches[0].target as HTMLElement;\r\n    if(!findUpAsChild(target, this.element) && target !== this.btnHover) {\r\n      cancelEvent(e);\r\n      this.toggle(false);\r\n    }\r\n  };\r\n\r\n  public checkForceReply() {\r\n    const replyMarkup = this.getReplyMarkup();\r\n    if(replyMarkup._ === 'replyKeyboardForceReply' &&\r\n      !replyMarkup.pFlags.hidden && \r\n      !replyMarkup.pFlags.used) {\r\n      replyMarkup.pFlags.used = true;\r\n      this.chatInput.initMessageReply(replyMarkup.mid);\r\n    }\r\n  }\r\n\r\n  private getReplyMarkup(): ReplyMarkup {\r\n    return this.appMessagesManager.getHistoryStorage(this.peerId).replyMarkup ?? {\r\n      _: 'replyKeyboardHide'\r\n    };\r\n  }\r\n\r\n  public render(replyMarkup: ReplyMarkup.replyKeyboardMarkup = this.getReplyMarkup() as any) {\r\n    this.element.innerHTML = '';\r\n\r\n    for(const row of replyMarkup.rows) {\r\n      const div = document.createElement('div');\r\n      div.classList.add(ReplyKeyboard.BASE_CLASS + '-row');\r\n\r\n      for(const button of row.buttons) {\r\n        const btn = document.createElement('button');\r\n        btn.classList.add(ReplyKeyboard.BASE_CLASS + '-button', 'btn');\r\n        btn.innerHTML = RichTextProcessor.wrapEmojiText(button.text);\r\n        btn.dataset.text = button.text;\r\n        btn.dataset.type = button._;\r\n        div.append(btn);\r\n      }\r\n\r\n      this.element.append(div);\r\n    }\r\n  }\r\n\r\n  public checkAvailability(replyMarkup: ReplyMarkup = this.getReplyMarkup()) {\r\n    const hide = replyMarkup._ === 'replyKeyboardHide' || !(replyMarkup as ReplyMarkup.replyInlineMarkup).rows?.length;\r\n    this.btnHover.classList.toggle('hide', hide);\r\n\r\n    if(hide) {\r\n      this.toggle(false);\r\n    }\r\n\r\n    return !hide;\r\n  }\r\n\r\n  public setPeer(peerId: PeerId) {\r\n    this.peerId = peerId;\r\n\r\n    this.checkAvailability();\r\n    this.checkForceReply();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppInlineBotsManager } from \"../../lib/appManagers/appInlineBotsManager\";\r\nimport type { AppUsersManager } from \"../../lib/appManagers/appUsersManager\";\r\nimport type Chat from \"./chat\";\r\nimport debounce from \"../../helpers/schedulers/debounce\";\r\nimport { WebDocument } from \"../../layer\";\r\nimport { MyDocument } from \"../../lib/appManagers/appDocsManager\";\r\nimport appDownloadManager from \"../../lib/appManagers/appDownloadManager\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport LazyLoadQueue from \"../lazyLoadQueue\";\r\nimport Scrollable from \"../scrollable\";\r\nimport { renderImageWithFadeIn, wrapPhoto } from \"../wrappers\";\r\nimport AutocompleteHelper from \"./autocompleteHelper\";\r\nimport AutocompleteHelperController from \"./autocompleteHelperController\";\r\nimport Button from \"../button\";\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport { MyPhoto } from \"../../lib/appManagers/appPhotosManager\";\r\nimport assumeType from \"../../helpers/assumeType\";\r\nimport GifsMasonry from \"../gifsMasonry\";\r\nimport { SuperStickerRenderer } from \"../emoticonsDropdown/tabs/stickers\";\r\nimport mediaSizes from \"../../helpers/mediaSizes\";\r\nimport readBlobAsDataURL from \"../../helpers/blob/readBlobAsDataURL\";\r\n\r\nconst ANIMATION_GROUP = 'INLINE-HELPER';\r\n// const GRID_ITEMS = 5;\r\n\r\nexport default class InlineHelper extends AutocompleteHelper {\r\n  private scrollable: Scrollable;\r\n  private lazyLoadQueue: LazyLoadQueue;\r\n  private gifsMasonry: GifsMasonry;\r\n  private superStickerRenderer: SuperStickerRenderer;\r\n  private onChangeScreen: () => void;\r\n  public checkQuery: (peerId: PeerId, username: string, query: string) => ReturnType<InlineHelper['_checkQuery']>;\r\n\r\n  constructor(appendTo: HTMLElement, \r\n    controller: AutocompleteHelperController,\r\n    private chat: Chat,\r\n    private appUsersManager: AppUsersManager,\r\n    private appInlineBotsManager: AppInlineBotsManager) {\r\n    super({\r\n      appendTo, \r\n      controller,\r\n      listType: 'xy', \r\n      waitForKey: ['ArrowUp', 'ArrowDown'],\r\n      onSelect: (target) => {\r\n        if(!target) return false; // can happen when there is only button\r\n        const {peerId, botId, queryId} = this.list.dataset;\r\n        return this.chat.input.getReadyToSend(() => {\r\n          const queryAndResultIds = this.appInlineBotsManager.generateQId(queryId, (target as HTMLElement).dataset.resultId);\r\n          this.appInlineBotsManager.sendInlineResult(peerId.toPeerId(), botId, queryAndResultIds, {\r\n            ...this.chat.getMessageSendingParams(),\r\n            clearDraft: true,\r\n          });\r\n\r\n          this.chat.input.onMessageSent(true, true);\r\n        });\r\n      }\r\n    });\r\n\r\n    this.container.classList.add('inline-helper');\r\n\r\n    this.addEventListener('visible', () => {\r\n      setTimeout(() => { // it is not rendered yet\r\n        this.scrollable.container.scrollTop = 0;\r\n      }, 0); \r\n    });\r\n\r\n    this.checkQuery = debounce(this._checkQuery, 200, true, true);\r\n\r\n    this.addEventListener('hidden', () => {\r\n      if(this.onChangeScreen) {\r\n        mediaSizes.removeEventListener('changeScreen', this.onChangeScreen);\r\n        this.onChangeScreen = undefined;\r\n      }\r\n    });\r\n  }\r\n\r\n  public _checkQuery = async(peerId: PeerId, username: string, query: string) => {\r\n    const middleware = this.controller.getMiddleware();\r\n\r\n    const peer = await this.appUsersManager.resolveUsername(username);\r\n    if(!middleware()) {\r\n      throw 'PEER_CHANGED';\r\n    }\r\n\r\n    if(peer._ !== 'user') {\r\n      throw 'NOT_A_BOT';\r\n    }\r\n\r\n    const renderPromise = this.appInlineBotsManager.getInlineResults(peerId, peer.id, query).then(botResults => {\r\n      if(!middleware()) {\r\n        throw 'PEER_CHANGED';\r\n      }\r\n\r\n      if(this.init) {\r\n        this.init();\r\n        this.init = null;\r\n      }\r\n\r\n      const list = this.list.cloneNode() as HTMLElement;\r\n      list.dataset.peerId = '' + peerId;\r\n      list.dataset.botId = '' + peer.id;\r\n      list.dataset.queryId = '' + botResults.query_id;\r\n\r\n      const gifsMasonry = new GifsMasonry(null, ANIMATION_GROUP, this.scrollable, false);\r\n\r\n      this.lazyLoadQueue.clear();\r\n      this.superStickerRenderer.clear();\r\n      \r\n      const loadPromises: Promise<any>[] = [];\r\n      const isGallery = !!botResults.pFlags.gallery;\r\n      // botResults.results.length = 3;\r\n      for(const item of botResults.results) {\r\n        const container = document.createElement('div');\r\n        container.classList.add('inline-helper-result');\r\n        container.dataset.resultId = item.id;\r\n  \r\n        const preview = isGallery ? undefined : document.createElement('div');\r\n        if(preview) {\r\n          preview.classList.add('inline-helper-result-preview');\r\n\r\n          container.append(preview);\r\n        }\r\n\r\n        list.append(container);\r\n\r\n        if(!isGallery) {\r\n          preview.classList.add('empty');\r\n          preview.innerHTML = RichTextProcessor.wrapEmojiText([...item.title.trim()][0]);\r\n\r\n          const title = document.createElement('div');\r\n          title.classList.add('inline-helper-result-title');\r\n          title.innerHTML = RichTextProcessor.wrapEmojiText(item.title);\r\n    \r\n          const description = document.createElement('div');\r\n          description.classList.add('inline-helper-result-description');\r\n          description.innerHTML = RichTextProcessor.wrapRichText(item.description, {\r\n            noCommands: true,\r\n            noLinks: true\r\n          });\r\n    \r\n          container.append(title, description);\r\n  \r\n          const separator = document.createElement('div');\r\n          separator.classList.add('inline-helper-separator');\r\n    \r\n          list.append(separator);\r\n        } else {\r\n          container.classList.add('grid-item');\r\n        }\r\n        \r\n        if(item._ === 'botInlineResult') {\r\n          if(item.thumb && item.thumb.mime_type.indexOf('image/') === 0) {\r\n            let mediaContainer: HTMLElement;\r\n            if(preview) {\r\n              mediaContainer = document.createElement('div');\r\n              preview.append(mediaContainer);\r\n            } else {\r\n              mediaContainer = container;\r\n            }\r\n\r\n            mediaContainer.classList.add('media-container'); \r\n            isGallery && mediaContainer.classList.add('no-border-radius');\r\n\r\n            this.lazyLoadQueue.push({\r\n              div: container,\r\n              load: () => {\r\n                return appDownloadManager.download({\r\n                  dcId: 4,\r\n                  location: {\r\n                    _: 'inputWebFileLocation',\r\n                    access_hash: (item.thumb as WebDocument.webDocument).access_hash,\r\n                    url: item.thumb.url\r\n                  },\r\n                  size: item.thumb.size,\r\n                  mimeType: item.thumb.mime_type\r\n                }).then(blob => {\r\n                  const image = new Image();\r\n                  image.classList.add('media-photo');\r\n                  readBlobAsDataURL(blob).then(dataURL => {\r\n                    renderImageWithFadeIn(mediaContainer, image, dataURL, true);\r\n                  });\r\n                });\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          const media = item.document as MyDocument || item.photo as MyPhoto;\r\n          if((['sticker', 'gif'] as MyDocument['type'][]).includes((media as MyDocument)?.type) && isGallery) {\r\n            assumeType<MyDocument>(media);\r\n\r\n            if(media.type === 'gif') {\r\n              gifsMasonry.add(media, container);\r\n            } else if(media.type === 'sticker') {\r\n              container.classList.add('super-sticker');\r\n              this.superStickerRenderer.renderSticker(media, container, loadPromises);\r\n              if(media.sticker === 2) {\r\n                this.superStickerRenderer.observeAnimatedDiv(container);\r\n              }\r\n            }\r\n          } else if(media) {\r\n            const size = isGallery ? 48 : undefined;\r\n            isGallery && container.classList.add('no-border-radius');\r\n            wrapPhoto({\r\n              photo: media,\r\n              container: isGallery ? container : preview,\r\n              boxWidth: size,\r\n              boxHeight: size,\r\n              middleware,\r\n              lazyLoadQueue: this.lazyLoadQueue,\r\n              loadPromises\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      return Promise.all(loadPromises).then(() => {\r\n        if(!middleware()) {\r\n          gifsMasonry.clear();\r\n          return;\r\n        }\r\n\r\n        list.classList.toggle('is-gallery', isGallery);\r\n        list.classList.toggle('super-stickers', isGallery);\r\n        this.container.classList.toggle('is-gallery', isGallery);\r\n\r\n        /* if(isGallery) {\r\n          list.style.gridTemplateColumns = `repeat(${Math.min(botResults.results.length, 4)}, 1fr)`;\r\n        }\r\n\r\n        this.container.style.setProperty('width', isGallery ? `${Math.min(botResults.results.length, 4) * 25}%` : '', 'important'); */\r\n\r\n        const parent = this.list.parentElement;\r\n        parent.textContent = '';\r\n        if(botResults.switch_pm) {\r\n          const btnSwitchToPM = Button('btn-primary btn-secondary btn-primary-transparent primary');\r\n          btnSwitchToPM.insertAdjacentHTML('beforeend', RichTextProcessor.wrapEmojiText(botResults.switch_pm.text));\r\n          attachClickEvent(btnSwitchToPM, (e) => {\r\n            this.appInlineBotsManager.switchToPM(peerId, peer.id, botResults.switch_pm.start_param);\r\n          });\r\n          parent.append(btnSwitchToPM);\r\n        }\r\n        parent.append(this.list = list);\r\n\r\n        if(this.gifsMasonry) {\r\n          this.gifsMasonry.detach();\r\n        }\r\n        this.gifsMasonry = gifsMasonry;\r\n        gifsMasonry.attach();\r\n\r\n        if(!this.onChangeScreen) {\r\n          this.onChangeScreen = () => {\r\n            if(this.list.classList.contains('is-gallery')) {\r\n              const width = (this.list.childElementCount * mediaSizes.active.esgSticker.width) + (this.list.childElementCount - 1 * 1);\r\n              this.list.style.width = width + 'px';\r\n            } else {\r\n              this.list.style.width = '';\r\n            }\r\n          };\r\n          mediaSizes.addEventListener('changeScreen', this.onChangeScreen);\r\n        }\r\n\r\n        this.onChangeScreen();\r\n  \r\n        this.toggle(!botResults.results.length && !botResults.switch_pm);\r\n        this.scrollable.scrollTop = 0;\r\n      });\r\n    });\r\n\r\n    return {user: peer, renderPromise};\r\n  };\r\n\r\n  protected init() {\r\n    this.list = document.createElement('div');\r\n    this.list.classList.add('inline-helper-results');\r\n\r\n    this.container.append(this.list);\r\n\r\n    this.scrollable = new Scrollable(this.container);\r\n    this.lazyLoadQueue = new LazyLoadQueue();\r\n    this.superStickerRenderer = new SuperStickerRenderer(this.lazyLoadQueue, ANIMATION_GROUP);\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { AppProfileManager } from \"../../lib/appManagers/appProfileManager\";\nimport type ChatInput from \"./input\";\nimport callbackify from \"../../helpers/callbackify\";\nimport AutocompletePeerHelper from \"./autocompletePeerHelper\";\nimport { processPeerFullForCommands } from \"./commandsHelper\";\n\nconst CLASS_NAME = 'bot-commands';\nexport default class ChatBotCommands extends AutocompletePeerHelper {\n  private userId: UserId;\n\n  constructor(\n    appendTo: HTMLElement,\n    private chatInput: ChatInput,\n    private appProfileManager: AppProfileManager\n  ) {\n    super(appendTo, undefined, CLASS_NAME, (target) => {\n      const innerHTML = target.querySelector(`.${AutocompletePeerHelper.BASE_CLASS_LIST_ELEMENT}-name`).innerHTML;\n      return chatInput.getReadyToSend(() => {\n        chatInput.messageInput.innerHTML = innerHTML;\n        chatInput.sendMessage(true);\n        this.toggle(true);\n      });\n    });\n  }\n\n  public setUserId(userId: UserId, middleware: () => boolean) {\n    if(this.userId === userId && this.list?.childElementCount) {\n      this.toggle(false);\n      return;\n    }\n\n    this.userId = userId;\n    return callbackify(this.appProfileManager.getProfile(userId), (full) => {\n      if(!middleware()) return;\n      const filtered = processPeerFullForCommands(full);\n      \n      const PADDING_TOP = 8;\n      // const PADDING_BOTTOM = 8;\n      const PADDING_BOTTOM = 24;\n      const height = filtered.length * 50 + PADDING_TOP + PADDING_BOTTOM;\n      this.container.style.setProperty('--height', height + 'px');\n\n      this.render(filtered);\n      \n      // this.container.style.top = \n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppNotificationsManager } from '../../lib/appManagers/appNotificationsManager';\r\nimport type { AppChatsManager } from '../../lib/appManagers/appChatsManager';\r\nimport type { AppDocsManager, MyDocument } from \"../../lib/appManagers/appDocsManager\";\r\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\r\nimport type { AppPeersManager } from '../../lib/appManagers/appPeersManager';\r\nimport type { AppWebPagesManager } from \"../../lib/appManagers/appWebPagesManager\";\r\nimport type { AppImManager } from '../../lib/appManagers/appImManager';\r\nimport type { AppDraftsManager, MyDraftMessage } from '../../lib/appManagers/appDraftsManager';\r\nimport type { AppEmojiManager } from '../../lib/appManagers/appEmojiManager';\r\nimport type { ServerTimeManager } from '../../lib/mtproto/serverTimeManager';\r\nimport type { AppUsersManager } from '../../lib/appManagers/appUsersManager';\r\nimport type { AppInlineBotsManager } from '../../lib/appManagers/appInlineBotsManager';\r\nimport type { AppMessagesIdsManager } from '../../lib/appManagers/appMessagesIdsManager';\r\nimport type Chat from './chat';\r\nimport Recorder from '../../../public/recorder.min';\r\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\r\nimport apiManager from \"../../lib/mtproto/mtprotoworker\";\r\n//import Recorder from '../opus-recorder/dist/recorder.min';\r\nimport opusDecodeController from \"../../lib/opusDecodeController\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport ButtonMenu, { ButtonMenuItemOptions } from '../buttonMenu';\r\nimport emoticonsDropdown from \"../emoticonsDropdown\";\r\nimport PopupCreatePoll from \"../popups/createPoll\";\r\nimport PopupForward from '../popups/forward';\r\nimport PopupNewMedia from '../popups/newMedia';\r\nimport { toast } from \"../toast\";\r\nimport { wrapReply } from \"../wrappers\";\r\nimport InputField from '../inputField';\r\nimport { MessageEntity, DraftMessage, WebPage, Message, ChatFull, UserFull } from '../../layer';\r\nimport StickersHelper from './stickersHelper';\r\nimport ButtonIcon from '../buttonIcon';\r\nimport ButtonMenuToggle from '../buttonMenuToggle';\r\nimport ListenerSetter, { Listener } from '../../helpers/listenerSetter';\r\nimport Button from '../button';\r\nimport PopupSchedule from '../popups/schedule';\r\nimport SendMenu from './sendContextMenu';\r\nimport rootScope from '../../lib/rootScope';\r\nimport PopupPinMessage from '../popups/unpinMessage';\r\nimport { tsNow } from '../../helpers/date';\r\nimport appNavigationController, { NavigationItem } from '../appNavigationController';\r\nimport { IS_MOBILE, IS_MOBILE_SAFARI } from '../../environment/userAgent';\r\nimport I18n, { i18n, join, LangPackKey } from '../../lib/langPack';\r\nimport { generateTail } from './bubbles';\r\nimport findUpClassName from '../../helpers/dom/findUpClassName';\r\nimport ButtonCorner from '../buttonCorner';\r\nimport blurActiveElement from '../../helpers/dom/blurActiveElement';\r\nimport { cancelEvent } from '../../helpers/dom/cancelEvent';\r\nimport cancelSelection from '../../helpers/dom/cancelSelection';\r\nimport { attachClickEvent, simulateClickEvent } from '../../helpers/dom/clickEvent';\r\nimport getRichValue from '../../helpers/dom/getRichValue';\r\nimport isInputEmpty from '../../helpers/dom/isInputEmpty';\r\nimport isSendShortcutPressed from '../../helpers/dom/isSendShortcutPressed';\r\nimport placeCaretAtEnd from '../../helpers/dom/placeCaretAtEnd';\r\nimport { MarkdownType, markdownTags } from '../../helpers/dom/getRichElementValue';\r\nimport getRichValueWithCaret from '../../helpers/dom/getRichValueWithCaret';\r\nimport EmojiHelper from './emojiHelper';\r\nimport CommandsHelper from './commandsHelper';\r\nimport AutocompleteHelperController from './autocompleteHelperController';\r\nimport AutocompleteHelper from './autocompleteHelper';\r\nimport MentionsHelper from './mentionsHelper';\r\nimport fixSafariStickyInput from '../../helpers/dom/fixSafariStickyInput';\r\nimport { emojiFromCodePoints } from '../../vendor/emoji';\r\nimport ReplyKeyboard from './replyKeyboard';\r\nimport InlineHelper from './inlineHelper';\r\nimport debounce from '../../helpers/schedulers/debounce';\r\nimport noop from '../../helpers/noop';\r\nimport { openBtnMenu, putPreloader } from '../misc';\r\nimport SetTransition from '../singleTransition';\r\nimport PeerTitle from '../peerTitle';\r\nimport { fastRaf } from '../../helpers/schedulers';\r\nimport PopupDeleteMessages from '../popups/deleteMessages';\r\nimport fixSafariStickyInputFocusing, { IS_STICKY_INPUT_BUGGED } from '../../helpers/dom/fixSafariStickyInputFocusing';\r\nimport PopupPeer from '../popups/peer';\r\nimport MEDIA_MIME_TYPES_SUPPORTED from '../../environment/mediaMimeTypesSupport';\r\nimport appMediaPlaybackController from '../appMediaPlaybackController';\r\nimport { BOT_START_PARAM, NULL_PEER_ID } from '../../lib/mtproto/mtproto_config';\r\nimport setCaretAt from '../../helpers/dom/setCaretAt';\r\nimport CheckboxField from '../checkboxField';\r\nimport DropdownHover from '../../helpers/dropdownHover';\r\nimport RadioForm from '../radioForm';\r\nimport findUpTag from '../../helpers/dom/findUpTag';\r\nimport toggleDisability from '../../helpers/dom/toggleDisability';\r\nimport AvatarElement from '../avatar';\r\nimport type { AppProfileManager } from '../../lib/appManagers/appProfileManager';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport ChatBotCommands from './botCommands';\r\nimport copy from '../../helpers/object/copy';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\n\r\nconst RECORD_MIN_TIME = 500;\r\nconst POSTING_MEDIA_NOT_ALLOWED = 'Posting media content isn\\'t allowed in this group.';\r\n\r\nconst SEND_AS_ANIMATION_DURATION = 300;\r\n\r\ntype ChatInputHelperType = 'edit' | 'webpage' | 'forward' | 'reply';\r\n\r\nexport default class ChatInput {\r\n  // private static AUTO_COMPLETE_REG_EXP = /(\\s|^)((?::|.)(?!.*[:@]).*|(?:[@\\/]\\S*))$/;\r\n  private static AUTO_COMPLETE_REG_EXP = /(\\s|^)((?:(?:@|^\\/)\\S*)|(?::|^[^:@\\/])(?!.*[:@\\/]).*)$/;\r\n  public messageInput: HTMLElement;\r\n  public messageInputField: InputField;\r\n  private fileInput: HTMLInputElement;\r\n  private inputMessageContainer: HTMLDivElement;\r\n  private btnSend: HTMLButtonElement;\r\n  private btnCancelRecord: HTMLButtonElement;\r\n  private lastUrl = '';\r\n  private lastTimeType = 0;\r\n\r\n  public chatInput: HTMLElement;\r\n  public inputContainer: HTMLElement;\r\n  public rowsWrapper: HTMLDivElement;\r\n  private newMessageWrapper: HTMLDivElement;\r\n  private btnToggleEmoticons: HTMLButtonElement;\r\n  private btnToggleReplyMarkup: HTMLButtonElement;\r\n  private btnSendContainer: HTMLDivElement;\r\n\r\n  private replyKeyboard: ReplyKeyboard;\r\n\r\n  private attachMenu: HTMLElement;\r\n  private attachMenuButtons: (ButtonMenuItemOptions & {verify: (peerId: PeerId, threadId: number) => boolean})[];\r\n\r\n  private sendMenu: SendMenu;\r\n\r\n  private replyElements: {\r\n    container: HTMLElement,\r\n    cancelBtn: HTMLButtonElement,\r\n    iconBtn: HTMLButtonElement\r\n  } = {} as any;\r\n\r\n  private forwardElements: {\r\n    changePeer: ButtonMenuItemOptions,\r\n    showSender: ButtonMenuItemOptions,\r\n    hideSender: ButtonMenuItemOptions,\r\n    showCaption: ButtonMenuItemOptions,\r\n    hideCaption: ButtonMenuItemOptions,\r\n    container: HTMLElement,\r\n    modifyArgs?: ButtonMenuItemOptions[]\r\n  };  \r\n  private forwardHover: DropdownHover;\r\n  private forwardWasDroppingAuthor: boolean;\r\n\r\n  private getWebPagePromise: Promise<void>;\r\n  private willSendWebPage: WebPage = null;\r\n  private forwarding: {[fromPeerId: PeerId]: number[]};\r\n  public replyToMsgId: number;\r\n  public editMsgId: number;\r\n  public editMessage: Message.message;\r\n  private noWebPage: true;\r\n  public scheduleDate: number;\r\n  public sendSilent: true;\r\n  public startParam: string;\r\n\r\n  private recorder: any;\r\n  public recording = false;\r\n  private recordCanceled = false;\r\n  private recordTimeEl: HTMLElement;\r\n  private recordRippleEl: HTMLElement;\r\n  private recordStartTime = 0;\r\n  private recordingOverlayListener: Listener;\r\n  private recordingNavigationItem: NavigationItem;\r\n\r\n  // private scrollTop = 0;\r\n  // private scrollOffsetTop = 0;\r\n  // private scrollDiff = 0;\r\n\r\n  public helperType: Exclude<ChatInputHelperType, 'webpage'>;\r\n  private helperFunc: () => void;\r\n  private helperWaitingForward: boolean;\r\n\r\n  public willAttachType: 'document' | 'media';\r\n\r\n  private lockRedo = false;\r\n  private canRedoFromHTML = '';\r\n  private readonly undoHistory: string[] = [];\r\n  private readonly executedHistory: string[] = [];\r\n  private canUndoFromHTML = '';\r\n\r\n  private autocompleteHelperController: AutocompleteHelperController;\r\n  private stickersHelper: StickersHelper;\r\n  private emojiHelper: EmojiHelper;\r\n  private commandsHelper: CommandsHelper;\r\n  private mentionsHelper: MentionsHelper;\r\n  private inlineHelper: InlineHelper;\r\n  private listenerSetter: ListenerSetter;\r\n\r\n  private pinnedControlBtn: HTMLButtonElement;\r\n\r\n  private goDownBtn: HTMLButtonElement;\r\n  private goDownUnreadBadge: HTMLElement;\r\n  private goMentionBtn: HTMLButtonElement;\r\n  private goMentionUnreadBadge: HTMLSpanElement;\r\n  private btnScheduled: HTMLButtonElement;\r\n\r\n  private btnPreloader: HTMLButtonElement;\r\n\r\n  private saveDraftDebounced: () => void;\r\n\r\n  private fakeRowsWrapper: HTMLDivElement;\r\n\r\n  private previousQuery: string;\r\n  \r\n  private releaseMediaPlayback: () => void;\r\n\r\n  private botStartBtn: HTMLButtonElement;\r\n  private rowsWrapperWrapper: HTMLDivElement;\r\n  private controlContainer: HTMLElement;\r\n  private fakeSelectionWrapper: HTMLDivElement;\r\n\r\n  private fakeWrapperTo: HTMLElement;\r\n  private toggleBotStartBtnDisability: () => void;\r\n\r\n  private sendAsAvatar: AvatarElement;\r\n  private sendAsContainer: HTMLElement;\r\n  private sendAsCloseBtn: HTMLElement;\r\n  private sendAsBtnMenu: HTMLElement;\r\n  private sendAsPeerIds: PeerId[];\r\n  public sendAsPeerId: PeerId;\r\n  private updatingSendAsPromise: Promise<void>;\r\n\r\n  private botCommandsToggle: HTMLElement;\r\n  private botCommands: ChatBotCommands;\r\n  private botCommandsIcon: HTMLDivElement;\r\n  private hasBotCommands: number;\r\n\r\n  // private activeContainer: HTMLElement;\r\n\r\n  constructor(\r\n    private chat: Chat, \r\n    private appMessagesManager: AppMessagesManager, \r\n    private appMessagesIdsManager: AppMessagesIdsManager, \r\n    private appDocsManager: AppDocsManager, \r\n    private appChatsManager: AppChatsManager, \r\n    private appPeersManager: AppPeersManager, \r\n    private appWebPagesManager: AppWebPagesManager, \r\n    private appImManager: AppImManager, \r\n    private appDraftsManager: AppDraftsManager, \r\n    private serverTimeManager: ServerTimeManager, \r\n    private appNotificationsManager: AppNotificationsManager,\r\n    private appEmojiManager: AppEmojiManager,\r\n    private appUsersManager: AppUsersManager,\r\n    private appInlineBotsManager: AppInlineBotsManager,\r\n    private appProfileManager: AppProfileManager\r\n  ) {\r\n    this.listenerSetter = new ListenerSetter();\r\n  }\r\n\r\n  public construct() {\r\n    this.chatInput = document.createElement('div');\r\n    this.chatInput.classList.add('chat-input');\r\n    this.chatInput.style.display = 'none';\r\n\r\n    this.inputContainer = document.createElement('div');\r\n    this.inputContainer.classList.add('chat-input-container');\r\n\r\n    this.rowsWrapperWrapper = document.createElement('div');\r\n    this.rowsWrapperWrapper.classList.add('rows-wrapper-wrapper');\r\n\r\n    this.rowsWrapper = document.createElement('div');\r\n    this.rowsWrapper.classList.add('rows-wrapper', 'chat-input-wrapper');\r\n\r\n    this.rowsWrapperWrapper.append(this.rowsWrapper);\r\n\r\n    const tail = generateTail();\r\n    this.rowsWrapper.append(tail);\r\n\r\n    const fakeRowsWrapper = this.fakeRowsWrapper = document.createElement('div');\r\n    fakeRowsWrapper.classList.add('fake-wrapper', 'fake-rows-wrapper');\r\n\r\n    const fakeSelectionWrapper = this.fakeSelectionWrapper = document.createElement('div');\r\n    fakeSelectionWrapper.classList.add('fake-wrapper', 'fake-selection-wrapper');\r\n\r\n    this.inputContainer.append(this.rowsWrapperWrapper, fakeRowsWrapper, fakeSelectionWrapper);\r\n    this.chatInput.append(this.inputContainer);\r\n\r\n    this.goDownBtn = ButtonCorner({icon: 'arrow_down', className: 'bubbles-corner-button bubbles-go-down hide'});\r\n    this.inputContainer.append(this.goDownBtn);\r\n\r\n    attachClickEvent(this.goDownBtn, (e) => {\r\n      cancelEvent(e);\r\n      this.chat.bubbles.onGoDownClick();\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    // * constructor end\r\n\r\n    /* let setScrollTopTimeout: number;\r\n    // @ts-ignore\r\n    let height = window.visualViewport.height; */\r\n    // @ts-ignore\r\n    // this.listenerSetter.add(window.visualViewport)('resize', () => {\r\n    //   const scrollable = this.chat.bubbles.scrollable;\r\n    //   const wasScrolledDown = scrollable.isScrolledDown;\r\n      \r\n    //   /* if(wasScrolledDown) {\r\n    //     this.saveScroll();\r\n    //   } */\r\n      \r\n    //   // @ts-ignore\r\n    //   let newHeight = window.visualViewport.height;\r\n    //   const diff = height - newHeight;\r\n    //   const scrollTop = scrollable.scrollTop;\r\n    //   const needScrollTop = wasScrolledDown ? scrollable.scrollHeight : scrollTop + diff; // * wasScrolledDown это проверка для десктоп хрома, когда пропадает панель загрузок снизу\r\n\r\n    //   console.log('resize before', scrollable.scrollTop, scrollable.container.clientHeight, scrollable.scrollHeight, wasScrolledDown, scrollable.lastScrollTop, diff, needScrollTop);\r\n\r\n    //   scrollable.scrollTop = needScrollTop;\r\n\r\n    //   if(setScrollTopTimeout) clearTimeout(setScrollTopTimeout);\r\n    //   setScrollTopTimeout = window.setTimeout(() => {\r\n    //     const diff = height - newHeight;\r\n    //     const isScrolledDown = scrollable.scrollHeight - Math.round(scrollable.scrollTop + scrollable.container.offsetHeight + diff) <= 1;\r\n    //     height = newHeight;\r\n\r\n    //     scrollable.scrollTop = needScrollTop;\r\n        \r\n    //     console.log('resize after', scrollable.scrollTop, scrollable.container.clientHeight, scrollable.scrollHeight, scrollable.isScrolledDown, scrollable.lastScrollTop, isScrolledDown);\r\n\r\n    //     /* if(isScrolledDown) {\r\n    //       scrollable.scrollTop = scrollable.scrollHeight;\r\n    //     } */\r\n\r\n    //     //scrollable.scrollTop += diff;\r\n    //     setScrollTopTimeout = 0;\r\n    //   }, 0);\r\n    // });\r\n\r\n    // ! Can't use it with resizeObserver\r\n    /* this.listenerSetter.add(window.visualViewport)('resize', () => {\r\n      const scrollable = this.chat.bubbles.scrollable;\r\n      const wasScrolledDown = scrollable.isScrolledDown;\r\n\r\n      // @ts-ignore\r\n      let newHeight = window.visualViewport.height;\r\n      const diff = height - newHeight;\r\n      const needScrollTop = wasScrolledDown ? scrollable.scrollHeight : scrollable.scrollTop + diff; // * wasScrolledDown это проверка для десктоп хрома, когда пропадает панель загрузок снизу\r\n\r\n      //console.log('resize before', scrollable.scrollTop, scrollable.container.clientHeight, scrollable.scrollHeight, wasScrolledDown, scrollable.lastScrollTop, diff, needScrollTop);\r\n\r\n      scrollable.scrollTop = needScrollTop;\r\n      height = newHeight;\r\n\r\n      if(setScrollTopTimeout) clearTimeout(setScrollTopTimeout);\r\n      setScrollTopTimeout = window.setTimeout(() => { // * try again for scrolled down Android Chrome\r\n        scrollable.scrollTop = needScrollTop;\r\n        \r\n        //console.log('resize after', scrollable.scrollTop, scrollable.container.clientHeight, scrollable.scrollHeight, scrollable.isScrolledDown, scrollable.lastScrollTop, isScrolledDown);\r\n        setScrollTopTimeout = 0;\r\n      }, 0);\r\n    }); */\r\n\r\n    const c = this.controlContainer = document.createElement('div');\r\n    c.classList.add('chat-input-control', 'chat-input-wrapper');\r\n    this.inputContainer.append(c);\r\n  }\r\n\r\n  public constructPeerHelpers() {\r\n    this.replyElements.container = document.createElement('div');\r\n    this.replyElements.container.classList.add('reply-wrapper');\r\n\r\n    this.replyElements.iconBtn = ButtonIcon('');\r\n    this.replyElements.cancelBtn = ButtonIcon('close reply-cancel', {noRipple: true});\r\n\r\n    this.replyElements.container.append(this.replyElements.iconBtn, this.replyElements.cancelBtn);\r\n\r\n    //\r\n\r\n    const onHideAuthorClick = () => {\r\n      isChangingAuthor = true;\r\n      return this.canToggleHideAuthor();\r\n    };\r\n\r\n    const onHideCaptionClick = () => {\r\n      isChangingAuthor = false;\r\n    };\r\n\r\n    const forwardElements: ChatInput['forwardElements'] = this.forwardElements = {} as any;\r\n    let isChangingAuthor = false;\r\n    const forwardButtons: ButtonMenuItemOptions[] = [\r\n      forwardElements.showSender = {\r\n        text: 'Chat.Alert.Forward.Action.Show1',\r\n        onClick: onHideAuthorClick,\r\n        checkboxField: new CheckboxField({checked: true})\r\n      },\r\n      forwardElements.hideSender = {\r\n        text: 'Chat.Alert.Forward.Action.Hide1',\r\n        onClick: onHideAuthorClick,\r\n        checkboxField: new CheckboxField({checked: false})\r\n      },\r\n      forwardElements.showCaption = {\r\n        text: 'Chat.Alert.Forward.Action.ShowCaption',\r\n        onClick: onHideCaptionClick,\r\n        checkboxField: new CheckboxField({checked: true})\r\n      },\r\n      forwardElements.hideCaption = {\r\n        text: 'Chat.Alert.Forward.Action.HideCaption',\r\n        onClick: onHideCaptionClick,\r\n        checkboxField: new CheckboxField({checked: false})\r\n      },\r\n      forwardElements.changePeer = {\r\n        text: 'Chat.Alert.Forward.Action.Another',\r\n        onClick: () => {\r\n          this.changeForwardRecipient();\r\n        },\r\n        icon: 'replace'\r\n      }\r\n    ];\r\n    const forwardBtnMenu = forwardElements.container = ButtonMenu(forwardButtons, this.listenerSetter);\r\n    // forwardBtnMenu.classList.add('top-center');\r\n\r\n    const children = Array.from(forwardBtnMenu.children) as HTMLElement[];\r\n    const groups: {\r\n      elements: HTMLElement[],\r\n      onChange: (value: string, event: Event) => void\r\n    }[] = [{\r\n      elements: children.slice(0, 2),\r\n      onChange: (value, e) => {\r\n        const checked = !!+value;\r\n        if(isChangingAuthor) {\r\n          this.forwardWasDroppingAuthor = !checked;\r\n        }\r\n\r\n        const replyTitle = this.replyElements.container.querySelector('.reply-title');\r\n        if(replyTitle) {\r\n          const el = replyTitle.firstElementChild as HTMLElement;\r\n          const i = I18n.weakMap.get(el) as I18n.IntlElement;\r\n          const langPackKey: LangPackKey = forwardElements.showSender.checkboxField.checked ? 'Chat.Accessory.Forward' : 'Chat.Accessory.Hidden';\r\n          i.key = langPackKey;\r\n          i.update();\r\n        }\r\n      }\r\n    }, {\r\n      elements: children.slice(2, 4),\r\n      onChange: (value) => {\r\n        const checked = !!+value;\r\n        let b: ButtonMenuItemOptions;\r\n        if(checked && this.forwardWasDroppingAuthor !== undefined) {\r\n          b = this.forwardWasDroppingAuthor ? forwardElements.hideSender : forwardElements.showSender;\r\n        } else {\r\n          b = checked ? forwardElements.showSender : forwardElements.hideSender;\r\n        }\r\n\r\n        b.checkboxField.checked = true;\r\n      }\r\n    }];\r\n    groups.forEach(group => {\r\n      const container = RadioForm(group.elements.map(e => {\r\n        return {\r\n          container: e, \r\n          input: e.querySelector('input')\r\n        };\r\n      }), group.onChange);\r\n\r\n      const hr = document.createElement('hr');\r\n      container.append(hr);\r\n      forwardBtnMenu.append(container);\r\n    });\r\n\r\n    forwardBtnMenu.append(forwardElements.changePeer.element);\r\n\r\n    if(!IS_TOUCH_SUPPORTED) {\r\n      const forwardHover = this.forwardHover = new DropdownHover({\r\n        element: forwardBtnMenu\r\n      });\r\n    }\r\n\r\n    forwardElements.modifyArgs = forwardButtons.slice(0, -1);\r\n    this.replyElements.container.append(forwardBtnMenu);\r\n\r\n    forwardElements.modifyArgs.forEach((b, idx) => {\r\n      const {input} = b.checkboxField;\r\n      input.type = 'radio';\r\n      input.name = idx < 2 ? 'author' : 'caption';\r\n      input.value = '' + +!(idx % 2);\r\n    });\r\n\r\n    //\r\n\r\n    this.newMessageWrapper = document.createElement('div');\r\n    this.newMessageWrapper.classList.add('new-message-wrapper');\r\n\r\n    this.sendAsContainer = document.createElement('div');\r\n    this.sendAsContainer.classList.add('new-message-send-as-container');\r\n\r\n    this.sendAsCloseBtn = document.createElement('div');\r\n    this.sendAsCloseBtn.classList.add('new-message-send-as-close', 'new-message-send-as-avatar', 'tgico-close');\r\n\r\n    const sendAsButtons: ButtonMenuItemOptions[] = [{\r\n      text: 'SendMessageAsTitle',\r\n      onClick: undefined\r\n    }];\r\n\r\n    let previousAvatar: HTMLElement;\r\n    const onSendAsMenuToggle = (visible: boolean) => {\r\n      if(visible) {\r\n        previousAvatar = this.sendAsAvatar;\r\n      }\r\n\r\n      const isChanged = this.sendAsAvatar !== previousAvatar;\r\n      const useRafs = !visible && isChanged ? 2 : 0;\r\n\r\n      SetTransition(this.sendAsCloseBtn, 'is-visible', visible, SEND_AS_ANIMATION_DURATION, undefined, useRafs);\r\n      if(!isChanged) {\r\n        SetTransition(previousAvatar, 'is-visible', !visible, SEND_AS_ANIMATION_DURATION, undefined, useRafs);\r\n      }\r\n    };\r\n\r\n    ButtonMenuToggle({\r\n      noRipple: true, \r\n      listenerSetter: this.listenerSetter, \r\n      container: this.sendAsContainer\r\n    }, 'top-right', sendAsButtons, () => {\r\n      onSendAsMenuToggle(true);\r\n    }, () => {\r\n      onSendAsMenuToggle(false);\r\n    });\r\n\r\n    sendAsButtons[0].element.classList.add('btn-menu-item-header');\r\n    this.sendAsBtnMenu = this.sendAsContainer.firstElementChild as any;\r\n    this.sendAsBtnMenu.classList.add('scrollable', 'scrollable-y');\r\n    this.sendAsContainer.append(this.sendAsCloseBtn);\r\n\r\n    this.btnToggleEmoticons = ButtonIcon('none toggle-emoticons', {noRipple: true});\r\n\r\n    this.inputMessageContainer = document.createElement('div');\r\n    this.inputMessageContainer.classList.add('input-message-container');\r\n\r\n    if(this.chat.type === 'chat') {\r\n      this.goDownUnreadBadge = document.createElement('span');\r\n      this.goDownUnreadBadge.classList.add('badge', 'badge-24', 'badge-primary');\r\n      this.goDownBtn.append(this.goDownUnreadBadge);\r\n\r\n      this.goMentionBtn = ButtonCorner({icon: 'mention', className: 'bubbles-corner-button bubbles-go-mention'});\r\n      this.goMentionUnreadBadge = document.createElement('span');\r\n      this.goMentionUnreadBadge.classList.add('badge', 'badge-24', 'badge-primary');\r\n      this.goMentionBtn.append(this.goMentionUnreadBadge);\r\n      this.inputContainer.append(this.goMentionBtn);\r\n\r\n      attachClickEvent(this.goMentionBtn, (e) => {\r\n        cancelEvent(e);\r\n        this.appMessagesManager.goToNextMention(this.chat.peerId);\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      this.btnScheduled = ButtonIcon('scheduled btn-scheduled float hide', {noRipple: true});\r\n\r\n      attachClickEvent(this.btnScheduled, (e) => {\r\n        this.appImManager.openScheduled(this.chat.peerId);\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      this.listenerSetter.add(rootScope)('scheduled_new', ({peerId}) => {\r\n        if(this.chat.peerId !== peerId) {\r\n          return;\r\n        }\r\n\r\n        this.btnScheduled.classList.remove('hide');\r\n      });\r\n\r\n      this.listenerSetter.add(rootScope)('scheduled_delete', ({peerId}) => {\r\n        if(this.chat.peerId !== peerId) {\r\n          return;\r\n        }\r\n\r\n        this.appMessagesManager.getScheduledMessages(this.chat.peerId).then(value => {\r\n          this.btnScheduled.classList.toggle('hide', !value.length);\r\n        });\r\n      });\r\n\r\n      this.btnToggleReplyMarkup = ButtonIcon('botcom toggle-reply-markup float hide', {noRipple: true});\r\n      this.replyKeyboard = new ReplyKeyboard({\r\n        appendTo: this.rowsWrapper,\r\n        listenerSetter: this.listenerSetter,\r\n        appMessagesManager: this.appMessagesManager,\r\n        btnHover: this.btnToggleReplyMarkup,\r\n        chatInput: this\r\n      });\r\n      this.listenerSetter.add(this.replyKeyboard)('open', () => this.btnToggleReplyMarkup.classList.add('active'));\r\n      this.listenerSetter.add(this.replyKeyboard)('close', () => this.btnToggleReplyMarkup.classList.remove('active'));\r\n\r\n      this.botCommands = new ChatBotCommands(this.rowsWrapper, this, this.appProfileManager);\r\n      this.botCommandsToggle = document.createElement('div');\r\n      this.botCommandsToggle.classList.add('new-message-bot-commands');\r\n\r\n      const scaler = document.createElement('div');\r\n      scaler.classList.add('new-message-bot-commands-icon-scale');\r\n\r\n      const icon = this.botCommandsIcon = document.createElement('div');\r\n      icon.classList.add('animated-menu-icon', 'animated-menu-close-icon');\r\n      scaler.append(icon);\r\n      this.botCommandsToggle.append(scaler);\r\n\r\n      attachClickEvent(this.botCommandsToggle, (e) => {\r\n        cancelEvent(e);\r\n        const isShown = icon.classList.contains('state-back');\r\n        if(isShown) {\r\n          this.botCommands.toggle(true);\r\n          icon.classList.remove('state-back');\r\n        } else {\r\n          this.botCommands.setUserId(this.chat.peerId.toUserId(), this.chat.bubbles.getMiddleware());\r\n          icon.classList.add('state-back');\r\n        }\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      this.botCommands.addEventListener('visible', () => {\r\n        icon.classList.add('state-back');\r\n      });\r\n\r\n      this.botCommands.addEventListener('hiding', () => {\r\n        icon.classList.remove('state-back');\r\n      });\r\n    }\r\n\r\n    this.attachMenuButtons = [{\r\n      icon: 'image',\r\n      text: 'Chat.Input.Attach.PhotoOrVideo',\r\n      onClick: () => {\r\n        this.fileInput.value = '';\r\n        const accept = [...MEDIA_MIME_TYPES_SUPPORTED].join(', ');\r\n        this.fileInput.setAttribute('accept', accept);\r\n        this.willAttachType = 'media';\r\n        this.fileInput.click();\r\n      },\r\n      verify: () => this.chat.canSend('send_media')\r\n    }, {\r\n      icon: 'document',\r\n      text: 'Chat.Input.Attach.Document',\r\n      onClick: () => {\r\n        this.fileInput.value = '';\r\n        this.fileInput.removeAttribute('accept');\r\n        this.willAttachType = 'document';\r\n        this.fileInput.click();\r\n      },\r\n      verify: () => this.chat.canSend('send_media')\r\n    }, {\r\n      icon: 'poll',\r\n      text: 'Poll',\r\n      onClick: () => {\r\n        new PopupCreatePoll(this.chat).show();\r\n      },\r\n      verify: (peerId) => peerId.isAnyChat() && this.chat.canSend('send_polls')\r\n    }];\r\n\r\n    this.attachMenu = ButtonMenuToggle({noRipple: true, listenerSetter: this.listenerSetter}, 'top-left', this.attachMenuButtons);\r\n    this.attachMenu.classList.add('attach-file', 'tgico-attach');\r\n    this.attachMenu.classList.remove('tgico-more');\r\n\r\n    //this.inputContainer.append(this.sendMenu);\r\n\r\n    this.recordTimeEl = document.createElement('div');\r\n    this.recordTimeEl.classList.add('record-time');\r\n\r\n    this.fileInput = document.createElement('input');\r\n    this.fileInput.type = 'file';\r\n    this.fileInput.multiple = true;\r\n    this.fileInput.style.display = 'none';\r\n\r\n    this.newMessageWrapper.append(...[this.sendAsContainer, this.botCommandsToggle, this.btnToggleEmoticons, this.inputMessageContainer, this.btnScheduled, this.btnToggleReplyMarkup, this.attachMenu, this.recordTimeEl, this.fileInput].filter(Boolean));\r\n\r\n    this.rowsWrapper.append(this.replyElements.container);\r\n    this.autocompleteHelperController = new AutocompleteHelperController();\r\n    this.stickersHelper = new StickersHelper(this.rowsWrapper, this.autocompleteHelperController);\r\n    this.emojiHelper = new EmojiHelper(this.rowsWrapper, this.autocompleteHelperController, this, this.appEmojiManager);\r\n    this.commandsHelper = new CommandsHelper(this.rowsWrapper, this.autocompleteHelperController, this, this.chat.appProfileManager, this.chat.appUsersManager);\r\n    this.mentionsHelper = new MentionsHelper(this.rowsWrapper, this.autocompleteHelperController, this, this.chat.appProfileManager, this.chat.appUsersManager);\r\n    this.inlineHelper = new InlineHelper(this.rowsWrapper, this.autocompleteHelperController, this.chat, this.appUsersManager, this.appInlineBotsManager);\r\n    this.rowsWrapper.append(this.newMessageWrapper);\r\n\r\n    this.btnCancelRecord = ButtonIcon('delete btn-circle z-depth-1 btn-record-cancel');\r\n\r\n    this.btnSendContainer = document.createElement('div');\r\n    this.btnSendContainer.classList.add('btn-send-container');\r\n\r\n    this.recordRippleEl = document.createElement('div');\r\n    this.recordRippleEl.classList.add('record-ripple');\r\n\r\n    this.btnSend = ButtonIcon('none btn-circle z-depth-1 btn-send animated-button-icon');\r\n    this.btnSend.insertAdjacentHTML('afterbegin', `\r\n    <span class=\"tgico tgico-send\"></span>\r\n    <span class=\"tgico tgico-schedule\"></span>\r\n    <span class=\"tgico tgico-check\"></span>\r\n    <span class=\"tgico tgico-microphone\"></span>\r\n    `);\r\n\r\n    this.btnSendContainer.append(this.recordRippleEl, this.btnSend);\r\n\r\n    if(this.chat.type !== 'scheduled') {\r\n      this.sendMenu = new SendMenu({\r\n        onSilentClick: () => {\r\n          this.sendSilent = true;\r\n          this.sendMessage();\r\n        },\r\n        onScheduleClick: () => {\r\n          this.scheduleSending(undefined);\r\n        },\r\n        listenerSetter: this.listenerSetter,\r\n        openSide: 'top-left',\r\n        onContextElement: this.btnSend,\r\n        onOpen: () => {\r\n          return !this.isInputEmpty() || !!Object.keys(this.forwarding).length;\r\n        }\r\n      });\r\n      \r\n      this.btnSendContainer.append(this.sendMenu.sendMenu);\r\n    }\r\n\r\n    this.inputContainer.append(this.btnCancelRecord, this.btnSendContainer);\r\n\r\n    emoticonsDropdown.attachButtonListener(this.btnToggleEmoticons, this.listenerSetter);\r\n    this.listenerSetter.add(emoticonsDropdown)('open', this.onEmoticonsOpen);\r\n    this.listenerSetter.add(emoticonsDropdown)('close', this.onEmoticonsClose);\r\n\r\n    this.attachMessageInputField();\r\n\r\n    /* this.attachMenu.addEventListener('mousedown', (e) => {\r\n      const hidden = this.attachMenu.querySelectorAll('.hide');\r\n      if(hidden.length === this.attachMenuButtons.length) {\r\n        toast(POSTING_MEDIA_NOT_ALLOWED);\r\n        cancelEvent(e);\r\n        return false;\r\n      }\r\n    }, {passive: false, capture: true}); */\r\n\r\n    this.listenerSetter.add(rootScope)('settings_updated', () => {\r\n      if(this.stickersHelper || this.emojiHelper) {\r\n        // this.previousQuery = undefined;\r\n        this.previousQuery = '';\r\n        this.checkAutocomplete();\r\n        /* if(!rootScope.settings.stickers.suggest) {\r\n          this.stickersHelper.checkEmoticon('');\r\n        } else {\r\n          this.onMessageInput();\r\n        } */\r\n      }\r\n\r\n      if(this.messageInputField) {\r\n        this.messageInputField.onFakeInput();\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('draft_updated', ({peerId, threadId, draft, force}) => {\r\n      if(this.chat.threadId !== threadId || this.chat.peerId !== peerId) return;\r\n      this.setDraft(draft, true, force);\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('peer_changing', (chat) => {\r\n      if(this.chat === chat) {\r\n        this.saveDraft();\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('chat_changing', ({from, to}) => {\r\n      if(this.chat === from) {\r\n        this.autocompleteHelperController.toggleListNavigation(false);\r\n      } else if(this.chat === to) {\r\n        this.autocompleteHelperController.toggleListNavigation(true);\r\n      }\r\n    });\r\n\r\n    if(this.sendAsContainer) {\r\n      this.listenerSetter.add(rootScope)('peer_full_update', (peerId) => {\r\n        if(peerId.isChannel() && this.chat.peerId === peerId) {\r\n          this.updateSendAs();\r\n        }\r\n      });\r\n    }\r\n\r\n    if(this.chat.type === 'scheduled') {\r\n      this.listenerSetter.add(rootScope)('scheduled_delete', ({peerId, mids}) => {\r\n        if(this.chat.peerId === peerId && mids.includes(this.editMsgId)) {\r\n          this.onMessageSent();\r\n        }\r\n      });\r\n    } else {\r\n      this.listenerSetter.add(rootScope)('history_delete', ({peerId, msgs}) => {\r\n        if(this.chat.peerId === peerId) {\r\n          if(msgs.has(this.editMsgId)) {\r\n            this.onMessageSent();\r\n          }\r\n\r\n          if(this.replyToMsgId && msgs.has(this.replyToMsgId)) {\r\n            this.clearHelper('reply');\r\n          }\r\n\r\n          /* if(this.chat.isStartButtonNeeded()) {\r\n            this.setStartParam(BOT_START_PARAM);\r\n          } */\r\n        }\r\n      });\r\n\r\n      this.listenerSetter.add(rootScope)('dialogs_multiupdate', (dialogs) => {\r\n        if(dialogs[this.chat.peerId]) {\r\n          if(this.startParam === BOT_START_PARAM) {\r\n            this.setStartParam();\r\n          } else { // updateNewMessage comes earlier than dialog appers\r\n            this.center(true);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    try {\r\n      this.recorder = new Recorder({\r\n        //encoderBitRate: 32,\r\n        //encoderPath: \"../dist/encoderWorker.min.js\",\r\n        encoderSampleRate: 48000,\r\n        monitorGain: 0,\r\n        numberOfChannels: 1,\r\n        recordingGain: 1,\r\n        reuseWorker: true\r\n      });\r\n    } catch(err) {\r\n      console.error('Recorder constructor error:', err);\r\n    }\r\n\r\n    this.updateSendBtn();\r\n\r\n    this.listenerSetter.add(this.fileInput)('change', (e) => {\r\n      let files = (e.target as HTMLInputElement & EventTarget).files;\r\n      if(!files.length) {\r\n        return;\r\n      }\r\n      \r\n      new PopupNewMedia(this.chat, Array.from(files).slice(), this.willAttachType);\r\n      this.fileInput.value = '';\r\n    }, false);\r\n\r\n    /* let time = Date.now();\r\n    this.btnSend.addEventListener('touchstart', (e) => {\r\n      time = Date.now();\r\n    });\r\n\r\n    let eventName1 = 'touchend';\r\n    this.btnSend.addEventListener(eventName1, (e: Event) => {\r\n      //cancelEvent(e);\r\n      console.log(eventName1 + ', time: ' + (Date.now() - time));\r\n    });\r\n\r\n    let eventName = 'mousedown';\r\n    this.btnSend.addEventListener(eventName, (e: Event) => {\r\n      cancelEvent(e);\r\n      console.log(eventName + ', time: ' + (Date.now() - time));\r\n    }); */\r\n    attachClickEvent(this.btnSend, this.onBtnSendClick, {listenerSetter: this.listenerSetter, touchMouseDown: true});\r\n\r\n    if(this.recorder) {\r\n      attachClickEvent(this.btnCancelRecord, this.onCancelRecordClick, {listenerSetter: this.listenerSetter});\r\n\r\n      this.recorder.onstop = () => {\r\n        this.setRecording(false);\r\n        this.chatInput.classList.remove('is-locked');\r\n        this.recordRippleEl.style.transform = '';\r\n      };\r\n  \r\n      this.recorder.ondataavailable = (typedArray: Uint8Array) => {\r\n        if(this.releaseMediaPlayback) {\r\n          this.releaseMediaPlayback();\r\n          this.releaseMediaPlayback = undefined;\r\n        }\r\n\r\n        if(this.recordingOverlayListener) {\r\n          this.listenerSetter.remove(this.recordingOverlayListener);\r\n          this.recordingOverlayListener = undefined;\r\n        }\r\n\r\n        if(this.recordingNavigationItem) {\r\n          appNavigationController.removeItem(this.recordingNavigationItem);\r\n          this.recordingNavigationItem = undefined;\r\n        }\r\n\r\n        if(this.recordCanceled) {\r\n          return;\r\n        }\r\n\r\n        const {peerId, threadId} = this.chat;\r\n        const replyToMsgId = this.replyToMsgId;\r\n  \r\n        const duration = (Date.now() - this.recordStartTime) / 1000 | 0;\r\n        const dataBlob = new Blob([typedArray], {type: 'audio/ogg'});\r\n        /* const fileName = new Date().toISOString() + \".opus\";\r\n        console.log('Recorder data received', typedArray, dataBlob); */\r\n\r\n        //let perf = performance.now();\r\n        opusDecodeController.decode(typedArray, true).then(result => {\r\n          //console.log('WAVEFORM!:', /* waveform,  */performance.now() - perf);\r\n  \r\n          opusDecodeController.setKeepAlive(false);\r\n  \r\n          // тут objectURL ставится уже с audio/wav\r\n          this.appMessagesManager.sendFile(peerId, dataBlob, {\r\n            isVoiceMessage: true,\r\n            isMedia: true,\r\n            duration,\r\n            waveform: result.waveform,\r\n            objectURL: result.url,\r\n            replyToMsgId,\r\n            threadId,\r\n            clearDraft: true\r\n          });\r\n\r\n          this.onMessageSent(false, true);\r\n        });\r\n      };\r\n    }\r\n\r\n    attachClickEvent(this.replyElements.cancelBtn, this.onHelperCancel, {listenerSetter: this.listenerSetter});\r\n    attachClickEvent(this.replyElements.container, this.onHelperClick, {listenerSetter: this.listenerSetter});\r\n\r\n    this.saveDraftDebounced = debounce(() => this.saveDraft(), 2500, false, true);\r\n\r\n    this.botStartBtn = Button('btn-primary btn-transparent text-bold chat-input-control-button');\r\n    this.botStartBtn.append(i18n('BotStart'));\r\n\r\n    attachClickEvent(this.botStartBtn, () => {\r\n      const {startParam} = this;\r\n      if(startParam === undefined) {\r\n        return;\r\n      }\r\n\r\n      const toggle = this.toggleBotStartBtnDisability = toggleDisability([this.botStartBtn], true);\r\n      const peerId = this.chat.peerId;\r\n      const middleware = this.chat.bubbles.getMiddleware(() => {\r\n        return this.chat.peerId === peerId && this.startParam === startParam && this.toggleBotStartBtnDisability === toggle;\r\n      });\r\n\r\n      this.appMessagesManager.startBot(peerId.toUserId(), undefined, startParam).then(() => {\r\n        if(middleware()) {\r\n          toggle();\r\n          this.toggleBotStartBtnDisability = undefined;\r\n          this.setStartParam();\r\n        }\r\n      });\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    this.controlContainer.append(this.botStartBtn);\r\n  }\r\n\r\n  public constructPinnedHelpers() {\r\n    this.pinnedControlBtn = Button('btn-primary btn-transparent text-bold chat-input-control-button', {icon: 'unpin'});\r\n    this.controlContainer.append(this.pinnedControlBtn);\r\n\r\n    this.listenerSetter.add(this.pinnedControlBtn)('click', () => {\r\n      const peerId = this.chat.peerId;\r\n\r\n      new PopupPinMessage(peerId, 0, true, () => {\r\n        this.chat.appImManager.setPeer(); // * close tab\r\n\r\n        // ! костыль, это скроет закреплённые сообщения сразу, вместо того, чтобы ждать пока анимация перехода закончится\r\n        const originalChat = this.chat.appImManager.chat;\r\n        if(originalChat.topbar.pinnedMessage) {\r\n          originalChat.topbar.pinnedMessage.pinnedMessageContainer.toggle(true);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.chatInput.classList.add('type-pinned');\r\n  }\r\n\r\n  public center(animate = false) {\r\n    const neededFakeContainer = this.getNeededFakeContainer();\r\n    if(!neededFakeContainer && !this.inputContainer.classList.contains('is-centering')) {\r\n      return;\r\n    }\r\n\r\n    if(neededFakeContainer === this.fakeWrapperTo) {\r\n      return;\r\n    }\r\n\r\n    /* if(neededFakeContainer === this.botStartContainer && this.fakeWrapperTo === this.fakeSelectionWrapper) {\r\n      this.inputContainer.classList.remove('is-centering');\r\n      void this.rowsWrapper.offsetLeft; // reflow\r\n      // this.inputContainer.classList.add('is-centering');\r\n      // void this.rowsWrapper.offsetLeft; // reflow\r\n    } */\r\n\r\n    const fakeSelectionWrapper = neededFakeContainer || this.fakeWrapperTo;\r\n    const forwards = !!neededFakeContainer;\r\n    const oldFakeWrapperTo = this.fakeWrapperTo;\r\n    let transform = '', borderRadius = '', needTranslateX: number;\r\n    // if(forwards) {]\r\n      const fakeSelectionRect = fakeSelectionWrapper.getBoundingClientRect();\r\n      const fakeRowsRect = this.fakeRowsWrapper.getBoundingClientRect();\r\n      const widthFrom = fakeRowsRect.width;\r\n      const widthTo = fakeSelectionRect.width;\r\n\r\n      if(widthFrom !== widthTo) {\r\n        const scale = (widthTo/*  - 8 */) / widthFrom;\r\n        const initTranslateX = (widthFrom - widthTo) / 2;\r\n        needTranslateX = fakeSelectionRect.left - fakeRowsRect.left - initTranslateX;\r\n\r\n        if(forwards) {\r\n          transform = `translateX(${needTranslateX}px) scaleX(${scale})`;\r\n          // transform = `translateX(0px) scaleX(${scale})`;\r\n  \r\n          if(scale < 1) {\r\n            const br = 12;\r\n            borderRadius = '' + (br + br * (1 - scale)) + 'px';\r\n          }\r\n        }\r\n        //scale = widthTo / widthFrom;\r\n      }\r\n    // }\r\n\r\n    this.fakeWrapperTo = neededFakeContainer;\r\n\r\n    const duration = animate ? 200 : 0;\r\n    SetTransition(this.inputContainer, 'is-centering', forwards, duration);\r\n    SetTransition(this.rowsWrapperWrapper, 'is-centering-to-control', !!(forwards && neededFakeContainer && neededFakeContainer.classList.contains('chat-input-control')), duration);\r\n    this.rowsWrapper.style.transform = transform;\r\n    this.rowsWrapper.style.borderRadius = borderRadius;\r\n\r\n    return {\r\n      transform, \r\n      borderRadius, \r\n      needTranslateX: oldFakeWrapperTo && (\r\n          (\r\n            neededFakeContainer && \r\n            neededFakeContainer.classList.contains('chat-input-control') && \r\n            oldFakeWrapperTo === this.fakeSelectionWrapper\r\n          ) || oldFakeWrapperTo.classList.contains('chat-input-control')\r\n        ) ? needTranslateX * -.5 : needTranslateX,\r\n      widthFrom, \r\n      widthTo\r\n    };\r\n  }\r\n\r\n  public setStartParam(startParam?: string) {\r\n    if(this.startParam === startParam) {\r\n      return;\r\n    }\r\n\r\n    this.startParam = startParam;\r\n    this.center(true);\r\n  }\r\n\r\n  public getNeededFakeContainer() {\r\n    if(this.chat.selection.isSelecting) {\r\n      return this.fakeSelectionWrapper;\r\n    } else if(this.startParam !== undefined || \r\n      !this.chat.canSend() || \r\n      this.chat.type === 'pinned' || \r\n      this.chat.isStartButtonNeeded()\r\n    ) {\r\n      return this.controlContainer;\r\n    }\r\n  }\r\n\r\n  // public getActiveContainer() {\r\n  //   if(this.chat.selection.isSelecting) {\r\n  //     return this.chat\r\n  //   }\r\n  //   return this.startParam !== undefined ? this.botStartContainer : this.rowsWrapper;\r\n  // }\r\n\r\n  // public setActiveContainer() {\r\n  //   const container = this.activeContainer;\r\n  //   const newContainer = this.getActiveContainer();\r\n  //   if(newContainer === container) {\r\n  //     return;\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n  private onCancelRecordClick = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n    \r\n    this.recordCanceled = true;\r\n    this.recorder.stop();\r\n    opusDecodeController.setKeepAlive(false);\r\n  };\r\n\r\n  private onEmoticonsOpen = () => {\r\n    const toggleClass = IS_TOUCH_SUPPORTED ? 'flip-icon' : 'active';\r\n    this.btnToggleEmoticons.classList.toggle(toggleClass, true);\r\n  };\r\n\r\n  private onEmoticonsClose = () => {\r\n    const toggleClass = IS_TOUCH_SUPPORTED ? 'flip-icon' : 'active';\r\n    this.btnToggleEmoticons.classList.toggle(toggleClass, false);\r\n  };\r\n\r\n  public getReadyToSend(callback: () => void) {\r\n    return this.chat.type === 'scheduled' ? (this.scheduleSending(callback), true) : (callback(), false);\r\n  }\r\n\r\n  public scheduleSending = (callback: () => void = this.sendMessage.bind(this, true), initDate = new Date()) => {\r\n    const {peerId} = this.chat;\r\n    const middleware = this.chat.bubbles.getMiddleware();\r\n    const canSendWhenOnline = rootScope.myId !== peerId && peerId.isUser() && this.appUsersManager.isUserOnlineVisible(peerId);\r\n\r\n    new PopupSchedule(initDate, (timestamp) => {\r\n      if(!middleware()) {\r\n        return;\r\n      }\r\n\r\n      const minTimestamp = (Date.now() / 1000 | 0) + 10;\r\n      if(timestamp <= minTimestamp) {\r\n        timestamp = undefined;\r\n      }\r\n\r\n      this.scheduleDate = timestamp;\r\n      callback();\r\n\r\n      if(this.chat.type !== 'scheduled' && timestamp) {\r\n        setTimeout(() => { // ! need timeout here because .forwardMessages will be called after timeout\r\n          if(!middleware()) {\r\n            return;\r\n          }\r\n\r\n          this.appImManager.openScheduled(peerId);\r\n        }, 0);\r\n      }\r\n    }, canSendWhenOnline).show();\r\n  };\r\n\r\n  public setUnreadCount() {\r\n    if(!this.goDownUnreadBadge) {\r\n      return;\r\n    }\r\n    \r\n    const dialog = this.appMessagesManager.getDialogOnly(this.chat.peerId);\r\n    const count = dialog?.unread_count;\r\n    this.goDownUnreadBadge.innerText = '' + (count || '');\r\n    this.goDownUnreadBadge.classList.toggle('badge-gray', this.appNotificationsManager.isPeerLocalMuted(this.chat.peerId, true));\r\n\r\n    if(this.goMentionUnreadBadge && this.chat.type === 'chat') {\r\n      const hasMentions = !!(dialog?.unread_mentions_count && dialog.unread_count);\r\n      this.goMentionUnreadBadge.innerText = hasMentions ? '' + (dialog.unread_mentions_count) : '';\r\n      this.goMentionBtn.classList.toggle('is-visible', hasMentions);\r\n    }\r\n  }\r\n\r\n  public saveDraft() {\r\n    if(!this.chat.peerId || this.editMsgId || this.chat.type === 'scheduled') return;\r\n    \r\n    const {value, entities} = getRichValue(this.messageInputField.input);\r\n\r\n    let draft: DraftMessage.draftMessage;\r\n    if(value.length || this.replyToMsgId) {\r\n      draft = {\r\n        _: 'draftMessage',\r\n        date: tsNow(true) + this.serverTimeManager.serverTimeOffset,\r\n        message: value,\r\n        entities: entities.length ? entities : undefined,\r\n        pFlags: {\r\n          no_webpage: this.noWebPage\r\n        },\r\n        reply_to_msg_id: this.replyToMsgId\r\n      };\r\n    }\r\n\r\n    this.appDraftsManager.syncDraft(this.chat.peerId, this.chat.threadId, draft);\r\n  }\r\n\r\n  public destroy() {\r\n    //this.chat.log.error('Input destroying');\r\n\r\n    this.listenerSetter.removeAll();\r\n  }\r\n\r\n  public cleanup(helperToo = true) {\r\n    if(!this.chat.peerId) {\r\n      this.chatInput.style.display = 'none';\r\n      this.goDownBtn.classList.add('hide');\r\n    }\r\n\r\n    cancelSelection();\r\n\r\n    this.lastTimeType = 0;\r\n    this.startParam = undefined;\r\n\r\n    if(this.toggleBotStartBtnDisability) {\r\n      this.toggleBotStartBtnDisability();\r\n      this.toggleBotStartBtnDisability = undefined;\r\n    }\r\n\r\n    if(this.messageInput) {\r\n      this.clearInput();\r\n      helperToo && this.clearHelper();\r\n    }\r\n  }\r\n\r\n  public setDraft(draft?: MyDraftMessage, fromUpdate = true, force = false) {\r\n    if((!force && !isInputEmpty(this.messageInput)) || this.chat.type === 'scheduled') return false;\r\n    \r\n    if(!draft) {\r\n      draft = this.appDraftsManager.getDraft(this.chat.peerId, this.chat.threadId);\r\n\r\n      if(!draft) {\r\n        if(force) { // this situation can only happen when sending message with clearDraft\r\n          /* const height = this.chatInput.getBoundingClientRect().height;\r\n          const willChangeHeight = 78 - height;\r\n          this.willChangeHeight = willChangeHeight; */\r\n          if(this.chat.container.classList.contains('is-helper-active')) {\r\n            this.t();\r\n          }\r\n\r\n          this.messageInputField.inputFake.textContent = '';\r\n          this.messageInputField.onFakeInput(false);\r\n\r\n          ((this.chat.bubbles.messagesQueuePromise || Promise.resolve()) as Promise<any>).then(() => {\r\n            fastRaf(() => {\r\n              this.onMessageSent();\r\n            });\r\n          });\r\n        }\r\n        \r\n        return false;\r\n      }\r\n    }\r\n\r\n    if(this.messageInputField.value === draft.rMessage && this.replyToMsgId === draft.reply_to_msg_id) return false;\r\n\r\n    if(fromUpdate) {\r\n      this.clearHelper();\r\n    }\r\n\r\n    this.noWebPage = draft.pFlags.no_webpage;\r\n    if(draft.reply_to_msg_id) {\r\n      this.initMessageReply(draft.reply_to_msg_id);\r\n    }\r\n\r\n    this.setInputValue(draft.rMessage, fromUpdate, fromUpdate);\r\n    return true;\r\n  }\r\n\r\n  public finishPeerChange(startParam?: string) {\r\n    const peerId = this.chat.peerId;\r\n\r\n    const {forwardElements, btnScheduled, replyKeyboard, sendMenu, goDownBtn, chatInput, sendAsContainer, botCommandsToggle} = this;\r\n    chatInput.style.display = '';\r\n    \r\n    const isBroadcast = this.appPeersManager.isBroadcast(peerId);\r\n    goDownBtn.classList.toggle('is-broadcast', isBroadcast);\r\n    goDownBtn.classList.remove('hide');\r\n\r\n    if(this.goDownUnreadBadge) {\r\n      this.setUnreadCount();\r\n    }\r\n\r\n    if(this.chat.type === 'pinned') {\r\n      chatInput.classList.toggle('can-pin', this.appPeersManager.canPinMessage(peerId));\r\n    }/*  else if(this.chat.type === 'chat') {\r\n    } */\r\n\r\n    if(forwardElements) {\r\n      this.forwardWasDroppingAuthor = false;\r\n      forwardElements.showCaption.checkboxField.setValueSilently(true);\r\n      forwardElements.showSender.checkboxField.setValueSilently(true);\r\n    }\r\n\r\n    if(btnScheduled) {\r\n      btnScheduled.classList.add('hide');\r\n      const middleware = this.chat.bubbles.getMiddleware();\r\n      this.appMessagesManager.getScheduledMessages(peerId).then(mids => {\r\n        if(!middleware()) return;\r\n        btnScheduled.classList.toggle('hide', !mids.length);\r\n      });\r\n    }\r\n\r\n    if(this.newMessageWrapper) {\r\n      this.updateOffset(null, false, true);\r\n    }\r\n\r\n    if(botCommandsToggle) {\r\n      this.hasBotCommands = undefined;\r\n      this.botCommands.toggle(true, undefined, true);\r\n      this.updateBotCommandsToggle(true);\r\n      botCommandsToggle.remove();\r\n      if(this.appPeersManager.isBot(peerId)) {\r\n        const userId = peerId.toUserId();\r\n        const middleware = this.chat.bubbles.getMiddleware();\r\n        const getUserFullResult = this.appProfileManager.getProfile(userId);\r\n        callbackify(getUserFullResult, (userFull) => {\r\n          if(!middleware()) return;\r\n          this.updateBotCommands(userFull, !(getUserFullResult instanceof Promise));\r\n        });\r\n      }\r\n    }\r\n\r\n    if(sendAsContainer) {\r\n      if(this.sendAsAvatar) {\r\n        this.sendAsAvatar.remove();\r\n        this.sendAsAvatar = undefined;\r\n      }\r\n      \r\n      sendAsContainer.remove();\r\n      this.sendAsPeerId = undefined;\r\n      this.updatingSendAsPromise = undefined;\r\n\r\n      this.updateSendAs(true);\r\n    }\r\n\r\n    if(replyKeyboard) {\r\n      replyKeyboard.setPeer(peerId);\r\n    }\r\n\r\n    if(sendMenu) {\r\n      sendMenu.setPeerId(peerId);\r\n    }\r\n    \r\n    if(this.messageInput) {\r\n      this.updateMessageInput();\r\n    } else if(this.pinnedControlBtn) {\r\n      this.pinnedControlBtn.append(i18n(this.appPeersManager.canPinMessage(this.chat.peerId) ? 'Chat.Input.UnpinAll' : 'Chat.Pinned.DontShow'));\r\n    }\r\n\r\n    // * testing\r\n    // this.startParam = this.appPeersManager.isBot(peerId) ? '123' : undefined;\r\n    \r\n    this.startParam = startParam;\r\n\r\n    this.center(false);\r\n  }\r\n\r\n  private updateOffset(type: 'commands' | 'as', forwards: boolean, skipAnimation?: boolean, useRafs?: number) {\r\n    if(type) {\r\n      this.newMessageWrapper.dataset.offset = type;\r\n    } else {\r\n      delete this.newMessageWrapper.dataset.offset;\r\n    }\r\n\r\n    SetTransition(this.newMessageWrapper, 'has-offset', forwards, skipAnimation ? 0 : 300, undefined, useRafs);\r\n  }\r\n\r\n  private updateBotCommands(userFull: UserFull.userFull, skipAnimation?: boolean) {\r\n    this.hasBotCommands = userFull.bot_info && userFull.bot_info.commands.length;\r\n    this.updateBotCommandsToggle(skipAnimation);\r\n  }\r\n\r\n  private updateBotCommandsToggle(skipAnimation?: boolean) {\r\n    const {botCommandsToggle, hasBotCommands} = this;\r\n\r\n    const show = hasBotCommands && this.isInputEmpty();\r\n    if(!hasBotCommands) {\r\n      botCommandsToggle.remove();\r\n    }\r\n    \r\n    const forwards = show;\r\n    const useRafs = botCommandsToggle.parentElement ? 0 : 2;\r\n\r\n    if(!botCommandsToggle.parentElement) {\r\n      this.newMessageWrapper.prepend(botCommandsToggle);\r\n    }\r\n\r\n    this.updateOffset('commands', forwards, skipAnimation, useRafs);\r\n  }\r\n\r\n  private updateSendAsButtons(peerIds: PeerId[]) {\r\n    const buttons: ButtonMenuItemOptions[] = peerIds.map((sendAsPeerId, idx) => {\r\n      const textElement = document.createElement('div');\r\n\r\n      const subtitle = document.createElement('div');\r\n      subtitle.classList.add('btn-menu-item-subtitle');\r\n      if(sendAsPeerId.isUser()) {\r\n        subtitle.append(i18n('Chat.SendAs.PersonalAccount'));\r\n      } else if(sendAsPeerId === this.chat.peerId) {\r\n        subtitle.append(i18n('VoiceChat.DiscussionGroup'));\r\n      } else {\r\n        subtitle.append(this.appProfileManager.getChatMembersString(sendAsPeerId.toChatId()));\r\n      }\r\n\r\n      textElement.append(\r\n        new PeerTitle({peerId: sendAsPeerId}).element,\r\n        subtitle\r\n      );\r\n\r\n      return {\r\n        onClick: idx ? () => {\r\n          const currentPeerId = this.chat.peerId;\r\n          if(currentPeerId.isChannel()) {\r\n            const channelFull = this.appProfileManager.getCachedFullChat(currentPeerId.toChatId()) as ChatFull.channelFull;\r\n            if(channelFull) {\r\n              channelFull.default_send_as = this.appPeersManager.getOutputPeer(sendAsPeerId);\r\n              this.sendAsPeerId = sendAsPeerId;\r\n              this.updateSendAsAvatar(sendAsPeerId);\r\n              this.updateMessageInputPlaceholder();\r\n\r\n              const middleware = this.chat.bubbles.getMiddleware();\r\n              const executeButtonsUpdate = () => {\r\n                if(this.sendAsPeerId !== sendAsPeerId || !middleware()) return;\r\n                const peerIds = this.sendAsPeerIds.slice();\r\n                indexOfAndSplice(peerIds, sendAsPeerId);\r\n                peerIds.unshift(sendAsPeerId);\r\n                this.updateSendAsButtons(peerIds);\r\n              };\r\n              \r\n              if(rootScope.settings.animationsEnabled) {\r\n                setTimeout(executeButtonsUpdate, 250);\r\n              } else {\r\n                executeButtonsUpdate();\r\n              }\r\n            }\r\n          }\r\n\r\n          // return;\r\n          apiManager.invokeApi('messages.saveDefaultSendAs', {\r\n            peer: this.appPeersManager.getInputPeerById(currentPeerId),\r\n            send_as: this.appPeersManager.getInputPeerById(sendAsPeerId)\r\n          });\r\n        } : undefined,\r\n        textElement\r\n      };\r\n    });\r\n\r\n    const btnMenu = ButtonMenu(buttons/* , this.listenerSetter */);\r\n    buttons.forEach((button, idx) => {\r\n      const peerId = peerIds[idx];\r\n      const avatar = new AvatarElement();\r\n      avatar.classList.add('avatar-32', 'btn-menu-item-icon');\r\n      avatar.setAttribute('peer', '' + peerId);\r\n\r\n      if(!idx) {\r\n        avatar.classList.add('active');\r\n      }\r\n      \r\n      button.element.prepend(avatar);\r\n    });\r\n\r\n    Array.from(this.sendAsBtnMenu.children).slice(1).forEach(node => node.remove());\r\n    this.sendAsBtnMenu.append(...Array.from(btnMenu.children));\r\n  }\r\n\r\n  private updateSendAsAvatar(sendAsPeerId: PeerId, skipAnimation?: boolean) {\r\n    const previousAvatar = this.sendAsAvatar;\r\n    if(previousAvatar) {\r\n      if(+previousAvatar.getAttribute('peer') === sendAsPeerId) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    if(!previousAvatar) {\r\n      skipAnimation = true;\r\n    }\r\n    \r\n    let useRafs = skipAnimation ? 0 : 2;\r\n    const duration = skipAnimation ? 0 : SEND_AS_ANIMATION_DURATION;\r\n    const avatar = this.sendAsAvatar = new AvatarElement();\r\n    avatar.setAttribute('dialog', '0');\r\n    avatar.setAttribute('peer', '' + sendAsPeerId);\r\n    avatar.classList.add('new-message-send-as-avatar', 'avatar-30');\r\n\r\n    SetTransition(avatar, 'is-visible', true, duration, undefined, useRafs);    \r\n    if(previousAvatar) {\r\n      SetTransition(previousAvatar, 'is-visible', false, duration, () => {\r\n        previousAvatar.remove();\r\n      }, useRafs);\r\n    }\r\n    \r\n    this.sendAsContainer.append(avatar);\r\n  }\r\n\r\n  private getDefaultSendAs() {\r\n    // return rootScope.myId;\r\n    return callbackify(this.appProfileManager.getChannelFull(this.chat.peerId.toChatId()), (channelFull) => {\r\n      return channelFull.default_send_as ? this.appPeersManager.getPeerId(channelFull.default_send_as) : undefined;\r\n    });\r\n  }\r\n\r\n  private updateSendAs(skipAnimation?: boolean) {\r\n    const peerId = this.chat.peerId;\r\n    if(!peerId.isChannel() || this.updatingSendAsPromise) {\r\n      return;\r\n    }\r\n\r\n    const middleware = this.chat.bubbles.getMiddleware(() => {\r\n      return !this.updatingSendAsPromise || this.updatingSendAsPromise === updatingSendAsPromise;\r\n    });\r\n\r\n    const {sendAsContainer} = this;\r\n    const chatId = peerId.toChatId();\r\n    const result = this.getDefaultSendAs();\r\n    // const result = Promise.resolve(this.getDefaultSendAs());\r\n\r\n    if(result instanceof Promise) {\r\n      skipAnimation = undefined;\r\n    }\r\n\r\n    const updateSendAsResult = callbackify(result, (sendAsPeerId) => {\r\n      if(!middleware() || sendAsPeerId === undefined) return;\r\n      \r\n      this.sendAsPeerId = sendAsPeerId;\r\n      this.updateSendAsAvatar(sendAsPeerId, skipAnimation);\r\n      this.updateMessageInputPlaceholder();\r\n\r\n      this.appChatsManager.getSendAs(chatId).then(peers => {\r\n        if(!middleware()) return;\r\n\r\n        const peerIds = peers.map((peer) => this.appPeersManager.getPeerId(peer));\r\n        this.sendAsPeerIds = peerIds.slice();\r\n\r\n        indexOfAndSplice(peerIds, sendAsPeerId);\r\n        peerIds.unshift(sendAsPeerId);\r\n        this.updateSendAsButtons(peerIds);\r\n      });\r\n\r\n      let useRafs = 0;\r\n      if(!sendAsContainer.parentElement) {\r\n        this.newMessageWrapper.prepend(sendAsContainer);\r\n        useRafs = 2;\r\n      }\r\n\r\n      this.updateOffset('as', true, skipAnimation, useRafs);\r\n\r\n      this.updatingSendAsPromise = undefined;\r\n    });\r\n\r\n    const updatingSendAsPromise = this.updatingSendAsPromise = Promise.resolve(updateSendAsResult);\r\n    return updatingSendAsPromise;\r\n  }\r\n\r\n  private updateMessageInputPlaceholder() {\r\n    const i = I18n.weakMap.get(this.messageInput) as I18n.IntlElement;\r\n    if(i) {\r\n      const {peerId, threadId} = this.chat;\r\n      let key: LangPackKey;\r\n      if(threadId) {\r\n        key = 'Comment';\r\n      } else if(this.appPeersManager.isBroadcast(peerId)) {\r\n        key = 'ChannelBroadcast';\r\n      } else if((this.sendAsPeerId !== undefined && this.sendAsPeerId !== rootScope.myId) || \r\n        this.appMessagesManager.isAnonymousSending(peerId)) {\r\n        key = 'SendAnonymously';\r\n      } else {\r\n        key = 'Message';\r\n      }\r\n\r\n      i.compareAndUpdate({key});\r\n    }\r\n  }\r\n\r\n  public updateMessageInput() {\r\n    const {chatInput, attachMenu, messageInput} = this;\r\n    const {peerId, threadId} = this.chat;\r\n    const canWrite = this.chat.canSend();\r\n    const isHidden = chatInput.classList.contains('is-hidden');\r\n    const willBeHidden = !canWrite;\r\n    if(isHidden !== willBeHidden) {\r\n      chatInput.classList.add('no-transition');\r\n      chatInput.classList.toggle('is-hidden', !canWrite);\r\n      void chatInput.offsetLeft; // reflow\r\n      chatInput.classList.remove('no-transition');\r\n    }\r\n\r\n    this.updateMessageInputPlaceholder();\r\n\r\n    const visible = this.attachMenuButtons.filter(button => {\r\n      const good = button.verify(peerId, threadId);\r\n      button.element.classList.toggle('hide', !good);\r\n      return good;\r\n    });\r\n\r\n    if(!canWrite) {\r\n      messageInput.removeAttribute('contenteditable');\r\n    } else {\r\n      messageInput.setAttribute('contenteditable', 'true');\r\n      this.setDraft(undefined, false);\r\n\r\n      if(!messageInput.innerHTML) {\r\n        this.messageInputField.onFakeInput();\r\n      }\r\n    }\r\n    \r\n    attachMenu.toggleAttribute('disabled', !visible.length);\r\n    attachMenu.classList.toggle('btn-disabled', !visible.length);\r\n    this.updateSendBtn();\r\n  }\r\n\r\n  private attachMessageInputField() {\r\n    const oldInputField = this.messageInputField;\r\n    this.messageInputField = new InputField({\r\n      placeholder: 'Message',\r\n      name: 'message',\r\n      animate: true\r\n    });\r\n\r\n    this.messageInputField.input.classList.replace('input-field-input', 'input-message-input');\r\n    this.messageInputField.inputFake.classList.replace('input-field-input', 'input-message-input');\r\n    this.messageInput = this.messageInputField.input;\r\n    this.messageInput.classList.add('no-scrollbar');\r\n    this.attachMessageInputListeners();\r\n    \r\n    if(IS_STICKY_INPUT_BUGGED) {\r\n      fixSafariStickyInputFocusing(this.messageInput);\r\n    }\r\n\r\n    if(oldInputField) {\r\n      oldInputField.input.replaceWith(this.messageInputField.input);\r\n      oldInputField.inputFake.replaceWith(this.messageInputField.inputFake);\r\n    } else {\r\n      this.inputMessageContainer.append(this.messageInputField.input, this.messageInputField.inputFake);\r\n    }\r\n  }\r\n\r\n  private attachMessageInputListeners() {\r\n    this.listenerSetter.add(this.messageInput)('keydown', (e: KeyboardEvent) => {\r\n      const key = e.key;\r\n      if(isSendShortcutPressed(e)) {\r\n        cancelEvent(e);\r\n        this.sendMessage();\r\n      } else if(e.ctrlKey || e.metaKey) {\r\n        this.handleMarkdownShortcut(e);\r\n      } else if((key === 'PageUp' || key === 'PageDown') && !e.shiftKey) { // * fix pushing page to left (Chrome Windows)\r\n        e.preventDefault();\r\n\r\n        if(key === 'PageUp') {\r\n          const range = document.createRange();\r\n          const sel = window.getSelection();\r\n          \r\n          range.setStart(this.messageInput.childNodes[0] || this.messageInput, 0);\r\n          range.collapse(true);\r\n          \r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n        } else {\r\n          placeCaretAtEnd(this.messageInput);\r\n        }\r\n      }\r\n    });\r\n\r\n    if(IS_TOUCH_SUPPORTED) {\r\n      attachClickEvent(this.messageInput, (e) => {\r\n        this.appImManager.selectTab(1); // * set chat tab for album orientation\r\n        //this.saveScroll();\r\n        emoticonsDropdown.toggle(false);\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      /* this.listenerSetter.add(window)('resize', () => {\r\n        this.restoreScroll();\r\n      }); */\r\n\r\n      /* if(isSafari) {  \r\n        this.listenerSetter.add(this.messageInput)('mousedown', () => {\r\n          window.requestAnimationFrame(() => {\r\n            window.requestAnimationFrame(() => {\r\n              emoticonsDropdown.toggle(false);\r\n            });\r\n          });\r\n        });\r\n      } */\r\n    }\r\n\r\n    /* this.listenerSetter.add(this.messageInput)('beforeinput', (e: Event) => {\r\n      // * validate due to manual formatting through browser's context menu\r\n      const inputType = (e as InputEvent).inputType;\r\n      //console.log('message beforeinput event', e);\r\n\r\n      if(inputType.indexOf('format') === 0) {\r\n        //console.log('message beforeinput format', e, inputType, this.messageInput.innerHTML);\r\n        const markdownType = inputType.split('format')[1].toLowerCase() as MarkdownType;\r\n        if(this.applyMarkdown(markdownType)) {\r\n          cancelEvent(e); // * cancel legacy markdown event\r\n        }\r\n      }\r\n    }); */\r\n    this.listenerSetter.add(this.messageInput)('input', this.onMessageInput);\r\n    this.listenerSetter.add(this.messageInput)('keyup', () => {\r\n      this.checkAutocomplete();\r\n    });\r\n\r\n    if(this.chat.type === 'chat' || this.chat.type === 'discussion') {\r\n      this.listenerSetter.add(this.messageInput)('focusin', () => {\r\n        if(this.chat.bubbles.scrollable.loadedAll.bottom) {\r\n          this.appMessagesManager.readAllHistory(this.chat.peerId, this.chat.threadId);\r\n        }\r\n      }); \r\n    }\r\n  }\r\n\r\n  private prepareDocumentExecute = () => {\r\n    this.executedHistory.push(this.messageInput.innerHTML);\r\n    return () => this.canUndoFromHTML = this.messageInput.innerHTML;\r\n  };\r\n\r\n  private undoRedo = (e: Event, type: 'undo' | 'redo', needHTML: string) => {\r\n    cancelEvent(e); // cancel legacy event\r\n\r\n    let html = this.messageInput.innerHTML;\r\n    if(html && html !== needHTML) {\r\n      this.lockRedo = true;\r\n\r\n      let sameHTMLTimes = 0;\r\n      do {\r\n        document.execCommand(type, false, null);\r\n        const currentHTML = this.messageInput.innerHTML;\r\n        if(html === currentHTML) {\r\n          if(++sameHTMLTimes > 2) { // * unlink, removeFormat (а может и нет, случай: заболдить подчёркнутый текст (выделить ровно его), попробовать отменить)\r\n            break;\r\n          }\r\n        } else {\r\n          sameHTMLTimes = 0;\r\n        }\r\n\r\n        html = currentHTML;\r\n      } while(html !== needHTML);\r\n\r\n      this.lockRedo = false;\r\n    }\r\n  };\r\n\r\n  public applyMarkdown(type: MarkdownType, href?: string) {\r\n    const commandsMap: Partial<{[key in typeof type]: string | (() => void)}> = {\r\n      bold: 'Bold',\r\n      italic: 'Italic',\r\n      underline: 'Underline',\r\n      strikethrough: 'Strikethrough',\r\n      monospace: () => document.execCommand('fontName', false, 'monospace'),\r\n      link: href ? () => document.execCommand('createLink', false, href) : () => document.execCommand('unlink', false, null),\r\n      spoiler: () => document.execCommand('fontName', false, 'spoiler')\r\n    };\r\n\r\n    if(!commandsMap[type]) {\r\n      return false;\r\n    }\r\n\r\n    const command = commandsMap[type];\r\n\r\n    //type = 'monospace';\r\n\r\n    const saveExecuted = this.prepareDocumentExecute();\r\n    const executed: any[] = [];\r\n    /**\r\n     * * clear previous formatting, due to Telegram's inability to handle several entities\r\n     */\r\n    /* const checkForSingle = () => {\r\n      const nodes = getSelectedNodes();\r\n      //console.log('Using formatting:', commandsMap[type], nodes, this.executedHistory);\r\n\r\n      const parents = [...new Set(nodes.map(node => node.parentNode))];\r\n      //const differentParents = !!nodes.find(node => node.parentNode !== firstParent);\r\n      const differentParents = parents.length > 1;\r\n\r\n      let notSingle = false;\r\n      if(differentParents) {\r\n        notSingle = true;\r\n      } else {\r\n        const node = nodes[0];\r\n        if(node && (node.parentNode as HTMLElement) !== this.messageInput && (node.parentNode.parentNode as HTMLElement) !== this.messageInput) {\r\n          notSingle = true;\r\n        }\r\n      }\r\n\r\n      if(notSingle) {\r\n        //if(type === 'monospace') {\r\n          executed.push(document.execCommand('styleWithCSS', false, 'true'));\r\n        //}\r\n\r\n        executed.push(document.execCommand('unlink', false, null));\r\n        executed.push(document.execCommand('removeFormat', false, null));\r\n        executed.push(typeof(command) === 'function' ? command() : document.execCommand(command, false, null));\r\n\r\n        //if(type === 'monospace') {\r\n          executed.push(document.execCommand('styleWithCSS', false, 'false'));\r\n        //}\r\n      }\r\n    }; */\r\n\r\n    executed.push(document.execCommand('styleWithCSS', false, 'true'));\r\n    \r\n    if(type === 'monospace' || type === 'spoiler') {\r\n      let haveThisType = false;\r\n      //executed.push(document.execCommand('styleWithCSS', false, 'true'));\r\n\r\n      const selection = window.getSelection();\r\n      if(!selection.isCollapsed) {\r\n        const range = selection.getRangeAt(0);\r\n        const tag = markdownTags[type];\r\n\r\n        const node = range.commonAncestorContainer;\r\n        if((node.parentNode as HTMLElement).matches(tag.match) || (node instanceof HTMLElement && node.matches(tag.match))) {\r\n          haveThisType = true;\r\n        }\r\n      }\r\n\r\n      //executed.push(document.execCommand('removeFormat', false, null));\r\n\r\n      if(haveThisType) {\r\n        executed.push(document.execCommand('fontName', false, 'Roboto'));\r\n      } else {\r\n        executed.push(typeof(command) === 'function' ? command() : document.execCommand(command, false, null));\r\n      }\r\n    } else {\r\n      executed.push(typeof(command) === 'function' ? command() : document.execCommand(command, false, null));\r\n    }\r\n\r\n    executed.push(document.execCommand('styleWithCSS', false, 'false'));\r\n\r\n    //checkForSingle();\r\n    saveExecuted();\r\n    if(this.appImManager.markupTooltip) {\r\n      this.appImManager.markupTooltip.setActiveMarkupButton();\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private handleMarkdownShortcut = (e: KeyboardEvent) => {\r\n    // console.log('handleMarkdownShortcut', e);\r\n    const formatKeys: {[key: string]: MarkdownType} = {\r\n      'KeyB': 'bold',\r\n      'KeyI': 'italic',\r\n      'KeyU': 'underline',\r\n      'KeyS': 'strikethrough',\r\n      'KeyM': 'monospace',\r\n      'KeyP': 'spoiler'\r\n    };\r\n\r\n    if(this.appImManager.markupTooltip) {\r\n      formatKeys['KeyK'] = 'link';\r\n    }\r\n\r\n    const code = e.code;\r\n    const applyMarkdown = formatKeys[code];\r\n\r\n    const selection = document.getSelection();\r\n    if(selection.toString().trim().length && applyMarkdown) {\r\n      // * костыльчик\r\n      if(code === 'KeyK') {\r\n        this.appImManager.markupTooltip.showLinkEditor();\r\n      } else {\r\n        this.applyMarkdown(applyMarkdown);\r\n      }\r\n  \r\n      cancelEvent(e); // cancel legacy event\r\n    }\r\n\r\n    //return;\r\n    if(code === 'KeyZ') {\r\n      let html = this.messageInput.innerHTML;\r\n\r\n      if(e.shiftKey) {\r\n        if(this.undoHistory.length) {\r\n          this.executedHistory.push(html);\r\n          html = this.undoHistory.pop();\r\n          this.undoRedo(e, 'redo', html);\r\n          html = this.messageInput.innerHTML;\r\n          this.canRedoFromHTML = this.undoHistory.length ? html : '';\r\n          this.canUndoFromHTML = html;\r\n        }\r\n      } else {\r\n        // * подождём, когда пользователь сам восстановит поле до нужного состояния, которое стало сразу после saveExecuted\r\n        if(this.executedHistory.length && (!this.canUndoFromHTML || html === this.canUndoFromHTML)) {\r\n          this.undoHistory.push(html);\r\n          html = this.executedHistory.pop();\r\n          this.undoRedo(e, 'undo', html);\r\n\r\n          // * поставим новое состояние чтобы снова подождать, если пользователь изменит что-то, и потом попробует откатить до предыдущего состояния\r\n          this.canUndoFromHTML = this.canRedoFromHTML = this.messageInput.innerHTML;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  private onMessageInput = (e?: Event) => {\r\n    // * validate due to manual formatting through browser's context menu\r\n    /* const inputType = (e as InputEvent).inputType;\r\n    console.log('message input event', e);\r\n    if(inputType === 'formatBold') {\r\n      console.log('message input format', this.messageInput.innerHTML);\r\n      cancelEvent(e);\r\n    }\r\n\r\n    if(!isSelectionSingle()) {\r\n      alert('not single');\r\n    } */\r\n\r\n    //console.log('messageInput input', this.messageInput.innerText);\r\n    //const value = this.messageInput.innerText;\r\n    const {value: richValue, entities: markdownEntities, caretPos} = getRichValueWithCaret(this.messageInputField.input);\r\n      \r\n    //const entities = RichTextProcessor.parseEntities(value);\r\n    const value = RichTextProcessor.parseMarkdown(richValue, markdownEntities, true);\r\n    const entities = RichTextProcessor.mergeEntities(markdownEntities, RichTextProcessor.parseEntities(value));\r\n\r\n    //this.chat.log('messageInput entities', richValue, value, markdownEntities, caretPos);\r\n\r\n    if(this.canRedoFromHTML && !this.lockRedo && this.messageInput.innerHTML !== this.canRedoFromHTML) {\r\n      this.canRedoFromHTML = '';\r\n      this.undoHistory.length = 0;\r\n    }\r\n\r\n    const urlEntities: Array<MessageEntity.messageEntityUrl | MessageEntity.messageEntityTextUrl> = (!this.editMessage?.media || this.editMessage.media._ === 'messageMediaWebPage') && entities.filter(e => e._ === 'messageEntityUrl' || e._ === 'messageEntityTextUrl') as any;\r\n    if(urlEntities.length) {\r\n      for(const entity of urlEntities) {\r\n        let url: string;\r\n        if(entity._ === 'messageEntityTextUrl') {\r\n          url = entity.url;\r\n        } else {\r\n          url = richValue.slice(entity.offset, entity.offset + entity.length);\r\n\r\n          if(!(url.includes('http://') || url.includes('https://'))) {\r\n            continue;\r\n          }\r\n        }\r\n\r\n        //console.log('messageInput url:', url);\r\n\r\n        if(this.lastUrl !== url) {\r\n          this.lastUrl = url;\r\n          // this.willSendWebPage = null;\r\n          const promise = this.getWebPagePromise = apiManager.invokeApiHashable({\r\n            method: 'messages.getWebPage',\r\n            processResult: (webPage) => {\r\n              return this.appWebPagesManager.saveWebPage(webPage);\r\n            },\r\n            params: {\r\n              url\r\n            },\r\n          }).then((webpage) => {\r\n            if(this.getWebPagePromise === promise) this.getWebPagePromise = undefined;\r\n            if(this.lastUrl !== url) return;\r\n            if(webpage._  === 'webPage') {\r\n              //console.log('got webpage: ', webpage);\r\n\r\n              this.setTopInfo('webpage', () => {}, webpage.site_name || webpage.title || 'Webpage', webpage.description || webpage.url || '');\r\n              delete this.noWebPage;\r\n              this.willSendWebPage = webpage;\r\n            } else if(this.willSendWebPage) {\r\n              this.onHelperCancel();\r\n            }\r\n          });\r\n        }\r\n\r\n        break;\r\n      }\r\n    } else if(this.lastUrl) {\r\n      this.lastUrl = '';\r\n      delete this.noWebPage;\r\n      this.willSendWebPage = null;\r\n      \r\n      if(this.helperType) {\r\n        this.helperFunc();\r\n      } else {\r\n        this.clearHelper();\r\n      }\r\n    }\r\n\r\n    const isEmpty = !richValue.trim();\r\n    if(isEmpty) {\r\n      if(this.lastTimeType) {\r\n        this.appMessagesManager.setTyping(this.chat.peerId, {_: 'sendMessageCancelAction'});\r\n      }\r\n\r\n      if(this.appImManager.markupTooltip) {\r\n        this.appImManager.markupTooltip.hide();\r\n      }\r\n    } else {\r\n      const time = Date.now();\r\n      if(time - this.lastTimeType >= 6000) {\r\n        this.lastTimeType = time;\r\n        this.appMessagesManager.setTyping(this.chat.peerId, {_: 'sendMessageTypingAction'});\r\n      }\r\n\r\n      if(this.botCommands) {\r\n        this.botCommands.toggle(true);\r\n      }\r\n    }\r\n\r\n    if(this.botCommands) {\r\n      this.updateBotCommandsToggle();\r\n    }\r\n\r\n    if(!this.editMsgId) {\r\n      this.saveDraftDebounced();\r\n    }\r\n\r\n    this.checkAutocomplete(richValue, caretPos, entities);\r\n\r\n    this.updateSendBtn();\r\n  };\r\n\r\n  public insertAtCaret(insertText: string, insertEntity?: MessageEntity, isHelper = true) {\r\n    const {value: fullValue, caretPos, entities} = getRichValueWithCaret(this.messageInput);\r\n    const pos = caretPos >= 0 ? caretPos : fullValue.length;\r\n    const prefix = fullValue.substr(0, pos);\r\n    const suffix = fullValue.substr(pos);\r\n\r\n    const matches = isHelper ? prefix.match(ChatInput.AUTO_COMPLETE_REG_EXP) : null;\r\n\r\n    const matchIndex = matches ? matches.index + (matches[0].length - matches[2].length) : prefix.length;\r\n    const newPrefix = prefix.slice(0, matchIndex);\r\n    const newValue = newPrefix + insertText + suffix;\r\n\r\n    // merge emojis\r\n    const hadEntities = RichTextProcessor.parseEntities(fullValue);\r\n    RichTextProcessor.mergeEntities(entities, hadEntities);\r\n\r\n    // max for additional whitespace\r\n    const insertLength = insertEntity ? Math.max(insertEntity.length, insertText.length) : insertText.length;\r\n    const addEntities: MessageEntity[] = [];\r\n    if(insertEntity) {\r\n      addEntities.push(insertEntity);\r\n      insertEntity.offset = matchIndex;\r\n    }\r\n\r\n    // add offset to entities next to emoji\r\n    const diff = matches ? insertLength - matches[2].length : insertLength;\r\n    entities.forEach(entity => {\r\n      if(entity.offset >= matchIndex) {\r\n        entity.offset += diff;\r\n      }\r\n    });\r\n\r\n    RichTextProcessor.mergeEntities(entities, addEntities);\r\n\r\n    if(/* caretPos !== -1 && caretPos !== fullValue.length */true) {\r\n      const caretEntity: MessageEntity.messageEntityCaret = {\r\n        _: 'messageEntityCaret',\r\n        offset: matchIndex + insertLength,\r\n        length: 0\r\n      };\r\n\r\n      let insertCaretAtIndex = 0;\r\n      for(let length = entities.length; insertCaretAtIndex < length; ++insertCaretAtIndex) {\r\n        const entity = entities[insertCaretAtIndex];\r\n        if(entity.offset > caretEntity.offset) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      entities.splice(insertCaretAtIndex, 0, caretEntity);\r\n    }\r\n\r\n    //const saveExecuted = this.prepareDocumentExecute();\r\n    // can't exec .value here because it will instantly check for autocomplete\r\n    const value = RichTextProcessor.wrapDraftText(newValue, {entities});\r\n    this.messageInputField.setValueSilently(value, true);\r\n\r\n    const caret = this.messageInput.querySelector('.composer-sel');\r\n    if(caret) {\r\n      setCaretAt(caret);\r\n      caret.remove();\r\n    }\r\n\r\n    // but it's needed to be checked only here\r\n    this.onMessageInput();\r\n\r\n    //saveExecuted();\r\n\r\n    //document.execCommand('insertHTML', true, RichTextProcessor.wrapEmojiText(emoji));\r\n  }\r\n\r\n  public onEmojiSelected = (emoji: string, autocomplete: boolean) => {\r\n    this.insertAtCaret(emoji, RichTextProcessor.getEmojiEntityFromEmoji(emoji), autocomplete);\r\n  };\r\n\r\n  private checkAutocomplete(value?: string, caretPos?: number, entities?: MessageEntity[]) {\r\n    //return;\r\n\r\n    if(value === undefined) {\r\n      const r = getRichValueWithCaret(this.messageInputField.input, true);\r\n      value = r.value;\r\n      caretPos = r.caretPos;\r\n      entities = r.entities;\r\n    }\r\n\r\n    if(caretPos === -1) {\r\n      caretPos = value.length;\r\n    }\r\n\r\n    if(entities === undefined) {\r\n      const _value = RichTextProcessor.parseMarkdown(value, entities, true);\r\n      entities = RichTextProcessor.mergeEntities(entities, RichTextProcessor.parseEntities(_value));\r\n    }\r\n\r\n    value = value.slice(0, caretPos);\r\n\r\n    if(this.previousQuery === value) {\r\n      return;\r\n    }\r\n\r\n    this.previousQuery = value;\r\n    \r\n    const matches = value.match(ChatInput.AUTO_COMPLETE_REG_EXP);\r\n    let foundHelper: AutocompleteHelper;\r\n    if(matches) {\r\n      const entity = entities[0];\r\n\r\n      let query = matches[2];\r\n      const firstChar = query[0];\r\n\r\n      if(this.stickersHelper && \r\n        rootScope.settings.stickers.suggest && \r\n        this.chat.canSend('send_stickers') &&\r\n        entity?._ === 'messageEntityEmoji' && entity.length === value.length && !entity.offset) {\r\n        foundHelper = this.stickersHelper;\r\n        this.stickersHelper.checkEmoticon(value);\r\n      } else if(firstChar === '@') { // mentions\r\n        const topMsgId = this.chat.threadId ? this.appMessagesIdsManager.getServerMessageId(this.chat.threadId) : undefined;\r\n        if(this.mentionsHelper.checkQuery(query, this.chat.peerId.isUser() ? NULL_PEER_ID : this.chat.peerId, topMsgId)) {\r\n          foundHelper = this.mentionsHelper;\r\n        }\r\n      } else if(!matches[1] && firstChar === '/') { // commands\r\n        if(this.commandsHelper.checkQuery(query, this.chat.peerId)) {\r\n          foundHelper = this.commandsHelper;\r\n        }\r\n      } else if(rootScope.settings.emoji.suggest) { // emoji\r\n        query = query.replace(/^\\s*/, '');\r\n        if(!value.match(/^\\s*:(.+):\\s*$/) && !value.match(/:[;!@#$%^&*()-=|]/) && query) {\r\n          foundHelper = this.emojiHelper;\r\n          this.emojiHelper.checkQuery(query, firstChar);\r\n        }\r\n      }\r\n    }\r\n    \r\n    foundHelper = this.checkInlineAutocomplete(value, foundHelper);\r\n\r\n    this.autocompleteHelperController.hideOtherHelpers(foundHelper);\r\n  }\r\n\r\n  private checkInlineAutocomplete(value: string, foundHelper?: AutocompleteHelper): AutocompleteHelper {\r\n    let needPlaceholder = false;\r\n\r\n    if(!foundHelper) {\r\n      const inlineMatch = value.match(/^@([a-zA-Z\\\\d_]{3,32})\\s/);\r\n      if(inlineMatch) {\r\n        const username = inlineMatch[1];\r\n        const query = value.slice(inlineMatch[0].length);\r\n        needPlaceholder = inlineMatch[0].length === value.length;\r\n  \r\n        foundHelper = this.inlineHelper;\r\n\r\n        if(!this.btnPreloader) {\r\n          this.btnPreloader = ButtonIcon('none btn-preloader float show disable-hover', {noRipple: true});\r\n          putPreloader(this.btnPreloader, true);\r\n          this.inputMessageContainer.parentElement.insertBefore(this.btnPreloader, this.inputMessageContainer.nextSibling);\r\n        } else {\r\n          SetTransition(this.btnPreloader, 'show', true, 400);\r\n        }\r\n        \r\n        this.inlineHelper.checkQuery(this.chat.peerId, username, query).then(({user, renderPromise}) => {\r\n          if(needPlaceholder && user.bot_inline_placeholder) {\r\n            this.messageInput.dataset.inlinePlaceholder = user.bot_inline_placeholder;\r\n          }\r\n\r\n          renderPromise.then(() => {\r\n            SetTransition(this.btnPreloader, 'show', false, 400);\r\n          });\r\n        }).catch(noop);\r\n      }\r\n    }\r\n    \r\n    if(!needPlaceholder) {\r\n      delete this.messageInput.dataset.inlinePlaceholder;\r\n    }\r\n\r\n    if(foundHelper !== this.inlineHelper) {\r\n      if(this.btnPreloader) {\r\n        SetTransition(this.btnPreloader, 'show', false, 400);\r\n      }\r\n    }\r\n\r\n    return foundHelper;\r\n  }\r\n\r\n  private setRecording(value: boolean) {\r\n    if(this.recording === value) {\r\n      return;\r\n    }\r\n\r\n    SetTransition(this.chatInput, 'is-recording', value, 200);\r\n    this.recording = value;\r\n    this.updateSendBtn();\r\n  }\r\n\r\n  private onBtnSendClick = (e: Event) => {\r\n    cancelEvent(e);\r\n\r\n    if(!this.recorder || this.recording || !this.isInputEmpty() || this.forwarding || this.editMsgId) {\r\n      if(this.recording) {\r\n        if((Date.now() - this.recordStartTime) < RECORD_MIN_TIME) {\r\n          this.onCancelRecordClick();\r\n        } else {\r\n          this.recorder.stop();\r\n        }\r\n      } else {\r\n        this.sendMessage();\r\n      }\r\n    } else {\r\n      if(this.chat.peerId.isAnyChat() && !this.chat.canSend('send_media')) {\r\n        toast(POSTING_MEDIA_NOT_ALLOWED);\r\n        return;\r\n      }\r\n\r\n      this.chatInput.classList.add('is-locked');\r\n      blurActiveElement();\r\n\r\n      this.recorder.start().then(() => {\r\n        this.releaseMediaPlayback = appMediaPlaybackController.setSingleMedia();\r\n        this.recordCanceled = false;\r\n        \r\n        this.setRecording(true);\r\n        opusDecodeController.setKeepAlive(true);\r\n        \r\n        const showDiscardPopup = () => {\r\n          new PopupPeer('popup-cancel-record', {\r\n            titleLangKey: 'DiscardVoiceMessageTitle',\r\n            descriptionLangKey: 'DiscardVoiceMessageDescription',\r\n            buttons: [{\r\n              langKey: 'DiscardVoiceMessageAction',\r\n              callback: () => {\r\n                simulateClickEvent(this.btnCancelRecord);\r\n              }\r\n            }, {\r\n              langKey: 'Continue',\r\n              isCancel: true\r\n            }]\r\n          }).show();\r\n        };\r\n\r\n        this.recordingOverlayListener = this.listenerSetter.add(document.body)('mousedown', (e) => {\r\n          if(!findUpClassName(e.target, 'chat-input') && !findUpClassName(e.target, 'popup-cancel-record')) {\r\n            cancelEvent(e);\r\n            showDiscardPopup();\r\n          }\r\n        }, {capture: true, passive: false}) as any;\r\n\r\n        appNavigationController.pushItem(this.recordingNavigationItem = {\r\n          type: 'voice',\r\n          onPop: () => {\r\n            setTimeout(() => {\r\n              showDiscardPopup();\r\n            }, 0);\r\n\r\n            return false;\r\n          }\r\n        });\r\n\r\n        this.recordStartTime = Date.now();\r\n\r\n        const sourceNode: MediaStreamAudioSourceNode = this.recorder.sourceNode;\r\n        const context = sourceNode.context;\r\n\r\n        const analyser = context.createAnalyser();\r\n        sourceNode.connect(analyser);\r\n        //analyser.connect(context.destination);\r\n        analyser.fftSize = 32;\r\n\r\n        const frequencyData = new Uint8Array(analyser.frequencyBinCount);\r\n        const max = frequencyData.length * 255;\r\n        const min = 54 / 150;\r\n        let r = () => {\r\n          if(!this.recording) return;\r\n\r\n          analyser.getByteFrequencyData(frequencyData);\r\n\r\n          let sum = 0;\r\n          frequencyData.forEach(value => {\r\n            sum += value;\r\n          });\r\n          \r\n          let percents = Math.min(1, (sum / max) + min);\r\n          //console.log('frequencyData', frequencyData, percents);\r\n\r\n          this.recordRippleEl.style.transform = `scale(${percents})`;\r\n\r\n          let diff = Date.now() - this.recordStartTime;\r\n          let ms = diff % 1000;\r\n\r\n          let formatted = ('' + (diff / 1000)).toHHMMSS() + ',' + ('00' + Math.round(ms / 10)).slice(-2);\r\n\r\n          this.recordTimeEl.innerText = formatted;\r\n\r\n          fastRaf(r);\r\n        };\r\n\r\n        r();\r\n      }).catch((e: Error) => {\r\n        switch(e.name as string) {\r\n          case 'NotAllowedError': {\r\n            toast('Please allow access to your microphone');\r\n            break;\r\n          }\r\n\r\n          case 'NotReadableError': {\r\n            toast(e.message);\r\n            break;\r\n          }\r\n\r\n          default:\r\n            console.error('Recorder start error:', e, e.name, e.message);\r\n            toast(e.message);\r\n            break;\r\n        }\r\n\r\n        this.setRecording(false);\r\n        this.chatInput.classList.remove('is-locked');\r\n      });\r\n    }\r\n  };\r\n\r\n  private onHelperCancel = (e?: Event, force?: boolean) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    if(this.willSendWebPage) {\r\n      const lastUrl = this.lastUrl;\r\n      let needReturn = false;\r\n      if(this.helperType) {\r\n        //if(this.helperFunc) {\r\n          this.helperFunc();\r\n        //}\r\n\r\n        needReturn = true;\r\n      }\r\n\r\n      // * restore values\r\n      this.lastUrl = lastUrl;\r\n      this.noWebPage = true;\r\n      this.willSendWebPage = null;\r\n\r\n      if(needReturn) return;\r\n    }\r\n\r\n    if(this.helperType === 'edit' && !force) {\r\n      const message = this.editMessage\r\n      const value = RichTextProcessor.parseMarkdown(this.messageInputField.value, []);\r\n      if(message.message !== value) {\r\n        new PopupPeer('discard-editing', {\r\n          buttons: [{\r\n            langKey: 'Alert.Confirm.Discard',\r\n            callback: () => {\r\n              this.onHelperCancel(undefined, true);\r\n            }\r\n          }],\r\n          descriptionLangKey: 'Chat.Edit.Cancel.Text'\r\n        }).show();\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.clearHelper();\r\n    this.updateSendBtn();\r\n  };\r\n\r\n  private onHelperClick = (e: Event) => {\r\n    cancelEvent(e);\r\n      \r\n    if(!findUpClassName(e.target, 'reply')) return;\r\n    if(this.helperType === 'forward') {\r\n      const {forwardElements} = this;\r\n      if(forwardElements && IS_TOUCH_SUPPORTED && !forwardElements.container.classList.contains('active')) {\r\n        openBtnMenu(forwardElements.container);\r\n      }\r\n    } else if(this.helperType === 'reply') {\r\n      this.chat.setMessageId(this.replyToMsgId);\r\n    } else if(this.helperType === 'edit') {\r\n      this.chat.setMessageId(this.editMsgId);\r\n    }\r\n  };\r\n\r\n  private changeForwardRecipient() {\r\n    if(this.helperWaitingForward) return;\r\n    this.helperWaitingForward = true;\r\n\r\n    const helperFunc = this.helperFunc;\r\n    this.clearHelper();\r\n    this.updateSendBtn();\r\n    let selected = false;\r\n    const popup = new PopupForward(copy(this.forwarding), () => {\r\n      selected = true;\r\n    });\r\n\r\n    popup.addEventListener('close', () => {\r\n      this.helperWaitingForward = false;\r\n\r\n      if(!selected) {\r\n        helperFunc();\r\n      }\r\n    });\r\n  }\r\n\r\n  public clearInput(canSetDraft = true, fireEvent = true, clearValue = '') {\r\n    if(document.activeElement === this.messageInput && IS_MOBILE_SAFARI) { // fix first char uppercase\r\n      const i = document.createElement('input');\r\n      document.body.append(i);\r\n      fixSafariStickyInput(i);\r\n      this.messageInputField.setValueSilently(clearValue);\r\n      fixSafariStickyInput(this.messageInput);\r\n      i.remove();\r\n    } else {\r\n      this.messageInputField.setValueSilently(clearValue);\r\n    }\r\n\r\n    if(IS_TOUCH_SUPPORTED) {\r\n      //this.messageInput.innerText = '';\r\n    } else {\r\n      //this.attachMessageInputField();\r\n      //this.messageInput.innerText = '';\r\n\r\n      // clear executions\r\n      this.canRedoFromHTML = '';\r\n      this.undoHistory.length = 0;\r\n      this.executedHistory.length = 0;\r\n      this.canUndoFromHTML = '';\r\n    }\r\n\r\n    let set = false;\r\n    if(canSetDraft) {\r\n      set = this.setDraft(undefined, false);\r\n    }\r\n\r\n    if(!set && fireEvent) {\r\n      this.onMessageInput();\r\n    }\r\n  }\r\n\r\n  public isInputEmpty() {\r\n    return isInputEmpty(this.messageInput);\r\n  }\r\n\r\n  public updateSendBtn() {\r\n    let icon: 'send' | 'record' | 'edit' | 'schedule';\r\n\r\n    const isInputEmpty = this.isInputEmpty();\r\n\r\n    if(this.editMsgId) icon = 'edit';\r\n    else if(!this.recorder || this.recording || !isInputEmpty || this.forwarding) icon = this.chat.type === 'scheduled' ? 'schedule' : 'send';\r\n    else icon = 'record';\r\n\r\n    ['send', 'record', 'edit', 'schedule'].forEach(i => {\r\n      this.btnSend.classList.toggle(i, icon === i);\r\n    });\r\n\r\n    if(this.btnScheduled) {\r\n      this.btnScheduled.classList.toggle('show', isInputEmpty);\r\n    }\r\n\r\n    if(this.btnToggleReplyMarkup) {\r\n      this.btnToggleReplyMarkup.classList.toggle('show', isInputEmpty);\r\n    }\r\n  }\r\n\r\n  public onMessageSent(clearInput = true, clearReply?: boolean) {\r\n    if(this.chat.type !== 'scheduled') {\r\n      this.appMessagesManager.readAllHistory(this.chat.peerId, this.chat.threadId, true);\r\n    }\r\n\r\n    this.scheduleDate = undefined;\r\n    this.sendSilent = undefined;\r\n\r\n    const value = this.messageInputField.value;\r\n    const entities = RichTextProcessor.parseEntities(value);\r\n    const emojiEntities: MessageEntity.messageEntityEmoji[] = entities.filter(entity => entity._ === 'messageEntityEmoji') as any;\r\n    emojiEntities.forEach(entity => {\r\n      const emoji = emojiFromCodePoints(entity.unicode);\r\n      this.appEmojiManager.pushRecentEmoji(emoji);\r\n    });\r\n\r\n    if(clearInput) {\r\n      this.lastUrl = '';\r\n      delete this.noWebPage;\r\n      this.willSendWebPage = null;\r\n      this.clearInput();\r\n    }\r\n\r\n    if(clearReply || clearInput) {\r\n      this.clearHelper();\r\n    }\r\n\r\n    this.updateSendBtn();\r\n  }\r\n\r\n  public sendMessage(force = false) {\r\n    const {editMsgId, chat} = this;\r\n    if(chat.type === 'scheduled' && !force && !editMsgId) {\r\n      this.scheduleSending();\r\n      return;\r\n    }\r\n\r\n    const {peerId} = chat;\r\n    const {noWebPage} = this;\r\n    const sendingParams = this.chat.getMessageSendingParams();\r\n\r\n    const {value, entities} = getRichValue(this.messageInputField.input);\r\n\r\n    //return;\r\n    if(editMsgId) {\r\n      const message = this.editMessage;\r\n      if(value.trim() || message.media) {\r\n        this.appMessagesManager.editMessage(message, value, {\r\n          entities,\r\n          noWebPage: noWebPage\r\n        });\r\n\r\n        this.onMessageSent();\r\n      } else {\r\n        new PopupDeleteMessages(peerId, [editMsgId], chat.type);\r\n\r\n        return;\r\n      }\r\n    } else if(value.trim()) {\r\n      this.appMessagesManager.sendText(peerId, value, {\r\n        entities,\r\n        ...sendingParams,\r\n        noWebPage: noWebPage,\r\n        webPage: this.getWebPagePromise ? undefined : this.willSendWebPage,\r\n        clearDraft: true\r\n      });\r\n\r\n      this.onMessageSent(false, false);\r\n      // this.onMessageSent();\r\n    }\r\n\r\n    // * wait for sendText set messageId for invokeAfterMsg\r\n    if(this.forwarding) {\r\n      const forwarding = copy(this.forwarding);\r\n      setTimeout(() => {\r\n        for(const fromPeerId in forwarding) {\r\n          this.appMessagesManager.forwardMessages(peerId, fromPeerId.toPeerId(), forwarding[fromPeerId], {\r\n            ...sendingParams,\r\n            dropAuthor: this.forwardElements && this.forwardElements.hideSender.checkboxField.checked,\r\n            dropCaptions: this.isDroppingCaptions()\r\n          });\r\n        }\r\n\r\n        if(!value) {\r\n          this.onMessageSent();\r\n        }\r\n      }, 0);\r\n    }\r\n\r\n    // this.onMessageSent();\r\n  }\r\n\r\n  public sendMessageWithDocument(document: MyDocument | string, force = false, clearDraft = false) {\r\n    document = this.appDocsManager.getDoc(document);\r\n\r\n    const flag = document.type === 'sticker' ? 'send_stickers' : (document.type === 'gif' ? 'send_gifs' : 'send_media');\r\n    if(this.chat.peerId.isAnyChat() && !this.chat.canSend(flag)) {\r\n      toast(POSTING_MEDIA_NOT_ALLOWED);\r\n      return false;\r\n    }\r\n\r\n    if(this.chat.type === 'scheduled' && !force) {\r\n      this.scheduleSending(() => this.sendMessageWithDocument(document, true, clearDraft));\r\n      return false;\r\n    }\r\n\r\n    if(document) {\r\n      this.appMessagesManager.sendFile(this.chat.peerId, document, {\r\n        ...this.chat.getMessageSendingParams(),\r\n        isMedia: true, \r\n        clearDraft: clearDraft || undefined\r\n      });\r\n      this.onMessageSent(clearDraft, true);\r\n\r\n      if(document.type === 'sticker') {\r\n        emoticonsDropdown.stickersTab?.pushRecentSticker(document);\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  private canToggleHideAuthor() {\r\n    const {forwardElements} = this;\r\n    if(!forwardElements) return false;\r\n    const hideCaptionCheckboxField = forwardElements.hideCaption.checkboxField;\r\n    return !hideCaptionCheckboxField.checked ||\r\n      findUpTag(hideCaptionCheckboxField.label, 'FORM').classList.contains('hide');\r\n  }\r\n\r\n  private isDroppingCaptions() {\r\n    return !this.canToggleHideAuthor();\r\n  }\r\n\r\n  /* public sendSomething(callback: () => void, force = false) {\r\n    if(this.chat.type === 'scheduled' && !force) {\r\n      this.scheduleSending(() => this.sendSomething(callback, true));\r\n      return false;\r\n    }\r\n\r\n    callback();\r\n    this.onMessageSent(false, true);\r\n\r\n    return true;\r\n  } */\r\n\r\n  public initMessageEditing(mid: number) {\r\n    const message: Message.message = this.chat.getMessage(mid);\r\n\r\n    let input = RichTextProcessor.wrapDraftText(message.message, {entities: message.totalEntities});\r\n    const f = () => {\r\n      const replyFragment = this.appMessagesManager.wrapMessageForReply(message, undefined, [message.mid]);\r\n      this.setTopInfo('edit', f, i18n('AccDescrEditing'), replyFragment, input, message);\r\n\r\n      this.editMsgId = mid;\r\n      this.editMessage = message;\r\n      input = undefined;\r\n    };\r\n    f();\r\n  }\r\n\r\n  public initMessagesForward(fromPeerIdsMids: {[fromPeerId: PeerId]: number[]}) {\r\n    const f = () => {\r\n      //const peerTitles: string[]\r\n      const fromPeerIds = Object.keys(fromPeerIdsMids).map(fromPeerId => fromPeerId.toPeerId());\r\n      const smth: Set<string> = new Set();\r\n      let length = 0, messagesWithCaptionsLength = 0;\r\n\r\n      fromPeerIds.forEach(fromPeerId => {\r\n        const mids = fromPeerIdsMids[fromPeerId];\r\n        mids.forEach(mid => {\r\n          const message: Message.message = this.appMessagesManager.getMessageByPeer(fromPeerId, mid);\r\n          if(message.fwd_from?.from_name && !message.fromId && !message.fwdFromId) {\r\n            smth.add('N' + message.fwd_from.from_name);\r\n          } else {\r\n            smth.add('P' + message.fromId);\r\n          }\r\n\r\n          if(message.media && message.message) {\r\n            ++messagesWithCaptionsLength;\r\n          }\r\n        });\r\n\r\n        length += mids.length;\r\n      });\r\n\r\n      const onlyFirstName = smth.size > 2;\r\n      const peerTitles = [...smth].map(smth => {\r\n        const type = smth[0];\r\n        smth = smth.slice(1);\r\n        if(type === 'P') {\r\n          const peerId = smth.toPeerId();\r\n          return peerId === rootScope.myId ? i18n('Chat.Accessory.Forward.You') : new PeerTitle({peerId, dialog: false, onlyFirstName}).element;\r\n        } else {\r\n          return onlyFirstName ? smth.split(' ')[0] : smth;\r\n        }\r\n      });\r\n\r\n      const {forwardElements} = this;\r\n      const form = findUpTag(forwardElements.showCaption.checkboxField.label, 'FORM');\r\n      form.classList.toggle('hide', !messagesWithCaptionsLength);\r\n      const hideCaption = forwardElements.hideCaption.checkboxField.checked;\r\n      if(messagesWithCaptionsLength && hideCaption) {\r\n        forwardElements.hideSender.checkboxField.setValueSilently(true);\r\n      } else if(this.forwardWasDroppingAuthor !== undefined) {\r\n        (this.forwardWasDroppingAuthor ? forwardElements.hideSender : forwardElements.showSender).checkboxField.setValueSilently(true);\r\n      }\r\n\r\n      const titleKey: LangPackKey = forwardElements.showSender.checkboxField.checked ? 'Chat.Accessory.Forward' : 'Chat.Accessory.Hidden';\r\n      const title = i18n(titleKey, [length]);\r\n\r\n      const senderTitles = document.createDocumentFragment();\r\n      if(peerTitles.length < 3) {\r\n        senderTitles.append(...join(peerTitles, false));\r\n      } else {\r\n        senderTitles.append(peerTitles[0], i18n('AndOther', [peerTitles.length - 1]));\r\n      }\r\n\r\n      let firstMessage: Message.message, usingFullAlbum: boolean;\r\n      if(fromPeerIds.length === 1) {\r\n        const fromPeerId = fromPeerIds[0];\r\n        const mids = fromPeerIdsMids[fromPeerId];\r\n        firstMessage = this.appMessagesManager.getMessageByPeer(fromPeerId, mids[0]);\r\n  \r\n        usingFullAlbum = !!firstMessage.grouped_id;\r\n        if(usingFullAlbum) {\r\n          const albumMids = this.appMessagesManager.getMidsByMessage(firstMessage);\r\n          if(albumMids.length !== length || albumMids.find(mid => !mids.includes(mid))) {\r\n            usingFullAlbum = false;\r\n          }\r\n        }\r\n      }\r\n\r\n      const subtitleFragment = document.createDocumentFragment();\r\n      const delimiter = ': ';\r\n      if(usingFullAlbum || length === 1) {\r\n        const mids = fromPeerIdsMids[fromPeerIds[0]];\r\n        const replyFragment = this.appMessagesManager.wrapMessageForReply(firstMessage, undefined, mids);\r\n        subtitleFragment.append(\r\n          senderTitles, \r\n          delimiter, \r\n          replyFragment\r\n        );\r\n      } else {\r\n        subtitleFragment.append(\r\n          i18n('Chat.Accessory.Forward.From'), \r\n          delimiter, \r\n          senderTitles\r\n        );\r\n      }\r\n  \r\n      let newReply = this.setTopInfo('forward', f, title, subtitleFragment);\r\n\r\n      forwardElements.modifyArgs.forEach((b, idx) => {\r\n        const text = b.textElement;\r\n        const intl: I18n.IntlElement = I18n.weakMap.get(text) as any;\r\n        intl.args = [idx < 2 ? fromPeerIds.length : messagesWithCaptionsLength];\r\n        intl.update();\r\n      });\r\n\r\n      if(this.forwardHover) {\r\n        this.forwardHover.attachButtonListener(newReply, this.listenerSetter);\r\n      }\r\n\r\n      this.forwarding = fromPeerIdsMids;\r\n    };\r\n    \r\n    f();\r\n  }\r\n\r\n  public initMessageReply(mid: number) {\r\n    if(this.replyToMsgId === mid) {\r\n      return;\r\n    }\r\n    \r\n    let message: Message = this.chat.getMessage(mid);\r\n    const f = () => {\r\n      let peerTitleEl: HTMLElement;\r\n      if(message._ === 'messageEmpty') { // load missing replying message\r\n        peerTitleEl = i18n('Loading');\r\n\r\n        this.chat.appMessagesManager.wrapSingleMessage(this.chat.peerId, mid).then((_message) => {\r\n          if(this.replyToMsgId !== mid) {\r\n            return;\r\n          }\r\n\r\n          message = _message;\r\n          if(message._ === 'messageEmpty') {\r\n            this.clearHelper('reply');\r\n          } else {\r\n            f();\r\n          }\r\n        });\r\n      } else {\r\n        peerTitleEl = new PeerTitle({\r\n          peerId: message.fromId,\r\n          dialog: false\r\n        }).element;\r\n      }\r\n\r\n      this.setTopInfo('reply', f, peerTitleEl, message && (message as Message.message).message, undefined, message);\r\n      this.replyToMsgId = mid;\r\n    };\r\n    f();\r\n  }\r\n\r\n  public clearHelper(type?: ChatInputHelperType) {\r\n    if(this.helperType === 'edit' && type !== 'edit') {\r\n      this.clearInput();\r\n    }\r\n\r\n    if(type) {\r\n      this.lastUrl = '';\r\n      delete this.noWebPage;\r\n      this.willSendWebPage = null;\r\n    }\r\n    \r\n    if(type !== 'reply') {\r\n      this.replyToMsgId = undefined;\r\n      this.forwarding = undefined;\r\n    }\r\n\r\n    this.editMsgId = this.editMessage = undefined;\r\n    this.helperType = this.helperFunc = undefined;\r\n\r\n    if(this.chat.container.classList.contains('is-helper-active')) {\r\n      appNavigationController.removeByType('input-helper');\r\n      this.chat.container.classList.remove('is-helper-active');\r\n      this.t();\r\n    }\r\n  }\r\n\r\n  private t() {\r\n    const className = 'is-toggling-helper';\r\n    SetTransition(this.chat.container, className, true, 150, () => {\r\n      this.chat.container.classList.remove(className);\r\n    });\r\n  }\r\n\r\n  public setInputValue(value: string, clear = true, focus = true) {\r\n    if(!value) value = '';\r\n\r\n    if(clear) this.clearInput(false, false, value);\r\n    else this.messageInputField.setValueSilently(value);\r\n\r\n    fastRaf(() => {\r\n      focus && placeCaretAtEnd(this.messageInput);\r\n      this.onMessageInput();\r\n      this.messageInput.scrollTop = this.messageInput.scrollHeight;\r\n    });\r\n  }\r\n\r\n  public setTopInfo(\r\n    type: ChatInputHelperType, \r\n    callerFunc: () => void, \r\n    title: Parameters<typeof wrapReply>[0] = '', \r\n    subtitle: Parameters<typeof wrapReply>[1] = '', \r\n    input?: string, \r\n    message?: any\r\n  ) {\r\n    if(this.willSendWebPage && type === 'reply') {\r\n      return;\r\n    }\r\n\r\n    if(type !== 'webpage') {\r\n      this.clearHelper(type);\r\n      this.helperType = type;\r\n      this.helperFunc = callerFunc;\r\n    }\r\n    \r\n    const replyParent = this.replyElements.container;\r\n    const oldReply = replyParent.lastElementChild.previousElementSibling;\r\n    const haveReply = oldReply.classList.contains('reply');\r\n\r\n    this.replyElements.iconBtn.replaceWith(this.replyElements.iconBtn = ButtonIcon((type === 'webpage' ? 'link' : type) + ' active reply-icon', {noRipple: true}));\r\n    const newReply = wrapReply(title, subtitle, message);\r\n    if(haveReply) {\r\n      oldReply.replaceWith(newReply);\r\n    } else {\r\n      replyParent.insertBefore(newReply, replyParent.lastElementChild);\r\n    }\r\n\r\n    if(type === 'webpage') {\r\n      newReply.style.cursor = 'default';\r\n    }\r\n\r\n    if(!this.chat.container.classList.contains('is-helper-active')) {\r\n      this.chat.container.classList.add('is-helper-active');\r\n      this.t();\r\n    }\r\n\r\n    /* const scroll = appImManager.scrollable;\r\n    if(scroll.isScrolledDown && !scroll.scrollLocked && !appImManager.messagesQueuePromise && !appImManager.setPeerPromise) {\r\n      scroll.scrollTo(scroll.scrollHeight, 'top', true, true, 200);\r\n    } */\r\n\r\n    if(!IS_MOBILE) {\r\n      appNavigationController.pushItem({\r\n        type: 'input-helper',\r\n        onPop: () => {\r\n          this.onHelperCancel();\r\n        }\r\n      });\r\n    }\r\n\r\n    if(input !== undefined) {\r\n      this.setInputValue(input);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.updateSendBtn();\r\n    }, 0);\r\n\r\n    return newReply;\r\n  }\r\n\r\n  // public saveScroll() {\r\n  //   this.scrollTop = this.chat.bubbles.scrollable.container.scrollTop;\r\n  //   this.scrollOffsetTop = this.chatInput.offsetTop;\r\n  // }\r\n\r\n  // public restoreScroll() {\r\n  //   if(this.chatInput.style.display) return;\r\n  //   //console.log('input resize', offsetTop, this.chatInput.offsetTop);\r\n  //   let newOffsetTop = this.chatInput.offsetTop;\r\n  //   let container = this.chat.bubbles.scrollable.container;\r\n  //   let scrollTop = container.scrollTop;\r\n  //   let clientHeight = container.clientHeight;\r\n  //   let maxScrollTop = container.scrollHeight;\r\n\r\n  //   if(newOffsetTop < this.scrollOffsetTop) {\r\n  //     this.scrollDiff = this.scrollOffsetTop - newOffsetTop;\r\n  //     container.scrollTop += this.scrollDiff;\r\n  //   } else if(scrollTop !== this.scrollTop) {\r\n  //     let endDiff = maxScrollTop - (scrollTop + clientHeight);\r\n  //     if(endDiff < this.scrollDiff/*  && false */) {\r\n  //       //container.scrollTop -= endDiff;\r\n  //     } else {\r\n  //       container.scrollTop -= this.scrollDiff;\r\n  //     }\r\n  //   }\r\n  // }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function setCaretAt(node: Node) {\n  // node.appendChild(document.createTextNode(''));\n\n  const originalNode = node;\n  node = node.previousSibling;\n\n  if(node.nodeType === 1) {\n    const newNode = document.createTextNode('');\n    node.parentNode.insertBefore(newNode, !originalNode.nextSibling || originalNode.nextSibling.nodeType === node.nodeType ? originalNode : originalNode.nextSibling);\n    node = newNode;\n  }\n\n  if(window.getSelection && document.createRange) {\n    const range = document.createRange();\n    if(node) {\n      range.setStartAfter(node);\n      range.insertNode(node);\n      range.setStart(node, node.nodeValue.length);\n    }\n\n    range.collapse(true);\n\n    const sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type Chat from \"./chat\";\r\nimport type ChatTopbar from \"./topbar\";\r\nimport mediaSizes from \"../../helpers/mediaSizes\";\r\nimport DivAndCaption from \"../divAndCaption\";\r\nimport { ripple } from \"../ripple\";\r\nimport ListenerSetter from \"../../helpers/listenerSetter\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport { Message } from \"../../layer\";\r\nimport safeAssign from \"../../helpers/object/safeAssign\";\r\n\r\nconst classNames: string[] = ['is-pinned-message-shown', 'is-pinned-audio-shown'];\r\nconst CLASSNAME_BASE = 'pinned-container';\r\nconst HEIGHT = 52;\r\n\r\nexport default class PinnedContainer {\r\n  public wrapperUtils: HTMLElement;\r\n  public btnClose: HTMLElement;\r\n  protected wrapper: HTMLElement;\r\n\r\n  protected topbar: ChatTopbar;\r\n  protected chat: Chat;\r\n  protected listenerSetter: ListenerSetter;\r\n  public className: string;\r\n  public divAndCaption: DivAndCaption<(title: string | HTMLElement | DocumentFragment, subtitle: string | HTMLElement | DocumentFragment, message?: any) => void>;\r\n  \r\n  protected floating = false;\r\n\r\n  public onClose?: () => void | Promise<boolean>;\r\n\r\n  constructor(options: {\r\n    topbar: PinnedContainer['topbar'],\r\n    chat: PinnedContainer['chat'],\r\n    listenerSetter: PinnedContainer['listenerSetter'],\r\n    className: PinnedContainer['className'],\r\n    divAndCaption: PinnedContainer['divAndCaption'],\r\n    onClose?: PinnedContainer['onClose'],\r\n    floating?: PinnedContainer['floating']\r\n  }) {\r\n    safeAssign(this, options);\r\n\r\n    const {divAndCaption, className} = this;\r\n    divAndCaption.container.classList.add(CLASSNAME_BASE, 'hide');\r\n    divAndCaption.title.classList.add(CLASSNAME_BASE + '-title');\r\n    divAndCaption.subtitle.classList.add(CLASSNAME_BASE + '-subtitle');\r\n    divAndCaption.content.classList.add(CLASSNAME_BASE + '-content');\r\n    \r\n    this.btnClose = document.createElement('button');\r\n    this.btnClose.classList.add(CLASSNAME_BASE + '-close', `pinned-${className}-close`, 'btn-icon', 'tgico-close');\r\n    \r\n    this.wrapper = document.createElement('div');\r\n    this.wrapper.classList.add(CLASSNAME_BASE + '-wrapper');\r\n    ripple(this.wrapper);\r\n\r\n    this.wrapperUtils = document.createElement('div');\r\n    this.wrapperUtils.classList.add(CLASSNAME_BASE + '-wrapper-utils');\r\n    this.wrapperUtils.append(this.btnClose);\r\n\r\n    this.wrapper.append(...Array.from(divAndCaption.container.children), this.wrapperUtils);\r\n\r\n    divAndCaption.container.append(this.wrapper/* , this.close */);\r\n\r\n    this.attachOnCloseEvent(this.btnClose);\r\n  }\r\n\r\n  public attachOnCloseEvent(elem: HTMLElement) {\r\n    attachClickEvent(elem, (e) => {\r\n      cancelEvent(e);\r\n\r\n      ((this.onClose ? this.onClose() : null) || Promise.resolve(true)).then(needClose => {\r\n        if(needClose) {\r\n          this.toggle(true);\r\n        }\r\n      });\r\n    }, {listenerSetter: this.listenerSetter});\r\n  }\r\n\r\n  public toggle(hide?: boolean) {\r\n    const isHidden = this.divAndCaption.container.classList.contains('hide');\r\n    if(hide === undefined) {\r\n      hide = !isHidden;\r\n    } else if(hide === isHidden) {\r\n      return;\r\n    }\r\n\r\n    // const scrollable = this.chat.bubbles.scrollable;\r\n    \r\n    const isFloating = (this.floating || mediaSizes.isMobile) && !hide;\r\n    // const scrollTop = isFloating || this.divAndCaption.container.classList.contains('is-floating') ? scrollable.scrollTop : undefined;\r\n\r\n    this.divAndCaption.container.classList.toggle('is-floating', isFloating);\r\n    this.divAndCaption.container.classList.toggle('hide', hide);\r\n    \r\n    this.topbar.container.classList.toggle('is-pinned-floating', isFloating);\r\n    this.topbar.container.classList.toggle(`is-pinned-${this.className}-shown`, !hide);\r\n    \r\n    // const active = classNames.filter(className => this.topbar.container.classList.contains(className));\r\n    // const maxActive = hide ? 0 : 1;\r\n    \r\n    // * not sure when it became unneeded\r\n    // if(scrollTop !== undefined && active.length <= maxActive/*  && !scrollable.isScrolledDown */) {\r\n    //   scrollable.scrollTop = scrollTop + ((hide ? -1 : 1) * HEIGHT);\r\n    // }\r\n    \r\n    this.topbar.setFloating();\r\n    this.topbar.setUtilsWidth();\r\n  }\r\n\r\n  public fill(title: string | HTMLElement | DocumentFragment, subtitle: string | HTMLElement | DocumentFragment, message: Message.message) {\r\n    this.divAndCaption.container.dataset.peerId = '' + message.peerId;\r\n    this.divAndCaption.container.dataset.mid = '' + message.mid;\r\n    this.divAndCaption.fill(title, subtitle, message);\r\n    this.topbar.setUtilsWidth();\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\nimport type ChatTopbar from \"./topbar\";\nimport rootScope from \"../../lib/rootScope\";\nimport appMediaPlaybackController from \"../appMediaPlaybackController\";\nimport DivAndCaption from \"../divAndCaption\";\nimport PinnedContainer from \"./pinnedContainer\";\nimport Chat from \"./chat\";\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\nimport replaceContent from \"../../helpers/dom/replaceContent\";\nimport PeerTitle from \"../peerTitle\";\nimport { i18n } from \"../../lib/langPack\";\nimport { formatFullSentTime } from \"../../helpers/date\";\nimport { MediaProgressLine, VolumeSelector } from \"../../lib/mediaPlayer\";\nimport ButtonIcon from \"../buttonIcon\";\nimport { MyDocument } from \"../../lib/appManagers/appDocsManager\";\nimport { Message } from \"../../layer\";\n\nexport default class ChatAudio extends PinnedContainer {\n  private toggleEl: HTMLElement;\n  private progressLine: MediaProgressLine;\n  private volumeSelector: VolumeSelector;\n  private fasterEl: HTMLElement;\n\n  constructor(protected topbar: ChatTopbar, protected chat: Chat, protected appMessagesManager: AppMessagesManager) {\n    super({\n      topbar, \n      chat, \n      listenerSetter: topbar.listenerSetter, \n      className: 'audio', \n      divAndCaption: new DivAndCaption(\n        'pinned-audio', \n        (title: string | HTMLElement | DocumentFragment, subtitle: string | HTMLElement | DocumentFragment) => {\n          replaceContent(this.divAndCaption.title, title);\n          replaceContent(this.divAndCaption.subtitle, subtitle);\n        }\n      ), \n      onClose: () => {\n        appMediaPlaybackController.stop();\n      },\n      floating: true\n    });\n\n    this.divAndCaption.border.remove();\n\n    const prevEl = ButtonIcon('fast_rewind active', {noRipple: true});\n    const nextEl = ButtonIcon('fast_forward active', {noRipple: true});\n\n    const attachClick = (elem: HTMLElement, callback: () => void) => {\n      attachClickEvent(elem, (e) => {\n        cancelEvent(e);\n        callback();\n      }, {listenerSetter: this.topbar.listenerSetter});\n    };\n\n    attachClick(prevEl, () => {\n      appMediaPlaybackController.previous();\n    });\n\n    attachClick(nextEl, () => {\n      appMediaPlaybackController.next();\n    });\n\n    this.toggleEl = ButtonIcon('', {noRipple: true});\n    this.toggleEl.classList.add('active', 'pinned-audio-ico', 'tgico');\n    attachClick(this.toggleEl, () => {\n      appMediaPlaybackController.toggle();\n    });\n    this.wrapper.prepend(this.wrapper.firstElementChild, prevEl, this.toggleEl, nextEl);\n\n    this.volumeSelector = new VolumeSelector(this.listenerSetter, true);\n    const volumeProgressLineContainer = document.createElement('div');\n    volumeProgressLineContainer.classList.add('progress-line-container');\n    volumeProgressLineContainer.append(this.volumeSelector.container);\n    const tunnel = document.createElement('div');\n    tunnel.classList.add('pinned-audio-volume-tunnel');\n    this.volumeSelector.btn.classList.add('pinned-audio-volume', 'active');\n    this.volumeSelector.btn.prepend(tunnel);\n    this.volumeSelector.btn.append(volumeProgressLineContainer);\n\n    const fasterEl = this.fasterEl = ButtonIcon('playback_2x', {noRipple: true});\n    attachClick(fasterEl, () => {\n      appMediaPlaybackController.playbackRate = fasterEl.classList.contains('active') ? 1 : 1.75;\n    });\n\n    this.wrapperUtils.prepend(this.volumeSelector.btn, fasterEl);\n\n    const progressWrapper = document.createElement('div');\n    progressWrapper.classList.add('pinned-audio-progress-wrapper');\n\n    this.progressLine = new MediaProgressLine(undefined, undefined, true, true);\n    this.progressLine.container.classList.add('pinned-audio-progress');\n    progressWrapper.append(this.progressLine.container);\n    this.wrapper.insertBefore(progressWrapper, this.wrapperUtils);\n\n    this.topbar.listenerSetter.add(rootScope)('media_play', this.onMediaPlay);\n    this.topbar.listenerSetter.add(rootScope)('media_pause', this.onPause);\n    this.topbar.listenerSetter.add(rootScope)('media_stop', this.onStop);\n    this.topbar.listenerSetter.add(rootScope)('media_playback_params', ({playbackRate}) => {\n      this.onPlaybackRateChange(playbackRate);\n    });\n\n    const playingDetails = appMediaPlaybackController.getPlayingDetails();\n    if(playingDetails) {\n      this.onMediaPlay(playingDetails);\n      this.onPlaybackRateChange(appMediaPlaybackController.playbackRate);\n    }\n  }\n\n  public destroy() {\n    if(this.progressLine) {\n      this.progressLine.removeListeners();\n    }\n  }\n\n  private onPlaybackRateChange = (playbackRate: number) => {\n    this.fasterEl.classList.toggle('active', playbackRate > 1);\n  };\n\n  private onPause = () => {\n    this.toggleEl.classList.remove('flip-icon');\n  };\n\n  private onStop = () => {\n    this.toggle(true);\n  };\n  \n  private onMediaPlay = ({doc, message, media}: {\n    doc: MyDocument,\n    message: Message.message,\n    media: HTMLMediaElement\n  }) => {\n    let title: string | HTMLElement, subtitle: string | HTMLElement | DocumentFragment;\n    if(doc.type === 'voice' || doc.type === 'round') {\n      title = new PeerTitle({peerId: message.fromId}).element;\n\n      //subtitle = 'Voice message';\n      subtitle = formatFullSentTime(message.date);\n      this.fasterEl.classList.remove('hide');\n    } else {\n      title = doc.audioTitle || doc.fileName;\n      subtitle = doc.audioPerformer || i18n('AudioUnknownArtist');\n      this.fasterEl.classList.add('hide');\n    }\n\n    this.progressLine.setMedia(media);\n\n    this.fill(title, subtitle, message);\n    // this.toggleEl.classList.add('flip-icon');\n    this.toggleEl.classList.toggle('flip-icon', !media.paused);\n    this.toggle(false);\n  };\n}\n","// https://github.com/evgeny-nadymov/telegram-react/blob/master/src/Components/ColumnMiddle/PinnedMessageBorder.js\n\nenum BAR_HEIGHTS {\n  ONE = 32,\n  TWO = 15,\n  THREE = 10,\n  FOUR = 8,\n  MORE = 8\n};\n\nconst GAP = 1;\nconst WIDTH = 2;\nconst BASE_CLASS = 'pinned-message-border';\n\nexport default class PinnedMessageBorder {\n  private border: HTMLElement;\n  private wrapper: HTMLElement;\n  private svg: SVGSVGElement;\n  private defs: SVGDefsElement;\n  private clipPath: SVGClipPathElement;\n  private path: SVGPathElement;\n  private mark: HTMLElement;\n\n  private count: number;\n  private index: number;\n\n  private drawRect = (x: number, y: number, width: number, height: number, radius: number) => {\n    return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n  };\n\n  private getClipPath = (id: string, barHeight: number, count: number) => {\n    const radius = 1;\n\n    let d = '';\n    /* if(count === 3) {\n      d = this.drawRect(0, 0, WIDTH, barHeight, radius)\n        + this.drawRect(0, barHeight + GAP, WIDTH, barHeight + 1, radius)\n        + this.drawRect(0, barHeight * 2 + GAP * 2 + 1, WIDTH, barHeight, radius);\n    } */if(count === 2) {\n      d = this.drawRect(0, 0, WIDTH, barHeight, radius) + this.drawRect(0, barHeight + GAP * 2, WIDTH, barHeight, radius);\n    } else {\n      for(let i = 0; i < count; ++i) {\n        d += this.drawRect(0, (barHeight + GAP) * i, WIDTH, barHeight, radius);\n      }\n    }\n\n    if(!this.clipPath) {\n      this.clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n      this.path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\n      this.clipPath.append(this.path);\n    }\n\n    this.clipPath.id = id;\n    this.path.setAttributeNS(null, 'd', d);\n\n    return this.clipPath;\n  };\n\n  private getBarHeight = (count: number, index: number) => {\n    let barHeight: number;\n    if(count <= 1) {\n      barHeight = BAR_HEIGHTS.ONE;\n    } else if(count === 2) {\n      barHeight = BAR_HEIGHTS.TWO;\n    } else if(count === 3) {\n      barHeight = BAR_HEIGHTS.THREE;\n    } else if(count === 4) {\n      barHeight = BAR_HEIGHTS.FOUR;\n    } else if(count > 3) {\n      barHeight = BAR_HEIGHTS.MORE;\n    }\n\n    return barHeight;\n  };\n\n  private getMarkHeight = (count: number, index: number) => {\n    let markHeight: number;\n    if(count <= 1) {\n      markHeight = BAR_HEIGHTS.ONE;\n    } else if(count === 2) {\n      markHeight = BAR_HEIGHTS.TWO;\n    } else if(count === 3) {\n      markHeight = BAR_HEIGHTS.THREE;\n    } else if(count === 4) {\n      markHeight = BAR_HEIGHTS.FOUR;\n    } else if(count > 3) {\n      markHeight = BAR_HEIGHTS.MORE;\n    }\n\n    return markHeight;\n  };\n\n  private getMarkTranslateY = (index: number, barHeight: number, count: number) => {\n    if(count === 1) {\n      return 0;\n    } else if(count === 2) {\n      return !index ? 0 : barHeight + GAP;\n    }\n\n    if(count === 3) {\n      if(!index) {\n        return 0;\n      } else if(index === 1) {\n        return barHeight + GAP;\n      }\n\n      return barHeight * 2 + GAP * 2 + 1;\n    } else {\n      return (barHeight + GAP) * index;\n    }\n  };\n\n  private getTrackTranslateY = (index: number, count: number, barHeight: number, trackHeight: number) => {\n    if(count <= 4) {\n      return 0;\n    }\n\n    if(index <= 1) {\n      return 0;\n    } else if(index >= (count - 2)) {\n      return trackHeight - BAR_HEIGHTS.ONE - barHeight;\n    }\n\n    // return (index + 1) * barHeight + index * GAP;\n    return (index - 2) * barHeight + index * GAP;\n    //return (barHeight + GAP * 2) / 2 + (index - 2) * (barHeight + GAP);\n  };\n\n  private getTrackHeight = (count: number, barHeight: number) => {\n    return count <= 3 ? BAR_HEIGHTS.ONE : barHeight * count + GAP * (count - 1);\n  };\n\n  public render(count: number, index: number) {\n    if(!this.border) {\n      this.border = document.createElement('div');\n      this.border.classList.add(BASE_CLASS);\n\n      this.wrapper = document.createElement('div');\n      this.border.append(this.wrapper);\n    }\n    \n    if(count === 1) {\n      if(this.count !== count) {\n        this.wrapper.className = BASE_CLASS + '-wrapper-1';\n        this.border.classList.remove(BASE_CLASS + '-mask');\n        this.wrapper.innerHTML = this.wrapper.style.cssText = '';\n      }\n\n      return this.border;\n    }\n\n    const barHeight = this.getBarHeight(count, index);\n    const markHeight = this.getMarkHeight(count, index);\n    const trackHeight = this.getTrackHeight(count, barHeight);\n\n    const clipPathId = `clipPath_${count}`;\n    const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n    const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n    const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n    this.border.classList.toggle(BASE_CLASS + '-mask', count > 4);\n\n    if(index <= 1) {\n      this.border.classList.add('mask-bottom');\n      this.border.classList.remove('mask-top');\n    } else if(index >= (count - 2)) {\n      this.border.classList.add('mask-top');\n      this.border.classList.remove('mask-bottom');\n    } else {\n      this.border.classList.add('mask-top', 'mask-bottom');\n    }\n\n    this.wrapper.className = BASE_CLASS + '-wrapper';\n    this.wrapper.style.cssText = `clip-path: url(#${clipPathId}); width: 2px; height: ${trackHeight}px; transform: translateY(-${trackTranslateY}px);`;\n    \n    if(!this.svg) {\n      this.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n      this.svg.setAttributeNS(null, 'height', '0');\n      this.svg.setAttributeNS(null, 'width', '0');\n  \n      this.defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n      this.defs.append(clipPath);\n\n      this.svg.append(this.defs);\n\n      this.mark = document.createElement('div');\n      this.mark.classList.add(BASE_CLASS + '-mark');\n    }\n\n    if(!this.svg.parentElement) {\n      this.wrapper.append(this.svg, this.mark);\n    }\n\n    this.mark.style.cssText = `height: ${markHeight}px; transform: translateY(${markTranslateY}px);`;\n    \n    this.count = count;\n    this.index = index;\n\n    return this.border;\n  }\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\r\nimport type { AppPeersManager } from \"../../lib/appManagers/appPeersManager\";\r\nimport type ChatTopbar from \"./topbar\";\r\nimport PopupPinMessage from \"../popups/unpinMessage\";\r\nimport PinnedContainer from \"./pinnedContainer\";\r\nimport PinnedMessageBorder from \"./pinnedMessageBorder\";\r\nimport ReplyContainer, { wrapReplyDivAndCaption } from \"./replyContainer\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport Chat from \"./chat\";\r\nimport ListenerSetter from \"../../helpers/listenerSetter\";\r\nimport ButtonIcon from \"../buttonIcon\";\r\nimport { getHeavyAnimationPromise } from \"../../hooks/useHeavyAnimationCheck\";\r\nimport { i18n } from \"../../lib/langPack\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport handleScrollSideEvent from \"../../helpers/dom/handleScrollSideEvent\";\r\nimport debounce from \"../../helpers/schedulers/debounce\";\r\n\r\nclass AnimatedSuper {\r\n  static DURATION = 200;\r\n  static BASE_CLASS = 'animated-super';\r\n  container: HTMLDivElement;\r\n  rows: {[index: string]: {element: HTMLElement, timeout?: number, new?: true}} = {};\r\n  clearTimeout: number;\r\n\r\n  constructor() {\r\n    this.container = document.createElement('div');\r\n    this.container.className = AnimatedSuper.BASE_CLASS;\r\n  }\r\n\r\n  public getRow(index: number, animateFirst = false) {\r\n    if(this.rows[index]) return this.rows[index].element;\r\n    const row = document.createElement('div');\r\n    const isFirst = !Object.keys(this.rows).length && !animateFirst;\r\n    row.className = AnimatedSuper.BASE_CLASS + '-row' + (isFirst ? '' : ' is-hiding hide');\r\n    this.rows[index] = {element: row, new: true};\r\n    this.container.append(row);\r\n    return row;\r\n  }\r\n\r\n  public clearRow(index: number) {\r\n    if(!this.rows[index]) return;\r\n    this.rows[index].element.remove();\r\n    delete this.rows[index];\r\n  }\r\n\r\n  public clearRows(currentIndex?: number) {\r\n    if(this.clearTimeout) clearTimeout(this.clearTimeout);\r\n    this.clearTimeout = window.setTimeout(() => {\r\n      for(const i in this.rows) {\r\n        if(+i === currentIndex) continue;\r\n        this.clearRow(+i);\r\n      }\r\n    }, AnimatedSuper.DURATION);\r\n  }\r\n\r\n  public setNewRow(index: number, reflow = false) {\r\n    const row = this.rows[index];\r\n    if(row.new) {\r\n      if(reflow) {\r\n        row.element.classList.remove('hide');\r\n        void row.element.offsetLeft; // reflow\r\n      } else {\r\n        row.element.classList.remove('is-hiding', 'hide');\r\n      }\r\n\r\n      delete row.new;\r\n    }\r\n\r\n    this.clearRows(index);\r\n  }\r\n\r\n  public animate(index: number, previousIndex: number, fromTop = index > previousIndex, ignorePrevious = false) {\r\n    if(index === previousIndex) { // * handle if set index 0 and previousIndex 0\r\n      return this.setNewRow(index);\r\n    }\r\n\r\n    const row = this.rows[index];\r\n    const previousRow = this.rows[previousIndex];\r\n    if(!previousRow && !ignorePrevious) {\r\n      return this.setNewRow(index);\r\n    }\r\n\r\n    const sides = ['from-top', 'from-bottom'];\r\n    if(!fromTop) sides.reverse();\r\n\r\n    row.element.classList.add(sides[0]);\r\n    row.element.classList.remove(sides[1]);\r\n    if(previousRow) {\r\n      previousRow.element.classList.add(sides[1]);\r\n      previousRow.element.classList.remove(sides[0]);\r\n    }\r\n\r\n    if(row.new) {\r\n      this.setNewRow(index, true);\r\n    }\r\n\r\n    row.element.classList.toggle('is-hiding', false);\r\n    previousRow && previousRow.element.classList.toggle('is-hiding', true);\r\n\r\n    /* const height = row.element.getBoundingClientRect().height;\r\n    row.element.style.transform = `translateY(${fromTop ? height * -1 : height}px)`;\r\n    if(previousRow) {\r\n      previousRow.element.style.transform = `translateY(${fromTop ? height : height * -1}px)`;\r\n    } */\r\n\r\n    /* row.element.style.setProperty('--height', row.element.getBoundingClientRect().height + 'px');\r\n    if(previousRow) {\r\n      previousRow.element.style.setProperty('--height', previousRow.element.getBoundingClientRect().height + 'px');\r\n    } */\r\n    \r\n    this.clearRows(index);\r\n  }\r\n}\r\n\r\nclass AnimatedCounter {\r\n  static EMPTY_INDEX = -1;\r\n  static BASE_CLASS = 'animated-counter';\r\n  container: HTMLElement;\r\n  decimals: {\r\n    container: HTMLElement,\r\n    placeholder: HTMLElement,\r\n    animatedSuper: AnimatedSuper\r\n  }[] = [];\r\n  previousNumber = 0;\r\n  clearTimeout: number;\r\n\r\n  constructor(private reverse = false) {\r\n    this.container = document.createElement('div');\r\n    this.container.className = AnimatedCounter.BASE_CLASS;\r\n  }\r\n\r\n  getDecimal(index: number) {\r\n    if(this.decimals[index]) return this.decimals[index];\r\n    const item = document.createElement('div');\r\n    item.className = AnimatedCounter.BASE_CLASS + '-decimal';\r\n\r\n    const placeholder = document.createElement('div');\r\n    placeholder.className = AnimatedCounter.BASE_CLASS + '-decimal-placeholder';\r\n\r\n    const animatedSuper = new AnimatedSuper();\r\n    animatedSuper.container.className = AnimatedCounter.BASE_CLASS + '-decimal-wrapper';\r\n\r\n    item.append(placeholder, animatedSuper.container);\r\n\r\n    this.container.append(item);\r\n\r\n    return this.decimals[index] = {container: item, placeholder, animatedSuper};\r\n  }\r\n\r\n  clear(number: number) {\r\n    if(this.clearTimeout) clearTimeout(this.clearTimeout);\r\n\r\n    const decimals = ('' + number).length;\r\n    if(decimals >= this.decimals.length) {\r\n      return;\r\n    }\r\n\r\n    this.clearTimeout = window.setTimeout(() => {\r\n      const byDecimal = this.decimals.splice(decimals, this.decimals.length - decimals);\r\n      byDecimal.forEach((decimal) => {\r\n        decimal.container.remove();\r\n      });\r\n    }, AnimatedSuper.DURATION);\r\n  }\r\n\r\n  /* prepareNumber(number: number) {\r\n    const decimals = ('' + number).length;\r\n    if(this.decimals.length < decimals) {\r\n      for(let i = this.decimals.length; i < decimals; ++i) {\r\n        this.getDecimal(i);\r\n      }\r\n    }\r\n  } */\r\n\r\n  hideLeft(number: number) {\r\n    const decimals = ('' + number).length;\r\n    const byDecimal = this.decimals.slice(decimals);//this.decimals.splice(deleteCount, this.decimals.length - deleteCount);\r\n    byDecimal.forEach((decimal) => {\r\n      const previousDecimalNumber = +decimal.placeholder.innerText || 0;\r\n      const row = decimal.animatedSuper.getRow(AnimatedCounter.EMPTY_INDEX, true);\r\n      decimal.animatedSuper.animate(AnimatedCounter.EMPTY_INDEX, previousDecimalNumber, this.reverse ? number < this.previousNumber : number > this.previousNumber, true);\r\n    });\r\n\r\n    this.clear(number);\r\n  }\r\n\r\n  setCount(number: number) {\r\n    //this.prepareNumber(number);\r\n\r\n    const previousByDecimal = Array.from('' + this.previousNumber).map(n => +n);\r\n    const byDecimal = Array.from('' + number).map(n => +n);\r\n    byDecimal.forEach((decimalNumber, idx) => {\r\n      const decimal = this.getDecimal(idx);\r\n      //const row = decimal.animatedSuper.getRow(number, true);\r\n      const row = decimal.animatedSuper.getRow(decimalNumber, true);\r\n      const previousDecimalNumber = previousByDecimal[idx] ?? AnimatedCounter.EMPTY_INDEX;\r\n      row.innerText = decimal.placeholder.innerText = '' + decimalNumber;\r\n      //decimal.animatedSuper.animate(number, this.previousNumber, this.reverse ? number < this.previousNumber : number > this.previousNumber, true);\r\n      decimal.animatedSuper.animate(decimalNumber, previousDecimalNumber, this.reverse ? number < this.previousNumber : number > this.previousNumber, true);\r\n    });\r\n\r\n    this.hideLeft(number);\r\n    //this.clear(number);\r\n    this.previousNumber = number;\r\n  }\r\n}\r\n\r\nexport default class ChatPinnedMessage {\r\n  public static LOAD_COUNT = 50;\r\n  public static LOAD_OFFSET = 5;\r\n\r\n  public pinnedMessageContainer: PinnedContainer;\r\n  public pinnedMessageBorder: PinnedMessageBorder;\r\n\r\n  public pinnedMaxMid = 0;\r\n  public pinnedMid = 0;\r\n  public pinnedIndex = -1;\r\n  public wasPinnedIndex = 0;\r\n  public wasPinnedMediaIndex = 0;\r\n  \r\n  public locked = false;\r\n  public waitForScrollBottom = false;\r\n\r\n  public count = 0;\r\n  public mids: number[] = [];\r\n  public offsetIndex = 0;\r\n\r\n  public loading = false;\r\n  public loadedBottom = false;\r\n  public loadedTop = false;\r\n\r\n  public animatedSubtitle: AnimatedSuper;\r\n  public animatedMedia: AnimatedSuper;\r\n  public animatedCounter: AnimatedCounter;\r\n\r\n  public listenerSetter: ListenerSetter;\r\n  public scrollDownListenerSetter: ListenerSetter = null;\r\n\r\n  public hidden = false;\r\n\r\n  public getCurrentIndexPromise: Promise<any> = null;\r\n  public btnOpen: HTMLButtonElement;\r\n  \r\n  public setPinnedMessage: () => void;\r\n\r\n  private isStatic = false;\r\n\r\n  private debug = false;\r\n  \r\n  constructor(private topbar: ChatTopbar, private chat: Chat, private appMessagesManager: AppMessagesManager, private appPeersManager: AppPeersManager) {\r\n    this.listenerSetter = new ListenerSetter();\r\n\r\n    const dAC = new ReplyContainer('pinned-message');\r\n    this.pinnedMessageContainer = new PinnedContainer({\r\n      topbar, \r\n      chat, \r\n      listenerSetter: this.listenerSetter, \r\n      className: 'message', \r\n      divAndCaption: dAC, \r\n      onClose: async() => {\r\n        if(appPeersManager.canPinMessage(this.topbar.peerId)) {\r\n          new PopupPinMessage(this.topbar.peerId, this.pinnedMid, true);\r\n        } else {\r\n          new PopupPinMessage(this.topbar.peerId, 0, true);\r\n        }\r\n\r\n        return false;\r\n      }\r\n    });\r\n\r\n    this.pinnedMessageBorder = new PinnedMessageBorder();\r\n    dAC.border.replaceWith(this.pinnedMessageBorder.render(1, 0));\r\n\r\n    this.animatedSubtitle = new AnimatedSuper();\r\n    dAC.subtitle.append(this.animatedSubtitle.container);\r\n\r\n    this.animatedMedia = new AnimatedSuper();\r\n    this.animatedMedia.container.classList.add('pinned-message-media-container');\r\n    dAC.content.prepend(this.animatedMedia.container);\r\n\r\n    this.animatedCounter = new AnimatedCounter(true);\r\n    dAC.title.append(i18n('PinnedMessage'), ' ', this.animatedCounter.container);\r\n\r\n    const btnClose = this.pinnedMessageContainer.btnClose.cloneNode(true) as HTMLElement;\r\n    this.pinnedMessageContainer.attachOnCloseEvent(btnClose);\r\n    dAC.container.prepend(btnClose);\r\n\r\n    this.btnOpen = ButtonIcon('pinlist pinned-container-close pinned-message-pinlist', {noRipple: true});\r\n\r\n    this.pinnedMessageContainer.wrapperUtils.prepend(this.btnOpen);\r\n\r\n    attachClickEvent(this.btnOpen, (e) => {\r\n      cancelEvent(e);\r\n      this.topbar.openPinned(true);\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    this.listenerSetter.add(rootScope)('peer_pinned_messages', ({peerId}) => {\r\n      if(peerId === this.topbar.peerId) {\r\n        //this.wasPinnedIndex = 0;\r\n        //setTimeout(() => {\r\n          if(this.hidden) {\r\n            this.pinnedMessageContainer.toggle(this.hidden = false);\r\n          }\r\n\r\n          this.loadedTop = this.loadedBottom = false;\r\n          this.pinnedIndex = -1;\r\n          this.pinnedMid = 0;\r\n          this.count = 0;\r\n          this.mids = [];\r\n          this.offsetIndex = 0;\r\n          this.pinnedMaxMid = 0;\r\n          this.setCorrectIndex(0);\r\n        //}, 300);\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope)('peer_pinned_hidden', ({peerId}) => {\r\n      if(peerId === this.topbar.peerId) {\r\n        this.pinnedMessageContainer.toggle(this.hidden = true);\r\n      }\r\n    });\r\n\r\n    // * 200 - no lags\r\n    // * 100 - need test\r\n    this.setPinnedMessage = debounce(() => this._setPinnedMessage(), 100, true, true);\r\n\r\n    this.isStatic = this.chat.type === 'discussion';\r\n  }\r\n\r\n  public destroy() {\r\n    this.pinnedMessageContainer.divAndCaption.container.remove();\r\n    this.pinnedMessageContainer.toggle(true);\r\n    this.listenerSetter.removeAll();\r\n    this.unsetScrollDownListener(false);\r\n  }\r\n\r\n  public setCorrectIndex(lastScrollDirection?: number) {\r\n    if(this.isStatic) return;\r\n    //return;\r\n\r\n    if(this.locked || this.hidden/*  || this.chat.setPeerPromise || this.chat.bubbles.messagesQueuePromise */) {\r\n      return;\r\n    }\r\n\r\n    if((this.loadedBottom || this.loadedTop) && !this.count) {\r\n      return;\r\n    }\r\n\r\n    //const perf = performance.now();\r\n    let el = this.chat.bubbles.getBubbleByPoint('bottom');\r\n    //this.chat.log('[PM]: setCorrectIndex: get last element perf:', performance.now() - perf, el);\r\n    if(!el) return;\r\n\r\n    //return;\r\n\r\n    const mid = el.dataset.mid;\r\n    if(el && mid !== undefined) {\r\n      //this.chat.log('[PM]: setCorrectIndex will test mid:', mid);\r\n      this.testMid(+mid, lastScrollDirection);\r\n    }\r\n  }\r\n\r\n  public testMid(mid: number, lastScrollDirection?: number) {\r\n    if(this.isStatic) return;\r\n    \r\n    //if(lastScrollDirection !== undefined) return;\r\n    if(this.hidden) return;\r\n\r\n    //this.chat.log('[PM]: testMid', mid);\r\n\r\n    let currentIndex: number = this.mids.findIndex(_mid => _mid <= mid);\r\n    if(currentIndex !== -1 && !this.isNeededMore(currentIndex)) {\r\n      currentIndex += this.offsetIndex;\r\n    } else if(this.loadedTop && mid < this.mids[this.mids.length - 1]) {\r\n      //currentIndex = 0;\r\n      currentIndex = this.mids.length - 1 + this.offsetIndex;\r\n    } else {\r\n      if(!this.getCurrentIndexPromise) {\r\n        this.getCurrentIndexPromise = this.getCurrentIndex(mid, lastScrollDirection !== undefined);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    //const idx = Math.max(0, this.mids.indexOf(mid));\r\n\r\n    /* if(currentIndex === this.count) {\r\n      currentIndex = 0;\r\n    } */\r\n\r\n    //this.chat.log('[PM]: testMid: pinned currentIndex', currentIndex, mid);\r\n\r\n    const changed = this.pinnedIndex !== currentIndex;\r\n    if(changed) {\r\n      if(this.waitForScrollBottom && lastScrollDirection !== undefined) {\r\n        if(this.pinnedIndex === 0 || this.pinnedIndex > currentIndex) { // если не скроллил вниз и пытается поставить нижний пиннед - выйти\r\n          return;\r\n        }\r\n      }\r\n\r\n      this.pinnedIndex = currentIndex;\r\n      this.pinnedMid = this.mids.find(_mid => _mid <= mid) || this.mids[this.mids.length - 1];\r\n      this.setPinnedMessage();\r\n    }\r\n  }\r\n\r\n  private isNeededMore(currentIndex: number) {\r\n    return (this.count > ChatPinnedMessage.LOAD_COUNT && \r\n      (\r\n        (!this.loadedBottom && currentIndex <= ChatPinnedMessage.LOAD_OFFSET) || \r\n        (!this.loadedTop && (this.count - 1 - currentIndex) <= ChatPinnedMessage.LOAD_OFFSET)\r\n      )\r\n    );\r\n  }\r\n\r\n  private async getCurrentIndex(mid: number, correctAfter = true) {\r\n    if(this.loading) return;\r\n    this.loading = true;\r\n\r\n    try {\r\n      let gotRest = false;\r\n      const promises = [\r\n        this.appMessagesManager.getSearch({\r\n          peerId: this.topbar.peerId, \r\n          inputFilter: {_: 'inputMessagesFilterPinned'}, \r\n          maxId: mid, \r\n          limit: ChatPinnedMessage.LOAD_COUNT, \r\n          backLimit: ChatPinnedMessage.LOAD_COUNT\r\n        })\r\n        .then(r => {\r\n          gotRest = true;\r\n          return r;\r\n        })\r\n      ];\r\n  \r\n      if(!this.pinnedMaxMid) {\r\n        const promise = this.appMessagesManager.getPinnedMessage(this.topbar.peerId).then(p => {\r\n          if(!p.maxId) return;\r\n          this.pinnedMaxMid = p.maxId;\r\n\r\n          if(!gotRest && correctAfter) {\r\n            this.mids = [this.pinnedMaxMid];\r\n            this.count = p.count;\r\n            this.pinnedIndex = 0;\r\n            this.pinnedMid = this.mids[0];\r\n            this.setPinnedMessage();\r\n            //this.pinnedMessageContainer.toggle(false);\r\n          }\r\n        });\r\n  \r\n        promises.push(promise as any);\r\n      }\r\n      \r\n      const result = (await Promise.all(promises))[0];\r\n  \r\n      let backLimited = result.history.findIndex(message => message.mid <= mid);\r\n      if(backLimited === -1) {\r\n        backLimited = result.history.length;\r\n      }/*  else {\r\n        backLimited -= 1;\r\n      } */\r\n      \r\n      this.offsetIndex = result.offset_id_offset ? result.offset_id_offset - backLimited : 0;\r\n      this.mids = result.history.map(message => message.mid).slice();\r\n      this.count = result.count;\r\n\r\n      if(!this.count) {\r\n        this.pinnedMessageContainer.toggle(true);\r\n      }\r\n  \r\n      this.loadedTop = (this.offsetIndex + this.mids.length) === this.count;\r\n      this.loadedBottom = !this.offsetIndex;\r\n  \r\n      this.debug && this.chat.log('[PM]: getCurrentIndex result:', mid, result, backLimited, this.offsetIndex, this.loadedTop, this.loadedBottom);\r\n    } catch(err) {\r\n      this.chat.log.error('[PM]: getCurrentIndex error', err);\r\n    }\r\n    \r\n    this.loading = false;\r\n\r\n    if(this.locked) {\r\n      this.testMid(mid);\r\n    } else if(correctAfter) {\r\n      this.setCorrectIndex(0);\r\n    }\r\n\r\n    this.getCurrentIndexPromise = null;\r\n    //return result.offset_id_offset || 0;\r\n  }\r\n\r\n  public setScrollDownListener() {\r\n    this.waitForScrollBottom = true;\r\n\r\n    if(!this.scrollDownListenerSetter) {\r\n      this.scrollDownListenerSetter = new ListenerSetter();\r\n      handleScrollSideEvent(this.chat.bubbles.scrollable.container, 'bottom', () => {\r\n        this.unsetScrollDownListener();\r\n      }, this.scrollDownListenerSetter);\r\n    }\r\n  }\r\n\r\n  public unsetScrollDownListener(refreshPosition = true) {\r\n    this.waitForScrollBottom = false;\r\n\r\n    if(this.scrollDownListenerSetter) {\r\n      this.scrollDownListenerSetter.removeAll();\r\n      this.scrollDownListenerSetter = null;\r\n    }\r\n\r\n    if(refreshPosition) {\r\n      this.setCorrectIndex(0);\r\n    }\r\n  }\r\n\r\n  public async handleFollowingPinnedMessage() {\r\n    this.locked = true;\r\n\r\n    this.debug && this.chat.log('[PM]: handleFollowingPinnedMessage');\r\n    try {\r\n      this.setScrollDownListener();\r\n\r\n      const setPeerPromise = this.chat.setPeerPromise;\r\n      if(setPeerPromise instanceof Promise) {\r\n        await setPeerPromise;\r\n      }\r\n  \r\n      //await this.chat.bubbles.scrollable.scrollLockedPromise;\r\n      await getHeavyAnimationPromise();\r\n\r\n      if(this.getCurrentIndexPromise) {\r\n        await this.getCurrentIndexPromise;\r\n      }\r\n\r\n      this.debug && this.chat.log('[PM]: handleFollowingPinnedMessage: unlock');\r\n      this.locked = false;\r\n\r\n      /* // подождём, пока скролл остановится\r\n      setTimeout(() => {\r\n        this.chat.log('[PM]: handleFollowingPinnedMessage: unlock');\r\n        this.locked = false;\r\n      }, 50); */\r\n    } catch(err) {\r\n      this.chat.log.error('[PM]: handleFollowingPinnedMessage error:', err);\r\n\r\n      this.locked = false;\r\n      this.waitForScrollBottom = false;\r\n      this.setCorrectIndex(0);\r\n    }\r\n  }\r\n\r\n  public async followPinnedMessage(mid: number) {\r\n    const message = this.chat.getMessage(mid);\r\n    if(message && !message.deleted) {\r\n      this.chat.setMessageId(mid);\r\n      (this.chat.setPeerPromise || Promise.resolve()).then(() => { // * debounce fast clicker\r\n        this.handleFollowingPinnedMessage();\r\n        this.testMid(this.pinnedIndex >= (this.count - 1) ? this.pinnedMaxMid : mid - 1);\r\n      });\r\n    }\r\n  }\r\n\r\n  public async _setPinnedMessage() {\r\n    /////this.log('setting pinned message', message);\r\n    //return;\r\n    /* const promise: Promise<any> = this.chat.setPeerPromise || this.chat.bubbles.messagesQueuePromise || Promise.resolve();\r\n    Promise.all([\r\n      promise\r\n    ]).then(() => { */\r\n      //const mids = results[0];\r\n      const count = this.count;\r\n      if(count) {\r\n        const pinnedIndex = this.pinnedIndex;\r\n        const message = this.chat.getMessage(this.pinnedMid);\r\n\r\n        //this.animatedCounter.prepareNumber(count);\r\n\r\n        //setTimeout(() => {\r\n          const isLast = pinnedIndex === 0;\r\n          this.animatedCounter.container.classList.toggle('is-last', isLast);\r\n          //SetTransition(this.animatedCounter.container, 'is-last', isLast, AnimatedSuper.DURATION);\r\n          if(!isLast) {\r\n            this.animatedCounter.setCount(count - pinnedIndex);\r\n          }\r\n        //}, 100);\r\n\r\n        //this.pinnedMessageContainer.fill(undefined, message.message, message);\r\n        this.pinnedMessageContainer.toggle(false);\r\n\r\n        const fromTop = pinnedIndex > this.wasPinnedIndex;\r\n\r\n        this.debug && this.chat.log('[PM]: setPinnedMessage: fromTop', fromTop, pinnedIndex, this.wasPinnedIndex);\r\n\r\n        const writeTo = this.animatedSubtitle.getRow(pinnedIndex);\r\n        const writeMediaTo = this.animatedMedia.getRow(pinnedIndex);\r\n        writeMediaTo.classList.add('pinned-message-media');\r\n        //writeMediaTo.innerHTML = writeMediaTo.style.cssText = writeMediaTo.dataset.docId = '';\r\n        const loadPromises: Promise<any>[] = [];\r\n        const isMediaSet = wrapReplyDivAndCaption({\r\n          title: undefined,\r\n          titleEl: null,\r\n          subtitle: message.message,\r\n          subtitleEl: writeTo,\r\n          message,\r\n          mediaEl: writeMediaTo,\r\n          loadPromises\r\n        });\r\n\r\n        await Promise.all(loadPromises);\r\n\r\n        this.pinnedMessageContainer.divAndCaption.container.classList.toggle('is-media', isMediaSet);\r\n\r\n        //if(this.wasPinnedIndex !== this.pinnedIndex) {\r\n          this.animatedSubtitle.animate(pinnedIndex, this.wasPinnedIndex);\r\n          if(isMediaSet) {\r\n            this.animatedMedia.animate(pinnedIndex, this.wasPinnedMediaIndex); // * wasPinnedMediaIndex из-за того, что блок меняется с другим алгоритмом\r\n            this.wasPinnedMediaIndex = pinnedIndex;\r\n          } else {\r\n            this.animatedMedia.clearRows();\r\n          }\r\n        //}\r\n\r\n        this.pinnedMessageBorder.render(count, count - pinnedIndex - 1);\r\n        this.wasPinnedIndex = pinnedIndex;\r\n        this.pinnedMessageContainer.divAndCaption.container.dataset.mid = '' + message.mid;\r\n      } else {\r\n        this.pinnedMessageContainer.toggle(true);\r\n        this.wasPinnedIndex = 0;\r\n      }\r\n\r\n      this.pinnedMessageContainer.divAndCaption.container.classList.toggle('is-many', this.count > 1);\r\n    //});\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type ListenerSetter from \"../listenerSetter\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\r\n\r\nexport default function handleScrollSideEvent(elem: HTMLElement, side: 'top' | 'bottom', callback: () => void, listenerSetter: ListenerSetter) {\r\n  if(IS_TOUCH_SUPPORTED) {\r\n    let lastY: number;\r\n    const options = {passive: true};\r\n    listenerSetter.add(elem)('touchstart', (e) => {\r\n      if(e.touches.length > 1) {\r\n        onTouchEnd();\r\n        return;\r\n      }\r\n\r\n      lastY = e.touches[0].clientY;\r\n\r\n      listenerSetter.add(elem)('touchmove', onTouchMove, options);\r\n      listenerSetter.add(elem)('touchend', onTouchEnd, options);\r\n    }, options);\r\n\r\n    const onTouchMove = (e: TouchEvent) => {\r\n      const clientY = e.touches[0].clientY;\r\n\r\n      const isDown = clientY < lastY;\r\n      if(side === 'bottom' && isDown) callback();\r\n      else if(side === 'top' && !isDown) callback();\r\n      lastY = clientY;\r\n      //alert('isDown: ' + !!isDown);\r\n    };\r\n    \r\n    const onTouchEnd = () => {\r\n      listenerSetter.removeManual(elem, 'touchmove', onTouchMove, options);\r\n      listenerSetter.removeManual(elem, 'touchend', onTouchEnd, options);\r\n    };\r\n  } else {\r\n    listenerSetter.add(elem)('wheel', (e) => {\r\n      const isDown = e.deltaY > 0;\r\n      //this.log('wheel', e, isDown);\r\n      if(side === 'bottom' && isDown) callback();\r\n      else if(side === 'top' && !isDown) callback();\r\n    }, {passive: true});\r\n  }\r\n}\r\n","import IS_WEBRTC_SUPPORTED from \"./webrtcSupport\";\n\nconst IS_GROUP_CALL_SUPPORTED = IS_WEBRTC_SUPPORTED;\n\nexport default IS_GROUP_CALL_SUPPORTED;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport tsNow from \"../../helpers/tsNow\";\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\nimport { LangPackKey } from \"../../lib/langPack\";\nimport { MUTE_UNTIL } from \"../../lib/mtproto/mtproto_config\";\nimport RadioField from \"../radioField\";\nimport Row, { RadioFormFromRows } from \"../row\";\nimport { SettingSection } from \"../sidebarLeft\";\nimport PopupPeer from \"./peer\";\n\nexport default class PopupMute extends PopupPeer {\n  constructor(peerId: PeerId) {\n    super('popup-mute', {\n      peerId,\n      titleLangKey: 'Notifications',\n      buttons: [{\n        langKey: 'ChatList.Context.Mute',\n        callback: () => {\n          appMessagesManager.mutePeer(peerId, time === -1 ? MUTE_UNTIL : tsNow(true) + time);\n        }\n      }],\n      body: true\n    });\n\n    const ONE_HOUR = 3600;\n    const times: {time: number, langKey: LangPackKey}[] = [{\n      time: ONE_HOUR, \n      langKey: 'ChatList.Mute.1Hour'\n    }, {\n      time: ONE_HOUR * 4, \n      langKey: 'ChatList.Mute.4Hours'\n    }, {\n      time: ONE_HOUR * 8, \n      langKey: 'ChatList.Mute.8Hours'\n    }, {\n      time: ONE_HOUR * 24, \n      langKey: 'ChatList.Mute.1Day'\n    }, {\n      time: ONE_HOUR * 24 * 3,\n      langKey: 'ChatList.Mute.3Days'\n    }, {\n      time: -1,\n      langKey: 'ChatList.Mute.Forever'\n    }];\n  \n    const name = 'mute-time';\n    const rows = times.map((time) => {\n      const row = new Row({\n        radioField: new RadioField({\n          langKey: time.langKey, \n          name, \n          value: '' + time.time\n        })\n      });\n\n      return row;\n    });\n\n    let time: number;\n    const radioForm = RadioFormFromRows(rows, (value) => {\n      time = +value;\n    });\n\n    rows[rows.length - 1].radioField.checked = true;\n\n    const section = new SettingSection({noShadow: true, noDelimiter: true});\n    section.content.append(radioForm);\n    this.body.append(section.container);\n\n    this.show();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { AppNotificationsManager } from \"../../lib/appManagers/appNotificationsManager\";\nimport type { AppChatsManager, Channel } from \"../../lib/appManagers/appChatsManager\";\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\nimport type { AppPeersManager } from \"../../lib/appManagers/appPeersManager\";\nimport type { AppSidebarRight } from \"../sidebarRight\";\nimport type { AppProfileManager } from \"../../lib/appManagers/appProfileManager\";\nimport type { AppUsersManager } from \"../../lib/appManagers/appUsersManager\";\nimport type { AppGroupCallsManager, MyGroupCall } from \"../../lib/appManagers/appGroupCallsManager\";\nimport type Chat from \"./chat\";\nimport { RIGHT_COLUMN_ACTIVE_CLASSNAME } from \"../sidebarRight\";\nimport mediaSizes, { ScreenSize } from \"../../helpers/mediaSizes\";\nimport { IS_SAFARI } from \"../../environment/userAgent\";\nimport rootScope from \"../../lib/rootScope\";\nimport AvatarElement from \"../avatar\";\nimport Button from \"../button\";\nimport ButtonIcon from \"../buttonIcon\";\nimport ButtonMenuToggle from \"../buttonMenuToggle\";\nimport ChatAudio from \"./audio\";\nimport ChatPinnedMessage from \"./pinnedMessage\";\nimport { ButtonMenuItemOptions } from \"../buttonMenu\";\nimport ListenerSetter from \"../../helpers/listenerSetter\";\nimport appStateManager from \"../../lib/appManagers/appStateManager\";\nimport PopupDeleteDialog from \"../popups/deleteDialog\";\nimport appNavigationController from \"../appNavigationController\";\nimport { LEFT_COLUMN_ACTIVE_CLASSNAME } from \"../sidebarLeft\";\nimport PeerTitle from \"../peerTitle\";\nimport { i18n } from \"../../lib/langPack\";\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\nimport blurActiveElement from \"../../helpers/dom/blurActiveElement\";\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\nimport findUpTag from \"../../helpers/dom/findUpTag\";\nimport { toast, toastNew } from \"../toast\";\nimport replaceContent from \"../../helpers/dom/replaceContent\";\nimport { ChatFull, Chat as MTChat, GroupCall } from \"../../layer\";\nimport PopupPickUser from \"../popups/pickUser\";\nimport PopupPeer from \"../popups/peer\";\nimport generateVerifiedIcon from \"../generateVerifiedIcon\";\nimport { fastRaf } from \"../../helpers/schedulers\";\nimport AppEditContactTab from \"../sidebarRight/tabs/editContact\";\nimport appMediaPlaybackController from \"../appMediaPlaybackController\";\nimport { NULL_PEER_ID } from \"../../lib/mtproto/mtproto_config\";\nimport IS_GROUP_CALL_SUPPORTED from \"../../environment/groupCallSupport\";\nimport IS_CALL_SUPPORTED from \"../../environment/callSupport\";\nimport { CallType } from \"../../lib/calls/types\";\nimport PopupMute from \"../popups/mute\";\n\ntype ButtonToVerify = {element?: HTMLElement, verify: () => boolean};\n\nexport default class ChatTopbar {\n  public container: HTMLDivElement;\n  private btnBack: HTMLButtonElement;\n  private chatInfo: HTMLDivElement;\n  private avatarElement: AvatarElement;\n  private title: HTMLDivElement;\n  private subtitle: HTMLDivElement;\n  private chatUtils: HTMLDivElement;\n  private btnJoin: HTMLButtonElement;\n  private btnPinned: HTMLButtonElement;\n  private btnCall: HTMLButtonElement;\n  private btnGroupCall: HTMLButtonElement;\n  private btnMute: HTMLButtonElement;\n  private btnSearch: HTMLButtonElement;\n  private btnMore: HTMLElement;\n  \n  private chatAudio: ChatAudio;\n  public pinnedMessage: ChatPinnedMessage;\n\n  private setUtilsRAF: number;\n  public peerId: PeerId;\n  private wasPeerId: PeerId;\n  private setPeerStatusInterval: number;\n\n  public listenerSetter: ListenerSetter;\n\n  private menuButtons: (ButtonMenuItemOptions & {verify: () => boolean})[];\n  private buttonsToVerify: ButtonToVerify[];\n  private chatInfoContainer: HTMLDivElement;\n\n  constructor(\n    private chat: Chat, \n    private appSidebarRight: AppSidebarRight, \n    private appMessagesManager: AppMessagesManager, \n    private appPeersManager: AppPeersManager, \n    private appChatsManager: AppChatsManager, \n    private appNotificationsManager: AppNotificationsManager,\n    private appProfileManager: AppProfileManager,\n    private appUsersManager: AppUsersManager,\n    private appGroupCallsManager: AppGroupCallsManager\n  ) {\n    this.listenerSetter = new ListenerSetter();\n\n    this.menuButtons = [];\n    this.buttonsToVerify = [];\n  }\n\n  public construct() {\n    //this.chat.log.error('Topbar construction');\n\n    this.container = document.createElement('div');\n    this.container.classList.add('sidebar-header', 'topbar');\n    this.container.dataset.floating = '0';\n\n    this.btnBack = ButtonIcon('left sidebar-close-button', {noRipple: true});\n\n    // * chat info section\n    this.chatInfoContainer = document.createElement('div');\n    this.chatInfoContainer.classList.add('chat-info-container');\n\n    this.chatInfo = document.createElement('div');\n    this.chatInfo.classList.add('chat-info');\n\n    const person = document.createElement('div');\n    person.classList.add('person');\n\n    const content = document.createElement('div');\n    content.classList.add('content');\n\n    const top = document.createElement('div');\n    top.classList.add('top');\n\n    this.title = document.createElement('div');\n    this.title.classList.add('user-title');\n\n    top.append(this.title);\n\n    const bottom = document.createElement('div');\n    bottom.classList.add('bottom');\n\n    if(this.subtitle) {\n      bottom.append(this.subtitle);\n    }\n\n    content.append(top, bottom);\n    if(this.avatarElement) {\n      person.append(this.avatarElement);\n    }\n\n    person.append(content);\n    this.chatInfo.append(person);\n\n    // * chat utils section\n    this.chatUtils = document.createElement('div');\n    this.chatUtils.classList.add('chat-utils');\n\n    this.chatAudio = new ChatAudio(this, this.chat, this.appMessagesManager);\n\n    if(this.menuButtons.length) {\n      this.btnMore = ButtonMenuToggle({listenerSetter: this.listenerSetter}, 'bottom-left', this.menuButtons, this.verifyButtons);\n    }\n\n    this.chatUtils.append(...[\n      // this.chatAudio ? this.chatAudio.divAndCaption.container : null, \n      this.pinnedMessage ? this.pinnedMessage.pinnedMessageContainer.divAndCaption.container : null, \n      this.btnJoin, \n      this.btnPinned, \n      this.btnCall, \n      this.btnGroupCall, \n      this.btnMute, \n      this.btnSearch, \n      this.btnMore\n    ].filter(Boolean));\n\n    this.pushButtonToVerify(this.btnCall, this.verifyCallButton.bind(this, 'voice'));\n    this.pushButtonToVerify(this.btnGroupCall, this.verifyVideoChatButton);\n\n    this.chatInfoContainer.append(this.btnBack, this.chatInfo, this.chatUtils);\n    this.container.append(this.chatInfoContainer);\n\n    if(this.chatAudio) {\n      // this.container.append(this.chatAudio.divAndCaption.container, this.chatUtils);\n      this.container.append(this.chatAudio.divAndCaption.container);\n    }\n\n    // * construction end\n\n    // * fix topbar overflow section\n\n    this.listenerSetter.add(window)('resize', this.onResize);\n    this.listenerSetter.add(mediaSizes)('changeScreen', this.onChangeScreen);\n\n    attachClickEvent(this.container, (e) => {\n      const container = findUpClassName(e.target, 'pinned-container');\n      blurActiveElement();\n      if(container) {\n        cancelEvent(e);\n\n        if(findUpClassName(e.target, 'progress-line')) {\n          return;\n        }\n        \n        const mid = +container.dataset.mid;\n        if(container.classList.contains('pinned-message')) {\n          //if(!this.pinnedMessage.locked) {\n            this.pinnedMessage.followPinnedMessage(mid);\n          //}\n        } else {\n          const peerId = container.dataset.peerId.toPeerId();\n          const searchContext = appMediaPlaybackController.getSearchContext();\n          this.chat.appImManager.setInnerPeer({\n            peerId, \n            lastMsgId: mid, \n            type: searchContext.isScheduled ? 'scheduled' : (searchContext.threadId ? 'discussion' : undefined), \n            threadId: searchContext.threadId\n          });\n        }\n      } else {\n        if(mediaSizes.activeScreen === ScreenSize.medium && document.body.classList.contains(LEFT_COLUMN_ACTIVE_CLASSNAME)) {\n          onBtnBackClick();\n        } else if(findUpTag(e.target, 'AVATAR-ELEMENT')) {\n          this.appSidebarRight.toggleSidebar(!document.body.classList.contains(RIGHT_COLUMN_ACTIVE_CLASSNAME));\n        } else {\n          this.appSidebarRight.toggleSidebar(true);\n        }\n      }\n    }, {listenerSetter: this.listenerSetter});\n\n    const onBtnBackClick = (e?: Event) => {\n      if(e) {\n        cancelEvent(e);\n      }\n\n      //const item = appNavigationController.findItemByType('chat');\n      // * return manually to chat by arrow, since can't get back to\n      if(mediaSizes.activeScreen === ScreenSize.medium && document.body.classList.contains(LEFT_COLUMN_ACTIVE_CLASSNAME)) {\n        this.chat.appImManager.setPeer({peerId: this.peerId});\n      } else {\n        const isFirstChat = this.chat.appImManager.chats.indexOf(this.chat) === 0;\n        appNavigationController.back(isFirstChat ? 'im' : 'chat');\n        /* return;\n\n        if(mediaSizes.activeScreen === ScreenSize.medium && !appNavigationController.findItemByType('chat')) {\n          this.chat.appImManager.setPeer(0);\n          blurActiveElement();\n        } else {\n          appNavigationController.back('chat');\n        } */\n      }\n    };\n\n    attachClickEvent(this.btnBack, onBtnBackClick, {listenerSetter: this.listenerSetter});\n  }\n\n  private pushButtonToVerify(element: HTMLElement, verify: () => boolean) {\n    if(!element) {\n      return;\n    }\n    \n    this.buttonsToVerify.push({element, verify});\n  }\n\n  private verifyButtons = (e?: Event) => {\n    const isMenuOpen = !!e || !!(this.btnMore && this.btnMore.classList.contains('menu-open'));\n\n    e && cancelEvent(e);\n\n    const verifyButtons = (buttons: ButtonToVerify[]) => {\n      buttons.forEach(button => {\n        button.element.classList.toggle('hide', !button.verify());\n      });\n    };\n\n    if(isMenuOpen) {\n      verifyButtons(this.menuButtons);\n\n      // delete button\n      this.menuButtons[this.menuButtons.length - 1].element.lastChild.replaceWith(i18n(this.appPeersManager.getDeleteButtonText(this.peerId)));\n    }\n\n    verifyButtons(this.buttonsToVerify);\n  };\n\n  private verifyVideoChatButton = (type?: 'group' | 'broadcast') => {\n    if(!IS_GROUP_CALL_SUPPORTED || this.peerId.isUser()) return false;\n\n    const currentGroupCall = this.appGroupCallsManager.groupCall;\n    const chatId = this.peerId.toChatId();\n    if(currentGroupCall?.chatId === chatId) {\n      return false;\n    }\n\n    if(type) {\n      if((this.peerId.isBroadcast() && type === 'group') || \n        (this.peerId.isAnyGroup() && type === 'broadcast')) {\n        return false;\n      }\n    }\n\n    const chat = this.appChatsManager.getChatTyped(chatId);\n    return (chat as MTChat.chat).pFlags?.call_active || this.appChatsManager.hasRights(chatId, 'manage_call');\n  };\n\n  private verifyCallButton = (type?: CallType) => {\n    if(!IS_CALL_SUPPORTED || !this.peerId.isUser()) return false;\n    const userId = this.peerId.toUserId();\n    const userFull = this.appProfileManager.getCachedFullUser(userId);\n\n    return !!userFull && !!(type === 'voice' ? userFull.pFlags.phone_calls_available : userFull.pFlags.video_calls_available);\n  };\n\n  public constructUtils() {\n    this.menuButtons = [{\n      icon: 'search',\n      text: 'Search',\n      onClick: () => {\n        this.chat.initSearch();\n      },\n      verify: () => mediaSizes.isMobile\n    }, /* {\n      icon: 'pinlist',\n      text: 'Pinned Messages',\n      onClick: () => this.openPinned(false),\n      verify: () => mediaSizes.isMobile\n    }, */{\n      icon: 'mute',\n      text: 'ChatList.Context.Mute',\n      onClick: this.onMuteClick,\n      verify: () => this.chat.type === 'chat' && rootScope.myId !== this.peerId && !this.appNotificationsManager.isPeerLocalMuted(this.peerId, false)\n    }, {\n      icon: 'unmute',\n      text: 'ChatList.Context.Unmute',\n      onClick: () => {\n        this.appMessagesManager.togglePeerMute(this.peerId);\n      },\n      verify: () => this.chat.type === 'chat' && rootScope.myId !== this.peerId && this.appNotificationsManager.isPeerLocalMuted(this.peerId, false)\n    }, {\n      icon: 'comments',\n      text: 'ViewDiscussion',\n      onClick: () => {\n        const middleware = this.chat.bubbles.getMiddleware();\n        Promise.resolve(this.appProfileManager.getChannelFull(this.peerId.toChatId())).then(channelFull => {\n          if(middleware() && channelFull.linked_chat_id) {\n            this.chat.appImManager.setInnerPeer({\n              peerId: channelFull.linked_chat_id.toPeerId(true)\n            });\n          }\n        });\n      },\n      verify: () => {\n        const chatFull = this.appProfileManager.getCachedFullChat(this.peerId.toChatId());\n        return this.chat.type === 'chat' && !!(chatFull as ChatFull.channelFull)?.linked_chat_id;\n      }\n    }, {\n      icon: 'phone',\n      text: 'Call',\n      onClick: this.onCallClick.bind(this, 'voice'),\n      verify: this.verifyCallButton.bind(this, 'voice')\n    }, {\n      icon: 'videocamera',\n      text: 'VideoCall',\n      onClick: this.onCallClick.bind(this, 'video'),\n      verify: this.verifyCallButton.bind(this, 'video')\n    }, {\n      icon: 'videochat',\n      text: 'PeerInfo.Action.LiveStream',\n      onClick: this.onJoinGroupCallClick,\n      verify: this.verifyVideoChatButton.bind(this, 'broadcast')\n    }, {\n      icon: 'videochat',\n      text: 'PeerInfo.Action.VoiceChat',\n      onClick: this.onJoinGroupCallClick,\n      verify: this.verifyVideoChatButton.bind(this, 'group')\n    }, {\n      icon: 'select',\n      text: 'Chat.Menu.SelectMessages',\n      onClick: () => {\n        const selection = this.chat.selection;\n        selection.toggleSelection(true, true);\n        appStateManager.getState().then(state => {\n          if(state.chatContextMenuHintWasShown) {\n            return;\n          }\n\n          const original = selection.toggleByElement.bind(selection);\n          selection.toggleByElement = (bubble) => {\n            appStateManager.pushToState('chatContextMenuHintWasShown', true);\n            toast(i18n('Chat.Menu.Hint'));\n\n            selection.toggleByElement = original;\n            selection.toggleByElement(bubble);\n          };\n        });\n      },\n      verify: () => !this.chat.selection.isSelecting && !!Object.keys(this.chat.bubbles.bubbles).length\n    }, {\n      icon: 'select',\n      text: 'Chat.Menu.ClearSelection',\n      onClick: () => {\n        this.chat.selection.cancelSelection();\n      },\n      verify: () => this.chat.selection.isSelecting\n    }, {\n      icon: 'adduser',\n      text: 'AddContact',\n      onClick: () => {\n        if(!this.appSidebarRight.isTabExists(AppEditContactTab)) {\n          const tab = new AppEditContactTab(this.appSidebarRight);\n          tab.peerId = this.peerId;\n          tab.open();\n\n          this.appSidebarRight.toggleSidebar(true);\n        }\n      },\n      verify: () => this.peerId.isUser() && !this.appPeersManager.isContact(this.peerId)\n    }, {\n      icon: 'forward',\n      text: 'ShareContact',\n      onClick: () => {\n        const contactPeerId = this.peerId;\n        new PopupPickUser({\n          peerTypes: ['dialogs', 'contacts'],\n          onSelect: (peerId) => {\n            return new Promise((resolve, reject) => {\n              new PopupPeer('', {\n                titleLangKey: 'SendMessageTitle',\n                descriptionLangKey: 'SendContactToGroupText',\n                descriptionLangArgs: [new PeerTitle({peerId, dialog: true}).element],\n                buttons: [{\n                  langKey: 'Send',\n                  callback: () => {\n                    resolve();\n\n                    this.appMessagesManager.sendContact(peerId, contactPeerId);\n                    this.chat.appImManager.setInnerPeer({peerId});\n                  }\n                }, {\n                  langKey: 'Cancel',\n                  callback: () => {\n                    reject();\n                  },\n                  isCancel: true,\n                }],\n                peerId,\n                overlayClosable: true\n              }).show();\n            });\n          },\n          placeholder: 'ShareModal.Search.Placeholder',\n          chatRightsAction: 'send_messages',\n          selfPresence: 'ChatYourSelf'\n        });\n      },\n      verify: () => rootScope.myId !== this.peerId && this.peerId.isUser() && this.appPeersManager.isContact(this.peerId) && !!this.appUsersManager.getUser(this.peerId.toUserId()).phone\n    }, {\n      icon: 'lock',\n      text: 'BlockUser',\n      onClick: () => {\n        new PopupPeer('', {\n          peerId: this.peerId,\n          titleLangKey: 'BlockUser',\n          descriptionLangKey: 'AreYouSureBlockContact2',\n          descriptionLangArgs: [new PeerTitle({peerId: this.peerId}).element],\n          buttons: [{\n            langKey: 'BlockUser',\n            isDanger: true,\n            callback: () => {\n              this.appUsersManager.toggleBlock(this.peerId, true).then(value => {\n                if(value) {\n                  toastNew({langPackKey: 'UserBlocked'});\n                }\n              });\n            }\n          }]\n        }).show();\n      },\n      verify: () => {\n        if(!this.peerId.isUser()) return false;\n        const userFull = this.appProfileManager.getCachedFullUser(this.peerId.toUserId());\n        return this.peerId !== rootScope.myId && userFull && !userFull.pFlags?.blocked;\n      }\n    }, {\n      icon: 'lockoff',\n      text: 'Unblock',\n      onClick: () => {\n        this.appUsersManager.toggleBlock(this.peerId, false).then(value => {\n          if(value) {\n            toastNew({langPackKey: 'UserUnblocked'});\n          }\n        });\n      },\n      verify: () => {\n        const userFull = this.appProfileManager.getCachedFullUser(this.peerId.toUserId());\n        return !!userFull?.pFlags?.blocked;\n      }\n    }, {\n      icon: 'delete danger',\n      text: 'Delete',\n      onClick: () => {\n        new PopupDeleteDialog(this.peerId/* , 'leave' */);\n      },\n      verify: () => this.chat.type === 'chat' && !!this.appMessagesManager.getDialogOnly(this.peerId)\n    }];\n\n    this.btnSearch = ButtonIcon('search');\n    this.attachClickEvent(this.btnSearch, (e) => {\n      this.chat.initSearch();\n    }, true);\n  }\n\n  public attachClickEvent(el: HTMLElement, cb: (e: MouseEvent) => void, noBlur?: boolean) {\n    attachClickEvent(el, (e) => {\n      cancelEvent(e);\n      !noBlur && blurActiveElement();\n      cb(e);\n    }, {listenerSetter: this.listenerSetter});\n  }\n\n  private onCallClick(type: CallType) {\n    this.chat.appImManager.callUser(this.peerId.toUserId(), type);\n  }\n\n  private onJoinGroupCallClick = () => {\n    this.chat.appImManager.joinGroupCall(this.peerId);\n  };\n\n  public constructPeerHelpers() {\n    this.avatarElement = new AvatarElement();\n    this.avatarElement.setAttribute('dialog', '1');\n    //this.avatarElement.setAttribute('clickable', '');\n    this.avatarElement.classList.add('avatar-42', 'person-avatar');\n\n    this.subtitle = document.createElement('div');\n    this.subtitle.classList.add('info');\n\n    this.pinnedMessage = new ChatPinnedMessage(this, this.chat, this.appMessagesManager, this.appPeersManager);\n\n    this.btnJoin = Button('btn-primary btn-color-primary chat-join hide');\n    this.btnCall = ButtonIcon('phone');\n    this.btnGroupCall = ButtonIcon('videochat');\n    this.btnPinned = ButtonIcon('pinlist');\n    this.btnMute = ButtonIcon('mute');\n\n    this.attachClickEvent(this.btnCall, this.onCallClick.bind(this, 'voice'));\n    this.attachClickEvent(this.btnGroupCall, this.onJoinGroupCallClick);\n\n    this.attachClickEvent(this.btnPinned, () => {\n      this.openPinned(true);\n    });\n\n    this.attachClickEvent(this.btnMute, this.onMuteClick);\n\n    this.attachClickEvent(this.btnJoin, () => {\n      const middleware = this.chat.bubbles.getMiddleware();\n      this.btnJoin.setAttribute('disabled', 'true');\n\n      const chatId = this.peerId.toChatId();\n      let promise: Promise<any>;\n      if(this.appChatsManager.isChannel(chatId)) {\n        promise = this.appChatsManager.joinChannel(chatId);\n      } else {\n        promise = this.appChatsManager.addChatUser(chatId, rootScope.myId);\n      }\n\n      promise.finally(() => {\n        if(!middleware()) {\n          return;\n        }\n\n        this.btnJoin.removeAttribute('disabled');\n      });\n    });\n\n    this.listenerSetter.add(rootScope)('chat_update', (chatId) => {\n      if(this.peerId === chatId.toPeerId(true)) {\n        const chat = this.appChatsManager.getChat(chatId) as Channel/*  | Chat */;\n        \n        this.btnJoin.classList.toggle('hide', !(chat as Channel)?.pFlags?.left);\n        this.setUtilsWidth();\n        this.verifyButtons();\n      }\n    });\n\n    this.listenerSetter.add(rootScope)('dialog_notify_settings', (dialog) => {\n      if(dialog.peerId === this.peerId) {\n        this.setMutedState();\n      }\n    });\n\n    this.listenerSetter.add(rootScope)('peer_typings', ({peerId}) => {\n      if(this.peerId === peerId) {\n        this.setPeerStatus();\n      }\n    });\n\n    this.listenerSetter.add(rootScope)('user_update', (userId) => {\n      if(this.peerId === userId.toPeerId()) {\n        this.setPeerStatus();\n      }\n    });\n\n    this.listenerSetter.add(rootScope)('peer_full_update', (peerId) => {\n      if(this.peerId === peerId) {\n        this.verifyButtons();\n      }\n    });\n\n    if(this.pinnedMessage) {\n      this.chat.addEventListener('setPeer', (mid, isTopMessage) => {\n        const middleware = this.chat.bubbles.getMiddleware();\n        appStateManager.getState().then((state) => {\n          if(!middleware()) return;\n  \n          this.pinnedMessage.hidden = !!state.hiddenPinnedMessages[this.chat.peerId];\n  \n          if(isTopMessage) {\n            this.pinnedMessage.unsetScrollDownListener();\n            this.pinnedMessage.testMid(mid, 0); // * because slider will not let get bubble by document.elementFromPoint\n          } else if(!this.pinnedMessage.locked) {\n            this.pinnedMessage.handleFollowingPinnedMessage();\n            this.pinnedMessage.testMid(mid);\n          }\n        });\n      });\n    }\n\n    this.setPeerStatusInterval = window.setInterval(this.setPeerStatus, 60e3);\n\n    return this;\n  }\n\n  public constructPinnedHelpers() {\n    this.listenerSetter.add(rootScope)('peer_pinned_messages', ({peerId, mids}) => {\n      if(peerId !== this.peerId) return;\n\n      if(mids) {\n        this.setTitle();\n      }\n    });\n  }\n  \n  public constructDiscussionHelpers() {\n    this.pinnedMessage = new ChatPinnedMessage(this, this.chat, this.appMessagesManager, this.appPeersManager);\n  }\n\n  public openPinned(byCurrent: boolean) {\n    this.chat.appImManager.setInnerPeer({\n      peerId: this.peerId, \n      lastMsgId: byCurrent ? +this.pinnedMessage.pinnedMessageContainer.divAndCaption.container.dataset.mid : 0, \n      type: 'pinned'\n    });\n  }\n\n  private onMuteClick = () => {\n    new PopupMute(this.peerId);\n  };\n\n  private onResize = () => {\n    this.setUtilsWidth(true);\n    this.setFloating();\n  };\n\n  private onChangeScreen = (from: ScreenSize, to: ScreenSize) => {\n    this.container.classList.toggle('is-pinned-floating', mediaSizes.isMobile);\n    // this.chatAudio && this.chatAudio.divAndCaption.container.classList.toggle('is-floating', to === ScreenSize.mobile);\n    this.pinnedMessage && this.pinnedMessage.pinnedMessageContainer.divAndCaption.container.classList.toggle('is-floating', to === ScreenSize.mobile);\n    this.onResize();\n  };\n\n  public destroy() {\n    //this.chat.log.error('Topbar destroying');\n    this.listenerSetter.removeAll();\n    window.clearInterval(this.setPeerStatusInterval);\n    \n    if(this.pinnedMessage) {\n      this.pinnedMessage.destroy(); // * возможно это можно не делать\n    }\n\n    if(this.chatAudio) {\n      this.chatAudio.destroy();\n    }\n\n    delete this.chatAudio;\n    delete this.pinnedMessage;\n  }\n\n  public setPeer(peerId: PeerId) {\n    this.wasPeerId = this.peerId;\n    this.peerId = peerId;\n\n    this.container.style.display = peerId ? '' : 'none';\n  }\n\n  public finishPeerChange(isTarget: boolean, isJump: boolean, lastMsgId: number) {\n    const peerId = this.peerId;\n\n    if(this.avatarElement) {\n      this.avatarElement.setAttribute('peer', '' + peerId);\n      this.avatarElement.update();\n    }\n\n    const isBroadcast = this.appPeersManager.isBroadcast(peerId);\n    this.btnMute && this.btnMute.classList.toggle('hide', !isBroadcast);\n    if(this.btnJoin) {\n      if(this.appPeersManager.isAnyChat(peerId)) {\n        const chatId = peerId.toChatId();\n        replaceContent(this.btnJoin, i18n(this.appChatsManager.isBroadcast(chatId) ? 'Chat.Subscribe' : 'ChannelJoin'));\n        this.btnJoin.classList.toggle('hide', !this.appChatsManager.getChat(chatId)?.pFlags?.left);\n      } else {\n        this.btnJoin.classList.add('hide');\n      }\n    }\n\n    this.setUtilsWidth();\n\n    this.verifyButtons();\n\n    const middleware = this.chat.bubbles.getMiddleware();\n    if(this.pinnedMessage) { // * replace with new one\n      if(this.chat.type === 'chat') {\n        if(this.wasPeerId !== undefined) { // * change\n          const newPinnedMessage = new ChatPinnedMessage(this, this.chat, this.appMessagesManager, this.appPeersManager);\n          this.pinnedMessage.pinnedMessageContainer.divAndCaption.container.replaceWith(newPinnedMessage.pinnedMessageContainer.divAndCaption.container);\n          this.pinnedMessage.destroy();\n          //this.pinnedMessage.pinnedMessageContainer.toggle(true);\n          this.pinnedMessage = newPinnedMessage;\n        }\n        \n        appStateManager.getState().then((state) => {\n          if(!middleware()) return;\n  \n          this.pinnedMessage.hidden = !!state.hiddenPinnedMessages[peerId];\n  \n          if(!isTarget) {\n            this.pinnedMessage.setCorrectIndex(0);\n          }\n        });\n      } else if(this.chat.type === 'discussion') {\n        this.pinnedMessage.pinnedMid = this.chat.threadId;\n        this.pinnedMessage.count = 1;\n        this.pinnedMessage.pinnedIndex = 0;\n        this.pinnedMessage._setPinnedMessage();\n      }\n    }\n\n    fastRaf(() => {\n      this.setTitle();\n      this.setPeerStatus(true);\n      this.setMutedState();\n    });\n  }\n\n  public setTitle(count?: number) {\n    let titleEl: HTMLElement;\n    if(this.chat.type === 'pinned') {\n      if(count === undefined) titleEl = i18n('Loading');\n      else titleEl = i18n('PinnedMessagesCount', [count]);\n\n      if(count === undefined) {\n        this.appMessagesManager.getSearchCounters(this.peerId, [{_: 'inputMessagesFilterPinned'}], false).then(result => {\n          const count = result[0].count;\n          this.setTitle(count);\n\n          // ! костыль х2, это нужно делать в другом месте\n          if(!count) {\n            this.chat.appImManager.setPeer(); // * close tab\n\n            // ! костыль, это скроет закреплённые сообщения сразу, вместо того, чтобы ждать пока анимация перехода закончится\n            const originalChat = this.chat.appImManager.chat;\n            if(originalChat.topbar.pinnedMessage) {\n              originalChat.topbar.pinnedMessage.pinnedMessageContainer.toggle(true);\n            }\n          }\n        });\n      }\n    } else if(this.chat.type === 'scheduled') {\n      if(this.peerId === rootScope.myId) {\n        //title = [count > 1 ? count : false, 'Reminders'].filter(Boolean).join(' ');\n        titleEl = i18n('Reminders');\n      } else {\n        titleEl = i18n('ScheduledMessages');\n        //title = [count > 1 ? count : false, 'Scheduled Messages'].filter(Boolean).join(' ');\n      }\n      \n      if(count === undefined) {\n        this.appMessagesManager.getScheduledMessages(this.peerId).then(mids => {\n          this.setTitle(mids.length);\n        });\n      }\n    } else if(this.chat.type === 'discussion') {\n      if(count === undefined) titleEl = i18n('Loading');\n      else titleEl = i18n('Chat.Title.Comments', [count]);\n\n      if(count === undefined) {\n        Promise.all([\n          this.appMessagesManager.getHistory(this.peerId, 0, 1, 0, this.chat.threadId),\n          Promise.resolve()\n        ]).then(() => {\n          const count = this.appMessagesManager.getHistoryStorage(this.peerId, this.chat.threadId).count;\n          if(count === null) {\n            setTimeout(() => {\n              this.setTitle();\n            }, 30);\n          } else {\n            this.setTitle(count);\n          }\n        });\n      }\n    } else if(this.chat.type === 'chat') {\n      titleEl = new PeerTitle({\n        peerId: this.peerId,\n        dialog: true,\n      }).element;\n    }\n    \n    replaceContent(this.title, titleEl);\n\n    if(this.chat.type === 'chat') {\n      const peer = this.appPeersManager.getPeer(this.peerId);\n      if(peer?.pFlags?.verified) {\n        this.title.append(generateVerifiedIcon());\n      }\n    }\n  }\n\n  public setMutedState() {\n    if(!this.btnMute) return;\n\n    const peerId = this.peerId;\n    let muted = this.appNotificationsManager.isPeerLocalMuted(peerId, false);\n    if(this.appPeersManager.isBroadcast(peerId)) { // not human\n      this.btnMute.classList.remove('tgico-mute', 'tgico-unmute');\n      this.btnMute.classList.add(muted ? 'tgico-unmute' : 'tgico-mute');\n      this.btnMute.style.display = '';\n    } else {\n      this.btnMute.style.display = 'none';\n    }\n  }\n\n  // ! У МЕНЯ ПРОСТО СГОРЕЛО, САФАРИ КОНЧЕННЫЙ БРАУЗЕР - ЕСЛИ НЕ СКРЫВАТЬ БЛОК, ТО ПРИ ПЕРЕВОРОТЕ ЭКРАНА НА АЙФОНЕ БЛОК БУДЕТ НЕПРАВИЛЬНО ШИРИНЫ, ДАЖЕ БЕЗ ЭТОЙ ФУНКЦИИ!\n  public setUtilsWidth = (resize = false) => {\n    //return;\n    if(this.setUtilsRAF) window.cancelAnimationFrame(this.setUtilsRAF);\n\n    if(IS_SAFARI && resize) {\n      this.chatUtils.classList.add('hide');\n    }\n\n    //mutationObserver.disconnect();\n    this.setUtilsRAF = window.requestAnimationFrame(() => {\n      \n      //mutationRAF = window.requestAnimationFrame(() => {\n        \n        //setTimeout(() => {\n          if(IS_SAFARI && resize) {\n            this.chatUtils.classList.remove('hide');\n          }\n          /* this.chatInfo.style.removeProperty('--utils-width');\n          void this.chatInfo.offsetLeft; // reflow */\n          const width = /* chatUtils.scrollWidth */this.chatUtils.getBoundingClientRect().width;\n          this.chat.log('utils width:', width);\n          this.container.style.setProperty('--utils-width', width + 'px');\n          //this.chatInfo.classList.toggle('have-utils-width', !!width);\n        //}, 0);\n        \n        this.setUtilsRAF = 0;\n\n        //mutationObserver.observe(chatUtils, observeOptions);\n      //});\n    });\n  };\n\n  public setFloating = () => {\n    const containers = [this.chatAudio, this.pinnedMessage && this.pinnedMessage.pinnedMessageContainer].filter(Boolean);\n    const count = containers.reduce((acc, container) => {\n      const isFloating = container.divAndCaption.container.classList.contains('is-floating');\n      this.container.classList.toggle(`is-pinned-${container.className}-floating`, isFloating);\n      return acc + +isFloating;\n    }, 0);\n    this.container.dataset.floating = '' + count;\n  };\n\n  public setPeerStatus = (needClear = false) => {\n    if(!this.subtitle) return;\n\n    const peerId = this.peerId;\n    this.chat.appImManager.setPeerStatus(this.peerId, this.subtitle, needClear, false, () => peerId === this.peerId);\n  };\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appSidebarRight from \"..\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport AppSearch, { SearchGroup } from \"../../appSearch\";\r\nimport ButtonIcon from \"../../buttonIcon\";\r\nimport InputSearch from \"../../inputSearch\";\r\nimport PopupDatePicker from \"../../popups/datePicker\";\r\nimport { SliderSuperTab } from \"../../slider\";\r\n\r\nexport default class AppPrivateSearchTab extends SliderSuperTab {\r\n  private inputSearch: InputSearch;\r\n  private appSearch: AppSearch;\r\n  private btnPickDate: HTMLElement;\r\n\r\n  private peerId: PeerId;\r\n  private threadId = 0;\r\n  private query = '';\r\n  private onDatePick: (timestamp: number) => void;\r\n\r\n  onOpenAfterTimeout() {\r\n    this.appSearch.beginSearch(this.peerId, this.threadId, this.query);\r\n  }\r\n\r\n  protected init() {\r\n    this.container.id = 'search-private-container';\r\n    this.container.classList.add('chatlist-container');\r\n    this.inputSearch = new InputSearch('Search');\r\n    this.title.replaceWith(this.inputSearch.container);\r\n\r\n    this.btnPickDate = ButtonIcon('calendar sidebar-header-right');\r\n    this.header.append(this.btnPickDate);\r\n\r\n    const c = document.createElement('div');\r\n    c.classList.add('chatlist-container');\r\n    this.scrollable.container.replaceWith(c);\r\n    this.appSearch = new AppSearch(c, this.inputSearch, {\r\n      messages: new SearchGroup('Chat.Search.PrivateSearch', 'messages')\r\n    });\r\n  }\r\n\r\n  open(peerId: PeerId, threadId?: number, onDatePick?: AppPrivateSearchTab['onDatePick'], query?: string) {\r\n    const ret = super.open();\r\n\r\n    if(!this.peerId) {\r\n      this.query = query;\r\n      this.peerId = peerId;\r\n      this.threadId = threadId;\r\n      this.onDatePick = onDatePick;\r\n  \r\n      this.btnPickDate.classList.toggle('hide', !this.onDatePick);\r\n      if(this.onDatePick) {\r\n        attachClickEvent(this.btnPickDate, () => {\r\n          new PopupDatePicker(new Date(), this.onDatePick).show();\r\n        });\r\n      }\r\n\r\n      query && this.appSearch.searchInput.inputField.setValueSilently(query);\r\n  \r\n      appSidebarRight.toggleSidebar(true);\r\n    } else {\r\n      this.appSearch.beginSearch(this.peerId, this.threadId, query);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type ChatTopbar from \"./topbar\";\r\nimport AppSearch, { SearchGroup } from \"../appSearch\";\r\nimport PopupDatePicker from \"../popups/datePicker\";\r\nimport { ripple } from \"../ripple\";\r\nimport InputSearch from \"../inputSearch\";\r\nimport type Chat from \"./chat\";\r\nimport findUpTag from \"../../helpers/dom/findUpTag\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport whichChild from \"../../helpers/dom/whichChild\";\r\nimport replaceContent from \"../../helpers/dom/replaceContent\";\r\nimport { i18n } from \"../../lib/langPack\";\r\nimport ListenerSetter from \"../../helpers/listenerSetter\";\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport appNavigationController, { NavigationItem } from \"../appNavigationController\";\r\nimport { IS_MOBILE_SAFARI } from \"../../environment/userAgent\";\r\n\r\nexport default class ChatSearch {\r\n  private element: HTMLElement;\r\n  private backBtn: HTMLElement;\r\n  private inputSearch: InputSearch;\r\n\r\n  private results: HTMLElement;\r\n\r\n  private footer: HTMLElement;\r\n  private dateBtn: HTMLElement;\r\n  private foundCountEl: HTMLElement;\r\n  private controls: HTMLElement;\r\n  private downBtn: HTMLElement;\r\n  private upBtn: HTMLElement;\r\n\r\n  private appSearch: AppSearch;\r\n  private searchGroup: SearchGroup;\r\n\r\n  private foundCount = 0;\r\n  private selectedIndex = 0;\r\n  private setPeerPromise: Promise<any>;\r\n  private listenerSetter: ListenerSetter;\r\n  private navigationItem: NavigationItem;\r\n\r\n  constructor(private topbar: ChatTopbar, private chat: Chat, query?: string) {\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('sidebar-header', 'chat-search', 'chatlist-container');\r\n\r\n    this.backBtn = document.createElement('button');\r\n    this.backBtn.classList.add('btn-icon', 'tgico-left', 'sidebar-close-button');\r\n    ripple(this.backBtn);\r\n\r\n    const listenerSetter = this.listenerSetter = new ListenerSetter();\r\n\r\n    const attachClick = (element: HTMLElement, callback: (e: MouseEvent) => void) => {\r\n      attachClickEvent(element, callback, {listenerSetter});\r\n    };\r\n    \r\n    attachClick(this.backBtn, () => {\r\n      this.destroy();\r\n    });\r\n\r\n    this.inputSearch = new InputSearch('Search');\r\n    \r\n    // Results\r\n    this.results = document.createElement('div');\r\n    this.results.classList.add('chat-search-results', 'chatlist-container');\r\n\r\n    this.searchGroup = new SearchGroup(false, 'messages', undefined, '', false);\r\n    attachClick(this.searchGroup.list, this.onResultsClick);\r\n\r\n    this.appSearch = new AppSearch(this.results, this.inputSearch, {\r\n      messages: this.searchGroup\r\n    }, (count) => {\r\n      this.foundCount = count;\r\n\r\n      if(!this.foundCount) {\r\n        replaceContent(this.foundCountEl, this.inputSearch.value ? i18n('NoResult') : '');\r\n        this.results.classList.remove('active');\r\n        this.chat.bubbles.bubblesContainer.classList.remove('search-results-active');\r\n        this.upBtn.setAttribute('disabled', 'true');\r\n        this.downBtn.setAttribute('disabled', 'true');\r\n      } else {\r\n        this.selectResult(this.searchGroup.list.children[0] as HTMLElement);\r\n      }\r\n    });\r\n    this.appSearch.beginSearch(this.chat.peerId, this.chat.threadId);\r\n\r\n    //appImManager.topbar.parentElement.insertBefore(this.results, appImManager.bubblesContainer);\r\n    this.chat.bubbles.bubblesContainer.append(this.results);\r\n\r\n    // Footer\r\n    this.footer = document.createElement('div');\r\n    this.footer.classList.add('chat-search-footer');\r\n\r\n    attachClick(this.footer, this.onFooterClick);\r\n    ripple(this.footer);\r\n\r\n    this.foundCountEl = document.createElement('span');\r\n    this.foundCountEl.classList.add('chat-search-count');\r\n\r\n    this.dateBtn = document.createElement('button');\r\n    this.dateBtn.classList.add('btn-icon', 'tgico-calendar');\r\n\r\n    this.controls = document.createElement('div');\r\n    this.controls.classList.add('chat-search-controls');\r\n\r\n    this.upBtn = document.createElement('button');\r\n    this.upBtn.classList.add('btn-icon', 'tgico-up');\r\n    this.downBtn = document.createElement('button');\r\n    this.downBtn.classList.add('btn-icon', 'tgico-down');\r\n\r\n    this.upBtn.setAttribute('disabled', 'true');\r\n    this.downBtn.setAttribute('disabled', 'true');\r\n\r\n    attachClick(this.dateBtn, this.onDateClick);\r\n    attachClick(this.upBtn, this.onUpClick);\r\n    attachClick(this.downBtn, this.onDownClick);\r\n    this.controls.append(this.upBtn, this.downBtn);\r\n\r\n    this.footer.append(this.foundCountEl, this.dateBtn, this.controls);\r\n    \r\n    this.topbar.container.parentElement.insertBefore(this.footer, chat.input.chatInput);\r\n\r\n    // Append container\r\n    this.element.append(this.backBtn, this.inputSearch.container);\r\n\r\n    this.topbar.container.classList.add('hide-pinned');\r\n    this.topbar.container.parentElement.append(this.element);\r\n\r\n    this.inputSearch.input.focus();\r\n\r\n    if(query) {\r\n      this.setQuery(query);\r\n    }\r\n\r\n    if(!IS_MOBILE_SAFARI) {\r\n      this.navigationItem = {\r\n        type: 'mobile-search',\r\n        onPop: () => {\r\n          this.destroy();\r\n        }\r\n      };\r\n  \r\n      appNavigationController.pushItem(this.navigationItem);\r\n    }\r\n  }\r\n\r\n  public destroy() {\r\n    this.topbar.container.classList.remove('hide-pinned');\r\n    this.element.remove();\r\n    this.inputSearch.remove();\r\n    this.results.remove();\r\n    this.footer.remove();\r\n    this.listenerSetter.removeAll();\r\n    this.chat.bubbles.bubblesContainer.classList.remove('search-results-active');\r\n    this.chat.search = undefined;\r\n    appNavigationController.removeItem(this.navigationItem);\r\n  }\r\n\r\n  public setQuery(query: string) {\r\n    this.inputSearch.inputField.value = query;\r\n  }\r\n\r\n  private onDateClick = (e: MouseEvent) => {\r\n    cancelEvent(e);\r\n    new PopupDatePicker(new Date(), this.chat.bubbles.onDatePick).show();\r\n  };\r\n\r\n  private selectResult(elem: HTMLElement) {\r\n    if(this.setPeerPromise) return this.setPeerPromise;\r\n\r\n    const peerId = elem.dataset.peerId.toPeerId();\r\n    const lastMsgId = +elem.dataset.mid || undefined;\r\n\r\n    const index = whichChild(elem);\r\n\r\n    if(index === (this.foundCount - 1)) {\r\n      this.upBtn.setAttribute('disabled', 'true');\r\n    } else {\r\n      this.upBtn.removeAttribute('disabled');\r\n    }\r\n\r\n    if(!index) {\r\n      this.downBtn.setAttribute('disabled', 'true');\r\n    } else {\r\n      this.downBtn.removeAttribute('disabled');\r\n    }\r\n\r\n    this.results.classList.remove('active');\r\n    this.chat.bubbles.bubblesContainer.classList.remove('search-results-active');\r\n\r\n    const res = this.chat.setPeer(peerId, lastMsgId);\r\n    this.setPeerPromise = ((res instanceof Promise ? res : Promise.resolve(res)) as Promise<any>).then(() => {\r\n      this.selectedIndex = index;\r\n      replaceContent(this.foundCountEl, i18n('Of', [index + 1, this.foundCount]));\r\n\r\n      const renderedCount = this.searchGroup.list.childElementCount;\r\n      if(this.selectedIndex >= (renderedCount - 6)) {\r\n        this.appSearch.searchMore();\r\n      }\r\n    }).finally(() => {\r\n      this.setPeerPromise = null;\r\n    });\r\n  }\r\n\r\n  private onResultsClick = (e: MouseEvent) => {\r\n    const target = findUpTag(e.target, 'LI');\r\n    if(target) {\r\n      this.selectResult(target);\r\n    }\r\n  };\r\n\r\n  private onFooterClick = (e: MouseEvent) => {\r\n    if(this.foundCount) {\r\n      this.chat.bubbles.bubblesContainer.classList.toggle('search-results-active');\r\n      this.results.classList.toggle('active');\r\n    }\r\n  };\r\n\r\n  private onUpClick = (e: MouseEvent) => {\r\n    cancelEvent(e);\r\n    this.selectResult(this.searchGroup.list.children[this.selectedIndex + 1] as HTMLElement);\r\n  };\r\n\r\n  private onDownClick = (e: MouseEvent) => {\r\n    cancelEvent(e);\r\n    this.selectResult(this.searchGroup.list.children[this.selectedIndex - 1] as HTMLElement);\r\n  };\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { IS_SAFARI } from \"../../environment/userAgent\";\nimport indexOfAndSplice from \"../../helpers/array/indexOfAndSplice\";\nimport { renderImageFromUrlPromise } from \"../../helpers/dom/renderImageFromUrl\";\nimport deepEqual from \"../../helpers/object/deepEqual\";\n\ntype ChatBackgroundPatternRendererInitOptions = {\n  url: string,\n  width: number,\n  height: number\n};\n\nexport default class ChatBackgroundPatternRenderer {\n  private static INSTANCES: ChatBackgroundPatternRenderer[] = [];\n\n  private pattern: CanvasPattern;\n  private objectUrl: string;\n  private options: ChatBackgroundPatternRendererInitOptions;\n  private canvases: Set<HTMLCanvasElement>;\n  private createCanvasPatternPromise: Promise<void>;\n  private exportCanvasPatternToImagePromise: Promise<string>;\n  // private img: HTMLImageElement;\n\n  constructor() {\n    this.canvases = new Set();\n  }\n\n  public static getInstance(options: ChatBackgroundPatternRendererInitOptions) {\n    let instance = this.INSTANCES.find((instance) => {\n      return deepEqual(instance.options, options);\n    });\n\n    if(!instance) {\n      instance = new ChatBackgroundPatternRenderer();\n      instance.init(options);\n      this.INSTANCES.push(instance);\n    }\n\n    return instance;\n  }\n\n  public init(options: ChatBackgroundPatternRendererInitOptions) {\n    this.options = options;\n  }\n\n  public renderToCanvas(canvas: HTMLCanvasElement) {\n    return this.createCanvasPattern(canvas).then(() => {\n      return this.fillCanvas(canvas);\n    });\n  }\n\n  private createCanvasPattern(canvas: HTMLCanvasElement) {\n    if(this.createCanvasPatternPromise) return this.createCanvasPatternPromise;\n    return this.createCanvasPatternPromise = new Promise((resolve) => {\n      const img = document.createElement('img');\n      img.crossOrigin = 'anonymous';\n      renderImageFromUrlPromise(img, this.options.url, false).then(() => {\n        let createPatternFrom: HTMLImageElement | HTMLCanvasElement;\n        if(IS_SAFARI) {\n          const canvas = createPatternFrom = document.createElement('canvas');\n          canvas.width = img.naturalWidth;\n          canvas.height = img.naturalHeight;\n          const ctx = canvas.getContext('2d');\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        } else {\n          createPatternFrom = img;\n        }\n        \n        // this.img = img;\n        this.pattern = canvas.getContext('2d').createPattern(createPatternFrom, 'repeat-x');\n        resolve();\n      });\n    });\n  }\n\n  public exportCanvasPatternToImage(canvas: HTMLCanvasElement) {\n    if(this.exportCanvasPatternToImagePromise) return this.exportCanvasPatternToImagePromise;\n    return this.exportCanvasPatternToImagePromise = new Promise<string>((resolve) => {\n      canvas.toBlob((blob) => {\n        const newUrl = this.objectUrl = URL.createObjectURL(blob);\n        resolve(newUrl);\n      }, 'image/png');\n    });\n  }\n\n  public cleanup(canvas: HTMLCanvasElement) {\n    this.canvases.delete(canvas);\n\n    if(!this.canvases.size) {\n      indexOfAndSplice(ChatBackgroundPatternRenderer.INSTANCES, this);\n\n      if(this.objectUrl) {\n        URL.revokeObjectURL(this.objectUrl);\n      }\n    }\n  }\n\n  public fillCanvas(canvas: HTMLCanvasElement) {\n    const context = canvas.getContext('2d');\n    context.fillStyle = this.pattern;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    // context.drawImage(this.img, 0, 0, canvas.width, canvas.height);\n  }\n\n  public setCanvasDimensions(canvas: HTMLCanvasElement) {\n    canvas.width = this.options.width * window.devicePixelRatio;\n    canvas.height = this.options.height * window.devicePixelRatio * 1.5;\n  }\n\n  public createCanvas() {\n    const canvas = document.createElement('canvas');\n    this.canvases.add(canvas);\n    this.setCanvasDimensions(canvas);\n    return canvas;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { AppNotificationsManager } from \"../../lib/appManagers/appNotificationsManager\";\nimport type { AppChatsManager, ChatRights } from \"../../lib/appManagers/appChatsManager\";\nimport type { AppDocsManager } from \"../../lib/appManagers/appDocsManager\";\nimport type { AppImManager } from \"../../lib/appManagers/appImManager\";\nimport type { AppInlineBotsManager } from \"../../lib/appManagers/appInlineBotsManager\";\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\nimport type { AppPeersManager } from \"../../lib/appManagers/appPeersManager\";\nimport type { AppPhotosManager } from \"../../lib/appManagers/appPhotosManager\";\nimport type { AppPollsManager } from \"../../lib/appManagers/appPollsManager\";\nimport type { AppProfileManager } from \"../../lib/appManagers/appProfileManager\";\nimport type { AppStickersManager } from \"../../lib/appManagers/appStickersManager\";\nimport type { AppUsersManager } from \"../../lib/appManagers/appUsersManager\";\nimport type { AppWebPagesManager } from \"../../lib/appManagers/appWebPagesManager\";\nimport type { ApiManagerProxy } from \"../../lib/mtproto/mtprotoworker\";\nimport type { AppDraftsManager } from \"../../lib/appManagers/appDraftsManager\";\nimport type { AppEmojiManager } from \"../../lib/appManagers/appEmojiManager\";\nimport type { ServerTimeManager } from \"../../lib/mtproto/serverTimeManager\";\nimport type { AppMessagesIdsManager } from \"../../lib/appManagers/appMessagesIdsManager\";\nimport type { AppGroupCallsManager } from \"../../lib/appManagers/appGroupCallsManager\";\nimport type { AppReactionsManager } from \"../../lib/appManagers/appReactionsManager\";\nimport type stateStorage from '../../lib/stateStorage';\nimport EventListenerBase from \"../../helpers/eventListenerBase\";\nimport { logger, LogTypes } from \"../../lib/logger\";\nimport rootScope from \"../../lib/rootScope\";\nimport appSidebarRight from \"../sidebarRight\";\nimport ChatBubbles from \"./bubbles\";\nimport ChatContextMenu from \"./contextMenu\";\nimport ChatInput from \"./input\";\nimport ChatSelection from \"./selection\";\nimport ChatTopbar from \"./topbar\";\nimport { BOT_START_PARAM, NULL_PEER_ID, REPLIES_PEER_ID } from \"../../lib/mtproto/mtproto_config\";\nimport SetTransition from \"../singleTransition\";\nimport AppPrivateSearchTab from \"../sidebarRight/tabs/search\";\nimport renderImageFromUrl, { renderImageFromUrlPromise } from \"../../helpers/dom/renderImageFromUrl\";\nimport mediaSizes from \"../../helpers/mediaSizes\";\nimport ChatSearch from \"./search\";\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\nimport getAutoDownloadSettingsByPeerId, { ChatAutoDownloadSettings } from \"../../helpers/autoDownload\";\nimport ChatBackgroundGradientRenderer from \"./gradientRenderer\";\nimport ChatBackgroundPatternRenderer from \"./patternRenderer\";\nimport { pause } from \"../../helpers/schedulers/pause\";\n\nexport type ChatType = 'chat' | 'pinned' | 'replies' | 'discussion' | 'scheduled';\n\nexport default class Chat extends EventListenerBase<{\n  setPeer: (mid: number, isTopMessage: boolean) => void\n}> {\n  public container: HTMLElement;\n  public backgroundEl: HTMLElement;\n\n  public topbar: ChatTopbar;\n  public bubbles: ChatBubbles;\n  public input: ChatInput;\n  public selection: ChatSelection;\n  public contextMenu: ChatContextMenu;\n  public search: ChatSearch;\n\n  public wasAlreadyUsed: boolean;\n  // public initPeerId = 0;\n  public peerId: PeerId;\n  public threadId: number;\n  public setPeerPromise: Promise<void>;\n  public peerChanged: boolean;\n\n  public log: ReturnType<typeof logger>;\n\n  public type: ChatType;\n\n  public noForwards: boolean;\n\n  public inited: boolean;\n\n  public isRestricted: boolean;\n  public autoDownload: ChatAutoDownloadSettings;\n\n  public gradientRenderer: ChatBackgroundGradientRenderer;\n  public patternRenderer: ChatBackgroundPatternRenderer;\n  public gradientCanvas: HTMLCanvasElement;\n  public patternCanvas: HTMLCanvasElement;\n  public backgroundTempId: number;\n  public setBackgroundPromise: Promise<void>;\n  \n  constructor(\n    public appImManager: AppImManager, \n    public appChatsManager: AppChatsManager, \n    public appDocsManager: AppDocsManager, \n    public appInlineBotsManager: AppInlineBotsManager, \n    public appMessagesManager: AppMessagesManager, \n    public appPeersManager: AppPeersManager, \n    public appPhotosManager: AppPhotosManager, \n    public appProfileManager: AppProfileManager, \n    public appStickersManager: AppStickersManager, \n    public appUsersManager: AppUsersManager, \n    public appWebPagesManager: AppWebPagesManager, \n    public appPollsManager: AppPollsManager, \n    public apiManager: ApiManagerProxy, \n    public appDraftsManager: AppDraftsManager, \n    public serverTimeManager: ServerTimeManager, \n    public storage: typeof stateStorage, \n    public appNotificationsManager: AppNotificationsManager,\n    public appEmojiManager: AppEmojiManager,\n    public appMessagesIdsManager: AppMessagesIdsManager,\n    public appGroupCallsManager: AppGroupCallsManager,\n    public appReactionsManager: AppReactionsManager\n  ) {\n    super();\n\n    this.type = 'chat';\n\n    this.container = document.createElement('div');\n    this.container.classList.add('chat', 'tabs-tab');\n\n    this.backgroundEl = document.createElement('div');\n    this.backgroundEl.classList.add('chat-background');\n\n    // * constructor end\n\n    this.log = logger('CHAT', LogTypes.Log | LogTypes.Warn | LogTypes.Debug | LogTypes.Error);\n    //this.log.error('Chat construction');\n\n    this.peerId = NULL_PEER_ID;\n\n    this.container.append(this.backgroundEl);\n    this.appImManager.chatsContainer.append(this.container);\n\n    this.backgroundTempId = 0;\n  }\n\n  public setBackground(url: string, skipAnimation?: boolean): Promise<void> {\n    const theme = rootScope.getTheme();\n\n    let item: HTMLElement;\n    const isColorBackground = !!theme.background.color && !theme.background.slug && !theme.background.intensity;\n    if(\n      isColorBackground && \n      document.documentElement.style.cursor === 'grabbing' && \n      this.gradientRenderer && \n      !this.patternRenderer\n    ) {\n      this.gradientCanvas.dataset.colors = theme.background.color;\n      this.gradientRenderer.init(this.gradientCanvas);\n      return Promise.resolve();\n    }\n\n    const tempId = ++this.backgroundTempId;\n\n    const previousGradientRenderer = this.gradientRenderer;\n    const previousPatternRenderer = this.patternRenderer;\n    const previousGradientCanvas = this.gradientCanvas;\n    const previousPatternCanvas = this.patternCanvas;\n\n    this.gradientRenderer = \n      this.patternRenderer = \n      this.gradientCanvas = \n      this.patternCanvas = \n      undefined;\n\n    const intensity = theme.background.intensity && theme.background.intensity / 100;\n    const isDarkPattern = !!intensity && intensity < 0;\n    \n    let patternRenderer: ChatBackgroundPatternRenderer;\n    let patternCanvas = item?.firstElementChild as HTMLCanvasElement;\n    let gradientCanvas: HTMLCanvasElement;\n    if(!item) {\n      item = document.createElement('div');\n      item.classList.add('chat-background-item');\n\n      if(url) {\n        if(intensity) {\n          item.classList.add('is-pattern');\n\n          const rect = this.appImManager.chatsContainer.getBoundingClientRect();\n          patternRenderer = this.patternRenderer = ChatBackgroundPatternRenderer.getInstance({\n            url,\n            width: rect.width,\n            height: rect.height\n          });\n\n          patternCanvas = this.patternCanvas = patternRenderer.createCanvas();\n          patternCanvas.classList.add('chat-background-item-canvas', 'chat-background-item-pattern-canvas');\n        } else if(theme.background.slug) {\n          item.classList.add('is-image');\n        }\n      } else if(theme.background.color) {\n        item.classList.add('is-color');\n      }\n    }\n\n    let gradientRenderer: ChatBackgroundGradientRenderer;\n    const color = theme.background.color;\n    if(color) {\n      // if(color.includes(',')) {\n      const {canvas, gradientRenderer: _gradientRenderer} = ChatBackgroundGradientRenderer.create(color);\n      gradientRenderer = this.gradientRenderer = _gradientRenderer;\n      gradientCanvas = this.gradientCanvas = canvas;\n      gradientCanvas.classList.add('chat-background-item-canvas', 'chat-background-item-color-canvas');\n\n      if(rootScope.settings.animationsEnabled) {\n        gradientRenderer.scrollAnimate(true);\n      }\n      // } else {\n      //   item.style.backgroundColor = color;\n      //   item.style.backgroundImage = 'none';\n      // }\n    }\n\n    if(patternRenderer) {\n      const setOpacityTo = isDarkPattern ? gradientCanvas : patternCanvas;\n      setOpacityTo.style.setProperty('--opacity-max', '' + Math.abs(intensity));\n    }\n\n    const promise = new Promise<void>((resolve) => {\n      const cb = () => {\n        if(this.backgroundTempId !== tempId) {\n          if(patternRenderer) {\n            patternRenderer.cleanup(patternCanvas);\n          }\n\n          if(gradientRenderer) {\n            gradientRenderer.cleanup();\n          }\n\n          return;\n        }\n\n        const prev = this.backgroundEl.lastElementChild as HTMLElement;\n\n        if(prev === item) {\n          resolve();\n          return;\n        }\n\n        const append = [gradientCanvas, isDarkPattern ? undefined : patternCanvas].filter(Boolean);\n        if(append.length) {\n          item.append(...append);\n        }\n\n        this.backgroundEl.append(item);\n\n        SetTransition(item, 'is-visible', true, !skipAnimation ? 200 : 0, prev ? () => {\n          if(previousPatternRenderer) {\n            previousPatternRenderer.cleanup(previousPatternCanvas);\n          }\n\n          if(previousGradientRenderer) {\n            previousGradientRenderer.cleanup();\n          }\n\n          prev.remove();\n        } : null, 2);\n\n        resolve();\n      };\n\n      if(patternRenderer) {\n        const renderPatternPromise = patternRenderer.renderToCanvas(patternCanvas);\n        renderPatternPromise.then(() => {\n          let promise: Promise<any>;\n          if(isDarkPattern) {\n            promise = patternRenderer.exportCanvasPatternToImage(patternCanvas).then(url => {\n              if(this.backgroundTempId !== tempId) {\n                return;\n              }\n              \n              gradientCanvas.style.webkitMaskImage = `url(${url})`;\n            });\n          } else {\n            promise = Promise.resolve();\n          }\n          \n          promise.then(cb);\n        });\n      } else if(url) {\n        renderImageFromUrl(item, url, cb);\n      } else {\n        cb();\n      }\n    });\n\n    return this.setBackgroundPromise = Promise.race([\n      pause(500),\n      promise\n    ]);\n  }\n\n  public setType(type: ChatType) {\n    this.type = type;\n\n    if(this.type === 'scheduled') {\n      this.getMessagesStorage = () => this.appMessagesManager.getScheduledMessagesStorage(this.peerId);\n      //this.getMessage = (mid) => this.appMessagesManager.getMessageFromStorage(this.appMessagesManager.getScheduledMessagesStorage(this.peerId), mid);\n    }\n  }\n\n  public init(/* peerId: PeerId */) {\n    // this.initPeerId = peerId;\n\n    this.topbar = new ChatTopbar(this, appSidebarRight, this.appMessagesManager, this.appPeersManager, this.appChatsManager, this.appNotificationsManager, this.appProfileManager, this.appUsersManager, this.appGroupCallsManager);\n    this.bubbles = new ChatBubbles(this, this.appMessagesManager, this.appStickersManager, this.appUsersManager, this.appInlineBotsManager, this.appPhotosManager, this.appPeersManager, this.appProfileManager, this.appDraftsManager, this.appMessagesIdsManager, this.appChatsManager, this.appReactionsManager);\n    this.input = new ChatInput(this, this.appMessagesManager, this.appMessagesIdsManager, this.appDocsManager, this.appChatsManager, this.appPeersManager, this.appWebPagesManager, this.appImManager, this.appDraftsManager, this.serverTimeManager, this.appNotificationsManager, this.appEmojiManager, this.appUsersManager, this.appInlineBotsManager, this.appProfileManager);\n    this.selection = new ChatSelection(this, this.bubbles, this.input, this.appMessagesManager);\n    this.contextMenu = new ChatContextMenu(this.bubbles.bubblesContainer, this, this.appMessagesManager, this.appPeersManager, this.appPollsManager, this.appDocsManager, this.appMessagesIdsManager, this.appReactionsManager);\n\n    if(this.type === 'chat') {\n      this.topbar.constructUtils();\n      this.topbar.constructPeerHelpers();\n    } else if(this.type === 'pinned') {\n      this.topbar.constructPinnedHelpers();\n    } else if(this.type === 'discussion') {\n      this.topbar.constructUtils();\n      this.topbar.constructDiscussionHelpers();\n    }\n\n    this.topbar.construct();\n    this.input.construct();\n\n    if(this.type === 'chat') { // * гений в деле, разный порядок из-за разной последовательности действий\n      this.bubbles.constructPeerHelpers();\n      this.input.constructPeerHelpers();\n    } else if(this.type === 'pinned') {\n      this.bubbles.constructPinnedHelpers();\n      this.input.constructPinnedHelpers();\n    } else if(this.type === 'scheduled') {\n      this.bubbles.constructScheduledHelpers();\n      this.input.constructPeerHelpers();\n    } else if(this.type === 'discussion') {\n      this.bubbles.constructPeerHelpers();\n      this.input.constructPeerHelpers();\n    }\n\n    if(this.type !== 'scheduled' && !IS_TOUCH_SUPPORTED) {\n      this.bubbles.setReactionsHoverListeners();\n    }\n\n    this.container.classList.add('type-' + this.type);\n    this.container.append(this.topbar.container, this.bubbles.bubblesContainer, this.input.chatInput);\n\n    this.bubbles.listenerSetter.add(rootScope)('dialog_migrate', ({migrateFrom, migrateTo}) => {\n      if(this.peerId === migrateFrom) {\n        this.setPeer(migrateTo);\n      }\n    });\n\n    this.bubbles.listenerSetter.add(rootScope)('dialog_drop', (e) => {\n      if(e.peerId === this.peerId) {\n        this.appImManager.setPeer();\n      }\n    });\n  }\n\n  public beforeDestroy() {\n    this.bubbles.cleanup();\n  }\n\n  private cleanupBackground() {\n    ++this.backgroundTempId;\n    if(this.patternRenderer) {\n      this.patternRenderer.cleanup(this.patternCanvas);\n      this.patternRenderer = undefined;\n    }\n\n    if(this.gradientRenderer) {\n      this.gradientRenderer.cleanup();\n      this.gradientRenderer = undefined;\n    }\n  }\n\n  public destroy() {\n    //const perf = performance.now();\n\n    this.topbar.destroy();\n    this.bubbles.destroy();\n    this.input.destroy();\n    this.contextMenu && this.contextMenu.destroy();\n\n    this.cleanupBackground();\n\n    delete this.topbar;\n    delete this.bubbles;\n    delete this.input;\n    delete this.selection;\n    delete this.contextMenu;\n\n    this.container.remove();\n\n    //this.log.error('Chat destroy time:', performance.now() - perf);\n  }\n\n  public cleanup(helperToo = true) {\n    this.input.cleanup(helperToo);\n    this.selection.cleanup();\n  }\n\n  public setPeer(peerId: PeerId, lastMsgId?: number, startParam?: string) {\n    if(!peerId) {\n      this.inited = undefined;\n    } else if(!this.inited) {\n      if(this.init) {\n        this.init(/* peerId */);\n        this.init = null;\n      }\n\n      this.inited = true;\n    }\n\n    const samePeer = this.peerId === peerId;\n    if(!samePeer) {\n      rootScope.dispatchEvent('peer_changing', this);\n      this.peerId = peerId || NULL_PEER_ID;\n    } else if(this.setPeerPromise) {\n      return;\n    }\n\n    //console.time('appImManager setPeer');\n    //console.time('appImManager setPeer pre promise');\n    ////console.time('appImManager: pre render start');\n    if(!peerId) {\n      appSidebarRight.toggleSidebar(false);\n      this.cleanup(true);\n      this.topbar.setPeer(peerId);\n      this.bubbles.setPeer(peerId);\n      rootScope.dispatchEvent('peer_changed', peerId);\n\n      return;\n    }\n\n    // set new\n    if(!samePeer) {\n      const searchTab = appSidebarRight.getTab(AppPrivateSearchTab);\n      if(searchTab) {\n        searchTab.close();\n      }\n\n      this.noForwards = this.appPeersManager.noForwards(peerId);\n      this.isRestricted = this.appPeersManager.isRestricted(peerId);\n      this.container.classList.toggle('no-forwards', this.noForwards);\n\n      appSidebarRight.sharedMediaTab.setPeer(peerId, this.threadId);\n      this.input.clearHelper(); // костыль\n      this.selection.cleanup(); // TODO: REFACTOR !!!!!!\n      this.setAutoDownloadMedia();\n    }\n\n    this.peerChanged = samePeer;\n\n    if(startParam === undefined && this.isStartButtonNeeded()) {\n      startParam = BOT_START_PARAM;\n    }\n\n    const result = this.bubbles.setPeer(peerId, lastMsgId, startParam);\n    if(!result) {\n      return;\n    }\n\n    const {promise} = result;\n\n    //console.timeEnd('appImManager setPeer pre promise');\n    \n    const setPeerPromise = this.setPeerPromise = promise.finally(() => {\n      if(this.setPeerPromise === setPeerPromise) {\n        this.setPeerPromise = null;\n      }\n    });\n\n    if(!samePeer) {\n      appSidebarRight.sharedMediaTab.setLoadMutex(this.setPeerPromise);\n      appSidebarRight.sharedMediaTab.loadSidebarMedia(true);\n    }\n    /* this.setPeerPromise.then(() => {\n      appSidebarRight.sharedMediaTab.loadSidebarMedia(false);\n    }); */\n\n    return result;\n  }\n\n  public setAutoDownloadMedia() {\n    this.autoDownload = getAutoDownloadSettingsByPeerId(this.peerId);\n  }\n\n  public setMessageId(messageId?: number) {\n    return this.setPeer(this.peerId, messageId);\n  }\n\n  public finishPeerChange(isTarget: boolean, isJump: boolean, lastMsgId: number, startParam?: string) {\n    if(this.peerChanged) return;\n\n    let peerId = this.peerId;\n    this.peerChanged = true;\n\n    this.cleanup(false);\n\n    this.topbar.setPeer(peerId);\n    this.topbar.finishPeerChange(isTarget, isJump, lastMsgId);\n    this.bubbles.finishPeerChange();\n    this.input.finishPeerChange(startParam);\n\n    appSidebarRight.sharedMediaTab.fillProfileElements();\n\n    this.log.setPrefix('CHAT-' + peerId + '-' + this.type);\n\n    rootScope.dispatchEvent('peer_changed', peerId);\n    this.wasAlreadyUsed = true;\n  }\n\n  public getMessagesStorage() {\n    return this.appMessagesManager.getMessagesStorage(this.peerId);\n  }\n\n  public getMessage(mid: number) {\n    return this.appMessagesManager.getMessageFromStorage(this.getMessagesStorage(), mid);\n    //return this.appMessagesManager.getMessageByPeer(this.peerId, mid);\n  }\n\n  public getMidsByMid(mid: number) {\n    return this.appMessagesManager.getMidsByMessage(this.getMessage(mid));\n  }\n\n  public isAnyGroup() {\n    return this.peerId === rootScope.myId || this.peerId === REPLIES_PEER_ID || this.appPeersManager.isAnyGroup(this.peerId);\n  }\n\n  public initSearch(query?: string) {\n    if(!this.peerId) return;\n\n    if(mediaSizes.isMobile) {\n      if(!this.search) {\n        this.search = new ChatSearch(this.topbar, this, query);\n      } else {\n        this.search.setQuery(query);\n      }\n    } else {\n      let tab = appSidebarRight.getTab(AppPrivateSearchTab);\n      if(!tab) {\n        tab = new AppPrivateSearchTab(appSidebarRight);\n      }\n\n      tab.open(this.peerId, this.threadId, this.bubbles.onDatePick, query);\n    }\n  }\n\n  public canSend(action?: ChatRights) {\n    return this.appMessagesManager.canSendToPeer(this.peerId, this.threadId, action);\n  }\n\n  public isStartButtonNeeded() {\n    return this.appPeersManager.isBot(this.peerId) && \n      !this.appMessagesManager.getDialogOnly(this.peerId) && \n      !this.appMessagesManager.getHistoryStorage(this.peerId).history.length;\n  }\n\n  public getMessageSendingParams() {\n    return {\n      threadId: this.threadId,\n      replyToMsgId: this.input.replyToMsgId,\n      scheduleDate: this.input.scheduleDate,\n      sendSilent: this.input.sendSilent,\n      sendAsPeerId: this.input.sendAsPeerId\n    };\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { State } from \"../lib/appManagers/appStateManager\";\nimport rootScope from \"../lib/rootScope\";\n\nexport type ChatAutoDownloadSettings = {\n  photo: number,\n  video: number,\n  file: number\n};\n\nexport default function getAutoDownloadSettingsByPeerId(peerId: PeerId): ChatAutoDownloadSettings {\n  let type: keyof State['settings']['autoDownload'];\n\n  let photoSizeMax = 0, videoSizeMax = 0, fileSizeMax = 0;\n  const settings = rootScope.settings;\n  if(!settings.autoDownloadNew.pFlags.disabled && peerId) {\n    if(peerId.isUser()) {\n      if(peerId.isContact()) {\n        type = 'contacts';\n      } else {\n        type = 'private';\n      }\n    } else if(peerId.isBroadcast()) {\n      type = 'channels';\n    } else {\n      type = 'groups';\n    }\n    \n    if(settings.autoDownload.photo[type]) photoSizeMax = settings.autoDownloadNew.photo_size_max;\n    if(settings.autoDownload.video[type]) videoSizeMax = settings.autoDownloadNew.video_size_max;\n    if(settings.autoDownload.file[type]) fileSizeMax = settings.autoDownloadNew.file_size_max;\n  }\n\n  return {\n    photo: photoSizeMax,\n    video: videoSizeMax,\n    file: fileSizeMax\n  };\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppImManager } from \"../../lib/appManagers/appImManager\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport ButtonIcon from \"../buttonIcon\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\r\nimport { IS_APPLE, IS_MOBILE } from \"../../environment/userAgent\";\r\nimport appNavigationController from \"../appNavigationController\";\r\nimport { _i18n } from \"../../lib/langPack\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport getSelectedNodes from \"../../helpers/dom/getSelectedNodes\";\r\nimport isSelectionEmpty from \"../../helpers/dom/isSelectionEmpty\";\r\nimport { MarkdownType, markdownTags } from \"../../helpers/dom/getRichElementValue\";\r\nimport getVisibleRect from \"../../helpers/dom/getVisibleRect\";\r\nimport clamp from \"../../helpers/number/clamp\";\r\n//import { logger } from \"../../lib/logger\";\r\n\r\nexport default class MarkupTooltip {\r\n  public container: HTMLElement;\r\n  private wrapper: HTMLElement;\r\n  private buttons: {[type in MarkdownType]: HTMLElement} = {} as any;\r\n  private linkBackButton: HTMLElement;\r\n  private linkApplyButton: HTMLButtonElement;\r\n  private hideTimeout: number;\r\n  private addedListener = false;\r\n  private waitingForMouseUp = false;\r\n  private linkInput: HTMLInputElement;\r\n  private savedRange: Range;\r\n  private mouseUpCounter: number = 0;\r\n  //private log: ReturnType<typeof logger>;\r\n\r\n  constructor(private appImManager: AppImManager) {\r\n    //this.log = logger('MARKUP');\r\n  }\r\n\r\n  private init() {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('markup-tooltip', 'z-depth-1', 'hide');\r\n\r\n    this.wrapper = document.createElement('div');\r\n    this.wrapper.classList.add('markup-tooltip-wrapper');\r\n    \r\n    const tools1 = document.createElement('div');\r\n    const tools2 = document.createElement('div');\r\n    tools1.classList.add('markup-tooltip-tools');\r\n    tools2.classList.add('markup-tooltip-tools');\r\n\r\n    const arr = ['bold', 'italic', 'underline', 'strikethrough', 'monospace', 'spoiler', 'link'] as (keyof MarkupTooltip['buttons'])[];\r\n    arr.forEach(c => {\r\n      const button = ButtonIcon(c, {noRipple: true});\r\n      tools1.append(this.buttons[c] = button);\r\n\r\n      if(c !== 'link') {\r\n        button.addEventListener('mousedown', (e) => {\r\n          cancelEvent(e); \r\n          this.appImManager.chat.input.applyMarkdown(c);\r\n          this.cancelClosening();\r\n          \r\n          /* this.mouseUpCounter = 0;\r\n          this.setMouseUpEvent(); */\r\n          //this.hide();\r\n        });\r\n      } else {\r\n        attachClickEvent(button, (e) => {\r\n          cancelEvent(e);\r\n          this.showLinkEditor();\r\n          this.cancelClosening();\r\n        });\r\n      }\r\n    });\r\n\r\n    this.linkBackButton = ButtonIcon('left', {noRipple: true});\r\n    this.linkInput = document.createElement('input');\r\n    _i18n(this.linkInput, 'MarkupTooltip.LinkPlaceholder', undefined, 'placeholder');\r\n    this.linkInput.classList.add('input-clear');\r\n    this.linkInput.addEventListener('keydown', (e) => {\r\n      const valid = !this.linkInput.value.length || !!RichTextProcessor.matchUrl(this.linkInput.value);///^(http)|(https):\\/\\//i.test(this.linkInput.value);\r\n\r\n      if(e.key === 'Enter') {\r\n        if(!valid) {\r\n          if(this.linkInput.classList.contains('error')) {\r\n            this.linkInput.classList.remove('error');\r\n            void this.linkInput.offsetLeft; // reflow\r\n          }\r\n\r\n          this.linkInput.classList.add('error');\r\n        } else {\r\n          this.applyLink(e);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.linkInput.addEventListener('input', (e) => {\r\n      const valid = this.isLinkValid();\r\n\r\n      this.linkInput.classList.toggle('is-valid', valid);\r\n      this.linkInput.classList.remove('error');\r\n    });\r\n\r\n    this.linkBackButton.addEventListener('mousedown', (e) => {\r\n      //this.log('linkBackButton click');\r\n      cancelEvent(e);\r\n      this.container.classList.remove('is-link');\r\n      //input.value = '';\r\n      this.resetSelection();\r\n      this.setTooltipPosition();\r\n      this.cancelClosening();\r\n    });\r\n\r\n    this.linkApplyButton = ButtonIcon('check markup-tooltip-link-apply', {noRipple: true});\r\n    this.linkApplyButton.addEventListener('mousedown', (e) => {\r\n      //this.log('linkApplyButton click');\r\n      this.applyLink(e);\r\n    });\r\n\r\n    const applyDiv = document.createElement('div');\r\n    applyDiv.classList.add('markup-tooltip-link-apply-container');\r\n    \r\n    const delimiter1 = document.createElement('span');\r\n    const delimiter2 = document.createElement('span');\r\n    const delimiter3 = document.createElement('span');\r\n    delimiter1.classList.add('markup-tooltip-delimiter');\r\n    delimiter2.classList.add('markup-tooltip-delimiter');\r\n    delimiter3.classList.add('markup-tooltip-delimiter');\r\n    tools1.insertBefore(delimiter1, this.buttons.link);\r\n    applyDiv.append(delimiter3, this.linkApplyButton);\r\n    tools2.append(this.linkBackButton, delimiter2, this.linkInput, applyDiv);\r\n    //tools1.insertBefore(delimiter2, this.buttons.link.nextSibling);\r\n\r\n    this.wrapper.append(tools1, tools2);\r\n    this.container.append(this.wrapper);\r\n    document.body.append(this.container);\r\n    \r\n    window.addEventListener('resize', () => {\r\n      this.hide();\r\n    });\r\n  }\r\n\r\n  public showLinkEditor() {\r\n    if(!this.container || !this.container.classList.contains('is-visible')) { // * if not inited yet (Ctrl+A + Ctrl+K)\r\n      this.show();\r\n    }\r\n\r\n    const button = this.buttons.link;\r\n    this.container.classList.add('is-link');\r\n\r\n    const selection = document.getSelection();\r\n    this.savedRange = selection.getRangeAt(0);\r\n    \r\n    if(button.classList.contains('active')) {\r\n      const startContainer = this.savedRange.startContainer;\r\n      const anchor = startContainer.parentElement as HTMLAnchorElement;\r\n      this.linkInput.value = anchor.href;\r\n    } else {\r\n      this.linkInput.value = '';\r\n    }\r\n\r\n    this.setTooltipPosition(true);\r\n\r\n    setTimeout(() => {\r\n      this.linkInput.focus(); // !!! instant focus will break animation\r\n    }, 200);\r\n    this.linkInput.classList.toggle('is-valid', this.isLinkValid());\r\n  }\r\n\r\n  private applyLink(e: Event) {\r\n    cancelEvent(e);\r\n    this.resetSelection();\r\n    let url = this.linkInput.value;\r\n    if(url && !RichTextProcessor.matchUrlProtocol(url)) {\r\n      url = 'https://' + url;\r\n    }\r\n    this.appImManager.chat.input.applyMarkdown('link', url);\r\n    setTimeout(() => {\r\n      this.hide();\r\n    }, 0);\r\n  }\r\n\r\n  private isLinkValid() {\r\n    return !this.linkInput.value.length || !!RichTextProcessor.matchUrl(this.linkInput.value);\r\n  }\r\n\r\n  private resetSelection(range: Range = this.savedRange) {\r\n    const selection = window.getSelection();\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n    this.appImManager.chat.input.messageInput.focus();\r\n  }\r\n\r\n  public hide() {\r\n    //return;\r\n\r\n    if(this.init) return;\r\n\r\n    this.container.classList.remove('is-visible');\r\n    //document.removeEventListener('mouseup', this.onMouseUp);\r\n    document.removeEventListener('mouseup', this.onMouseUpSingle);\r\n    this.waitingForMouseUp = false;\r\n\r\n    appNavigationController.removeByType('markup');\r\n\r\n    if(this.hideTimeout) clearTimeout(this.hideTimeout);\r\n    this.hideTimeout = window.setTimeout(() => {\r\n      this.hideTimeout = undefined;\r\n      this.container.classList.add('hide');\r\n      this.container.classList.remove('is-link');\r\n    }, 200);\r\n  }\r\n\r\n  public getActiveMarkupButton() {\r\n    const nodes = getSelectedNodes();\r\n    const parents = [...new Set(nodes.map(node => node.parentNode))];\r\n    //if(parents.length > 1 && parents) return [];\r\n\r\n    const currentMarkups: Set<HTMLElement> = new Set();\r\n    (parents as HTMLElement[]).forEach(node => {\r\n      for(const type in markdownTags) {\r\n        const tag = markdownTags[type as MarkdownType];\r\n        const closest = node.closest(tag.match + ', [contenteditable]');\r\n        if(closest !== this.appImManager.chat.input.messageInput) {\r\n          currentMarkups.add(this.buttons[type as MarkdownType]);\r\n        }\r\n      }\r\n    });\r\n    \r\n\r\n    return [...currentMarkups];\r\n  }\r\n\r\n  public setActiveMarkupButton() {\r\n    const activeButtons = this.getActiveMarkupButton();\r\n\r\n    for(const i in this.buttons) {\r\n      // @ts-ignore\r\n      const button = this.buttons[i];\r\n      button.classList.toggle('active', activeButtons.includes(button));\r\n    }\r\n  }\r\n\r\n  private setTooltipPosition(isLinkToggle = false) {\r\n    const selection = document.getSelection();\r\n    const range = selection.getRangeAt(0);\r\n\r\n    const bodyRect = document.body.getBoundingClientRect();\r\n    const selectionRect = range.getBoundingClientRect();\r\n    const inputRect = this.appImManager.chat.input.rowsWrapper.getBoundingClientRect();\r\n\r\n    this.container.style.maxWidth = inputRect.width + 'px';\r\n\r\n    const visibleRect = getVisibleRect(undefined, this.appImManager.chat.input.messageInput, false, selectionRect);\r\n\r\n    const selectionTop = visibleRect.rect.top/* selectionRect.top */ + (bodyRect.top * -1);\r\n    \r\n    const currentTools = this.container.classList.contains('is-link') ? this.wrapper.lastElementChild : this.wrapper.firstElementChild;\r\n\r\n    const sizesRect = currentTools.getBoundingClientRect();\r\n    const top = selectionTop - sizesRect.height - 8;\r\n    \r\n    const minX = inputRect.left;\r\n    const maxX = (inputRect.left + inputRect.width) - Math.min(inputRect.width, sizesRect.width);\r\n    let left: number;\r\n    if(isLinkToggle) {\r\n      const containerRect = this.container.getBoundingClientRect();\r\n      left = clamp(containerRect.left, minX, maxX);\r\n    } else {\r\n      const x = selectionRect.left + (selectionRect.width - sizesRect.width) / 2;\r\n      left = clamp(x, minX, maxX);\r\n    }\r\n\r\n    /* const isClamped = x !== minX && x !== maxX && (left === minX || left === maxX || this.container.getBoundingClientRect().left >= maxX);\r\n\r\n    if(isLinkToggle && this.container.classList.contains('is-link') && !isClamped) return; */\r\n    \r\n    this.container.style.transform = `translate3d(${left}px, ${top}px, 0)`;\r\n  }\r\n\r\n  public show() {\r\n    if(this.init) {\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n\r\n    if(isSelectionEmpty()) {\r\n      this.hide();\r\n      return;\r\n    }\r\n\r\n    if(this.hideTimeout !== undefined) {\r\n      clearTimeout(this.hideTimeout);\r\n    }\r\n\r\n    if(this.container.classList.contains('is-visible')) {\r\n      return;\r\n    }\r\n\r\n    this.setActiveMarkupButton();\r\n    \r\n    this.container.classList.remove('is-link');\r\n    const isFirstShow = this.container.classList.contains('hide');\r\n    if(isFirstShow) {\r\n      this.container.classList.remove('hide');\r\n      this.container.classList.add('no-transition');\r\n    }\r\n    \r\n    this.setTooltipPosition();\r\n    \r\n    if(isFirstShow) {\r\n      void this.container.offsetLeft; // reflow\r\n      this.container.classList.remove('no-transition');\r\n    }\r\n    \r\n    this.container.classList.add('is-visible');\r\n\r\n    if(!IS_MOBILE) {\r\n      appNavigationController.pushItem({\r\n        type: 'markup',\r\n        onPop: () => {\r\n          this.hide();\r\n        }\r\n      });\r\n    }\r\n\r\n    //this.log('selection', selectionRect, activeButton);\r\n  }\r\n\r\n  /* private onMouseUp = (e: Event) => {\r\n    this.log('onMouseUp');\r\n    if(findUpClassName(e.target, 'markup-tooltip')) return;\r\n\r\n    this.hide();\r\n    //document.removeEventListener('mouseup', this.onMouseUp);\r\n  }; */\r\n\r\n  private onMouseUpSingle = (e?: Event) => {\r\n    //this.log('onMouseUpSingle');\r\n    this.waitingForMouseUp = false;\r\n\r\n    if(IS_TOUCH_SUPPORTED) {\r\n      e && cancelEvent(e);\r\n      if(this.mouseUpCounter++ === 0) {\r\n        this.resetSelection(this.savedRange);\r\n      } else {\r\n        this.hide();\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.show();\r\n\r\n    /* !isTouchSupported && document.addEventListener('mouseup', this.onMouseUp); */\r\n  };\r\n\r\n  public setMouseUpEvent() {\r\n    if(this.waitingForMouseUp) return;\r\n    this.waitingForMouseUp = true;\r\n\r\n    //this.log('setMouseUpEvent');\r\n\r\n    document.addEventListener('mouseup', this.onMouseUpSingle, {once: true});\r\n  }\r\n\r\n  public cancelClosening() {\r\n    if(IS_TOUCH_SUPPORTED && !IS_APPLE) {\r\n      document.removeEventListener('mouseup', this.onMouseUpSingle);\r\n      document.addEventListener('mouseup', (e) => {\r\n        cancelEvent(e);\r\n        this.mouseUpCounter = 1;\r\n        this.waitingForMouseUp = false;\r\n        this.setMouseUpEvent();\r\n      }, {once: true});\r\n    }\r\n  }\r\n\r\n  public handleSelection() {\r\n    if(this.addedListener) return;\r\n    this.addedListener = true;\r\n    document.addEventListener('selectionchange', (e) => {\r\n      //this.log('selectionchange');\r\n\r\n      if(document.activeElement === this.linkInput) {\r\n        return;\r\n      }\r\n\r\n      const messageInput = this.appImManager.chat.input.messageInput;\r\n      if(document.activeElement !== messageInput) {\r\n        this.hide();\r\n        return;\r\n      }\r\n\r\n      const selection = document.getSelection();\r\n      if(isSelectionEmpty(selection)) {\r\n        this.hide();\r\n        return;\r\n      }\r\n\r\n      if(IS_TOUCH_SUPPORTED) {\r\n        if(IS_APPLE) {\r\n          this.show();\r\n          this.setTooltipPosition(); // * because can skip this in .show();\r\n        } else {\r\n          if(this.mouseUpCounter === 2) {\r\n            this.mouseUpCounter = 0;\r\n            return;\r\n          }\r\n\r\n          this.savedRange = selection.getRangeAt(0);\r\n          this.setMouseUpEvent();\r\n          /* document.addEventListener('touchend', (e) => {\r\n            cancelEvent(e);\r\n            this.resetSelection(range);\r\n            this.show();\r\n          }, {once: true, passive: false}); */\r\n        }\r\n      } else if(this.container && this.container.classList.contains('is-visible')) {\r\n        this.setTooltipPosition();\r\n      } else if(messageInput.matches(':active')) {\r\n        this.setMouseUpEvent();\r\n      } else {\r\n        this.show();\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function getSelectedNodes() {\r\n  const nodes: Node[] = [];\r\n  const selection = window.getSelection();\r\n  for(let i = 0; i < selection.rangeCount; ++i) {\r\n    const range = selection.getRangeAt(i);\r\n    let {startContainer, endContainer} = range;\r\n    if(endContainer.nodeType !== 3) endContainer = endContainer.firstChild;\r\n    \r\n    while(startContainer && startContainer !== endContainer) {\r\n      nodes.push(startContainer.nodeType === 3 ? startContainer : startContainer.firstChild);\r\n      startContainer = startContainer.nextSibling;\r\n    }\r\n    \r\n    if(nodes[nodes.length - 1] !== endContainer) {\r\n      nodes.push(endContainer);\r\n    }\r\n  }\r\n\r\n  // * filter null's due to <br>\r\n  return nodes.filter(node => !!node);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// generate a path's arc data parameter\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\n\r\n// http://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands\r\nfunction arcParameter(rx: number, ry: number, xAxisRotation: number, largeArcFlag: number, sweepFlag: number, x: number, y: number) {\r\n  return [rx, ',', ry, ' ',\r\n          xAxisRotation, ' ',\r\n          largeArcFlag, ',',\r\n          sweepFlag, ' ',\r\n          x, ',', y ].join('');\r\n}\r\n\r\nexport default function generatePathData(x: number, y: number, width: number, height: number, tl: number, tr: number, br: number, bl: number) {\r\n  const data: string[] = [];\r\n\r\n  // start point in top-middle of the rectangle\r\n  data.push('M' + (x + width / 2) + ',' + y);\r\n\r\n  // next we go to the right\r\n  data.push('H' + (x + width - tr));\r\n\r\n  if(tr > 0) {\r\n    // now we draw the arc in the top-right corner\r\n    data.push('A' + arcParameter(tr, tr, 0, 0, 1, (x + width), (y + tr)));\r\n  }\r\n\r\n  // next we go down\r\n  data.push('V' + (y + height - br));\r\n\r\n  if(br > 0) {\r\n    // now we draw the arc in the lower-right corner\r\n    data.push('A' + arcParameter(br, br, 0, 0, 1, (x + width - br), (y + height)));\r\n  }\r\n\r\n  // now we go to the left\r\n  data.push('H' + (x + bl));\r\n\r\n  if(bl > 0) {\r\n    // now we draw the arc in the lower-left corner\r\n    data.push('A' + arcParameter(bl, bl, 0, 0, 1, (x + 0), (y + height - bl)));\r\n  }\r\n\r\n  // next we go up\r\n  data.push('V' + (y + tl));\r\n\r\n  if(tl > 0) {\r\n    // now we draw the arc in the top-left corner\r\n    data.push('A' + arcParameter(tl, tl, 0, 0, 1, (x + tl), (y + 0)));\r\n  }\r\n\r\n  // and we close the path\r\n  data.push('Z');\r\n\r\n  return data.join(' ');\r\n}\r\n\r\nMOUNT_CLASS_TO.generatePathData = generatePathData;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport generatePathData from \"../../helpers/generatePathData\";\r\nimport { FormatterArguments, i18n, LangPackKey } from \"../../lib/langPack\";\r\n\r\nexport default class ChatDragAndDrop {\r\n  container: HTMLDivElement;\r\n  svg: SVGSVGElement;\r\n  outlineWrapper: HTMLDivElement;\r\n  path: SVGPathElement;\r\n\r\n  constructor(appendTo: HTMLElement, private options: {\r\n    icon?: string,\r\n    header: LangPackKey,\r\n    headerArgs?: FormatterArguments,\r\n    subtitle?: LangPackKey,\r\n    onDrop: (e: DragEvent) => void\r\n  }) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('drop', 'z-depth-1');\r\n\r\n    this.outlineWrapper = document.createElement('div');\r\n    this.outlineWrapper.classList.add('drop-outline-wrapper');\r\n\r\n    this.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n    this.svg.classList.add('drop-outline');\r\n\r\n    this.path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    this.path.classList.add('drop-outline-path');\r\n\r\n    let dropIcon: HTMLElement;\r\n    if(options.icon) {\r\n      dropIcon = document.createElement('div');\r\n      dropIcon.classList.add('drop-icon', 'tgico-' + options.icon);\r\n    }\r\n\r\n    const dropHeader = document.createElement('div');\r\n    dropHeader.classList.add('drop-header');\r\n    dropHeader.append(i18n(options.header, options.headerArgs));\r\n\r\n    let dropSubtitle: HTMLElement;\r\n    if(options.subtitle) {\r\n      dropSubtitle = document.createElement('div');\r\n      dropSubtitle.classList.add('drop-subtitle');\r\n      dropSubtitle.append(i18n(options.subtitle));\r\n    }\r\n\r\n    this.svg.append(this.path);\r\n    this.outlineWrapper.append(this.svg);\r\n\r\n    this.container.append(...[this.outlineWrapper, dropIcon, dropHeader, dropSubtitle].filter(Boolean));\r\n    appendTo.append(this.container);\r\n\r\n    this.container.addEventListener('dragover', this.onDragOver);\r\n    this.container.addEventListener('dragleave', this.onDragLeave);\r\n    this.container.addEventListener('drop', this.onDrop);\r\n  }\r\n\r\n  onDragOver = (e: DragEvent) => {\r\n    this.container.classList.add('is-dragover');\r\n    //SetTransition(this.container, 'is-dragover', true, 500);\r\n  };\r\n\r\n  onDragLeave = (e: DragEvent) => {\r\n    this.container.classList.remove('is-dragover');\r\n    //SetTransition(this.container, 'is-dragover', false, 500);\r\n  };\r\n\r\n  onDrop = (e: DragEvent) => {\r\n    this.options.onDrop(e);\r\n  };\r\n\r\n  destroy() {\r\n    delete this.options;\r\n    this.container.remove();\r\n    this.container.removeEventListener('dragover', this.onDragOver);\r\n    this.container.removeEventListener('dragleave', this.onDragLeave);\r\n    this.container.removeEventListener('drop', this.onDrop);\r\n  }\r\n\r\n  setPath() {\r\n    const rect = this.outlineWrapper.getBoundingClientRect();\r\n    this.svg.setAttributeNS(null, 'preserveAspectRatio', 'none');\r\n    this.svg.setAttributeNS(null, 'viewBox', `0 0 ${rect.width} ${rect.height}`);\r\n    this.svg.setAttributeNS(null, 'width', `${rect.width}`);\r\n    this.svg.setAttributeNS(null, 'height', `${rect.height}`);\r\n\r\n    const radius = 10;\r\n    //const strokeWidth = 2;\r\n    const sizeX = rect.width - radius;\r\n    const sizeY = rect.height - radius;\r\n    const pos = radius / 2;\r\n    const d = generatePathData(pos, pos, sizeX, sizeY, radius, radius, radius, radius);\r\n    this.path.setAttributeNS(null, 'd', d);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { doubleRaf } from \"../schedulers\";\r\n\r\nexport default function disableTransition(elements: HTMLElement[]) {\r\n  elements.forEach(el => el.classList.add('no-transition'));\r\n\r\n  doubleRaf().then(() => {\r\n    elements.forEach(el => el.classList.remove('no-transition'));\r\n  });\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nexport const MAX_SPEED = 8.2;\nexport const MIN_SPEED = 0.8;\n\n// import { MIN_SPEED, MAX_SPEED } from './BlobDrawable';\n\ntype Radius = number[];\n\nexport default class LineBlobDrawable {\n  public maxRadius: number;\n  public minRadius: number;\n  private N: number;\n  private radius: Radius;\n  private radiusNext: Radius;\n  private progress: number[];\n  private speed: number[];\n  \n  constructor(n: number) {\n    this.maxRadius = 10;\n    this.minRadius = 0;\n    \n    this.N = n;\n    this.radius = new Array(n + 1);\n    \n    this.radiusNext = new Array(n + 1);\n    this.progress = new Array(n + 1);\n    this.speed = new Array(n + 1);\n    \n    for(let i = 0; i <= n; i++) {\n      this.generateBlob(this.radius, i);\n      this.generateBlob(this.radiusNext, i);\n      this.progress[i] = 0;\n    }\n  }\n  \n  private generateBlob(radius: Radius, i: number) {\n    const {maxRadius, minRadius, speed} = this;\n    \n    const radDif = maxRadius - minRadius;\n    radius[i] = minRadius + Math.random() * radDif;\n    speed[i] = 0.017 + 0.003 * Math.random();\n  }\n  \n  private generateNextBlob() {\n    const {radius, radiusNext, progress, N} = this;\n    for(let i = 0; i < N; i++) {\n      this.generateBlob(radius, i);\n      this.generateBlob(radiusNext, i);\n      progress[i] = 0.0;\n    }\n  }\n  \n  public update(amplitude: number, speedScale: number) {\n    const {N, progress, speed, radius, radiusNext} = this;\n    for(let i = 0; i <= N; i++) {\n      progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n      if(progress[i] >= 1.0) {\n        progress[i] = 0.0;\n        radius[i] = radiusNext[i];\n        this.generateBlob(radiusNext, i);\n      }\n    }\n  }\n  \n  public draw(left: number, top: number, right: number, bottom: number, canvas: HTMLCanvasElement, paint: (ctx: CanvasRenderingContext2D) => void, pinnedTop: number, progressToPinned: number) {\n    if(canvas.getContext) {\n      const ctx = canvas.getContext('2d');\n      // ctx.globalAlpha = 0.5;\n      // ctx.lineWidth = 1;\n      \n      ctx.beginPath();\n      ctx.moveTo(right, bottom);\n      ctx.lineTo(left, bottom);\n      \n      const {radius, radiusNext, N} = this;\n      for(let i = 0; i <= N; i++) {\n        if(i === 0) {\n          const progress = this.progress[i];\n          const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n          const y = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n          ctx.lineTo(left, y);\n        } else {\n          const progress = this.progress[i - 1];\n          const r1 = radius[i - 1] * (1.0 - progress) + radiusNext[i - 1] * progress;\n          const progressNext = this.progress[i];\n          const r2 = radius[i] * (1.0 - progressNext) + radiusNext[i] * progressNext;\n          const x1 = (right - left) / N * (i - 1);\n          const x2 = (right - left) / N * i;\n          const cx = x1 + (x2 - x1) / 2;\n          \n          const y1 = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n          const y2 = (top - r2) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n          ctx.bezierCurveTo(cx, y1, cx, y2, x2, y2);\n          if(i === N) {\n            ctx.lineTo(right, bottom);\n          }\n        }\n      }\n      \n      // ctx.scale(1.0, 1.0);\n      paint(ctx);\n      ctx.fill();\n      ctx.closePath();\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport GROUP_CALL_STATE from '../lib/calls/groupCallState';\nimport LineBlobDrawable from './lineBlobDrawable';\n\nexport class WeavingState {\n  public shader: (ctx: CanvasRenderingContext2D, left: number, top: number, right: number, bottom: number) => void;\n  \n  constructor(public stateId: GROUP_CALL_STATE) {\n    this.createGradient(stateId);\n  }\n  \n  public createGradient(stateId: GROUP_CALL_STATE) {\n    this.shader = (ctx, left, top, right, bottom) => {\n      ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n    };\n  }\n  \n  // Android colors\n  static getGradientFromType(ctx: CanvasRenderingContext2D, type: GROUP_CALL_STATE, x0: number, y0: number, x1: number, y1: number) {\n    const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\n    if(type === GROUP_CALL_STATE.MUTED_BY_ADMIN) {\n      gradient.addColorStop(0, '#F05459');\n      gradient.addColorStop(.4, '#766EE9');\n      gradient.addColorStop(1, '#57A4FE');\n    } else if(type === GROUP_CALL_STATE.UNMUTED) {\n      gradient.addColorStop(0, '#52CE5D');\n      gradient.addColorStop(1, '#00B1C0');\n    } else if(type === GROUP_CALL_STATE.MUTED) {\n      gradient.addColorStop(0, '#0976E3');\n      gradient.addColorStop(1, '#2BCEFF');\n    } else if(type === GROUP_CALL_STATE.CONNECTING) {\n      gradient.addColorStop(0, '#8599aa');\n      gradient.addColorStop(1, '#8599aa');\n    }\n    \n    return gradient;\n  }\n  \n  update(height: number, width: number, dt: number, amplitude: number) {\n    // TODO: move gradient here\n  }\n}\n\nexport default class TopbarWeave {\n  private focused: boolean;\n  private resizing: boolean;\n  private lastUpdateTime: number;\n  private amplitude: number;\n  private amplitude2: number;\n  \n  private states: Map<GROUP_CALL_STATE, WeavingState>;\n  private previousState: WeavingState;\n  private currentState: WeavingState;\n  private progressToState: number;\n  \n  private scale: number;\n  private left: number;\n  private top: number;\n  private right: number;\n  private bottom: number;\n  \n  private mounted: boolean;\n  private media: MediaQueryList;\n  \n  private container: HTMLDivElement;\n  private canvas: HTMLCanvasElement;\n  \n  private resizeHandler: number;\n  private raf: number;\n\n  private lbd: LineBlobDrawable;\n  private lbd1: LineBlobDrawable;\n  private lbd2: LineBlobDrawable;\n\n  private animateToAmplitude: number;\n  private animateAmplitudeDiff: number;\n  private animateAmplitudeDiff2: number;\n  \n  constructor() {\n    this.focused = true;\n    this.resizing = false;\n    this.lastUpdateTime = Date.now();\n    this.amplitude = 0.0;\n    this.amplitude2 = 0.0;\n    \n    this.states = new Map([\n      [GROUP_CALL_STATE.UNMUTED, new WeavingState(GROUP_CALL_STATE.UNMUTED)],\n      [GROUP_CALL_STATE.MUTED, new WeavingState(GROUP_CALL_STATE.MUTED)],\n      [GROUP_CALL_STATE.MUTED_BY_ADMIN, new WeavingState(GROUP_CALL_STATE.MUTED_BY_ADMIN)],\n      [GROUP_CALL_STATE.CONNECTING, new WeavingState(GROUP_CALL_STATE.CONNECTING)],\n    ]);\n    this.previousState = null;\n    this.currentState = this.states.get(GROUP_CALL_STATE.CONNECTING);\n    this.progressToState = 1.0;\n  }\n  \n  public componentDidMount() {\n    if(this.mounted) {\n      return;\n    }\n\n    this.mounted = true;\n    // window.addEventListener('blur', this.handleBlur);\n    // window.addEventListener('focus', this.handleFocus);\n    window.addEventListener('resize', this.handleResize);\n    this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n    this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    \n    this.setSize();\n    this.forceUpdate();\n    \n    this.lbd = new LineBlobDrawable(3);\n    this.lbd1 = new LineBlobDrawable(7);\n    this.lbd2 = new LineBlobDrawable(8);\n    this.setAmplitude(this.amplitude);\n    \n    this.draw();\n  }\n  \n  public componentWillUnmount() {\n    this.mounted = false;\n    // window.removeEventListener('blur', this.handleBlur);\n    // window.removeEventListener('focus', this.handleFocus);\n    window.removeEventListener('resize', this.handleResize);\n    this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n    const {canvas} = this;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  }\n\n  private setSize() {\n    this.scale = window.devicePixelRatio;\n    this.top = 20 * this.scale;\n    this.right = (this.mounted ? this.container.offsetWidth : 1261) * this.scale;\n    this.bottom = (this.mounted ? this.container.offsetHeight : 68) * this.scale;\n    this.left = 0 * this.scale;\n    this.setCanvasSize();\n  }\n\n  private setCanvasSize() {\n    this.canvas.width = this.right;\n    this.canvas.height = this.bottom;\n  }\n  \n  private handleDevicePixelRatioChanged = (e: Event) => {\n    this.setSize();\n    this.forceUpdate();\n  }\n  \n  private handleResize = () => {\n    if(this.resizeHandler) {\n      clearTimeout(this.resizeHandler);\n      this.resizeHandler = null;\n    }\n    \n    this.resizing = true;\n    this.resizeCanvas();\n    this.resizeHandler = window.setTimeout(() => {\n      this.resizing = false;\n      this.invokeDraw();\n    }, 250);\n  }\n  \n  private resizeCanvas() {\n    this.scale = window.devicePixelRatio;\n    this.right = this.container.offsetWidth * this.scale;\n    \n    this.forceUpdate();\n    this.invokeDraw();\n  }\n  \n  public handleFocus = () => {\n    this.focused = true;\n    this.invokeDraw();\n  }\n  \n  public handleBlur = () => {\n    this.focused = false;\n  }\n  \n  private invokeDraw = () => {\n    if(this.raf) return;\n    \n    this.draw();\n  }\n  \n  private draw = (force = false) => {\n    this.raf = null;\n    if(!this.mounted) {\n      return;\n    }\n    const {lbd, lbd1, lbd2, scale, left, top, right, bottom, currentState, previousState, focused, resizing, canvas} = this;\n    if(!focused && !resizing && this.progressToState >= 1.0) {\n      return;\n    }\n    \n    // console.log('[top] draw', [focused, resizing, this.mounted]);\n    \n    const newTime = Date.now();\n    let dt = (newTime - this.lastUpdateTime);\n    if(dt > 20) {\n      dt = 17;\n    }\n    \n    // console.log('draw start', this.amplitude, this.animateToAmplitude);\n    if(this.animateToAmplitude !== this.amplitude) {\n      this.amplitude += this.animateAmplitudeDiff * dt;\n      if(this.animateAmplitudeDiff > 0) {\n        if(this.amplitude > this.animateToAmplitude) {\n          this.amplitude = this.animateToAmplitude;\n        }\n      } else {\n        if(this.amplitude < this.animateToAmplitude) {\n          this.amplitude = this.animateToAmplitude;\n        }\n      }\n    }\n    \n    if(this.animateToAmplitude !== this.amplitude2) {\n      this.amplitude2 += this.animateAmplitudeDiff2 * dt;\n      if(this.animateAmplitudeDiff2 > 0) {\n        if(this.amplitude2 > this.animateToAmplitude) {\n          this.amplitude2 = this.animateToAmplitude;\n        }\n      } else {\n        if(this.amplitude2 < this.animateToAmplitude) {\n          this.amplitude2 = this.animateToAmplitude;\n        }\n      }\n    }\n    \n    if(previousState) {\n      this.progressToState += dt / 250;\n      if(this.progressToState > 1) {\n        this.progressToState = 1;\n        this.previousState = null;\n      }\n    }\n\n    const {amplitude, amplitude2, progressToState} = this;\n    \n    const top1 = 6 * amplitude2 * scale;\n    const top2 = 6 * amplitude2 * scale;\n    \n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    lbd.minRadius = 0;\n    lbd.maxRadius = (2 + 2 * amplitude) * scale;\n    lbd1.minRadius = 0;\n    lbd1.maxRadius = (3 + 9 * amplitude) * scale;\n    lbd2.minRadius = 0;\n    lbd2.maxRadius = (3 + 9 * amplitude) * scale;\n    \n    lbd.update(amplitude, 0.3);\n    lbd1.update(amplitude, 0.7);\n    lbd2.update(amplitude, 0.7);\n    \n    for(let i = 0; i < 2; i++) {\n      if(i === 0 && !previousState) {\n        continue;\n      }\n      \n      let alpha = 1;\n      let state: WeavingState = null;\n      if(i === 0) {\n        alpha = 1 - progressToState;\n        state = previousState;\n        // previousState.setToPaint(paint);\n      } else {\n        alpha = previousState ? progressToState : 1;\n        currentState.update(bottom - top, right - left, dt, amplitude);\n        state = currentState;\n        // currentState.setToPaint(paint);\n      }\n      \n      const paint1 = (ctx: CanvasRenderingContext2D) => {\n        ctx.globalAlpha = 0.3 * alpha;\n        state.shader(ctx, left, top, right, bottom);\n      };\n      const paint = (ctx: CanvasRenderingContext2D) => {\n        ctx.globalAlpha = i === 0 ? 1 : alpha;\n        state.shader(ctx, left, top, right, bottom);\n      };\n      \n      lbd1.draw(left, top - top1, right, bottom, canvas, paint1, top, 1.0);\n      lbd2.draw(left, top - top2, right, bottom, canvas, paint1, top, 1.0);\n      lbd.draw(left, top, right, bottom, canvas, paint, top, 1.0);\n    }\n    \n    if(!force) {\n      this.raf = requestAnimationFrame(() => this.draw());\n    }\n  };\n  \n  public setCurrentState = (stateId: GROUP_CALL_STATE, animated: boolean) => {\n    const {currentState, states} = this;\n    \n    if(currentState?.stateId === stateId) {\n      return;\n    }\n    \n    this.previousState = animated ? currentState : null;\n    this.currentState = states.get(stateId);\n    this.progressToState = this.previousState ? 0.0 : 1.0;\n  };\n  \n  public setAmplitude(value: number) {\n    const {amplitude} = this;\n    this.animateToAmplitude = value;\n    this.animateAmplitudeDiff = (value - amplitude) / 250;\n    this.animateAmplitudeDiff2 = (value - amplitude) / 120;\n  }\n\n  private forceUpdate() {\n    this.setCanvasSize();\n  }\n  \n  public render(className: string) {\n    const container = this.container = document.createElement('div');\n    container.classList.add(className);\n\n    const canvas = this.canvas = document.createElement('canvas');\n    canvas.classList.add(className + '-canvas');\n\n    container.append(canvas);\n\n    return container;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport rootScope from \"../../lib/rootScope\";\n\nexport type CustomProperty = string;\n\nexport class CustomProperties {\n  private cache: {[k in CustomProperty]?: string};\n  private computedStyle: CSSStyleDeclaration;\n\n  constructor() {\n    this.cache = {};\n\n    rootScope.addEventListener('theme_change', () => {\n      this.computedStyle = undefined;\n      const cache = this.cache;\n      this.cache = {};\n\n      for(let i in cache) {\n        this.getProperty(i);\n      }\n    });\n  }\n\n  public getProperty(name: CustomProperty) {\n    let value = this.cache[name];\n    if(value) {\n      return value;\n    }\n\n    if(!this.computedStyle) {\n      this.computedStyle = window.getComputedStyle(document.documentElement);\n    }\n\n    value = this.computedStyle.getPropertyValue('--' + name).trim();\n    return this.cache[name] = value;\n  }\n}\n\nconst customProperties = new CustomProperties();\nexport default customProperties;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport noop from \"../../helpers/noop\";\nimport safeAssign from \"../../helpers/object/safeAssign\";\nimport rootScope from \"../rootScope\";\nimport lottieLoader, { LottieAssetName } from \"./lottieLoader\";\nimport type RLottiePlayer from \"./rlottiePlayer\";\nimport { RLottieColor } from \"./rlottiePlayer\";\n\nexport type RLottieIconOptions = {\n  width: number,\n  height: number,\n  container?: HTMLElement,\n  skipAnimation?: boolean\n};\n\nexport type RLottieIconItemPartOptions = {\n  startFrame: number,\n  endFrame: number,\n  name?: string\n};\n\nexport type RLottieIconItemOptions = {\n  name: LottieAssetName,\n  parts: RLottieIconItemPartOptions[],\n  initFrame?: number,\n  player?: RLottiePlayer,\n  autoplay?: boolean,\n  color?: RLottieColor,\n  inverseColor?: RLottieColor,\n};\n\nexport class RLottieIconItemPart implements RLottieIconItemPartOptions {\n  public startFrame: number;\n  public endFrame: number;\n  public name?: string;\n  \n  constructor(public item: RLottieIconItem, options: RLottieIconItemPartOptions) {\n    safeAssign(this, options);\n  }\n\n  public play(callback?: () => void) {\n    return this.item.playPart(this, callback);\n  }\n}\n\n// export type RLottieIconItemPart = RLottieIconItemPartOptions;\n\nexport class RLottieIconItem implements RLottieIconItemOptions {\n  public name: LottieAssetName;\n  public parts: RLottieIconItemPart[];\n  public player: RLottiePlayer;\n  public initFrame: number;\n  public autoplay: boolean;\n  public color: RLottieColor;\n  public inverseColor: RLottieColor;\n  public loadPromise: Promise<void>;\n  public onLoadForPart: () => void;\n  public onLoadForColor: () => void;\n\n  constructor(public icon: RLottieIcon, options: RLottieIconItemOptions) {\n    this.autoplay = false;\n\n    safeAssign(this, options);\n\n    this.parts = this.parts.map(options => this.createPart(options));\n  }\n\n  public load() {\n    let loadPromise = this.loadPromise;\n    if(loadPromise) {\n      return loadPromise;\n    }\n\n    const {container, canvas, width, height} = this.icon;\n    loadPromise = lottieLoader.loadAnimationAsAsset({\n      container,\n      canvas,\n      width,\n      height,\n      group: 'none',\n      loop: false,\n      autoplay: this.autoplay ?? false,\n      initFrame: this.initFrame,\n      skipFirstFrameRendering: this.initFrame === undefined,\n      color: this.color,\n      inverseColor: this.inverseColor\n    }, this.name).then(player => {\n      return lottieLoader.waitForFirstFrame(player);\n    }).then(player => {\n      this.player = player;\n\n      if(this.onLoadForColor) {\n        this.onLoadForColor();\n        this.onLoadForColor = undefined;\n      }\n\n      if(this.onLoadForPart) {\n        this.onLoadForPart();\n        this.onLoadForPart = undefined;\n      }\n    });\n\n    this.loadPromise = loadPromise;\n    this.icon.loadPromises.set(this.name, loadPromise);\n    return loadPromise;\n  }\n\n  public createPart(options: RLottieIconItemPartOptions) {\n    return new RLottieIconItemPart(this, options);\n  }\n\n  public getPart(index: string | number | RLottieIconItemPart) {\n    if(index instanceof RLottieIconItemPart) return index;\n    else if(typeof(index) === 'string') return this.parts.find(part => part.name === index);\n    else return this.parts[index];\n  }\n\n  public playPart(part: RLottieIconItemPart, callback?: () => void) {\n    return this.icon.playPart(this, part, callback);\n  }\n}\n\nexport default class RLottieIcon {\n  public container: HTMLElement;\n  public canvas: HTMLCanvasElement;\n  public width: number;\n  public height: number;\n\n  protected items: Map<LottieAssetName, RLottieIconItem>;\n  public loadPromises: Map<LottieAssetName, Promise<void>>;\n\n  protected skipAnimation: boolean;\n\n  constructor(options: RLottieIconOptions) {\n    safeAssign(this, options);\n\n    if(!this.container) this.container = document.createElement('div');\n    this.container.classList.add('rlottie-icon');\n\n    const {width, height} = this;\n    this.container.style.width = width + 'px';\n    this.container.style.height = height + 'px';\n\n    const canvas = this.canvas = document.createElement('canvas');\n    canvas.classList.add('rlottie');\n    canvas.width = width;\n    canvas.height = height;\n\n    this.items = new Map();\n    this.loadPromises = new Map();\n  }\n\n  public get loadPromise() {\n    return Promise.all([...this.loadPromises.values()]).then(noop);\n  }\n\n  public getItem(name?: LottieAssetName): RLottieIconItem {\n    return !name && this.items.size === 1 ? this.items.values().next().value : this.items.get(name);\n  }\n\n  public add(options: Omit<RLottieIconItemOptions, 'player'>) {\n    const item = new RLottieIconItem(this, options);\n    this.items.set(options.name, item);\n\n    return item;\n  }\n\n  public playPart(item: RLottieIconItem, index: Parameters<RLottieIconItem['getPart']>[0], callback?: () => void) {\n    if(!item.player) {\n      item.onLoadForPart = () => {\n        this.playPart(item, index, callback);\n      };\n\n      return;\n    }\n    \n    const part = item.getPart(index);\n    item.player.playPart({\n      from: rootScope.settings.animationsEnabled && !this.skipAnimation ? part.startFrame : part.endFrame, \n      to: part.endFrame,\n      callback\n    });\n  }\n\n  /* public playToPart(item: RLottieIconItem, index: Parameters<RLottieIconItem['getPart']>[0], toEnd: boolean) {\n    if(!item.player) return;\n    const part = item.getPart(index);\n    const toFrame = toEnd ? part.endFrame : part.startFrame;\n    item.player.playToFrame({\n      frame: toFrame\n    });\n  } */\n  \n  public static generateEqualParts(length: number, frameCount: number): RLottieIconItemPartOptions[] {\n    return new Array(length).fill(0).map((_, idx) => {\n      const startFrame = idx * frameCount;\n      return {startFrame, endFrame: startFrame + frameCount - 1};\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport noop from \"../helpers/noop\";\nimport safeAssign from \"../helpers/object/safeAssign\";\nimport { LottieAssetName } from \"../lib/rlottie/lottieLoader\";\nimport RLottieIcon, { RLottieIconItemPartOptions, RLottieIconItemPart } from \"../lib/rlottie/rlottieIcon\";\nimport { RLottieColor } from \"../lib/rlottie/rlottiePlayer\";\n\nexport type SuperRLottieIconAddItemOptions = {name: LottieAssetName, parts: RLottieIconItemPartOptions};\nexport type SuperRLottieIconGetInfoResult = RLottieIconItemPart;\nexport class SuperRLottieIcon<Options extends {\n  PartState: any,\n  ColorState?: any,\n  Items?: {\n    name: string\n  }[]\n}> extends RLottieIcon {\n  protected getPart: (state: Options['PartState'], prevState?: Options['PartState']) => SuperRLottieIconGetInfoResult;\n  protected getColor?: (state: Options['ColorState'], prevState?: Options['ColorState']) => RLottieColor;\n\n  protected partState: Options['PartState'];\n  protected colorState: Options['ColorState'];\n  protected loaded: boolean;\n\n  constructor(options: {\n    width: number,\n    height: number,\n    skipAnimation?: boolean,\n    getPart: (state: Options['PartState'], prevState?: Options['PartState']) => SuperRLottieIconGetInfoResult,\n    getColor?: (state: Options['ColorState'], prevState?: Options['ColorState']) => RLottieColor,\n  }) {\n    super({\n      width: options.width,\n      height: options.height\n    });\n\n    safeAssign(this, options);\n\n    // hook the first call\n    /* const originalFunction = this.setState.bind(this);\n    this.setState = (partState, colorState) => {\n      this.setState = originalFunction;\n      this.load(partState, colorState);\n      return originalFunction(partState, colorState);\n    }; */\n  }\n\n  public load(partState: Options['PartState'], colorState?: Options['ColorState']) {\n    if(this.loaded) {\n      return this.loadPromise;\n    }\n\n    this.loaded = true;\n    this.partState = partState;\n    this.colorState = colorState;\n\n    const part = this.getPart(partState);\n    const color = colorState !== undefined && this.getColor && this.getColor(colorState);\n\n    const item = part.item;\n    item.initFrame = part.endFrame;\n    item.color = color;\n\n    const promises = [...this.items.values()].map(item => item.load());\n    return Promise.all(promises).then(noop);\n  }\n\n  /**\n   * Will redirect setting color state to part callback to synchronize the rendering\n   */\n  public setState(partState: Options['PartState'], colorState?: Options['ColorState'], partCallback?: () => void) {\n    if(!this.loaded) this.load(partState, colorState);\n\n    let changedPartState = false, changedColorState = false;\n    if(partState !== undefined) changedPartState = this.setPartState(partState, colorState, partCallback);\n    else if(colorState !== undefined) changedColorState = this.setColorState(colorState);\n\n    return changedPartState || changedColorState;\n  }\n\n  public setPartState(state: Options['PartState'], colorState?: Options['ColorState'], callback?: () => void) {\n    const {partState: prevState} = this;\n    if(prevState === state) {\n      return colorState !== undefined ? this.setColorState(colorState) : false;\n    }\n\n    if(colorState !== undefined) {\n      this.setColorState(colorState, false);\n    }\n\n    this.partState = state;\n\n    const part = this.getPart(state, prevState);\n    part.play(callback);\n\n    return true;\n  }\n\n  public setColorState(state: Options['ColorState'], renderIfPaused = true) {\n    const {colorState: prevState} = this;\n    if(prevState === state || !this.getColor) {\n      return false;\n    }\n\n    this.colorState = state;\n    \n    const item = this.getItem();\n    const color = this.getColor(state, prevState);\n    const invoke = () => {\n      item.player.setColor(color, renderIfPaused);\n    };\n    \n    if(item.player) {\n      invoke();\n    } else {\n      item.onLoadForColor = invoke;\n    }\n\n    return true;\n  }\n\n  public destroy() {\n    this.items.forEach(item => {\n      item.loadPromise.then(() => {\n        item.player.remove();\n      });\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { RLottieIconItemPartOptions } from \"../../lib/rlottie/rlottieIcon\";\nimport { GROUP_CALL_MICROPHONE_BUTTON_STATE } from \".\";\nimport { SuperRLottieIcon } from \"../superIcon\";\n\nexport default class GroupCallMicrophoneIcon extends SuperRLottieIcon<{\n  PartState: GROUP_CALL_MICROPHONE_BUTTON_STATE\n}> {\n  constructor() {\n    super({\n      width: 36,\n      height: 36,\n      getPart: (state, prevState) => {\n        const states = GROUP_CALL_MICROPHONE_BUTTON_STATE;\n        let partName: string;\n        switch(state) {\n          case states.HAND:\n            partName = prevState === states.MUTED ? 'muted-to-hand' : 'unmuted-to-hand';\n            break;\n          case states.MUTED:\n            partName = prevState === states.HAND ? 'hand-to-muted' : 'mute';\n            break;\n          case states.UNMUTED:\n            partName = 'unmute';\n            break;\n        }\n\n        return this.getItem().getPart(partName);\n      }\n    });\n\n    const className = 'group-call-microphone-icon';\n    this.container.classList.add(className + '-container');\n\n    const parts: RLottieIconItemPartOptions[] = [{\n      startFrame: 0,\n      endFrame: 35,\n      name: 'hand-to-muted'\n    }, {\n      startFrame: 36,\n      endFrame: 68,\n      name: 'unmute'\n    }, {\n      startFrame: 69,\n      endFrame: 98,\n      name: 'mute'\n    }, {\n      startFrame: 99,\n      endFrame: 135,\n      name: 'muted-to-hand'\n    }, {\n      startFrame: 136,\n      endFrame: 172,\n      name: 'unmuted-to-hand'\n    }, {\n      startFrame: 173,\n      endFrame: 201,\n      name: 'scheduled-crossing'\n    }, {\n      startFrame: 202,\n      endFrame: 236,\n      name: 'scheduled-to-muted'\n    }, {\n      startFrame: 237,\n      endFrame: 273,\n      name: 'scheduled-to-hand'\n    }, {\n      startFrame: 274,\n      endFrame: 310,\n      name: 'scheduled-crossed-to-hand'\n    }, {\n      startFrame: 311,\n      endFrame: 343,\n      name: 'scheduled-uncrossing'\n    }, {\n      startFrame: 344,\n      endFrame: 375,\n      name: 'scheduled-to-muted'\n    }, {\n      startFrame: 376,\n      endFrame: 403,\n      name: 'play-to-muted'\n    }];\n\n    this.add({\n      name: 'voip_filled',\n      parts\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport RLottieIcon from \"../../lib/rlottie/rlottieIcon\";\nimport { GROUP_CALL_PARTICIPANT_CLEARED_MUTED_STATE, GROUP_CALL_PARTICIPANT_MUTED_STATE, getColorByMutedState, clearMutedStateModifier } from \".\";\nimport { SuperRLottieIcon } from \"../superIcon\";\n\nexport default class GroupCallParticipantMutedIcon extends SuperRLottieIcon<{\n  PartState: GROUP_CALL_PARTICIPANT_CLEARED_MUTED_STATE, \n  ColorState: GROUP_CALL_PARTICIPANT_MUTED_STATE\n}> {\n  constructor(private colored: boolean) {\n    super({\n      width: 32,\n      height: 32,\n      getPart: (state, prevState) => {\n        const states = GROUP_CALL_PARTICIPANT_MUTED_STATE;\n\n        let index: number;\n        switch(state) {\n          case states.HAND:\n            index = 3;\n            break;\n          case states.MUTED:\n            index = prevState === states.HAND ? 0 : 2;\n            break;\n          case states.UNMUTED:\n            index = 1;\n            break;\n        }\n\n        return this.getItem().getPart(index);\n      },\n      getColor: colored ? (state, prevState) => {\n        return getColorByMutedState(state);\n      } : undefined\n    });\n\n    const className = 'group-call-participant-muted-icon';\n    this.container.classList.add(className + '-container');\n\n    const parts = RLottieIcon.generateEqualParts(4, 21);\n    this.add({\n      name: 'voice_outlined2',\n      parts\n    });\n  }\n\n  public setState(state: GROUP_CALL_PARTICIPANT_MUTED_STATE) {\n    return super.setState(clearMutedStateModifier(state), state);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport PopupElement from \"../popups\";\nimport { hexToRgb } from \"../../helpers/color\";\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\nimport customProperties from \"../../helpers/dom/customProperties\";\nimport { GroupCall, GroupCallParticipant } from \"../../layer\";\nimport type { AppChatsManager } from \"../../lib/appManagers/appChatsManager\";\nimport type { AppGroupCallsManager } from \"../../lib/appManagers/appGroupCallsManager\";\nimport type { AppPeersManager } from \"../../lib/appManagers/appPeersManager\";\nimport GROUP_CALL_STATE from \"../../lib/calls/groupCallState\";\nimport { RLottieColor } from \"../../lib/rlottie/rlottiePlayer\";\nimport rootScope from \"../../lib/rootScope\";\nimport ButtonIcon from \"../buttonIcon\";\nimport GroupCallMicrophoneIcon from \"./microphoneIcon\";\nimport GroupCallParticipantsElement from \"./participants\";\nimport GroupCallParticipantsVideoElement from \"./participantVideos\";\nimport PopupPeer from \"../popups/peer\";\nimport GroupCallDescriptionElement from \"./description\";\nimport GroupCallTitleElement from \"./title\";\nimport { addFullScreenListener, cancelFullScreen, isFullScreen, requestFullScreen } from \"../../helpers/dom/fullScreen\";\nimport Scrollable from \"../scrollable\";\nimport { MovableState } from \"../movableElement\";\nimport animationIntersector from \"../animationIntersector\";\nimport { IS_APPLE_MOBILE } from \"../../environment/userAgent\";\nimport throttle from \"../../helpers/schedulers/throttle\";\nimport IS_SCREEN_SHARING_SUPPORTED from \"../../environment/screenSharingSupport\";\nimport GroupCallInstance from \"../../lib/calls/groupCallInstance\";\nimport makeButton from \"../call/button\";\nimport MovablePanel from \"../../helpers/movablePanel\";\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\nimport safeAssign from \"../../helpers/object/safeAssign\";\nimport toggleClassName from \"../../helpers/toggleClassName\";\n\nexport enum GROUP_CALL_PARTICIPANT_MUTED_STATE {\n  UNMUTED,\n  MUTED,\n  MUTED_FOR_ME,\n  MUTED_BY_ADMIN,\n  HAND\n}\n\nexport type GROUP_CALL_PARTICIPANT_CLEARED_MUTED_STATE = Exclude<GROUP_CALL_PARTICIPANT_MUTED_STATE, GROUP_CALL_PARTICIPANT_MUTED_STATE.MUTED_BY_ADMIN | GROUP_CALL_PARTICIPANT_MUTED_STATE.MUTED_FOR_ME>;\n\nexport function getGroupCallParticipantMutedState(participant: GroupCallParticipant) {\n  const states = GROUP_CALL_PARTICIPANT_MUTED_STATE;\n  if(participant.pFlags.muted_by_you) {\n    return states.MUTED_FOR_ME;\n  } else if(participant.raise_hand_rating !== undefined) {\n    return states.HAND;\n  } else if(participant.pFlags.muted) {\n    return participant.pFlags.can_self_unmute ? states.MUTED : states.MUTED_BY_ADMIN;\n  } else {\n    return states.UNMUTED;\n  }\n}\n\nexport function clearMutedStateModifier(state: GROUP_CALL_PARTICIPANT_MUTED_STATE): GROUP_CALL_PARTICIPANT_CLEARED_MUTED_STATE {\n  const states = GROUP_CALL_PARTICIPANT_MUTED_STATE;\n  switch(state) {\n    case states.MUTED_BY_ADMIN:\n    case states.MUTED_FOR_ME:\n      return states.MUTED;\n    default:\n      return state;\n  }\n}\n\nexport function getColorByMutedState(state: GROUP_CALL_PARTICIPANT_MUTED_STATE) {\n  const states = GROUP_CALL_PARTICIPANT_MUTED_STATE;\n  let color: RLottieColor, colorStr: 'blue' | 'green' | 'secondary' | 'red';\n  switch(state) {\n    case states.HAND:\n      colorStr = 'blue';\n      break;\n    case states.MUTED:\n    case states.MUTED_FOR_ME:\n    case states.MUTED_BY_ADMIN:\n      colorStr = state === states.MUTED ? 'secondary' : 'red';\n      break;\n    case states.UNMUTED:\n      colorStr = 'green';\n      break;\n  }\n\n  const propertyValue = customProperties.getProperty('gc-' + colorStr + '-text-color');\n  color = hexToRgb(propertyValue);\n\n  return color;\n}\n\nexport enum GROUP_CALL_MICROPHONE_BUTTON_STATE {\n  HAND,\n  MUTED,\n  UNMUTED,\n}\n\nexport function getGroupCallMicrophoneButtonState(groupCall: GroupCall.groupCall, participant: GroupCallParticipant) {\n  const states = GROUP_CALL_MICROPHONE_BUTTON_STATE;\n  if(!participant.pFlags.can_self_unmute) {\n    return states.HAND;\n  } else if(participant.pFlags.muted) {\n    return states.MUTED\n  } else {\n    return states.UNMUTED;\n  }\n}\n\nlet previousState: MovableState = {\n  width: 420,\n  height: 640\n};\n\nconst className = 'group-call';\n\nexport default class PopupGroupCall extends PopupElement {\n  private appGroupCallsManager: AppGroupCallsManager;\n  private appPeersManager: AppPeersManager;\n  private appChatsManager: AppChatsManager;\n  private instance: GroupCallInstance;\n  private groupCallTitle: GroupCallTitleElement;\n  private groupCallDescription: GroupCallDescriptionElement;\n  private groupCallBodyHeaderDescription: GroupCallDescriptionElement;\n  private groupCallParticipants: GroupCallParticipantsElement;\n  private groupCallParticipantsVideo: GroupCallParticipantsVideoElement;\n  private groupCallMicrophoneIcon: GroupCallMicrophoneIcon;\n  private videosCount: number;\n  private btnFullScreen: HTMLButtonElement;\n  private btnExitFullScreen: HTMLButtonElement;\n  private btnInvite: HTMLButtonElement;\n  private btnShowColumn: HTMLButtonElement;\n  private movablePanel: MovablePanel;\n  private buttonsContainer: HTMLDivElement;\n  private btnFullScreen2: HTMLButtonElement;\n  private btnVideo: HTMLDivElement;\n  private btnScreen: HTMLDivElement;\n\n  constructor(options: {\n    appGroupCallsManager: AppGroupCallsManager,\n    appPeersManager: AppPeersManager,\n    appChatsManager: AppChatsManager,\n  }) {\n    super('popup-group-call', undefined, {\n      body: true,\n      withoutOverlay: true,\n      closable: true\n    });\n\n    safeAssign(this, options);\n\n    this.videosCount = 0;\n    this.container.classList.add(className, 'night');\n\n    const instance = this.instance = this.appGroupCallsManager.groupCall;\n    const {listenerSetter} = this;\n\n    if(!IS_APPLE_MOBILE) {\n      const btnFullScreen = this.btnFullScreen = ButtonIcon('fullscreen');\n      const btnFullScreen2 = this.btnFullScreen2 = ButtonIcon('fullscreen ' + className + '-cfs');\n      const btnExitFullScreen = this.btnExitFullScreen = ButtonIcon('smallscreen');\n  \n      attachClickEvent(btnFullScreen, this.onFullScreenClick, {listenerSetter});\n      attachClickEvent(btnFullScreen2, this.onFullScreenClick, {listenerSetter});\n  \n      attachClickEvent(btnExitFullScreen, () => {\n        cancelFullScreen();\n      }, {listenerSetter});\n  \n      addFullScreenListener(this.container, this.onFullScreenChange, listenerSetter);\n    }\n\n    const btnInvite = this.btnInvite = ButtonIcon('adduser');\n    const btnShowColumn = this.btnShowColumn = ButtonIcon('rightpanel ' + className + '-only-big');\n\n    attachClickEvent(btnShowColumn, this.toggleRightColumn, {listenerSetter});\n\n    const headerInfo = document.createElement('div');\n    headerInfo.classList.add(className + '-header-info');\n\n    this.title.classList.add(className + '-header-title');\n\n    const subtitle = document.createElement('div');\n    subtitle.classList.add(className + '-header-subtitle');\n\n    headerInfo.append(this.title, subtitle);\n\n    this.header.classList.add(className + '-header');\n    this.header.append(...[this.btnExitFullScreen, headerInfo/* , btnInvite */, this.btnFullScreen, btnShowColumn].filter(Boolean));\n\n    const newHeader = this.header.cloneNode(false) as HTMLElement;\n    const newHeaderInfo = headerInfo.cloneNode(false) as HTMLElement;\n    const newHeaderTitle = this.title.cloneNode(false) as HTMLElement;\n\n    newHeaderInfo.append(newHeaderTitle);\n\n    const btnHideColumn = ButtonIcon('rightpanel');\n    newHeader.append(...[btnHideColumn, newHeaderInfo, this.btnFullScreen2].filter(Boolean));\n\n    attachClickEvent(btnHideColumn, this.toggleRightColumn, {listenerSetter});\n\n    this.body.prepend(newHeader);\n\n    const videosScrollable = new Scrollable(undefined);\n    videosScrollable.container.classList.add('group-call-big-video-container');\n    this.container.append(videosScrollable.container);\n\n    this.groupCallTitle = new GroupCallTitleElement(this.title);\n    this.groupCallDescription = new GroupCallDescriptionElement(subtitle);\n    this.groupCallBodyHeaderDescription = new GroupCallDescriptionElement(newHeaderTitle);\n    this.constructButtons();\n\n    this.groupCallParticipantsVideo = new GroupCallParticipantsVideoElement({\n      appendTo: videosScrollable.container,\n      instance,\n      listenerSetter,\n      displayPinned: true,\n      onLengthChange: (length) => {\n        this.videosCount = length;\n        this.toggleBigLayout();\n      },\n      ...options\n    });\n    this.groupCallParticipants = new GroupCallParticipantsElement({\n      appendTo: this.body,\n      instance,\n      listenerSetter,\n      ...options\n    });\n\n    this.movablePanel = new MovablePanel({\n      listenerSetter,\n      movableOptions: {\n        minWidth: 400,\n        minHeight: 480,\n        element: this.element,\n        verifyTouchTarget: (e) => {\n          const target = e.target;\n          if(findUpClassName(target, 'chatlist') || \n            findUpClassName(target, 'group-call-button') || \n            findUpClassName(target, 'btn-icon') ||\n            findUpClassName(target, 'group-call-participants-video-container') ||\n            isFullScreen()) {\n            return false;\n          }\n\n          return true;\n        }\n      },\n      onResize: () => this.toggleBigLayout(),\n      previousState\n    });\n\n    listenerSetter.add(instance)('state', () => {\n      this.updateInstance();\n    });\n\n    listenerSetter.add(rootScope)('group_call_update', (groupCall) => {\n      if(this.instance?.id === groupCall.id) {\n        this.updateInstance();\n      }\n    });\n\n    listenerSetter.add(instance)('pinned', () => {\n      this.setHasPinned();\n    });\n\n    listenerSetter.add(this.groupCallParticipantsVideo)('toggleControls', this.onToggleControls);\n\n    this.addEventListener('close', () => {\n      const {movablePanel} = this;\n      previousState = movablePanel.state;\n\n      this.groupCallParticipantsVideo.destroy();\n      this.groupCallParticipants.destroy();\n      this.groupCallMicrophoneIcon.destroy();\n\n      movablePanel.destroy();\n    });\n\n    this.toggleRightColumn();\n    this.onFullScreenChange();\n\n    this.updateInstance();\n  }\n\n  private constructButtons() {\n    const buttons = this.buttonsContainer = document.createElement('div');\n    buttons.classList.add(className + '-buttons');\n\n    const _makeButton = makeButton.bind(null, className, this.listenerSetter);\n\n    const btnVideo = this.btnVideo = _makeButton({\n      // text: 'VoiceChat.Video.Stream.Video',\n      callback: this.onVideoClick,\n      icon: 'videocamera_filled'\n    });\n\n    const btnScreen = this.btnScreen = _makeButton({\n      // text: 'VoiceChat.Video.Stream.Screencast',\n      callback: this.onScreenClick,\n      icon: 'sharescreen_filled'\n    });\n\n    btnScreen.classList.toggle('hide', !IS_SCREEN_SHARING_SUPPORTED);\n\n    const btnMute = _makeButton({\n      noRipple: true,\n      callback: throttle(this.onMuteClick, 600, true)\n    });\n    btnMute.classList.add(className + '-microphone-button');\n\n    const microphoneIcon = this.groupCallMicrophoneIcon = new GroupCallMicrophoneIcon();\n    btnMute.append(microphoneIcon.container);\n\n    const btnMore = _makeButton({\n      // text: 'VoiceChat.Video.Stream.More'\n      icon: 'settings_filled'\n    });\n\n    btnMore.classList.add('btn-disabled');\n    btnMore.classList.toggle('hide', !IS_SCREEN_SHARING_SUPPORTED);\n\n    const btnLeave = _makeButton({\n      // text: 'VoiceChat.Leave',\n      isDanger: true,\n      callback: this.onLeaveClick,\n      icon: 'close'\n    });\n\n    buttons.append(btnVideo, btnScreen, btnMute, btnMore, btnLeave);\n\n    this.container.append(buttons);\n  }\n\n  private onFullScreenClick = () => {\n    requestFullScreen(this.container);\n  };\n\n  private onToggleControls = (show: boolean) => {\n    this.container.classList.toggle('show-controls', show);\n    this.buttonsContainer.classList.toggle('show-controls', show);\n  };\n\n  private toggleDisability = toggleClassName.bind(null, 'btn-disabled');\n\n  private onVideoClick = () => {\n    const toggle = this.toggleDisability([this.btnVideo], true);\n    this.instance.toggleVideoSharing().finally(() => {\n      toggle();\n    });\n  };\n\n  private onScreenClick = () => {\n    const toggle = this.toggleDisability([this.btnScreen], true);\n    this.instance.toggleScreenSharing().finally(() => {\n      toggle();\n    });\n  };\n\n  private onMuteClick = () => {\n    const participant = this.instance.participant;\n    if(!participant.pFlags.can_self_unmute) {\n      if(participant.raise_hand_rating === undefined) {\n        this.instance.changeRaiseHand(true);\n      }\n    } else {\n      this.instance.toggleMuted();\n    }\n  };\n  \n  private onLeaveClick = () => {\n    const hangUp = (discard: boolean) => {\n      this.instance.hangUp(discard);\n    };\n\n    if(this.appChatsManager.hasRights(this.instance.chatId, 'manage_call')) {\n      new PopupPeer('popup-end-video-chat', {\n        titleLangKey: 'VoiceChat.End.Title',\n        descriptionLangKey: 'VoiceChat.End.Text',\n        checkboxes: [{\n          text: 'VoiceChat.End.Third'\n        }],\n        buttons: [{\n          langKey: 'VoiceChat.End.OK',\n          callback: (checkboxes) => {\n            hangUp(!!checkboxes.size);\n          },\n          isDanger: true,\n        }]\n      }).show();\n    } else {\n      hangUp(false);\n    }\n  };\n\n  public getContainer() {\n    return this.container;\n  }\n\n  private onFullScreenChange = () => {\n    this.toggleBigLayout();\n    const isFull = isFullScreen();\n\n    const {btnFullScreen, btnExitFullScreen} = this;\n\n    const wasFullScreen = this.container.classList.contains('is-full-screen');\n    this.container.classList.toggle('is-full-screen', isFull);\n    btnFullScreen && btnFullScreen.classList.toggle('hide', isFull);\n    btnExitFullScreen && btnExitFullScreen.classList.toggle('hide', !isFull);\n    this.btnClose.classList.toggle('hide', isFull);\n\n    if(isFull !== wasFullScreen) {\n      animationIntersector.checkAnimations(isFull);\n\n      rootScope.setThemeColor(isFull ? '#000000' : undefined);\n    }\n  };\n\n  private toggleBigLayout = () => {\n    const isFull = isFullScreen();\n    const movable = this.movablePanel?.movable;\n    const isBig = (isFull || !!(movable && movable.width >= 680)) && !!this.videosCount;\n\n    /* if(!isBig && isFull) {\n      cancelFullScreen();\n      return;\n    } */\n\n    const wasBig = this.container.classList.contains('is-big-layout');\n    let buttons: HTMLElement[];\n    if(isBig && !wasBig) { // fix buttons transition to 0 opacity\n      buttons = Array.from(this.buttonsContainer.children) as HTMLElement[];\n      buttons.forEach(element => {\n        element.style.opacity = '0';\n      });\n\n      void this.buttonsContainer.offsetLeft;\n    }\n\n    this.container.classList.toggle('is-big-layout', isBig);\n    this.btnInvite.classList.toggle('hide', isBig);\n    this.btnShowColumn.classList.toggle('hide', !isBig);\n\n    if(buttons) {\n      // window.requestAnimationFrame(() => {\n        buttons.forEach(element => {\n          element.style.opacity = '';\n        });\n      // });\n    }\n  };\n\n  private toggleRightColumn = () => {\n    this.container.classList.toggle('is-right-column-shown');\n  };\n\n  private setHasPinned() {\n    this.container.classList.toggle('has-pinned', !!this.instance.pinnedSource);\n  }\n\n  private updateInstance() {\n    if(this.instance.state === GROUP_CALL_STATE.CLOSED) {\n      if(this.container.classList.contains('is-full-screen')) {\n        cancelFullScreen();\n      }\n\n      this.hide();\n      return;\n    }\n\n    const {participant, groupCall} = this.instance;\n    if(!participant) {\n      return;\n    }\n\n    this.setTitle();\n    this.setDescription();\n    this.setHasPinned();\n\n    const microphoneButtonState = getGroupCallMicrophoneButtonState(groupCall as any, participant);\n    this.container.dataset.micState = microphoneButtonState === GROUP_CALL_MICROPHONE_BUTTON_STATE.HAND ? 'hand' : (microphoneButtonState === GROUP_CALL_MICROPHONE_BUTTON_STATE.MUTED ? 'muted' : 'unmuted');\n    this.groupCallMicrophoneIcon.setState(microphoneButtonState);\n  }\n\n  private setTitle() {\n    this.groupCallTitle.update(this.instance);\n  }\n\n  private setDescription() {\n    this.groupCallDescription.update(this.instance);\n    this.groupCallBodyHeaderDescription.update(this.instance);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport replaceContent from \"../../helpers/dom/replaceContent\";\nimport setInnerHTML from \"../../helpers/dom/setInnerHTML\";\nimport { GroupCallParticipant } from \"../../layer\";\nimport { i18n } from \"../../lib/langPack\";\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\nimport { GROUP_CALL_PARTICIPANT_MUTED_STATE } from \".\";\nimport { GroupCallParticipantVideoType } from \"./participantVideo\";\n\nconst className = 'group-call-participant-status';\nexport default class GroupCallParticipantStatusElement {\n  public container: HTMLElement;\n\n  constructor(private withIcons: GroupCallParticipantVideoType[]) {\n    this.container = document.createElement('div');\n    this.container.classList.add(className + '-container');\n  }\n\n  public setState(state: GROUP_CALL_PARTICIPANT_MUTED_STATE, participant: GroupCallParticipant) {\n    const states = GROUP_CALL_PARTICIPANT_MUTED_STATE;\n    const icons = this.withIcons.filter(type => !!participant[type]).map(type => {\n      const iconClassName = `tgico-${type === 'presentation' ? 'listscreenshare' : 'videocamera_filled'}`;\n      const i = document.createElement('i');\n      i.classList.add(className + '-icon', className + '-icon-' + type, iconClassName);\n      return i;\n    });\n\n    let element2: HTMLElement, actionClassName: string;\n    if(state === states.MUTED_FOR_ME) {\n      element2 = i18n('VoiceChat.Status.MutedForYou');\n      actionClassName = 'is-muted';\n    } else if(state === states.UNMUTED) {\n      element2 = i18n('VoiceChat.Status.Speaking');\n      actionClassName = 'is-speaking';\n    } else if(state === states.HAND) {\n      element2 = i18n('VoiceChat.Status.WantsSpeak');\n      actionClassName = 'is-waiting';\n    } else if(participant.about && !icons.length) {\n      setInnerHTML(this.container, RichTextProcessor.wrapEmojiText(participant.about));\n      return;\n    } else {\n      element2 = i18n('VoiceChat.Status.Listening');\n      actionClassName = 'is-listening';\n    }\n\n    const span = document.createElement('span');\n    span.classList.add(className, actionClassName);\n    span.append(...icons, element2);\n    \n    replaceContent(this.container, span);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport positionElementByIndex from \"../../helpers/dom/positionElementByIndex\";\nimport replaceContent from \"../../helpers/dom/replaceContent\";\nimport { fastRaf } from \"../../helpers/schedulers\";\nimport SortedList, { SortedElementBase } from \"../../helpers/sortedList\";\nimport { GroupCallParticipant } from \"../../layer\";\nimport appDialogsManager, { DialogDom, AppDialogsManager } from \"../../lib/appManagers/appDialogsManager\";\nimport { LazyLoadQueueIntersector } from \"../lazyLoadQueue\";\nimport { getGroupCallParticipantMutedState } from \".\";\nimport GroupCallParticipantMutedIcon from \"./participantMutedIcon\";\nimport GroupCallParticipantStatusElement from \"./participantStatus\";\nimport type GroupCallInstance from \"../../lib/calls/groupCallInstance\";\n\ninterface SortedParticipant extends SortedElementBase {\n  dom: DialogDom,\n  participant: GroupCallParticipant,\n  mutedIcon: GroupCallParticipantMutedIcon,\n  status: GroupCallParticipantStatusElement\n}\n\nexport default class GroupCallParticipantsList extends SortedList<SortedParticipant> {\n  public list: HTMLUListElement;\n  \n  protected lazyLoadQueue: LazyLoadQueueIntersector;\n  protected avatarSize = 54;\n  protected rippleEnabled = true;\n  protected autonomous = true;\n  protected createChatListOptions: Parameters<AppDialogsManager['createChatList']>[0] = {/* new: true,  */dialogSize: 72};\n\n  constructor(private instance: GroupCallInstance) {\n    super({\n      getIndex: (element) => element.participant.date,\n      onDelete: (element) => {\n        element.dom.listEl.remove();\n        this.onElementDestroy(element);\n      },\n      onUpdate: (element) => {\n        const {participant} = element;\n\n        const state = getGroupCallParticipantMutedState(participant);\n\n        element.mutedIcon.setState(state);\n        element.status.setState(state, participant);\n      },\n      onSort: (element, idx) => {\n        positionElementByIndex(element.dom.listEl, this.list, idx);\n      },\n      onElementCreate: (base) => {\n        const {dom} = appDialogsManager.addDialogNew({\n          dialog: base.id,\n          container: false,\n          drawStatus: false,\n          avatarSize: this.avatarSize,\n          autonomous: this.autonomous,\n          meAsSaved: false,\n          rippleEnabled: this.rippleEnabled,\n          lazyLoadQueue: this.lazyLoadQueue\n        });\n\n        const className = 'group-call-participant';\n        dom.listEl.classList.add(className);\n\n        const participant = instance.participants.get(base.id);\n        const mutedState = getGroupCallParticipantMutedState(participant);\n\n        const mutedIcon = new GroupCallParticipantMutedIcon(true);\n        const status = new GroupCallParticipantStatusElement(['presentation', 'video']);\n        \n        mutedIcon.setState(mutedState);\n        status.setState(mutedState, participant);\n\n        replaceContent(dom.lastMessageSpan, status.container);\n        dom.listEl.append(mutedIcon.container);\n\n        (base as SortedParticipant).dom = dom;\n        (base as SortedParticipant).participant = participant;\n        (base as SortedParticipant).mutedIcon = mutedIcon;\n        (base as SortedParticipant).status = status;\n\n        return base as SortedParticipant;\n      },\n      updateElementWith: fastRaf\n    });\n\n    this.list = appDialogsManager.createChatList(this.createChatListOptions);\n  }\n\n  public destroy() {\n    this.elements.forEach((element) => {\n      this.onElementDestroy(element);\n    });\n  }\n\n  protected onElementDestroy(element: SortedParticipant) {\n    element.mutedIcon.destroy();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { animate } from \"../../helpers/animation\";\n\nexport default function callVideoCanvasBlur(video: HTMLVideoElement) {\n  const canvas = document.createElement('canvas');\n  canvas.classList.add('call-video-blur');\n  const size = 16;\n  canvas.width = size;\n  canvas.height = size;\n\n  const ctx = canvas.getContext('2d');\n  ctx.filter = 'blur(2px)';\n  const renderFrame = () => {\n    ctx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight, 0, 0, canvas.width, canvas.height);\n  };\n\n  animate(() => {\n    renderFrame();\n    return canvas.isConnected;\n  });\n\n  renderFrame();\n\n  return canvas;\n}","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { GroupCallParticipant } from \"../../layer\";\nimport type { GroupCallOutputSource } from \"../../lib/appManagers/appGroupCallsManager\";\nimport type { AppPeersManager } from \"../../lib/appManagers/appPeersManager\";\nimport { i18n } from \"../../lib/langPack\";\nimport PeerTitle from \"../peerTitle\";\nimport { getGroupCallParticipantMutedState } from \".\";\nimport GroupCallParticipantMutedIcon from \"./participantMutedIcon\";\nimport GroupCallParticipantStatusElement from \"./participantStatus\";\nimport GroupCallInstance from \"../../lib/calls/groupCallInstance\";\nimport callVideoCanvasBlur from \"../call/videoCanvasBlur\";\n\nconst className = 'group-call-participant-video';\n\nexport type GroupCallParticipantVideoType = 'video' | 'presentation';\nexport default class GroupCallParticipantVideoElement {\n  public container: HTMLElement;\n  private peerTitle: PeerTitle;\n  private subtitle: HTMLElement;\n  private info: HTMLElement;\n  private left: HTMLElement;\n  private right: HTMLElement;\n  private header: HTMLElement;\n  private groupCallParticipantMutedIcon: GroupCallParticipantMutedIcon;\n  private groupCallParticipantStatus: GroupCallParticipantStatusElement;\n\n  constructor(private appPeersManager: AppPeersManager, private instance: GroupCallInstance, public source: GroupCallOutputSource) {\n    this.container = document.createElement('div');\n    this.container.classList.add(className + '-container');\n\n    this.info = document.createElement('div');\n    this.info.classList.add(className + '-info');\n\n    this.left = document.createElement('div');\n    this.left.classList.add(className + '-info-left');\n\n    this.right = document.createElement('div');\n    this.right.classList.add(className + '-info-right');\n\n    this.info.append(this.left, this.right);\n    \n    this.container.append(this.info);\n  }\n\n  public setPinned(value: boolean) {\n    if(!value) {\n      if(this.header) {\n        this.header.remove();\n        this.header = undefined;\n      }\n\n      return;\n    } else if(this.header) {\n      return;\n    }\n    \n    // if(!this.header) {\n      this.header = document.createElement('div');\n      this.header.classList.add(className + '-header');\n  \n      const icon = document.createElement('i');\n      icon.classList.add('group-call-pin-icon', 'tgico-pin');\n      this.header.append(icon);\n  \n      this.container.append(this.header);\n    // }\n    \n    // this.container.classList.toggle('is-pinned', value);\n  }\n\n  public setParticipant(participant: GroupCallParticipant, type: GroupCallParticipantVideoType, video: HTMLVideoElement) {\n    let peerTitleElement: HTMLElement;\n    if(participant.pFlags.self) {\n      peerTitleElement = i18n('VoiceChat.Status.You');\n      peerTitleElement.classList.add('peer-title');\n    } else {\n      this.peerTitle = new PeerTitle({\n        peerId: this.appPeersManager.getPeerId(participant.peer)\n      });\n\n      peerTitleElement = this.peerTitle.element;\n    }\n\n    this.groupCallParticipantMutedIcon = new GroupCallParticipantMutedIcon(false);\n    this.groupCallParticipantStatus = new GroupCallParticipantStatusElement([type]);\n\n    this.left.append(peerTitleElement, this.groupCallParticipantStatus.container);\n\n    this.right.append(this.groupCallParticipantMutedIcon.container);\n\n    video.classList.add(className, 'call-video');\n\n    if(video.paused) {\n      video.play();\n    }\n\n    const canvas = callVideoCanvasBlur(video);\n    canvas.classList.add(className + '-blur');\n    \n    this.container.prepend(canvas, video);\n\n    this.updateParticipant(participant);\n  }\n\n  public updateParticipant(participant: GroupCallParticipant) {\n    const state = getGroupCallParticipantMutedState(participant);\n\n    this.groupCallParticipantMutedIcon.setState(state);\n    this.groupCallParticipantStatus.setState(state, participant);\n  }\n\n  public destroy() {\n    this.groupCallParticipantMutedIcon.destroy();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\nimport ControlsHover from \"../../helpers/dom/controlsHover\";\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\nimport ListenerSetter from \"../../helpers/listenerSetter\";\nimport safeAssign from \"../../helpers/object/safeAssign\";\nimport { GroupCallParticipant } from \"../../layer\";\nimport { AppGroupCallsManager, GroupCallOutputSource } from \"../../lib/appManagers/appGroupCallsManager\";\nimport type { AppPeersManager } from \"../../lib/appManagers/appPeersManager\";\nimport GroupCallInstance from \"../../lib/calls/groupCallInstance\";\nimport rootScope from \"../../lib/rootScope\";\nimport GroupCallParticipantVideoElement, { GroupCallParticipantVideoType } from \"./participantVideo\";\n\nexport default class GroupCallParticipantsVideoElement extends ControlsHover {\n  private container: HTMLDivElement;\n  private instance: GroupCallInstance;\n  private appGroupCallsManager: AppGroupCallsManager;\n  private appPeersManager: AppPeersManager;\n  private participantsElements: Map<PeerId, Map<GroupCallParticipantVideoType, GroupCallParticipantVideoElement>>;\n  private displayPinned: boolean;\n  private containers: Map<HTMLElement, GroupCallParticipantVideoElement>;\n  private onLengthChange: (length: number) => void;\n\n  constructor(options: {\n    appendTo: HTMLElement,\n    appGroupCallsManager: AppGroupCallsManager,\n    appPeersManager: AppPeersManager,\n    instance: GroupCallInstance,\n    listenerSetter: ListenerSetter,\n    displayPinned: boolean,\n    onLengthChange?: GroupCallParticipantsVideoElement['onLengthChange']\n  }) {\n    super();\n    safeAssign(this, options);\n\n    const className = 'group-call-participants-video';\n    const container = this.container = document.createElement('div');\n    this.container.classList.add(className + '-container');\n    \n    options.appendTo.append(container);\n\n    this.participantsElements = new Map();\n    this.containers = new Map();\n\n    const {listenerSetter} = this;\n\n    listenerSetter.add(rootScope)('group_call_participant', ({groupCallId, participant}) => {\n      if(this.instance.id === groupCallId) {\n        this.updateParticipant(participant);\n      }\n    });\n\n    listenerSetter.add(this.instance)('pinned', (source) => {\n      this.participantsElements.forEach((map) => {\n        map.forEach((element) => {\n          this.setElementDisplay(element, source);\n        });\n      });\n    });\n\n    attachClickEvent(this.container, (e) => {\n      const container = findUpClassName(e.target, 'group-call-participant-video-container');\n      if(!container) {\n        return;\n      }\n\n      const element = this.containers.get(container);\n      if(this.instance.pinnedSource === element.source) {\n        this.instance.unpinAll();\n        return;  \n      }\n      \n      this.instance.pinSource(element.source);\n    }, {listenerSetter});\n\n    this.setInstance(this.instance);\n\n    this.setup({\n      element: container,\n      listenerSetter: listenerSetter,\n      showOnLeaveToClassName: 'group-call-buttons'\n    });\n  }\n\n  private shouldDisplayElement(element: GroupCallParticipantVideoElement, pinnedSource: GroupCallOutputSource) {\n    return this.displayPinned ? !pinnedSource || element.source === pinnedSource : pinnedSource && element.source !== pinnedSource;\n  }\n\n  private setElementDisplay(element: GroupCallParticipantVideoElement, pinnedSource: GroupCallOutputSource) {\n    const shouldDisplay = this.shouldDisplayElement(element, pinnedSource);\n    element.container.classList.toggle('video-hidden', !shouldDisplay);\n\n    const isPinned = element.source === pinnedSource;\n    element.setPinned(isPinned);\n  }\n\n  private updateParticipant(participant: GroupCallParticipant) {\n    const peerId = this.appPeersManager.getPeerId(participant.peer);\n    const types: GroupCallParticipantVideoType[] = ['video', 'presentation'];\n    const hasAnyVideo = types.some(type => !!participant[type]);\n    let participantElements = this.participantsElements.get(peerId);\n    if(!hasAnyVideo && !participantElements) {\n      return;\n    }\n\n    if(!participantElements) {\n      this.participantsElements.set(peerId, participantElements = new Map());\n    }\n\n    types.forEach(type => {\n      let element = participantElements.get(type);\n      const participantVideo = participant[type];\n      if(!!participantVideo === !!element) {\n        if(element) {\n          element.updateParticipant(participant);\n        }\n\n        return;\n      }\n\n      if(participantVideo) {\n        const result = this.instance.getVideoElementFromParticipantByType(participant, type);\n        if(!result) {\n          return;\n        }\n\n        const {video, source} = result;\n\n        element = new GroupCallParticipantVideoElement(this.appPeersManager, this.instance, source);\n\n        this.containers.set(element.container, element);\n\n        this.setElementDisplay(element, this.instance.pinnedSource);\n        participantElements.set(type, element);\n        element.setParticipant(participant, type, video);\n    \n        this.container.prepend(element.container);\n      } else {\n        participantElements.delete(type);\n        element.container.remove();\n        \n        if(!participantElements.size) {\n          this.participantsElements.delete(peerId);\n          this.containers.delete(element.container);\n          element.destroy();\n        }\n      }\n\n      this._onLengthChange();\n    });\n  }\n\n  private _onLengthChange() {\n    const length = this.container.childElementCount;\n    this.container.dataset.length = '' + length;\n    this.container.dataset.layout = length <= 2 ? '1' : (length === 3 ? '3' : '4');\n\n    this.onLengthChange && this.onLengthChange(length);\n  }\n\n  public setInstance(instance: GroupCallInstance) {\n    instance.participants.forEach((participant) => {\n      this.updateParticipant(participant);\n    });\n  }\n\n  public destroy() {\n    this.containers.forEach((element) => {\n      element.destroy();\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport PopupGroupCall from \".\";\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\nimport { addFullScreenListener, isFullScreen } from \"../../helpers/dom/fullScreen\";\nimport ListenerSetter from \"../../helpers/listenerSetter\";\nimport noop from \"../../helpers/noop\";\nimport safeAssign from \"../../helpers/object/safeAssign\";\nimport ScrollableLoader from \"../../helpers/scrollableLoader\";\nimport { GroupCallParticipant } from \"../../layer\";\nimport type { AppChatsManager } from \"../../lib/appManagers/appChatsManager\";\nimport type { AppGroupCallsManager } from \"../../lib/appManagers/appGroupCallsManager\";\nimport type { AppPeersManager } from \"../../lib/appManagers/appPeersManager\";\nimport GroupCallInstance from \"../../lib/calls/groupCallInstance\";\nimport rootScope from \"../../lib/rootScope\";\nimport ButtonMenu, { ButtonMenuItemOptions } from \"../buttonMenu\";\nimport confirmationPopup from \"../confirmationPopup\";\nimport { attachContextMenuListener, closeBtnMenu, openBtnMenu, positionMenu } from \"../misc\";\nimport PeerTitle from \"../peerTitle\";\nimport PopupElement from \"../popups\";\nimport Scrollable from \"../scrollable\";\nimport GroupCallParticipantsList from \"./participantsList\";\nimport GroupCallParticipantsVideoElement from \"./participantVideos\";\n\nexport class GroupCallParticipantContextMenu {\n  private buttons: (ButtonMenuItemOptions & {verify: (peerId: PeerId) => boolean})[];\n  private element: HTMLDivElement;\n  private appChatsManager: AppChatsManager;\n  private appPeersManager: AppPeersManager;\n  private appGroupCallsManager: AppGroupCallsManager;\n  private chatId: ChatId;\n  private targetPeerId: PeerId;\n  private participant: GroupCallParticipant;\n  private instance: GroupCallInstance;\n  private canManageCall: boolean;\n  \n  constructor(options: {\n    listenerSetter: ListenerSetter,\n    onContextElement: HTMLElement,\n    appChatsManager: AppChatsManager,\n    appPeersManager: AppPeersManager,\n    appGroupCallsManager: AppGroupCallsManager,\n    instance: GroupCallInstance,\n  }) {\n    this.buttons = [{\n      icon: 'gc_microphoneoff',\n      text: 'VoiceChat.MutePeer',\n      verify: () => this.canManageCall && this.participant.pFlags.can_self_unmute,\n      onClick: () => this.toggleParticipantMuted(true)\n    }, {\n      icon: 'gc_microphone',\n      text: 'VoiceChat.UnmutePeer',\n      verify: () => this.canManageCall && !this.participant.pFlags.can_self_unmute,\n      onClick: () => this.toggleParticipantMuted(false)\n    }, {\n      icon: 'gc_microphoneoff',\n      text: 'VoiceChat.MuteForMe',\n      verify: () => !this.canManageCall && !this.participant.pFlags.muted_by_you,\n      onClick: () => this.toggleParticipantMuted(true)\n    }, {\n      icon: 'gc_microphone',\n      text: 'VoiceChat.UnmuteForMe',\n      verify: () => !this.canManageCall && this.participant.pFlags.muted_by_you,\n      onClick: () => this.toggleParticipantMuted(false)\n    }, {\n      icon: 'newprivate',\n      text: 'VoiceChat.OpenProfile',\n      verify: () => true,\n      onClick: this.onOpenProfileClick\n    }, {\n      icon: 'deleteuser danger',\n      text: 'VoiceChat.RemovePeer',\n      verify: () => this.appChatsManager.hasRights(this.chatId, 'ban_users'),\n      onClick: () => {\n        confirmationPopup({\n          peerId: this.targetPeerId,\n          title: new PeerTitle({peerId: this.targetPeerId}).element,\n          descriptionLangKey: this.appChatsManager.isBroadcast(this.chatId) ? 'VoiceChat.RemovePeer.Confirm.Channel' : 'VoiceChat.RemovePeer.Confirm',\n          descriptionLangArgs: [new PeerTitle({peerId: this.targetPeerId}).element],\n          button: {\n            langKey: 'VoiceChat.RemovePeer.Confirm.OK',\n            isDanger: true\n          }\n        }).then(() => {\n          this.appChatsManager.kickFromChat(this.chatId, this.targetPeerId);\n        }, noop);\n      }\n    }];\n\n    const {listenerSetter} = options;\n    this.appChatsManager = options.appChatsManager;\n    this.appPeersManager = options.appPeersManager;\n    this.appGroupCallsManager = options.appGroupCallsManager;\n    this.instance = options.instance;\n    this.chatId = this.instance.chatId;\n  \n    this.element = ButtonMenu(this.buttons, listenerSetter);\n    this.element.classList.add('group-call-participant-menu', 'night');\n\n    attachContextMenuListener(options.onContextElement, (e: any) => {\n      const li = findUpClassName(e.target, 'group-call-participant');\n      if(!li) {\n        return;\n      }\n\n      if(this.element.parentElement !== appendTo) {\n        appendTo.append(this.element);\n      }\n\n      const peerId = this.targetPeerId = li.dataset.peerId.toPeerId();\n      this.participant = this.instance.getParticipantByPeerId(peerId);\n      if(this.participant.pFlags.self) {\n        return;\n      }\n\n      this.canManageCall = this.appChatsManager.hasRights(this.chatId, 'manage_call');\n\n      this.buttons.forEach(button => {\n        button.element.classList.toggle('hide', !button.verify(peerId));\n      });\n      \n      cancelEvent(e);\n      positionMenu((e as TouchEvent).touches ? (e as TouchEvent).touches[0] : e as MouseEvent, this.element, 'right');\n      openBtnMenu(this.element);\n    }, listenerSetter);\n\n    listenerSetter.add(rootScope)('group_call_participant', ({groupCallId, participant}) => {\n      if(this.instance.id === groupCallId) {\n        const peerId = this.appPeersManager.getPeerId(participant.peer);\n        if(this.targetPeerId === peerId) {\n          closeBtnMenu();\n        }\n      }\n    });\n\n    let appendTo: HTMLElement = document.body;\n    addFullScreenListener(document.body, () => {\n      const isFull = isFullScreen();\n      appendTo = isFull ? (PopupElement.getPopups(PopupGroupCall) as PopupGroupCall[])[0].getContainer(): document.body;\n\n      if(!isFull) {\n        closeBtnMenu();\n      }\n    }, listenerSetter);\n  }\n\n  private onOpenProfileClick = () => {\n    const popup = PopupElement.getPopups(PopupGroupCall)[0];\n    if(popup) {\n      popup.hide();\n    }\n\n    rootScope.dispatchEvent('history_focus', {\n      peerId: this.targetPeerId\n    });\n  };\n\n  private toggleParticipantMuted = (muted: boolean) => {\n    this.appGroupCallsManager.editParticipant(this.instance.id, this.participant, {\n      muted\n    });\n  };\n};\n\nexport default class GroupCallParticipantsElement {\n  private container: HTMLDivElement;\n  private sortedList: GroupCallParticipantsList;\n  private instance: GroupCallInstance;\n  private appGroupCallsManager: AppGroupCallsManager;\n  private appPeersManager: AppPeersManager;\n  private listenerSetter: ListenerSetter;\n  private groupCallParticipantsVideo: GroupCallParticipantsVideoElement;\n  private contextMenu: GroupCallParticipantContextMenu;\n  private appChatsManager: AppChatsManager;\n\n  constructor(options: {\n    appendTo: HTMLElement,\n    appGroupCallsManager: AppGroupCallsManager,\n    appPeersManager: AppPeersManager,\n    appChatsManager: AppChatsManager,\n    instance: GroupCallInstance,\n    listenerSetter: ListenerSetter\n  }) {\n    safeAssign(this, options);\n\n    const className = 'group-call-participants';\n\n    const scrollable = new Scrollable(undefined);\n    scrollable.container.classList.add(className + '-scrollable');\n\n    const container = this.container = document.createElement('div');\n    container.classList.add(className);\n\n    // const invite = Button(`btn-primary btn-transparent ${className}-invite`, {icon: 'adduser', text: 'VoiceChat.Invite.InviteMembers'});\n\n    const sortedList = this.sortedList = new GroupCallParticipantsList(this.instance);\n    \n    const {instance, listenerSetter} = this;\n    this.contextMenu = new GroupCallParticipantContextMenu({\n      ...options,\n      onContextElement: sortedList.list,\n      listenerSetter,\n      instance\n    });\n\n    this.groupCallParticipantsVideo = new GroupCallParticipantsVideoElement({\n      ...options,\n      appendTo: scrollable.container,\n      displayPinned: false\n    });\n\n    scrollable.append(/* invite,  */sortedList.list);\n    container.append(scrollable.container);\n\n    options.appendTo.append(container);\n\n    listenerSetter.add(rootScope)('group_call_participant', ({groupCallId, participant}) => {\n      if(this.instance.id === groupCallId) {\n        this.updateParticipant(participant);\n      }\n    });\n\n    const scrollableLoader = new ScrollableLoader({\n      scrollable,\n      getPromise: () => {\n        return this.appGroupCallsManager.getGroupCallParticipants(this.instance.id).then(({participants, isEnd}) => {\n          participants.forEach(participant => {\n            this.updateParticipant(participant);\n          });\n          \n          return isEnd;\n        });\n      }\n    });\n\n    this.setInstance(instance);\n  }\n\n  private updateParticipant(participant: GroupCallParticipant) {\n    const peerId = this.appPeersManager.getPeerId(participant.peer);\n    const has = this.sortedList.has(peerId);\n    if(participant.pFlags.left) {\n      if(has) {\n        this.sortedList.delete(peerId);\n      }\n\n      return;\n    }\n\n    if(!has) {\n      this.sortedList.add(peerId);\n      return;\n    }\n\n    this.sortedList.update(peerId);\n  }\n\n  public setInstance(instance: GroupCallInstance) {\n    // @ts-ignore\n    /* const users = appUsersManager.users;\n    for(const userId in users) {\n      const participant: GroupCallParticipant = {\n        _: 'groupCallParticipant',\n        date: 0,\n        peer: {_: 'peerUser', user_id: userId.toPeerId()},\n        pFlags: {\n          muted: true\n        },\n        source: 1\n      };\n\n      instance.participants.set(userId.toPeerId(), participant);\n      this.updateParticipant(participant);\n    } */\n    instance.participants.forEach((participant) => {\n      this.updateParticipant(participant);\n    });\n  }\n  \n  public destroy() {\n    this.sortedList.destroy();\n    this.groupCallParticipantsVideo.destroy();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { GroupCall } from \"../../layer\";\nimport GroupCallInstance from \"../../lib/calls/groupCallInstance\";\nimport GROUP_CALL_STATE from \"../../lib/calls/groupCallState\";\nimport I18n, { LangPackKey, FormatterArguments } from \"../../lib/langPack\";\n\nexport default class GroupCallDescriptionElement {\n  private descriptionIntl: I18n.IntlElement;\n\n  constructor(private appendTo: HTMLElement) {\n    this.descriptionIntl = new I18n.IntlElement({\n      key: 'VoiceChat.Status.Connecting'\n    });\n\n    this.descriptionIntl.element.classList.add('group-call-description');\n  }\n\n  public detach() {\n    this.descriptionIntl.element.remove();\n  }\n\n  public update(instance: GroupCallInstance) {\n    const {state} = instance;\n\n    let key: LangPackKey, args: FormatterArguments;\n    if(state === GROUP_CALL_STATE.CONNECTING) {\n      key = 'VoiceChat.Status.Connecting';\n    } else {\n      key = 'VoiceChat.Status.Members';\n      args = [(instance.groupCall as GroupCall.groupCall).participants_count];\n    }\n\n    const {descriptionIntl} = this;\n    descriptionIntl.compareAndUpdate({\n      key,\n      args\n    });\n\n    if(!this.descriptionIntl.element.parentElement) {\n      this.appendTo.append(this.descriptionIntl.element);\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport setInnerHTML from \"../../helpers/dom/setInnerHTML\";\nimport { GroupCall } from \"../../layer\";\nimport GroupCallInstance from \"../../lib/calls/groupCallInstance\";\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\nimport PeerTitle from \"../peerTitle\";\n\nexport default class GroupCallTitleElement {\n  private peerTitle: PeerTitle;\n\n  constructor(private appendTo: HTMLElement) {\n    this.peerTitle = new PeerTitle({peerId: 0});\n  }\n\n  public update(instance: GroupCallInstance) {\n    const {peerTitle, appendTo} = this;\n    const groupCall = instance.groupCall as GroupCall.groupCall;\n    const peerId = instance.chatId.toPeerId(true);\n    if(groupCall.title) {\n      setInnerHTML(appendTo, RichTextProcessor.wrapEmojiText(groupCall.title));\n    } else {\n      if(peerTitle.peerId !== peerId) {\n        peerTitle.peerId = peerId;\n        peerTitle.update();\n      }\n\n      if(peerTitle.element.parentElement !== appendTo) {\n        appendTo.append(peerTitle.element);\n      }\n    } \n  }\n}\n","const IS_SCREEN_SHARING_SUPPORTED = !!('getDisplayMedia' in (navigator?.mediaDevices || {}));\n\nexport default IS_SCREEN_SHARING_SUPPORTED;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\nimport ListenerSetter from \"../../helpers/listenerSetter\";\nimport { i18n, LangPackKey } from \"../../lib/langPack\";\nimport { ripple } from \"../ripple\";\n\nexport default function makeButton(className: string, listenerSetter: ListenerSetter, options: {\n  text?: LangPackKey | HTMLElement,\n  isDanger?: boolean,\n  noRipple?: boolean,\n  callback?: () => void,\n  icon?: string,\n  isConfirm?: boolean,\n}) {\n  const _className = className + '-button';\n  const buttonDiv = document.createElement('div');\n  buttonDiv.classList.add(_className, 'call-button', 'rp-overflow');\n\n  if(options.icon) {\n    buttonDiv.classList.add('tgico-' + options.icon);\n  }\n\n  if(!options.noRipple) {\n    ripple(buttonDiv);\n  }\n\n  if(options.isDanger) {\n    buttonDiv.classList.add(_className + '-red');\n  }\n\n  if(options.isConfirm) {\n    buttonDiv.classList.add(_className + '-green');\n  }\n\n  if(options.callback) {\n    attachClickEvent(buttonDiv, options.callback, {listenerSetter});\n  }\n\n  let ret = buttonDiv;\n  if(options.text) {\n    const div = document.createElement('div');\n    div.classList.add(_className + '-container', 'call-button-container');\n\n    const textEl = typeof(options.text) === 'string' ? i18n(options.text) : options.text;\n    textEl.classList.add(_className + '-text', 'call-button-text');\n\n    div.append(buttonDiv, textEl);\n\n    ret = div;\n  }\n\n  return ret;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\nimport EventListenerBase from \"../helpers/eventListenerBase\";\nimport mediaSizes from \"../helpers/mediaSizes\";\nimport clamp from \"../helpers/number/clamp\";\nimport safeAssign from \"../helpers/object/safeAssign\";\nimport windowSize from \"../helpers/windowSize\";\nimport SwipeHandler from \"./swipeHandler\";\n\ntype ResizeSide = 'n' | 'e' | 's' | 'w' | 'ne' | 'se' | 'sw' | 'nw';\nexport type MovableState = {\n  top?: number;\n  left?: number;\n  width: number;\n  height: number;\n};\n\nconst className = 'movable-element';\nconst resizeHandlerClassName = className + '-resize-handler';\n\nexport type MovableElementOptions = {\n  minWidth: MovableElement['minWidth'],\n  minHeight: MovableElement['minHeight'],\n  element: MovableElement['element'],\n  verifyTouchTarget?: MovableElement['verifyTouchTarget']\n};\n\nexport default class MovableElement extends EventListenerBase<{\n  resize: () => void\n}> {\n  private minWidth: number;\n  private minHeight: number;\n  private element: HTMLElement;\n  private verifyTouchTarget: (e: TouchEvent | MouseEvent) => boolean;\n\n  private top: number;\n  private left: number;\n  private _width: number;\n  private _height: number;\n\n  private swipeHandler: SwipeHandler;\n  private handlers: HTMLElement[];\n\n  constructor(options: MovableElementOptions) {\n    super(true);\n    safeAssign(this, options);\n    \n    this.top = this.left = this.width = this.height = 0;\n    this.element.classList.add(className);\n  \n    this.addResizeHandlers();\n    this.setSwipeHandler();\n\n    mediaSizes.addEventListener('resize', this.onResize);\n  }\n\n  private onResize = () => {\n    this.fixDimensions();\n    this.fixPosition();\n    this.setPosition();\n  };\n\n  public destroyElements() {\n    this.element.classList.remove(className);\n\n    if(this.handlers) {\n      this.handlers.forEach(handler => {\n        handler.remove();\n      });\n    }\n  }\n\n  public destroy() {\n    mediaSizes.removeEventListener('resize', this.onResize);\n    this.swipeHandler.removeListeners();\n  }\n\n  private addResizeHandlers() {\n    const sides: ResizeSide[] = ['n', 'e', 's', 'w', 'ne', 'se', 'sw', 'nw'];\n    this.handlers = sides.map(side => {\n      const div = document.createElement('div');\n      div.dataset.side = side;\n      div.classList.add(resizeHandlerClassName, resizeHandlerClassName + '-side-' + side);\n      this.element.append(div);\n      return div;\n    });\n  }\n\n  private setSwipeHandler() {\n    let startTop: number, startLeft: number, startWidth: number, startHeight: number, resizingSide: ResizeSide;\n    const swipeHandler = this.swipeHandler = new SwipeHandler({\n      element: this.element,\n      onSwipe: (xDiff, yDiff, e) => {\n        xDiff *= -1; // to right will be positive\n        yDiff *= -1; // to bottom will be positive\n        // console.log(xDiff, yDiff, e);\n\n        if(resizingSide) {\n          if(resizingSide.includes('e') || resizingSide.includes('w')) {\n            const isEnlarging = resizingSide.includes('e') && xDiff > 0 || resizingSide.includes('w') && xDiff < 0;\n            const resizeDiff = Math.abs(xDiff) * (isEnlarging ? 1 : -1);\n\n            const maxPossible = resizingSide.includes('e') ? windowSize.width - startLeft : startWidth + startLeft;\n            this.width = Math.min(maxPossible, startWidth + resizeDiff);\n          }\n\n          if(resizingSide.includes('n') || resizingSide.includes('s')) {\n            const isEnlarging = resizingSide.includes('s') && yDiff > 0 || resizingSide.includes('n') && yDiff < 0;\n            const resizeDiff = Math.abs(yDiff) * (isEnlarging ? 1 : -1);\n\n            const maxPossible = resizingSide.includes('s') ? windowSize.height - startTop : startHeight + startTop;\n            this.height = Math.min(maxPossible, startHeight + resizeDiff);\n          }\n\n          this.fixDimensions();\n\n          if(resizingSide.includes('w')) {\n            this.left = Math.min(startLeft + startWidth - this.minWidth, startLeft + xDiff);\n          }\n\n          if(resizingSide.includes('n')) {\n            this.top = Math.min(startTop + startHeight - this.minHeight, startTop + yDiff);\n          }\n        } else {\n          this.top = startTop + yDiff;\n          this.left = startLeft + xDiff;\n        }\n\n        this.fixPosition();\n        this.setPosition();\n      },\n      verifyTouchTarget: (e) => {\n        const target = e.target;\n        if(this.verifyTouchTarget && !this.verifyTouchTarget(e)) {\n          return false;\n        }\n\n        const resizeHandler = findUpClassName(target, resizeHandlerClassName);\n        if(resizeHandler) {\n          resizingSide = resizeHandler.dataset.side as ResizeSide;\n          swipeHandler.setCursor('');\n        } else {\n          resizingSide = undefined;\n          swipeHandler.setCursor('grabbing');\n        }\n\n        return true;\n      },\n      onFirstSwipe: () => {\n        startTop = this.top;\n        startLeft = this.left;\n        startWidth = this.width;\n        startHeight = this.height;\n      }\n    });\n  }\n\n  public setPositionToCenter() {\n    this.top = (windowSize.height / 2) - (this.height / 2);\n    this.left = (windowSize.width / 2) - (this.width / 2);\n    this.setPosition();\n  }\n\n  private fixDimensions() {\n    this.width = clamp(this.width, this.minWidth, windowSize.width);\n    this.height = clamp(this.height, this.minHeight, windowSize.height);\n  }\n\n  private fixPosition() {\n    this.top = clamp(this.top, 0, windowSize.height - this.height);\n    this.left = clamp(this.left, 0, windowSize.width - this.width);\n  }\n\n  private setPosition() {\n    this.element.style.top = this.top + 'px';\n    this.element.style.left = this.left + 'px';\n    this.element.style.right = 'auto';\n    this.element.style.bottom = 'auto';\n    this.element.style.width = this.width + 'px';\n    this.element.style.height = this.height + 'px';\n\n    this.dispatchEvent('resize');\n  }\n\n  public get width() {\n    return this._width;\n  }\n\n  public get height() {\n    return this._height;\n  }\n\n  private set width(value: number) {\n    this._width = value;\n  }\n\n  private set height(value: number) {\n    this._height = value;\n  }\n\n  public get state(): MovableState {\n    const {top, left, width, height} = this;\n    return {\n      top,\n      left,\n      width,\n      height\n    };\n  }\n\n  public set state(state: MovableState) {\n    const {top, left, width, height} = state;\n    this.top = top;\n    this.left = left;\n    this.width = width;\n    this.height = height;\n    this.onResize();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport MovableElement, { MovableElementOptions, MovableState } from \"../components/movableElement\";\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\nimport ListenerSetter from \"./listenerSetter\";\nimport mediaSizes, { ScreenSize } from \"./mediaSizes\";\nimport safeAssign from \"./object/safeAssign\";\n\nexport default class MovablePanel {\n  #movable: MovableElement;\n  private listenerSetter: ListenerSetter;\n  private previousState: MovableState;\n  private onResize: () => void;\n  private movableOptions: MovableElementOptions;\n  \n  constructor(options: {\n    listenerSetter: ListenerSetter,\n    previousState: MovableState,\n    onResize?: () => void,\n    movableOptions: MovableElementOptions\n  }) {\n    safeAssign(this, options);\n\n    this.toggleMovable(!IS_TOUCH_SUPPORTED);\n\n    this.listenerSetter.add(mediaSizes)('changeScreen', (from, to) => {\n      if(to === ScreenSize.mobile || from === ScreenSize.mobile) {\n        this.toggleMovable(!IS_TOUCH_SUPPORTED);\n      }\n    });\n  }\n\n  public destroy() {\n    const movable = this.movable;\n    if(movable) {\n      movable.destroy();\n    }\n  }\n\n  public get movable() {\n    return this.#movable;\n  }\n\n  public get state() {\n    return this.movable ? this.movable.state : this.previousState;\n  }\n\n  public set state(state: MovableState) {\n    this.previousState = state;\n  }\n\n  private toggleMovable(enabled: boolean) {\n    let {movable} = this;\n    if(enabled) {\n      if(movable) {\n        return;\n      }\n\n      movable = this.#movable = new MovableElement(this.movableOptions);\n  \n      movable.state = this.previousState;\n      if(this.previousState.top === undefined) {\n        movable.setPositionToCenter();\n      }\n  \n      if(this.onResize) {\n        this.listenerSetter.add(movable)('resize', this.onResize);\n      }\n    } else {\n      if(!movable) {\n        return;\n      }\n\n      this.previousState = movable.state;\n      movable.destroyElements();\n      movable.destroy();\n      this.#movable = undefined;\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function toggleClassName(className: string, elements: HTMLElement[], disable: boolean) {\n  elements.forEach((element) => {\n    element.classList.toggle(className, disable);\n  });\n\n  return () => toggleClassName(className, elements, !disable);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nenum CALL_STATE {\n  CONNECTED,\n  CONNECTING,\n  EXCHANGING_KEYS,\n  PENDING,\n  REQUESTING,\n  CLOSING,\n  CLOSED\n}\n\nexport default CALL_STATE;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport replaceContent from \"../../helpers/dom/replaceContent\";\nimport CALL_STATE from \"../../lib/calls/callState\";\nimport { i18n, LangPackKey } from \"../../lib/langPack\";\n\nexport default class CallDescriptionElement {\n  private container: HTMLElement;\n  private state: CALL_STATE;\n  private interval: number;\n\n  constructor(private appendTo: HTMLElement) {\n    this.container = document.createElement('div');\n    this.container.classList.add('call-description');\n  }\n\n  public detach() {\n    if(this.interval !== undefined) {\n      clearInterval(this.interval);\n      this.interval = undefined;\n    }\n\n    this.container.remove();\n    this.state = undefined;\n  }\n\n  public update(instance: any) {\n    const {connectionState} = instance;\n\n    if(this.state === connectionState) {\n      return;\n    }\n\n    this.state = connectionState;\n\n    let element: HTMLElement;\n    if(connectionState === CALL_STATE.CONNECTED) {\n      element = document.createElement('span');\n      element.classList.add('call-description-duration');\n\n      const setTime = () => {\n        element.innerText = ('' + instance.duration).toHHMMSS(true);\n      };\n\n      this.interval = window.setInterval(setTime, 1000);\n      setTime();\n    } else {\n      let langPackKey: LangPackKey;\n      switch(connectionState) {\n        case CALL_STATE.PENDING:\n          langPackKey = instance.isOutgoing ? 'Call.StatusRinging' : 'Call.StatusCalling';\n          break;\n        case CALL_STATE.REQUESTING:\n          langPackKey = 'Call.StatusRequesting';\n          break;\n        case CALL_STATE.EXCHANGING_KEYS:\n          langPackKey = 'VoipExchangingKeys';\n          break;\n        case CALL_STATE.CLOSED:\n          langPackKey = instance.connectedAt !== undefined ? 'Call.StatusEnded' : 'Call.StatusFailed';\n          break;\n        default:\n          langPackKey = 'Call.StatusConnecting';\n          break;\n      }\n\n      element = i18n(langPackKey);\n      if(this.interval !== undefined) {\n        clearInterval(this.interval);\n        this.interval = undefined;\n      }\n    }\n\n    this.container.classList.toggle('has-duration', connectionState === CALL_STATE.CONNECTED);\n    replaceContent(this.container, element);\n\n    if(!this.container.parentElement) {\n      this.appendTo.append(this.container);\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { SuperRLottieIcon } from \"../superIcon\";\n\nexport default class GroupCallMicrophoneIconMini extends SuperRLottieIcon<{\n  PartState: boolean,\n  ColorState: boolean,\n  Items: {\n    name: 'voice_mini'\n  }[]\n}> {\n  constructor(colored?: boolean, skipAnimation?: boolean) {\n    super({\n      width: 36,\n      height: 36,\n      getPart: (state) => {\n        return this.getItem().getPart(state ? 'unmute' : 'mute');\n      },\n      getColor: colored ? (state) => {\n        return state ? [255, 255, 255] : [158, 158, 158];\n      } : undefined,\n      skipAnimation\n    });\n\n    this.add({\n      name: 'voice_mini',\n      parts: [{\n        startFrame: 0,\n        endFrame: 35,\n        name: 'hand-to-muted'\n      }, {\n        startFrame: 36,\n        endFrame: 68,\n        name: 'unmute'\n      }, {\n        startFrame: 69,\n        endFrame: 98,\n        name: 'mute'\n      }, {\n        startFrame: 99,\n        endFrame: 135,\n        name: 'muted-to-hand'\n      }, {\n        startFrame: 136,\n        endFrame: 171,\n        name: 'unmuted-to-hand'\n      }]\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport IS_SCREEN_SHARING_SUPPORTED from \"../../environment/screenSharingSupport\";\nimport { IS_MOBILE } from \"../../environment/userAgent\";\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\nimport ControlsHover from \"../../helpers/dom/controlsHover\";\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\nimport { addFullScreenListener, cancelFullScreen, isFullScreen, requestFullScreen } from \"../../helpers/dom/fullScreen\";\nimport { onMediaLoad } from \"../../helpers/files\";\nimport { MediaSize } from \"../../helpers/mediaSizes\";\nimport MovablePanel from \"../../helpers/movablePanel\";\nimport safeAssign from \"../../helpers/object/safeAssign\";\nimport toggleClassName from \"../../helpers/toggleClassName\";\nimport type { AppAvatarsManager } from \"../../lib/appManagers/appAvatarsManager\";\nimport type { AppCallsManager } from \"../../lib/appManagers/appCallsManager\";\nimport type { AppPeersManager } from \"../../lib/appManagers/appPeersManager\";\nimport CallInstance from \"../../lib/calls/callInstance\";\nimport CALL_STATE from \"../../lib/calls/callState\";\nimport I18n, { i18n } from \"../../lib/langPack\";\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\nimport rootScope from \"../../lib/rootScope\";\nimport animationIntersector from \"../animationIntersector\";\nimport AvatarElement from \"../avatar\";\nimport ButtonIcon from \"../buttonIcon\";\nimport GroupCallMicrophoneIconMini from \"../groupCall/microphoneIconMini\";\nimport { MovableState } from \"../movableElement\";\nimport PeerTitle from \"../peerTitle\";\nimport PopupElement from \"../popups\";\nimport SetTransition from \"../singleTransition\";\nimport makeButton from \"./button\";\nimport CallDescriptionElement from \"./description\";\nimport callVideoCanvasBlur from \"./videoCanvasBlur\";\n\nconst className = 'call';\n\nconst MIN_WIDTH = 400;\nconst MIN_HEIGHT = 580;\n\nconst INIT_STATE: MovableState = {\n  width: MIN_WIDTH,\n  height: MIN_HEIGHT\n};\n\nlet previousState: MovableState = {...INIT_STATE};\n\nexport default class PopupCall extends PopupElement {\n  private instance: CallInstance;\n  private appCallsManager: AppCallsManager;\n  private appAvatarsManager: AppAvatarsManager;\n  private appPeersManager: AppPeersManager;\n  private peerId: PeerId;\n\n  private description: CallDescriptionElement;\n  private emojisSubtitle: HTMLElement;\n  \n  private partyStates: HTMLElement;\n  private partyMutedState: HTMLElement;\n\n  private firstButtonsRow: HTMLElement;\n  private secondButtonsRow: HTMLElement;\n\n  private declineI18nElement: I18n.IntlElement;\n\n  private makeButton: (options: Parameters<typeof makeButton>[2]) => HTMLElement;\n  private btnAccept: HTMLElement;\n  private btnDecline: HTMLElement;\n  private btnVideo: HTMLElement;\n  private btnScreen: HTMLElement;\n  private btnMute: HTMLElement;\n  private btnFullScreen: HTMLButtonElement;\n  private btnExitFullScreen: HTMLButtonElement;\n\n  private movablePanel: MovablePanel;\n  private microphoneIcon: GroupCallMicrophoneIconMini;\n  private muteI18nElement: I18n.IntlElement;\n\n  private videoContainers: {\n    input?: HTMLElement,\n    output?: HTMLElement\n  };\n\n  private controlsHover: ControlsHover;\n\n  constructor(options: {\n    appCallsManager: AppCallsManager,\n    appAvatarsManager: AppAvatarsManager,\n    appPeersManager: AppPeersManager,\n    instance: CallInstance\n  }) {\n    super('popup-call', undefined, {\n      withoutOverlay: true,\n      closable: true\n    });\n\n    safeAssign(this, options);\n\n    this.videoContainers = {};\n\n    const {container, listenerSetter, instance} = this;\n    container.classList.add(className, 'night');\n\n    const avatarContainer = document.createElement('div');\n    avatarContainer.classList.add(className + '-avatar');\n\n    const peerId = this.peerId = this.instance.interlocutorUserId.toPeerId();\n    const avatar = new AvatarElement();\n    avatar.isBig = true;\n    avatar.setAttribute('peer', '' + peerId);\n    avatar.classList.add('avatar-full');\n    avatarContainer.append(avatar);\n\n    const title = new PeerTitle({\n      peerId\n    }).element;\n\n    title.classList.add(className + '-title');\n\n    const subtitle = document.createElement('div');\n    subtitle.classList.add(className + '-subtitle');\n\n    const description = this.description = new CallDescriptionElement(subtitle);\n\n    const emojisSubtitle = this.emojisSubtitle = document.createElement('div');\n    emojisSubtitle.classList.add(className + '-emojis');\n\n    container.append(avatarContainer, title, subtitle);\n    \n    if(!IS_MOBILE) {\n      this.btnFullScreen = ButtonIcon('fullscreen');\n      this.btnExitFullScreen = ButtonIcon('smallscreen hide');\n      attachClickEvent(this.btnFullScreen, this.onFullScreenClick, {listenerSetter});\n      attachClickEvent(this.btnExitFullScreen, () => cancelFullScreen(), {listenerSetter});\n      addFullScreenListener(this.container, this.onFullScreenChange, listenerSetter);\n      this.header.prepend(this.btnExitFullScreen);\n      this.header.append(this.btnFullScreen);\n\n      container.append(emojisSubtitle);\n    } else {\n      this.header.append(emojisSubtitle);\n    }\n\n    this.partyStates = document.createElement('div');\n    this.partyStates.classList.add(className + '-party-states');\n\n    this.partyMutedState = document.createElement('div');\n    this.partyMutedState.classList.add(className + '-party-state');\n    const stateText = i18n('VoipUserMicrophoneIsOff', [new PeerTitle({peerId, onlyFirstName: true, limitSymbols: 18}).element]);\n    stateText.classList.add(className + '-party-state-text');\n    const mutedIcon = new GroupCallMicrophoneIconMini(false, true);\n    mutedIcon.setState(false, false);\n    this.partyMutedState.append(\n      mutedIcon.container, \n      stateText\n    );\n\n    this.partyStates.append(this.partyMutedState);\n    this.container.append(this.partyStates);\n\n    this.makeButton = makeButton.bind(null, className, this.listenerSetter);\n    this.constructFirstButtons();\n    this.constructSecondButtons();\n\n    listenerSetter.add(instance)('state', () => {\n      this.updateInstance();\n    });\n\n    listenerSetter.add(instance)('mediaState', () => {\n      this.updateInstance();\n    });\n\n    this.movablePanel = new MovablePanel({\n      listenerSetter,\n      movableOptions: {\n        minWidth: MIN_WIDTH,\n        minHeight: MIN_HEIGHT,\n        element: this.element,\n        verifyTouchTarget: (e) => {\n          const target = e.target;\n          if(findUpClassName(target, 'call-button') || \n            findUpClassName(target, 'btn-icon') ||\n            isFullScreen()) {\n            return false;\n          }\n\n          return true;\n        }\n      },\n      // onResize: () => this.toggleBigLayout(),\n      previousState: !this.instance.wasTryingToJoin && !this.instance.isOutgoing ? {...INIT_STATE} : previousState\n    });\n\n    const movableElement = this.movablePanel.movable;\n    if(movableElement) {\n      this.listenerSetter.add(movableElement)('resize', () => {\n        this.resizeVideoContainers();\n      });\n    }\n\n    const controlsHover = this.controlsHover = new ControlsHover();\n    controlsHover.setup({\n      element: this.container,\n      listenerSetter: this.listenerSetter,\n      showOnLeaveToClassName: 'call-buttons'\n    });\n    controlsHover.showControls(false);\n\n    this.addEventListener('close', () => {\n      const {movablePanel} = this;\n      previousState = movablePanel.state;\n\n      this.microphoneIcon.destroy();\n\n      movablePanel.destroy();\n    });\n\n    this.updateInstance();\n  }\n\n  public getCallInstance() {\n    return this.instance;\n  }\n\n  private constructFirstButtons() {\n    const buttons = this.firstButtonsRow = document.createElement('div');\n    buttons.classList.add(className + '-buttons', 'is-first');\n\n    const toggleDisability = toggleClassName.bind(null, 'btn-disabled');\n    \n    const btnVideo = this.btnVideo = this.makeButton({\n      text: 'Call.Camera',\n      icon: 'videocamera_filled',\n      callback: () => {\n        const toggle = toggleDisability([btnVideo, btnScreen], true);\n        this.instance.toggleVideoSharing().finally(toggle);\n      }\n    });\n\n    const btnScreen = this.btnScreen = this.makeButton({\n      text: 'Call.Screen',\n      icon: 'sharescreen_filled',\n      callback: () => {\n        const toggle = toggleDisability([btnVideo, btnScreen], true);\n        this.instance.toggleScreenSharing().finally(toggle);\n      }\n    });\n\n    if(!IS_SCREEN_SHARING_SUPPORTED) {\n      btnScreen.classList.add('hide');\n      this.container.classList.add('no-screen');\n    }\n\n    this.muteI18nElement = new I18n.IntlElement({\n      key: 'Call.Mute'\n    });\n    const btnMute = this.btnMute = this.makeButton({\n      text: this.muteI18nElement.element,\n      callback: () => {\n        this.instance.toggleMuted();\n      }\n    });\n\n    const microphoneIcon = this.microphoneIcon = new GroupCallMicrophoneIconMini(true, true);\n    btnMute.firstElementChild.append(microphoneIcon.container);\n\n    // btnVideo.classList.add('disabled');\n    // btnScreen.classList.add('disabled');\n\n    buttons.append(btnVideo, btnScreen, btnMute);\n    this.container.append(buttons);\n  }\n\n  private constructSecondButtons() {\n    const buttons = this.secondButtonsRow = document.createElement('div');\n    buttons.classList.add(className + '-buttons', 'is-second');\n    \n    this.declineI18nElement = new I18n.IntlElement({\n      key: 'Call.Decline'\n    });\n    const btnDecline = this.btnDecline = this.makeButton({\n      text: this.declineI18nElement.element,\n      icon: 'endcall_filled',\n      callback: () => {\n        this.instance.hangUp('phoneCallDiscardReasonHangup');\n      },\n      isDanger: true\n    });\n\n    const btnAccept = this.btnAccept = this.makeButton({\n      text: 'Call.Accept',\n      icon: 'phone_filled',\n      callback: () => {\n        this.instance.acceptCall();\n      },\n      isConfirm: true,\n    });\n\n    buttons.append(btnDecline, btnAccept);\n    this.container.append(buttons);\n  }\n\n  private onFullScreenClick = () => {\n    requestFullScreen(this.container);\n  };\n\n  private onFullScreenChange = () => {\n    const isFull = isFullScreen();\n\n    const {btnFullScreen, btnExitFullScreen} = this;\n\n    const wasFullScreen = this.container.classList.contains('is-full-screen');\n    this.container.classList.toggle('is-full-screen', isFull);\n    btnFullScreen && btnFullScreen.classList.toggle('hide', isFull);\n    btnExitFullScreen && btnExitFullScreen.classList.toggle('hide', !isFull);\n    this.btnClose.classList.toggle('hide', isFull);\n\n    if(isFull !== wasFullScreen) {\n      animationIntersector.checkAnimations(isFull);\n\n      rootScope.setThemeColor(isFull ? '#000000' : undefined);\n\n      this.resizeVideoContainers();\n    }\n  };\n\n  private createVideoContainer(video: HTMLVideoElement) {\n    const _className = className + '-video';\n    const container = document.createElement('div');\n    container.classList.add(_className + '-container');\n\n    video.classList.add(_className);\n    if(video.paused) {\n      video.play();\n    }\n\n    attachClickEvent(container, () => {\n      if(!container.classList.contains('small')) {\n        return;\n      }\n\n      const big = Object.values(this.videoContainers).find(container => !container.classList.contains('small'));\n      big.classList.add('small');\n      big.style.cssText = container.style.cssText;\n      container.classList.remove('small');\n      container.style.cssText = '';\n\n      this.resizeVideoContainers();\n    });\n\n    const canvas = callVideoCanvasBlur(video);\n    canvas.classList.add(_className + '-blur');\n\n    container.append(canvas, video);\n\n    return container;\n  }\n\n  private updateInstance() {\n    const {instance} = this;\n    const {connectionState} = instance;\n    if(connectionState === CALL_STATE.CLOSED) {\n      if(this.container.classList.contains('is-full-screen')) {\n        cancelFullScreen();\n      }\n\n      this.btnVideo.classList.add('disabled');\n\n      this.hide();\n      return;\n    }\n\n    const isPendingIncoming = !instance.isOutgoing && connectionState === CALL_STATE.PENDING;\n    this.declineI18nElement.compareAndUpdate({\n      key: connectionState === CALL_STATE.PENDING ? 'Call.Decline' : 'Call.End'\n    });\n    this.btnAccept.classList.toggle('disable', !isPendingIncoming);\n    this.btnAccept.classList.toggle('hide-me', !isPendingIncoming);\n    this.container.classList.toggle('two-button-rows', isPendingIncoming);\n\n    const isMuted = instance.isMuted;\n    const onFrame = () => {\n      this.btnMute.firstElementChild.classList.toggle('active', isMuted);\n    };\n\n    const player = this.microphoneIcon.getItem().player;\n    this.microphoneIcon.setState(!isMuted, !isMuted, onFrame);\n    if(!player) {\n      onFrame();\n    }\n\n    this.muteI18nElement.compareAndUpdate({\n      key: isMuted ? 'VoipUnmute' : 'Call.Mute'\n    });\n\n    const isSharingVideo = instance.isSharingVideo;\n    this.btnVideo.firstElementChild.classList.toggle('active', isSharingVideo);\n\n    const isSharingScreen = instance.isSharingScreen;\n    this.btnScreen.firstElementChild.classList.toggle('active', isSharingScreen);\n\n    const outputState = instance.getMediaState('output');\n\n    SetTransition(this.partyMutedState, 'is-visible', !!outputState?.muted, 300);\n\n    const containers = this.videoContainers;\n    const oldContainers = {...containers};\n    ['input' as const, 'output' as const].forEach(type => {\n      const mediaState = instance.getMediaState(type);\n      const video = instance.getVideoElement(type) as HTMLVideoElement;\n\n      const hasFrame = !!(video && video.videoWidth && video.videoHeight);\n      if(video && !hasFrame && !video.dataset.hasPromise) {\n        video.dataset.hasPromise = '1';\n        // container.classList.add('hide');\n        onMediaLoad(video).then(() => {\n          delete video.dataset.hasPromise;\n          this.updateInstance();\n          // this.resizeVideoContainers();\n          // container.classList.remove('hide');\n        });\n      }\n\n      const isActive = !!video && hasFrame && !!(mediaState && (mediaState.videoState === 'active' || mediaState.screencastState === 'active'));\n      let videoContainer = containers[type];\n\n      if(isActive && video && !videoContainer) {\n        videoContainer = containers[type] = this.createVideoContainer(video);\n        this.container.append(videoContainer);\n      }\n\n      if(!isActive && videoContainer) {\n        videoContainer.remove();\n        delete containers[type];\n      }\n    });\n\n    {\n      const input = containers.input;\n      const output = containers.output;\n      if(Object.keys(oldContainers).length !== Object.keys(containers).length && input) {\n        input.classList.toggle('small', !!output);\n      }\n\n      if(output && !input) {\n        output.classList.remove('small');\n      }\n    }\n\n    this.resizeVideoContainers();\n\n    this.container.classList.toggle('no-video', !Object.keys(containers).length);\n\n    if(!this.emojisSubtitle.textContent && connectionState < CALL_STATE.EXCHANGING_KEYS) {\n      Promise.resolve(instance.getEmojisFingerprint()).then(emojis => {\n        this.emojisSubtitle.innerHTML = RichTextProcessor.wrapEmojiText(emojis.join(''));\n      });\n    }\n\n    this.setDescription();\n  }\n\n  private resizeVideoContainers() {\n    Object.values(this.videoContainers).forEach(container => {\n      const isSmall = container.classList.contains('small');\n      if(isSmall) {\n        const video = container.querySelector('video');\n        const popupWidth = this.movablePanel.state;\n        const MAX_WIDTH_PX = 240;\n        const MAX_HEIGHT_PX = 240;\n        \n        const isVertical = video.videoHeight > video.videoWidth;\n        const MAX_SIZE = isVertical ? MAX_HEIGHT_PX : MAX_WIDTH_PX;\n\n        const biggestSideSize = 1 / 3 * (isFullScreen() ? 0xFFFF : (isVertical ? popupWidth.height : popupWidth.width));\n        const widthRatio = isVertical ? video.videoWidth / video.videoHeight : 1;\n        const heightRatio = isVertical ? 1 : video.videoHeight / video.videoWidth;\n        container.style.width = biggestSideSize * widthRatio + 'px';\n        container.style.height = biggestSideSize * heightRatio + 'px';\n        container.style.maxWidth = MAX_SIZE * widthRatio + 'px';\n        container.style.maxHeight = MAX_SIZE * heightRatio + 'px';\n      } else {\n        container.style.cssText = '';\n      }\n    });\n  }\n\n  private setDescription() {\n    this.description.update(this.instance);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport SDP from \"../sdp\";\nimport { CallSignalingData, P2PVideoCodec } from \"../types\";\nimport parseMediaSectionInfo from \"./parseMediaSectionInfo\";\n\nexport default function parseSignalingData(sdp: SDP) {\n  const info = parseMediaSectionInfo(sdp, sdp.media[0]);\n  \n  const data: CallSignalingData.initialSetup = {\n    '@type': 'InitialSetup',\n    fingerprints: [info.fingerprint],\n    ufrag: info.ufrag,\n    pwd: info.pwd,\n    audio: undefined,\n    video: undefined,\n    screencast: undefined\n  };\n  \n  const convertNumber = (number: number) => '' + number;\n  \n  for(const section of sdp.media) {\n    const mediaType = section.mediaType;\n    if(mediaType === 'application' || !section.isSending) {\n      continue;\n    }\n    \n    const codec: P2PVideoCodec = data[mediaType === 'video' && data['video'] ? 'screencast' : mediaType] = {} as any;\n    const info = parseMediaSectionInfo(sdp, section);\n    codec.ssrc = convertNumber(info.source);\n    \n    if(info.sourceGroups) {\n      codec.ssrcGroups = info.sourceGroups.map(sourceGroup => ({semantics: sourceGroup.semantics, ssrcs: sourceGroup.sources.map(convertNumber)}));\n    }\n    \n    const rtpExtensions: P2PVideoCodec['rtpExtensions'] = codec.rtpExtensions = [];\n    section.attributes.get('extmap').forEach((attribute) => {\n      rtpExtensions.push({\n        id: +attribute.key,\n        uri: attribute.value\n      });\n    });\n    \n    const payloadTypesMap: Map<number, P2PVideoCodec['payloadTypes'][0]> = new Map();\n    \n    const getPayloadType = (id: number) => {\n      let payloadType = payloadTypesMap.get(id);\n      if(!payloadType) {\n        payloadTypesMap.set(id, payloadType = {\n          id\n        } as any);\n      }\n      \n      return payloadType;\n    };\n    \n    section.attributes.get('rtpmap').forEach((attribute) => {\n      const id = +attribute.key;\n      const payloadType = getPayloadType(id);\n      const splitted = attribute.value.split('/');\n      const [name, clockrate, channels] = splitted;\n      payloadType.name = name;\n      payloadType.clockrate = +clockrate;\n      payloadType.channels = channels ? +channels : 0;\n    });\n    \n    section.attributes.get('rtcp-fb').forEach((attribute) => {\n      const id = +attribute.key;\n      const payloadType = getPayloadType(id);\n      payloadType.feedbackTypes = attribute.lines.map((line) => {\n        const splitted = line.split(' ');\n        const [type, subtype] = splitted;\n        return {\n          type,\n          subtype: subtype || ''\n        };\n      });\n    });\n    \n    section.attributes.get('fmtp').forEach((attribute) => {\n      const id = +attribute.key;\n      const payloadType = getPayloadType(id);\n      const parameters: P2PVideoCodec['payloadTypes'][0]['parameters'] = payloadType.parameters = {};\n      const splitted = attribute.value.split(';');\n      for(const str of splitted) {\n        const [key, value] = str.split('=');\n        parameters[key] = value;\n      }\n    });\n    \n    codec.payloadTypes = Array.from(payloadTypesMap.values());\n\n    /* if(codec.payloadTypes.length > 5) {\n      codec.payloadTypes.length = Math.min(codec.payloadTypes.length, 5);\n    } */\n  }\n  \n  return data;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport CallConnectionInstanceBase, { CallConnectionInstanceOptions } from \"./callConnectionInstanceBase\";\nimport CallInstance from \"./callInstance\";\nimport parseSignalingData from \"./helpers/parseSignalingData\";\nimport { parseSdp } from \"./sdp/utils\";\n\nexport default class CallConnectionInstance extends CallConnectionInstanceBase {\n  private call: CallInstance;\n\n  constructor(options: CallConnectionInstanceOptions & {\n    call: CallConnectionInstance['call']\n  }) {\n    super(options);\n  }\n\n  protected async negotiateInternal() {\n    const {connection, call} = this;\n\n    if(!connection.localDescription && !connection.remoteDescription && !call.isOutgoing) {\n      return;\n    }\n\n    let descriptionInit: RTCSessionDescriptionInit;\n    if(call.offerReceived) {\n      call.offerReceived = false;\n\n      const answer = descriptionInit = await connection.createAnswer();\n\n      this.log('[sdp] local', answer.type, answer.sdp);\n      await connection.setLocalDescription(answer);\n\n      this.log('[InitialSetup] send 2');\n    } else {\n      const offer = descriptionInit = await connection.createOffer();\n\n      this.log('[sdp] local', offer.sdp);\n      await connection.setLocalDescription(offer);\n\n      call.offerSent = true;\n\n      this.log('[InitialSetup] send 0');\n    }\n\n    const initialSetup = parseSignalingData(parseSdp(descriptionInit.sdp));\n    call.sendCallSignalingData(initialSetup);\n  }\n}\n","const subtle = typeof(window) !== 'undefined' && 'crypto' in window ? window.crypto.subtle : self.crypto.subtle;\n\nexport default subtle;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport bufferConcats from '../../../helpers/bytes/bufferConcats';\nimport subtle from '../../crypto/subtle';\nimport sha256 from '../../crypto/utils/sha256';\n\nconst kMaxIncomingPacketSize = 128 * 1024 * 1024;\n\nexport default class P2PEncryptor {\n  private type: 'Signaling';\n  private counter: number;\n  private seqMap: Map<number, number>;\n  \n  constructor(private isOutgoing: boolean, private p2pKey: Uint8Array) {\n    this.type = 'Signaling';\n    this.counter = 0;\n    this.seqMap = new Map();\n  }\n  \n  private concatSHA256(parts: Uint8Array[]) {\n    return sha256(bufferConcats(...parts));\n  }\n  \n  private async encryptPrepared(buffer: Uint8Array) {\n    const result = {\n      counter: 0, //this.counterFromSeq(this.readSeq(buffer)),\n      bytes: new Uint8Array(16 + buffer.length)\n    };\n    \n    const x = (this.isOutgoing ? 0 : 8) + (this.type === 'Signaling' ? 128 : 0);\n    const key = this.p2pKey;\n    \n    const msgKeyLarge = await this.concatSHA256([key.subarray(x + 88, x + 88 + 32), buffer]);\n    const msgKey = result.bytes;\n    for(let i = 0; i < 16; ++i) {\n      msgKey[i] = msgKeyLarge[i + 8];\n    }\n    \n    const aesKeyIv = await this.prepareAesKeyIv(key, msgKey, x);\n    \n    const bytes = await this.aesProcessCtr(buffer, buffer.length, aesKeyIv, true);\n    \n    result.bytes = new Uint8Array([...result.bytes.subarray(0, 16), ...bytes]);\n    \n    return result;\n  }\n  \n  public encryptRawPacket(buffer: Uint8Array) {\n    const seq = ++this.counter;\n    const arr = new ArrayBuffer(4);\n    const view = new DataView(arr);\n    view.setUint32(0, seq >>> 0, false); // byteOffset = 0; litteEndian = false\n    \n    const result = new Uint8Array([...new Uint8Array(arr), ...buffer]);\n    \n    return this.encryptPrepared(result);\n  }\n  \n  private async prepareAesKeyIv(key: Uint8Array, msgKey: Uint8Array, x: number) {\n    const [sha256a, sha256b] = await Promise.all([\n      this.concatSHA256([\n        msgKey.subarray(0, 16),\n        key.subarray(x, x + 36)\n      ]),\n\n      this.concatSHA256([\n        key.subarray(40 + x, 40 + x + 36),\n        msgKey.subarray(0, 16)\n      ])\n    ]);\n    \n    return {\n      key: new Uint8Array([\n        ...sha256a.subarray(0, 8),\n        ...sha256b.subarray(8, 8 + 16),\n        ...sha256a.subarray(24, 24 + 8)\n      ]),\n      iv: new Uint8Array([\n        ...sha256b.subarray(0, 4),\n        ...sha256a.subarray(8, 8 + 8),\n        ...sha256b.subarray(24, 24 + 4)\n      ])\n    };\n  }\n  \n  private async aesProcessCtr(encryptedData: Uint8Array, dataSize: number, aesKeyIv: {key: Uint8Array, iv: Uint8Array}, encrypt = true) {\n    const cryptoKey = await subtle.importKey(\n      'raw',\n      aesKeyIv.key,\n      {name: 'AES-CTR'},\n      false,\n      [encrypt ? 'encrypt' : 'decrypt']\n    );\n    \n    const buffer: ArrayBuffer = await subtle[encrypt ? 'encrypt' : 'decrypt']({\n        name: 'AES-CTR',\n        counter: aesKeyIv.iv,\n        length: aesKeyIv.iv.length * 8\n      },\n      cryptoKey,\n      encryptedData\n    );\n\n    return new Uint8Array(buffer);\n  }\n  \n  private constTimeIsDifferent(a: Uint8Array, b: Uint8Array, count: number) {\n    let msgKeyEquals = true;\n    for(let i = 0; i < count; ++i) {\n      if(a[i] !== b[i]) {\n        msgKeyEquals = false;\n      }\n    }\n    \n    return !msgKeyEquals;\n  }\n  \n  public async decryptRawPacket(buffer: Uint8Array) {\n    if(buffer.length < 21 || buffer.length > kMaxIncomingPacketSize) {\n      return;\n    }\n    \n    const {isOutgoing, type} = this;\n    \n    const x = (isOutgoing ? 8 : 0) + (type === 'Signaling' ? 128 : 0);\n    const key = this.p2pKey;\n    \n    const msgKey = buffer.subarray(0, 16);\n    const encryptedData = buffer.subarray(16);\n    const encryptedDataSize = buffer.length - 16;\n    \n    const aesKeyIv = await this.prepareAesKeyIv(key, msgKey, x);\n    \n    const decryptionBuffer = await this.aesProcessCtr(encryptedData, encryptedDataSize, aesKeyIv, false);\n    \n    const msgKeyLarge = await this.concatSHA256([\n      key.subarray(88 + x, 88 + x + 32),\n      decryptionBuffer\n    ]);\n    \n    if(this.constTimeIsDifferent(msgKeyLarge.subarray(8), msgKey, 16)) {\n      return;\n    }\n    \n    const dataView = new DataView(decryptionBuffer.buffer);\n    const seq = dataView.getUint32(0);\n    if(this.seqMap.has(seq)) {\n      return;\n    }\n    this.seqMap.set(seq, seq);\n    \n    return decryptionBuffer.slice(4);\n  }\n}\n","import convertToUint8Array from \"../../../helpers/bytes/convertToUint8Array\";\nimport subtle from \"../subtle\";\n//import sha256 from '@cryptography/sha256';\n\nexport default function sha256(bytes: Parameters<typeof convertToUint8Array>[0]) {\n  return subtle.digest('SHA-256', convertToUint8Array(bytes)).then(b => {\n    //console.log('legacy', performance.now() - perfS);\n    return new Uint8Array(b);\n  });\n  /* //console.log('SHA-256 hash start');\n\n  let perfS = performance.now();\n  \n\n  let perfD = performance.now();\n  let words = typeof(bytes) === 'string' ? bytes : bytesToWordss(bytes as any);\n  let hash = sha256(words);\n  console.log('darutkin', performance.now() - perfD);\n\n  //console.log('SHA-256 hash finish', hash, sha256(words, 'hex'));\n\n  return bytesFromWordss(hash); */\n}\n","export default function convertToUint8Array(bytes: Uint8Array | ArrayBuffer | number[] | string): Uint8Array {\n  if(bytes instanceof Uint8Array) {\n    return bytes;\n  } else if(typeof(bytes) === 'string') {\n    return new TextEncoder().encode(bytes);\n  }\n\n  return new Uint8Array(bytes);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport StringFromLineBuilder from '../stringFromLineBuilder';\nimport { addDataChannel, addExtmap, addPayloadTypes, addSsrc } from './p2PSdpBuilder';\n\nexport default class ChromeP2PSdpBuilder {\n  static generateOffer(info: any) {\n    const {fingerprints, ufrag, pwd, audio, video} = info;\n    audio.type = 'audio';\n    video.type = 'video';\n    const media = [audio, video];\n\n    const stringBuilder = new StringFromLineBuilder();\n    stringBuilder.add(\n      'v=0', \n      'o=- 1 2 IN IP4 127.0.0.1',\n      's=-',\n      't=0 0'\n    );\n\n    if(fingerprints) {\n      fingerprints.forEach((x: any) => {\n        const {hash, fingerprint, setup} = x;\n        stringBuilder.add(\n          `a=fingerprint:${hash} ${fingerprint}`, \n          `a=setup:${setup}`\n        );\n      });\n    }\n    if(ufrag && pwd) {\n      stringBuilder.add(\n        `a=ice-ufrag:${ufrag}`,\n        `a=ice-pwd:${pwd}`\n      );\n    }\n\n    stringBuilder.add(\n      'a=group:BUNDLE 0 1 2', \n      'a=extmap-allow-mixed', \n      'a=msid-semantic: WMS *'\n    );\n    const streamName = 'stream' + media.map(x => x.ssrc).join('_');\n    for(let i = 0; i < media.length; i++) {\n      const m = media[i];\n      const {type, ssrc, ssrcGroups, payloadTypes, rtpExtensions} = m;\n      switch(type) {\n        case 'audio': {\n          stringBuilder.add(\n            `m=audio 56930 UDP/TLS/RTP/SAVPF ${payloadTypes.map((x: any) => x.id).join(' ')}`,\n            'c=IN IP4 0.0.0.0',\n            'a=rtcp:9 IN IP4 0.0.0.0',\n            'a=ice-options:trickle',\n            `a=mid:${i}`,\n            'a=sendrecv',\n            addExtmap(rtpExtensions)\n          );\n          if(ssrc) {\n            stringBuilder.add(`a=msid:${streamName} audio${ssrc}`);\n          }\n          stringBuilder.add(\n            'a=rtcp-mux',\n            addPayloadTypes(payloadTypes),\n            addSsrc(type, ssrc, ssrcGroups, streamName)\n          );\n\n          break;\n        }\n\n        case 'video': {\n          stringBuilder.add(\n            `m=video 61986 UDP/TLS/RTP/SAVPF ${payloadTypes.map((x: any) => x.id).join(' ')}`,\n            'c=IN IP4 0.0.0.0',\n            'a=rtcp:9 IN IP4 0.0.0.0',\n            'a=ice-options:trickle',\n            `a=mid:${i}`,\n            'a=sendrecv',\n            addExtmap(rtpExtensions)\n          );\n          if(ssrc) {\n            stringBuilder.add(`a=msid:${streamName} video${ssrc}`);\n          }\n          stringBuilder.add(\n            'a=rtcp-mux', \n            'a=rtcp-rsize',\n            addPayloadTypes(payloadTypes),\n            addSsrc(type, ssrc, ssrcGroups, streamName)\n          );\n          break;\n        }\n      }\n    }\n    stringBuilder.add(addDataChannel(2));\n    return stringBuilder.finalize();\n  }\n\n  static generateAnswer(info: any) {\n    const {fingerprints, ufrag, pwd, audio, video} = info;\n    audio.type = 'audio';\n    video.type = 'video';\n    const media = [audio, video];\n\n    const stringBuilder = new StringFromLineBuilder();\n    stringBuilder.add(\n      'v=0',\n      'o=- 1 2 IN IP4 127.0.0.1',\n      's=-',\n      't=0 0',\n    );\n\n    if(fingerprints) {\n      fingerprints.forEach((x: any) => {\n        const {hash, fingerprint, setup} = x;\n        stringBuilder.add(\n          `a=fingerprint:${hash} ${fingerprint}`,\n          `a=setup:${setup}`\n        );\n      });\n    }\n    if(ufrag && pwd) {\n      stringBuilder.add(\n        `a=ice-ufrag:${ufrag}`,\n        `a=ice-pwd:${pwd}`\n      );\n    }\n\n    stringBuilder.add(\n      'a=group:BUNDLE 0 1 2',\n      'a=extmap-allow-mixed',\n      'a=msid-semantic: WMS *'\n    );\n    const streamName = 'stream' + media.map(x => x.ssrc).join('_');\n    for(let i = 0; i < media.length; i++) {\n      const m = media[i];\n      const {type, ssrc, ssrcGroups, payloadTypes, rtpExtensions} = m;\n      switch(type) {\n        case 'audio': {\n          stringBuilder.add(\n            `m=audio 56930 UDP/TLS/RTP/SAVPF ${payloadTypes.map((x: any) => x.id).join(' ')}`,\n            'c=IN IP4 0.0.0.0',\n            'a=rtcp:9 IN IP4 0.0.0.0',\n            'a=ice-options:trickle',\n            `a=mid:${i}`,\n            'a=sendrecv',\n            addExtmap(rtpExtensions)\n          );\n          if(ssrc) {\n            stringBuilder.add(`a=msid:${streamName} audio${ssrc}`);\n          }\n          stringBuilder.add(\n            'a=rtcp-mux',\n            addPayloadTypes(payloadTypes),\n            addSsrc(type, ssrc, ssrcGroups, streamName)\n          );\n          break;\n        }\n\n        case 'video': {\n          stringBuilder.add(\n            `m=video 61986 UDP/TLS/RTP/SAVPF ${payloadTypes.map((x: any) => x.id).join(' ')}`,\n            'c=IN IP4 0.0.0.0',\n            'a=rtcp:9 IN IP4 0.0.0.0',\n            'a=ice-options:trickle',\n            `a=mid:${i}`,\n            'a=sendrecv',\n            addExtmap(rtpExtensions)\n          );\n          if(ssrc) {\n            stringBuilder.add(`a=msid:${streamName} video${ssrc}`);\n          }\n\n          stringBuilder.add(\n            'a=rtcp-mux',\n            'a=rtcp-rsize',\n            addPayloadTypes(payloadTypes),\n            addSsrc(type, ssrc, ssrcGroups, streamName)\n          );\n          break;\n        }\n      }\n    }\n    stringBuilder.add(addDataChannel(2));\n    return stringBuilder.finalize();\n  }\n}\n","/*\n*  Copyright (c) 2018-present, Evgeny Nadymov\n*\n* This source code is licensed under the GPL v.3.0 license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\nimport ChromeP2PSdpBuilder from './chromeP2PSdpBuilder';\nimport { FirefoxP2PSdpBuilder } from './firefoxP2PSdpBuilder';\nimport { SafariP2PSdpBuilder } from './safariP2PSdpBuilder';\n// import { TG_CALLS_SDP_STRING } from '../../Stores/CallStore';\n\nexport function p2pParseCandidate(candidate) {\n  if(!candidate || !candidate.startsWith('candidate:')) {\n    return;\n  }\n  \n  const sdpString = candidate;\n  candidate = candidate.substr('candidate:'.length);\n  \n  const [foundation, component, protocol, priority, ip, port, ...other] = candidate.split(' ');\n  const c = {\n    sdpString,\n    foundation,\n    component,\n    protocol,\n    priority,\n    address: { ip, port }\n  };\n  \n  for(let i = 0; i < other.length; i += 2) {\n    switch(other[i]) {\n      case 'typ': {\n        c.type = other[i + 1];\n        break;\n      }\n      case 'raddr': {\n        if(!c.relAddress) {\n          c.relAddress = {};\n        }\n        \n        c.relAddress.ip = other[i + 1];\n        break;\n      }\n      case 'rport': {\n        if(!c.relAddress) {\n          c.relAddress = {};\n        }\n        \n        c.relAddress.port = other[i + 1];\n        break;\n      }\n      case 'generation': {\n        c.generation = other[i + 1];\n        break;\n      }\n      case 'tcptype': {\n        c.tcpType = other[i + 1];\n        break;\n      }\n      case 'network-id': {\n        c.networkId = other[i + 1];\n        break;\n      }\n      case 'network-cost': {\n        c.networkCost = other[i + 1];\n        break;\n      }\n      case 'ufrag': {\n        c.username = other[i + 1];\n        break;\n      }\n    }\n  }\n  \n  return c;\n}\n\nexport function p2pParseSdp(sdp) {\n  const lines = sdp.split('\\r\\n');\n  const lookup = (prefix, force = true, lineFrom = 0, lineTo = Number.MAX_VALUE) => {\n    if (lineTo === -1) {\n      lineTo = Number.MAX_VALUE;\n    }\n    for (let i = lineFrom; i < lines.length && i < lineTo; i++) {\n      const line = lines[i];\n      if (line.startsWith(prefix)) {\n        return line.substr(prefix.length);\n      }\n    }\n    \n    if (force) {\n      console.error(\"Can't find prefix\", prefix);\n    }\n    \n    return null;\n  };\n  const findIndex = (prefix, lineFrom = 0, lineTo = Number.MAX_VALUE) => {\n    if (lineTo === -1) {\n      lineTo = Number.MAX_VALUE;\n    }\n    for (let i = lineFrom; i < lines.length && i < lineTo; i++) {\n      const line = lines[i];\n      if (line.startsWith(prefix)) {\n        return i;\n      }\n    }\n    \n    return -1;\n  };\n  \n  const pwdIndex = findIndex('a=ice-pwd:');\n  const ufragIndex = findIndex('a=ice-ufrag:');\n  if (pwdIndex === -1 && ufragIndex === -1) {\n    return {\n      // sessionId: lookup('o=').split(' ')[1],\n      ufrag: null,\n      pwd: null,\n      fingerprints: []\n    };\n  }\n  \n  const info = {\n    // sessionId: lookup('o=').split(' ')[1],\n    ufrag: null,\n    pwd: null,\n    fingerprints: []\n  };\n  \n  let mediaIndex = findIndex('m=');\n  const fingerprint = lookup('a=fingerprint:', false);\n  const setup = lookup('a=setup:', false);\n  if (fingerprint && setup) {\n    info.fingerprints.push({\n      hash: fingerprint.split(' ')[0],\n      fingerprint: fingerprint.split(' ')[1],\n      setup\n    });\n  }\n  \n  const ufrag = lookup('a=ice-ufrag:', false);\n  const pwd = lookup('a=ice-pwd:', false);\n  if (ufrag && pwd) {\n    info.ufrag = ufrag;\n    info.pwd = pwd;\n  }\n  \n  while (mediaIndex !== -1) {\n    let nextMediaIndex = findIndex('m=', mediaIndex + 1);\n    \n    const extmap = [];\n    const types = [];\n    const mediaType = lookup('m=', true, mediaIndex, nextMediaIndex).split(' ')[0];\n    const media = {\n      // type: lookup('m=', true, mediaIndex, nextMediaIndex).split(' ')[0],\n      // mid: lookup('a=mid:', true, mediaIndex, nextMediaIndex),\n      // dir: findDirection(mediaIndex, nextMediaIndex),\n      rtpExtensions: extmap,\n      payloadTypes: types\n    }\n    \n    const lineTo = nextMediaIndex === -1 ? lines.length : nextMediaIndex;\n    const fmtp = new Map();\n    const rtcpFb = new Map();\n    for (let i = mediaIndex; i < lineTo; i++) {\n      const line = lines[i];\n      if (line.startsWith('a=extmap:')) {\n        const [ id, uri ] = line.substr('a=extmap:'.length).split(' ');\n        extmap.push({ id: parseInt(id), uri });\n      } else if (line.startsWith('a=fmtp:')) {\n        const [ id, str ] = line.substr('a=fmtp:'.length).split(' ');\n        const obj = { };\n        const arr =  str.split(';').map(x => {\n          const [ key, value ] = x.split('=');\n          obj[key] = value;\n          return { [key]: value };\n        });\n        fmtp.set(parseInt(id), obj);\n      } else if (line.startsWith('a=rtcp-fb:')) {\n        const [ id, type = '', subtype = '' ] = line.substr('a=rtcp-fb:'.length).split(' ');\n        if (rtcpFb.has(parseInt(id))) {\n          rtcpFb.get(parseInt(id)).push({ type, subtype });\n        } else {\n          rtcpFb.set(parseInt(id), [{ type, subtype }])\n        }\n      } else if (line.startsWith('a=rtpmap')) {\n        const [ id, str ] = line.substr('a=rtpmap:'.length).split(' ');\n        const [ name, clockrate, channels = '0' ] = str.split('/');\n        const obj = { id: parseInt(id), name, clockrate: parseInt(clockrate), channels: parseInt(channels) };\n        \n        types.push(obj);\n      }\n    }\n    \n    for (let i = 0; i < types.length; i++) {\n      const { id } = types[i];\n      if (rtcpFb.has(id)) {\n        types[i].feedbackTypes = rtcpFb.get(id);\n      }\n      if (fmtp.has(id)) {\n        types[i].parameters = fmtp.get(id);\n      }\n    }\n    \n    const ssrc = lookup('a=ssrc:', false, mediaIndex, nextMediaIndex);\n    if (ssrc) {\n      media.ssrc = ssrc.split(' ')[0];\n    }\n    \n    const ssrcGroup = lookup('a=ssrc-group:', false, mediaIndex, nextMediaIndex);\n    if (ssrcGroup) {\n      const [ semantics, ...ssrcs ] = ssrcGroup.split(' ');\n      media.ssrcGroups = [{\n        semantics,\n        ssrcs\n      }]\n    }\n    \n    switch (mediaType) {\n      case 'audio': {\n        info.audio = media;\n        break;\n      }\n      case 'video': {\n        info.video = media;\n        break;\n      }\n    }\n    \n    mediaIndex = nextMediaIndex;\n  }\n\n  if(!info.video.ssrcGroups) {\n    info.video.ssrcGroups = [];\n  }\n\n  info['@type'] = 'InitialSetup';\n  \n  // console.log('[p2pParseSdp]', sdp, info);\n  return info;\n}\n\nexport function isFirefox() {\n  return navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n}\n\nfunction isSafari() {\n  return navigator.userAgent.toLowerCase().indexOf('safari') > -1 && navigator.userAgent.toLowerCase().indexOf('chrome') === -1;\n}\n\nexport function addExtmap(extmap) {\n  let sdp = [];\n  // return sdp;\n  for (let j = 0; j < extmap.length; j++) {\n    const ext = extmap[j];\n    const { id, uri } = ext;\n    // if (isFirefox() && uri.indexOf(''))\n    console.log('[extmap] add', id, uri);\n    sdp.push(`a=extmap:${id} ${uri}`);\n  }\n  \n  return sdp.join('\\n');\n}\n\nexport function addPayloadTypes(types) {\n  let sdp = [];\n  console.log('[SDP] addPayloadTypes', types);\n  for (let i = 0; i < types.length; i++) {\n    const type = types[i];\n    const { id, name, clockrate, channels, feedbackTypes, parameters } = type;\n    sdp.push(`a=rtpmap:${id} ${name}/${clockrate}${channels ? '/' + channels : ''}`);\n    if (feedbackTypes) {\n      feedbackTypes.forEach(x => {\n        const { type, subtype } = x;\n        sdp.push(`a=rtcp-fb:${id} ${[type, subtype].join(' ')}`);\n      });\n    }\n    if (parameters) {\n      const fmtp = [];\n      Object.getOwnPropertyNames(parameters).forEach(pName => {\n        fmtp.push(`${pName}=${parameters[pName]}`);\n      });\n      \n      sdp.push(`a=fmtp:${id} ${fmtp.join(';')}`);\n    }\n  }\n  \n  return sdp.join('\\n');\n}\n\nexport function addSsrc(type, ssrc, ssrcGroups, streamName) {\n  let sdp = [];\n  \n  if (ssrcGroups && ssrcGroups.length > 0) {\n    ssrcGroups.forEach(ssrcGroup => {\n      if (ssrcGroup && ssrcGroup.ssrcs.length > 0) {\n        sdp.push(`a=ssrc-group:${ssrcGroup.semantics} ${ssrcGroup.ssrcs.join(' ')}`);\n        ssrcGroup.ssrcs.forEach(ssrc => {\n          sdp.push(\n            `a=ssrc:${ssrc} cname:stream${ssrc}`,\n            `a=ssrc:${ssrc} msid:${streamName} ${type}${ssrc}`,\n            `a=ssrc:${ssrc} mslabel:${type}${ssrc}`,\n            `a=ssrc:${ssrc} label:${type}${ssrc}`\n          );\n        });\n      }\n    });\n  } else if (ssrc) {\n    sdp.push(\n      `a=ssrc:${ssrc} cname:stream${ssrc}`,\n      `a=ssrc:${ssrc} msid:${streamName} ${type}${ssrc}`,\n      `a=ssrc:${ssrc} mslabel:${type}${ssrc}`,\n      `a=ssrc:${ssrc} label:${type}${ssrc}`\n    );\n  }\n  \n  return sdp.join('\\n');\n}\n\nexport function addDataChannel(mid) {\n  return `m=application 9 UDP/DTLS/SCTP webrtc-datachannel\nc=IN IP4 0.0.0.0\na=ice-options:trickle\na=mid:2\na=sctp-port:5000\na=max-message-size:262144`;\n}\n\nexport class P2PSdpBuilder {\n  static generateCandidate(info) {\n    if (!info) return null;\n    \n    const { sdpString, sdpMLineIndex, sdpMid, foundation, component, protocol, priority, address, type, relAddress, generation, tcpType, networkId, networkCost, username } = info;\n    if (/* TG_CALLS_SDP_STRING */true) {\n      if (sdpString) {\n        return {\n          candidate: sdpString,\n          sdpMLineIndex,\n          sdpMid\n        };\n      }\n    }\n    throw 'no sdpString';\n    \n    let candidate = `candidate:${foundation} ${component} ${protocol} ${priority} ${address.ip} ${address.port}`;\n    const attrs = []\n    if (type) {\n      attrs.push(`typ ${type}`);\n    }\n    if (relAddress) {\n      attrs.push(`raddr ${relAddress.ip}`);\n      attrs.push(`rport ${relAddress.port}`);\n    }\n    if (tcpType) {\n      attrs.push(`tcptype ${tcpType}`);\n    }\n    if (generation) {\n      attrs.push(`generation ${generation}`);\n    }\n    if (username) {\n      attrs.push(`ufrag ${username}`);\n    }\n    if (networkId) {\n      attrs.push(`network-id ${networkId}`);\n    }\n    if (networkCost) {\n      attrs.push(`network-cost ${networkCost}`);\n    }\n    if (attrs.length > 0) {\n      candidate += ` ${attrs.join(' ')}`;\n    }\n    \n    return { candidate, sdpMid, sdpMLineIndex };\n  }\n  \n  static generateOffer(info) {\n    if (isFirefox()) {\n      return FirefoxP2PSdpBuilder.generateOffer(info);\n    } else if (isSafari()) {\n      return SafariP2PSdpBuilder.generateOffer(info);\n    }\n    \n    return ChromeP2PSdpBuilder.generateOffer(info);\n  }\n  \n  static generateAnswer(info) {\n    if (isFirefox()) {\n      return FirefoxP2PSdpBuilder.generateAnswer(info);\n    } else if (isSafari()) {\n      return SafariP2PSdpBuilder.generateAnswer(info);\n    }\n    \n    return ChromeP2PSdpBuilder.generateAnswer(info);\n  }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { addDataChannel, addExtmap, addPayloadTypes, addSsrc } from './p2PSdpBuilder';\n\nexport class FirefoxP2PSdpBuilder {\n    static generateOffer(info) {\n        const { fingerprints, ufrag, pwd, audio, video } = info;\n        audio.type = 'audio';\n        video.type = 'video';\n        const media = [audio, video];\n\n        let sdp = `v=0\no=- 1 0 IN IP4 0.0.0.0\ns=-\nt=0 0`;\n        if (fingerprints) {\n            fingerprints.forEach(x => {\n                const { hash, fingerprint, setup } = x;\n                sdp += `\na=fingerprint:${hash} ${fingerprint}\na=setup:${setup}`;\n            });\n        }\n        if (ufrag && pwd) {\n            sdp += `\na=ice-ufrag:${ufrag}\na=ice-pwd:${pwd}`;\n        }\n\n        sdp += `\na=group:BUNDLE 0 1 2\na=ice-options:trickle\na=msid-semantic:WMS *`;\n        const streamName = 'stream' + media.map(x => x.ssrc).join('_');\n        for (let i = 0; i < media.length; i++) {\n            const m = media[i];\n            const { type, ssrc, ssrcGroups, payloadTypes, rtpExtensions } = m;\n            switch (type) {\n                case 'audio': {\n                    sdp += `\nm=audio 9 UDP/TLS/RTP/SAVPF ${payloadTypes.map(x => x.id).join(' ')}\nc=IN IP4 0.0.0.0\na=mid:${i}\na=sendrecv`;\n                    sdp += addExtmap(rtpExtensions);\n                    sdp += `\na=rtcp-mux`;\n                    sdp += addPayloadTypes(payloadTypes);\n                    sdp += addSsrc(type, ssrc, ssrcGroups, streamName);\n\n                    break;\n                }\n                case 'video': {\n                    sdp += `\nm=video 9 UDP/TLS/RTP/SAVPF ${payloadTypes.map(x => x.id).join(' ')}\nc=IN IP4 0.0.0.0\na=mid:${i}\na=sendrecv`;\n                    sdp += addExtmap(rtpExtensions);\n                    sdp += `\na=rtcp-mux\na=rtcp-rsize`;\n                    sdp += addPayloadTypes(payloadTypes);\n                    sdp += addSsrc(type, ssrc, ssrcGroups, streamName);\n\n                    break;\n                }\n            }\n        }\n        sdp += addDataChannel(2);\n        sdp += `\n`;\n\n        return sdp;\n    }\n\n    static generateAnswer(info) {\n        const { fingerprints, ufrag, pwd, audio, video } = info;\n        audio.type = 'audio';\n        video.type = 'video';\n        const media = [audio, video];\n\n        let sdp = `v=0\no=- 1 0 IN IP4 0.0.0.0\ns=-\nt=0 0`;\n        if (fingerprints) {\n            fingerprints.forEach(x => {\n                const { hash, fingerprint, setup } = x;\n                sdp += `\na=fingerprint:${hash} ${fingerprint}\na=setup:${setup}`;\n            });\n        }\n        if (ufrag && pwd) {\n            sdp += `\na=ice-ufrag:${ufrag}\na=ice-pwd:${pwd}`;\n        }\n\n        sdp += `\na=group:BUNDLE 0 1 2\na=ice-options:trickle\na=msid-semantic:WMS *`;\n        const streamName = 'stream' + media.map(x => x.ssrc).join('_');\n        for (let i = 0; i < media.length; i++) {\n            const m = media[i];\n            const { type, mid, ssrc, ssrcGroups, payloadTypes, dir, rtpExtensions } = m;\n            switch (type) {\n                case 'audio': {\n                    sdp += `\nm=audio 9 UDP/TLS/RTP/SAVPF ${payloadTypes.map(x => x.id).join(' ')}\nc=IN IP4 0.0.0.0\na=mid:${i}\na=sendrecv`;\n                    sdp += addExtmap(rtpExtensions);\n                    sdp += `\na=rtcp-mux`;\n                    sdp += addPayloadTypes(payloadTypes);\n                    sdp += addSsrc(type, ssrc, ssrcGroups, streamName);\n\n                    break;\n                }\n                case 'video': {\n                    sdp += `\nm=video 9 UDP/TLS/RTP/SAVPF ${payloadTypes.map(x => x.id).join(' ')}\nc=IN IP4 0.0.0.0\na=mid:${i}\na=sendrecv`;\n                    sdp += addExtmap(rtpExtensions);\n                    sdp += `\na=rtcp-mux\na=rtcp-rsize`;\n                    sdp += addPayloadTypes(payloadTypes);\n                    sdp += addSsrc(type, ssrc, ssrcGroups, streamName);\n                    break;\n                }\n            }\n        }\n        sdp += addDataChannel(2);\n        sdp += `\n`;\n\n        return sdp;\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { addDataChannel, addExtmap, addPayloadTypes, addSsrc } from './p2PSdpBuilder';\n\nexport class SafariP2PSdpBuilder {\n    static generateOffer(info) {\n        const { fingerprints, ufrag, pwd, audio, video } = info;\n        audio.type = 'audio';\n        video.type = 'video';\n        const media = [audio, video];\n\n        if (!media.length) {\n            return `v=0\no=- 1 2 IN IP4 127.0.0.1\ns=-\nt=0 0\na=msid-semantic: WMS\n`;\n        }\n\n        let sdp = `v=0\no=- 1 2 IN IP4 127.0.0.1\ns=-\nt=0 0`;\n        if (fingerprints) {\n            fingerprints.forEach(x => {\n                const { hash, fingerprint, setup } = x;\n                sdp += `\na=fingerprint:${hash} ${fingerprint}\na=setup:${setup}`;\n            });\n        }\n        if (ufrag && pwd) {\n            sdp += `\na=ice-ufrag:${ufrag}\na=ice-pwd:${pwd}`;\n        }\n\n        sdp += `\na=group:BUNDLE 0 1 2\na=extmap-allow-mixed\na=msid-semantic: WMS *`;\n        const streamName = 'stream' + media.map(x => x.ssrc).join('_');\n        for (let i = 0; i < media.length; i++) {\n            const m = media[i];\n            const { type, ssrc, ssrcGroups, payloadTypes, rtpExtensions } = m;\n            switch (type) {\n                case 'audio': {\n                    sdp += `\nm=audio 9 UDP/TLS/RTP/SAVPF ${payloadTypes.map(x => x.id).join(' ')}\nc=IN IP4 0.0.0.0\na=rtcp:9 IN IP4 0.0.0.0\na=ice-options:trickle\na=mid:${i}\na=sendrecv`;\n                    sdp += addExtmap(rtpExtensions);\n                    if (ssrc) {\n                        sdp += `\na=msid:${streamName} audio${ssrc}`;\n                    }\n                    sdp += `\na=rtcp-mux`;\n                    sdp += addPayloadTypes(payloadTypes);\n                    sdp += addSsrc(type, ssrc, ssrcGroups, streamName);\n\n                    break;\n                }\n                case 'video': {\n                    sdp += `\nm=video 9 UDP/TLS/RTP/SAVPF ${payloadTypes.map(x => x.id).join(' ')}\nc=IN IP4 0.0.0.0\na=rtcp:9 IN IP4 0.0.0.0\na=ice-options:trickle\na=mid:${i}\na=sendrecv`;\n                    sdp += addExtmap(rtpExtensions);\n                    if (ssrc) {\n                        sdp += `\na=msid:${streamName} video${ssrc}`;\n                    }\n                    sdp += `\na=rtcp-mux\na=rtcp-rsize`;\n                    sdp += addPayloadTypes(payloadTypes);\n                    sdp += addSsrc(type, ssrc, ssrcGroups, streamName);\n                    break;\n                }\n            }\n        }\n        sdp += addDataChannel(2);\n        sdp += `\n`;\n\n        return sdp;\n    }\n\n    static generateAnswer(info) {\n        const { fingerprints, ufrag, pwd, audio, video } = info;\n        audio.type = 'audio';\n        video.type = 'video';\n        const media = [audio, video];\n\n        if (!media.length) {\n            return `v=0\no=- 1 2 IN IP4 127.0.0.1\ns=-\nt=0 0\na=msid-semantic: WMS\n`;\n        }\n\n        let sdp = `v=0\no=- 1 2 IN IP4 127.0.0.1\ns=-\nt=0 0`;\n        if (fingerprints) {\n            fingerprints.forEach(x => {\n                const { hash, fingerprint, setup } = x;\n                sdp += `\na=fingerprint:${hash} ${fingerprint}\na=setup:${setup}`;\n            });\n        }\n        if (ufrag && pwd) {\n            sdp += `\na=ice-ufrag:${ufrag}\na=ice-pwd:${pwd}`;\n        }\n\n        sdp += `\na=group:BUNDLE 0 1 2\na=extmap-allow-mixed\na=msid-semantic: WMS *`;\n        const streamName = 'stream' + media.map(x => x.ssrc).join('_');\n        for (let i = 0; i < media.length; i++) {\n            const m = media[i];\n            const { type, ssrc, ssrcGroups, payloadTypes, rtpExtensions } = m;\n            switch (type) {\n                case 'audio': {\n                    sdp += `\nm=audio 9 UDP/TLS/RTP/SAVPF ${payloadTypes.map(x => x.id).join(' ')}\nc=IN IP4 0.0.0.0\na=rtcp:9 IN IP4 0.0.0.0\na=ice-options:trickle\na=mid:${i}\na=sendrecv`;\n                    sdp += addExtmap(rtpExtensions);\n                    if (ssrc) {\n                        sdp += `\na=msid:${streamName} audio${ssrc}`;\n                    }\n                    sdp += `\na=rtcp-mux`;\n                    sdp += addPayloadTypes(payloadTypes);\n                    sdp += addSsrc(type, ssrc, ssrcGroups, streamName);\n\n                    break;\n                }\n                case 'video': {\n                    sdp += `\nm=video 9 UDP/TLS/RTP/SAVPF ${payloadTypes.map(x => x.id).join(' ')}\nc=IN IP4 0.0.0.0\na=rtcp:9 IN IP4 0.0.0.0\na=ice-options:trickle\na=mid:${i}\na=sendrecv`;\n                    sdp += addExtmap(rtpExtensions);\n                    if (ssrc) {\n                        sdp += `\na=msid:${streamName} video${ssrc}`;\n                    }\n                    sdp += `\na=rtcp-mux\na=rtcp-rsize`;\n                    sdp += addPayloadTypes(payloadTypes);\n                    sdp += addSsrc(type, ssrc, ssrcGroups, streamName);\n                    break;\n                }\n            }\n        }\n        sdp += addDataChannel(2);\n        sdp += `\n`;\n\n        return sdp;\n    }\n}","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport ctx from \"../../environment/ctx\";\nimport { IS_SAFARI } from \"../../environment/userAgent\";\nimport safeAssign from \"../../helpers/object/safeAssign\";\nimport debounce from \"../../helpers/schedulers/debounce\";\nimport { GroupCallParticipantVideoSourceGroup, PhoneCall, PhoneCallDiscardReason, PhoneCallProtocol, Update } from \"../../layer\";\nimport { emojiFromCodePoints } from \"../../vendor/emoji\";\nimport type { ApiUpdatesManager } from \"../appManagers/apiUpdatesManager\";\nimport type { AppCallsManager, CallId } from \"../appManagers/appCallsManager\";\nimport { logger } from \"../logger\";\nimport type { ApiManagerProxy } from \"../mtproto/mtprotoworker\";\nimport CallConnectionInstance from \"./callConnectionInstance\";\nimport CallInstanceBase from \"./callInstanceBase\";\nimport CALL_STATE from \"./callState\";\nimport { GROUP_CALL_AMPLITUDE_ANALYSE_INTERVAL_MS } from \"./constants\";\nimport parseSignalingData from \"./helpers/parseSignalingData\";\nimport stopTrack from \"./helpers/stopTrack\";\nimport localConferenceDescription, { ConferenceEntry, generateSsrc } from \"./localConferenceDescription\";\nimport getCallProtocol from \"./p2P/getCallProtocol\";\nimport getRtcConfiguration from \"./p2P/getRtcConfiguration\";\nimport P2PEncryptor from \"./p2P/p2PEncryptor\";\nimport { p2pParseCandidate, P2PSdpBuilder } from \"./p2P/p2PSdpBuilder\";\nimport { parseSdp } from \"./sdp/utils\";\nimport { WebRTCLineType } from \"./sdpBuilder\";\nimport StreamManager from \"./streamManager\";\nimport { AudioCodec, CallMediaState, CallSignalingData, DiffieHellmanInfo, P2PAudioCodec, P2PVideoCodec, VideoCodec } from \"./types\";\n\nexport default class CallInstance extends CallInstanceBase<{\n  state: (state: CALL_STATE) => void,\n  id: (id: CallId, prevId: CallId) => void,\n  muted: (muted: boolean) => void,\n  mediaState: (mediaState: CallMediaState) => void,\n  acceptCallOverride: () => Promise<boolean>,\n}> {\n  public dh: Partial<DiffieHellmanInfo.a & DiffieHellmanInfo.b>;\n  public id: CallId;\n  public call: PhoneCall;\n  public interlocutorUserId: UserId;\n  public protocol: PhoneCallProtocol;\n  public isOutgoing: boolean;\n  public encryptionKey: Uint8Array;\n  public connectionInstance: CallConnectionInstance;\n  public encryptor: P2PEncryptor;\n  public decryptor: P2PEncryptor;\n  public candidates: RTCIceCandidate[];\n\n  public offerReceived: boolean;\n  public offerSent: boolean;\n  \n  public createdParticipantEntries: boolean;\n  public release: () => Promise<void>;\n  public _connectionState: CALL_STATE;\n\n  public createdAt: number;\n  public connectedAt: number;\n  public discardReason: string;\n\n  private appCallsManager: AppCallsManager;\n  private apiManager: ApiManagerProxy;\n  private apiUpdatesManager: ApiUpdatesManager;\n  \n  private hangUpTimeout: number;\n\n  private mediaStates: {\n    input: CallMediaState,\n    output?: CallMediaState\n  };\n\n  private sendMediaState: () => Promise<void>;\n\n  private decryptQueue: Uint8Array[];\n  \n  private getEmojisFingerprintPromise: Promise<CallInstance['emojisFingerprint']>;\n  private emojisFingerprint: [string, string, string, string];\n\n  private wasStartingScreen: boolean;\n  private wasStartingVideo: boolean;\n  public wasTryingToJoin: boolean;\n\n  public streamManager: StreamManager;\n\n  constructor(options: {\n    isOutgoing: boolean,\n    interlocutorUserId: UserId,\n    appCallsManager: CallInstance['appCallsManager'],\n    apiManager: CallInstance['apiManager'],\n    apiUpdatesManager: CallInstance['apiUpdatesManager'],\n    protocol?: PhoneCallProtocol\n  }) {\n    super();\n\n    this.log = logger('CALL');\n\n    if(!this.protocol) {\n      this.protocol = getCallProtocol();\n    }\n\n    safeAssign(this, options);\n    \n    this.createdAt = Date.now();\n    this.offerReceived = false;\n    this.offerSent = false;\n    this.decryptQueue = [];\n    this.candidates = [];\n\n    this.addEventListener('state', (state) => {\n      this.log('state', CALL_STATE[state]);\n\n      if(state === CALL_STATE.CLOSED) {\n        this.cleanup();\n      }\n    });\n\n    const streamManager = this.streamManager = new StreamManager(GROUP_CALL_AMPLITUDE_ANALYSE_INTERVAL_MS);\n    streamManager.direction = 'sendrecv';\n    streamManager.types.push('screencast');\n    if(!this.isOutgoing) {\n      streamManager.locked = true;\n      streamManager.canCreateConferenceEntry = false;\n    }\n\n    let mediaState: CallMediaState = {\n      '@type': 'MediaState',\n      type: 'input',\n      lowBattery: false,\n      muted: true,\n      screencastState: 'inactive',\n      videoRotation: 0,\n      videoState: 'inactive'\n    };\n\n    const self = this;\n    mediaState = new Proxy(mediaState, {\n      set: function(target, key, value) {\n        // @ts-ignore\n        target[key] = value;\n        self.setMediaState(mediaState);\n        self.sendMediaState();\n        return true;\n      }\n    });\n\n    this.mediaStates = {\n      input: mediaState\n    };\n\n    this.sendMediaState = debounce(this._sendMediaState.bind(this), 0, false, true);\n  }\n\n  get connectionState() {\n    const {_connectionState, connectionInstance} = this;\n    if(_connectionState !== undefined) {\n      return _connectionState;\n    } else if(!connectionInstance) {\n      return CALL_STATE.CONNECTING;\n    } else {\n      const {iceConnectionState} = connectionInstance.connection;\n      if(iceConnectionState === 'closed') {\n        return CALL_STATE.CLOSED;\n      } else if(iceConnectionState !== 'connected' && (!IS_SAFARI || iceConnectionState !== 'completed')) {\n        return CALL_STATE.CONNECTING;\n      } else {\n        return CALL_STATE.CONNECTED;\n      }\n    }\n  }\n\n  get sortIndex() {\n    const connectionState = this.connectionState;\n    const state = CALL_STATE.CLOSED - connectionState + 1;\n    let index = state * 10000000000000;\n    index += 2147483647000 - (connectionState === CALL_STATE.PENDING && this.isOutgoing ? 0 : this.createdAt);\n    return index;\n  }\n\n  public getVideoElement(type: CallMediaState['type']) {\n    if(type === 'input') return this.elements.get('main');\n    else {\n      const mediaState = this.getMediaState('output');\n      if(!mediaState) {\n        return;\n      }\n\n      const type: WebRTCLineType = mediaState.videoState === 'active' ? 'video' : (mediaState.screencastState === 'active' ? 'screencast' : undefined);\n      if(!type) {\n        return;\n      }\n\n      const entry = this.description.findEntry((entry) => entry.type === type);\n      if(!entry) {\n        return;\n      }\n\n      return this.elements.get('' + entry.recvEntry.source);\n    }\n  }\n\n  public async startScreenSharingInternal() {\n    try {\n      this.wasStartingScreen = true;\n      this.wasStartingVideo = false;\n      this.streamManager.types = ['audio', 'screencast'];\n      await this.requestScreen();\n    } catch(err) {\n      this.log.error('startScreenSharing error', err);\n    }\n  }\n\n  public async toggleScreenSharing() {\n    if(this.isSharingVideo) {\n      await this.stopVideoSharing();\n    }\n\n    if(this.isSharingScreen) {\n      return this.stopVideoSharing();\n    } else {\n      return this.startScreenSharingInternal();\n    }\n  }\n\n  public async startVideoSharingInternal() {\n    try {\n      this.wasStartingScreen = false;\n      this.wasStartingVideo = true;\n      this.streamManager.types = ['audio', 'video'];\n      await this.requestInputSource(false, true, false);\n    } catch(err) {\n      this.log.error('startVideoSharing error', err);\n    }\n  }\n\n  public async stopVideoSharing() {\n    const mediaState = this.getMediaState('input');\n    mediaState.videoState = mediaState.screencastState = 'inactive';\n\n    const {streamManager, description} = this;\n    const track = streamManager.inputStream.getVideoTracks()[0];\n    if(track) {\n      stopTrack(track);\n      streamManager.appendToConference(description); // clear sender track\n    }\n  }\n\n  public async toggleVideoSharing() {\n    if(this.isSharingScreen) {\n      await this.stopVideoSharing();\n    }\n\n    if(this.isSharingVideo) {\n      return this.stopVideoSharing();\n    } else {\n      return this.startVideoSharingInternal();\n    }\n  }\n\n  public getMediaState(type: CallMediaState['type']) {\n    return this.mediaStates[type];\n  }\n\n  public setMediaState(mediaState: CallMediaState) {\n    this.mediaStates[mediaState.type] = mediaState;\n    this.dispatchEvent('mediaState', mediaState);\n  }\n\n  public isSharingVideoType(type: 'video' | 'screencast') {\n    try {\n      const hasVideoTrack = super.isSharingVideo;\n      return hasVideoTrack && !!((this.wasStartingScreen && type === 'screencast') || (this.wasStartingVideo && type === 'video'));\n\n      // ! it will be used before the track appears\n      // return !!this.description.entries.find(entry => entry.type === type && entry.transceiver.sender.track.enabled);\n    } catch(err) {\n      return false;\n    }\n  }\n\n  public get isSharingVideo() {\n    return this.isSharingVideoType('video');\n  }\n\n  public get isSharingScreen() {\n    return this.isSharingVideoType('screencast');\n  }\n\n  public get isMuted() {\n    const audioTrack = this.streamManager.inputStream.getAudioTracks()[0];\n    return !audioTrack?.enabled;\n  }\n\n  public get isClosing() {\n    const {connectionState} = this;\n    return connectionState === CALL_STATE.CLOSING || connectionState === CALL_STATE.CLOSED;\n  }\n\n  public get description(): localConferenceDescription {\n    return this.connectionInstance?.description;\n  }\n\n  public setHangUpTimeout(timeout: number, reason: PhoneCallDiscardReason['_']) {\n    this.clearHangUpTimeout();\n    this.hangUpTimeout = ctx.setTimeout(() => {\n      this.hangUpTimeout = undefined;\n      this.hangUp(reason);\n    }, timeout);\n  }\n\n  public clearHangUpTimeout() {\n    if(this.hangUpTimeout !== undefined) {\n      clearTimeout(this.hangUpTimeout);\n      this.hangUpTimeout = undefined;\n    }\n  }\n\n  public setPhoneCall(phoneCall: PhoneCall) {\n    this.call = phoneCall;\n\n    const {id} = phoneCall;\n    if(this.id !== id) {\n      const prevId = this.id;\n      this.id = id;\n      this.dispatchEvent('id', id, prevId);\n    }\n  }\n\n  public async acceptCall() {\n    const canAccept = (await Promise.all(this.dispatchResultableEvent('acceptCallOverride')))[0] ?? true;\n    if(this.isClosing || !canAccept) {\n      return;\n    }\n    \n    // this.clearHangUpTimeout();\n    this.overrideConnectionState(CALL_STATE.EXCHANGING_KEYS);\n\n    const call = this.call as PhoneCall.phoneCallRequested;\n    this.requestInputSource(true, !!call.pFlags.video, false);\n\n    const g_a_hash = call.g_a_hash;\n    this.appCallsManager.generateDh().then(dh => {\n      this.dh = { // ! it is correct\n        g_a_hash,\n        b: dh.a,\n        g_b: dh.g_a,\n        g_b_hash: dh.g_a_hash,\n        p: dh.p,\n      };\n\n      return this.apiManager.invokeApi('phone.acceptCall', {\n        peer: this.appCallsManager.getCallInput(this.id),\n        protocol: this.protocol,\n        g_b: this.dh.g_b\n      });\n    }).then(phonePhoneCall => {\n      this.appCallsManager.savePhonePhoneCall(phonePhoneCall);\n    });\n  }\n\n  public joinCall() {\n    this.log('joinCall');\n\n    this.getEmojisFingerprint();\n\n    this.overrideConnectionState();\n    \n    const {isOutgoing, encryptionKey, streamManager} = this;\n    \n    const configuration = getRtcConfiguration(this.call as PhoneCall.phoneCall);\n    this.log('joinCall configuration', configuration);\n    if(!configuration) return;\n\n    const connectionInstance = this.connectionInstance = new CallConnectionInstance({\n      call: this,\n      streamManager,\n      log: this.log.bindPrefix('connection'),\n    });\n\n    const connection = connectionInstance.createPeerConnection(configuration);\n    connection.addEventListener('iceconnectionstatechange', () => {\n      const state = this.connectionState;\n      if(this.connectedAt === undefined && state === CALL_STATE.CONNECTED) {\n        this.connectedAt = Date.now();\n      }\n      \n      this.dispatchEvent('state', state);\n    });\n    connection.addEventListener('negotiationneeded', () => {\n      connectionInstance.negotiate();\n    });\n    connection.addEventListener('icecandidate', (event) => {\n      const {candidate} = event;\n      connection.log('onicecandidate', candidate);\n      if(candidate?.candidate) {\n        this.sendIceCandidate(candidate);\n      }\n    });\n    connection.addEventListener('track', (event) => {\n      const {track} = event;\n      connection.log('ontrack', track);\n      this.onTrack(event);\n    });\n\n    const description = connectionInstance.createDescription();\n    \n    this.encryptor = new P2PEncryptor(isOutgoing, encryptionKey);\n    this.decryptor = new P2PEncryptor(!isOutgoing, encryptionKey);\n\n    this.log('currentCall', this);\n\n    if(isOutgoing) {\n      connectionInstance.appendStreamToConference();\n    }\n    \n    this.createDataChannel();\n\n    this.processDecryptQueue();\n  }\n\n  private createDataChannelEntry() {\n    const dataChannelEntry = this.description.createEntry('application');\n    dataChannelEntry.setDirection('sendrecv');\n    dataChannelEntry.sendEntry = dataChannelEntry.recvEntry = dataChannelEntry; \n  }\n\n  private createDataChannel() {\n    if(this.connectionInstance.dataChannel) {\n      return;\n    }\n\n    const channel = this.connectionInstance.createDataChannel({\n      id: 0,\n      negotiated: true\n    });\n    channel.addEventListener('message', (e) => {\n      this.applyDataChannelData(JSON.parse(e.data));\n    });\n    channel.addEventListener('open', () => {\n      this.sendMediaState();\n    });\n  }\n\n  private applyDataChannelData(data: CallMediaState) {\n    switch(data['@type']) {\n      case 'MediaState': {\n        data.type = 'output';\n        this.log('got output media state', data);\n        this.setMediaState(data);\n        break;\n      }\n\n      default:\n        this.log.error('unknown data channel data:', data);\n        break;\n    }\n  }\n\n  private _sendMediaState() {\n    const {connectionInstance} = this;\n    if(!connectionInstance) return;\n\n    const mediaState = {...this.getMediaState('input')};\n    // mediaState.videoRotation = 90;\n    delete mediaState.type;\n    this.log('sendMediaState', mediaState);\n\n    connectionInstance.sendDataChannelData(mediaState);\n  }\n\n  public async sendCallSignalingData(data: CallSignalingData) {\n    /* if(data['@type'] === 'InitialSetup') {\n      this.filterNotVP8(data);\n    } */\n    \n    const json = JSON.stringify(data);\n    const arr = new TextEncoder().encode(json);\n    const {bytes} = await this.encryptor.encryptRawPacket(arr);\n    \n    this.log('sendCallSignalingData', this.id, json);\n    await this.apiManager.invokeApi('phone.sendSignalingData', {\n      peer: this.appCallsManager.getCallInput(this.id),\n      data: bytes\n    });\n  }\n  \n  public sendIceCandidate(iceCandidate: RTCIceCandidate) {\n    this.log('sendIceCandidate', iceCandidate);\n    const {candidate, sdpMLineIndex} = iceCandidate;\n    if(sdpMLineIndex !== 0) {\n      return;\n    }\n    \n    const parsed = p2pParseCandidate(candidate);\n    // const parsed = {sdpString: candidate};\n    /* if(parsed.address.ip !== '') {\n      return;\n    } */\n\n    this.sendCallSignalingData({\n      '@type': 'Candidates', \n      candidates: [parsed]\n    });\n  }\n\n  public async confirmCall() {\n    const {appCallsManager, apiManager, protocol, id, call} = this;\n    const dh = this.dh as DiffieHellmanInfo.a;\n\n    // this.clearHangUpTimeout();\n    this.overrideConnectionState(CALL_STATE.EXCHANGING_KEYS);\n    const {key, key_fingerprint} = await appCallsManager.computeKey((call as PhoneCall.phoneCallAccepted).g_b, dh.a, dh.p);\n    \n    const phonePhoneCall = await apiManager.invokeApi('phone.confirmCall', {\n      peer: appCallsManager.getCallInput(id),\n      protocol: protocol,\n      g_a: dh.g_a,\n      key_fingerprint: key_fingerprint\n    });\n    \n    this.encryptionKey = key;\n    appCallsManager.savePhonePhoneCall(phonePhoneCall);\n    this.joinCall();\n  }\n\n  public getEmojisFingerprint() {\n    if(this.emojisFingerprint) return this.emojisFingerprint;\n    if(this.getEmojisFingerprintPromise) return this.getEmojisFingerprintPromise;\n    return this.getEmojisFingerprintPromise = this.apiManager.invokeCrypto('get-emojis-fingerprint', this.encryptionKey, this.dh.g_a).then(codePoints => {\n      this.getEmojisFingerprintPromise = undefined;\n      return this.emojisFingerprint = codePoints.map(codePoints => emojiFromCodePoints(codePoints)) as [string, string, string, string];\n    });\n  }\n\n  private unlockStreamManager() {\n    this.connectionInstance.streamManager.locked = false;\n    this.connectionInstance.appendStreamToConference();\n  }\n\n  private async doTheMagic() {\n    this.connectionInstance.appendStreamToConference();\n\n    const connection = this.connectionInstance.connection;\n\n    let answer = await connection.createAnswer();\n\n    this.log('[sdp] local', answer.type, answer.sdp);\n    await connection.setLocalDescription(answer);\n\n    connection.getTransceivers().filter(transceiver => transceiver.direction === 'recvonly').forEach(transceiver => {\n      const entry = this.connectionInstance.description.getEntryByMid(transceiver.mid);\n      entry.transceiver = entry.recvEntry.transceiver = transceiver;\n      transceiver.direction = 'sendrecv';\n    });\n\n    const isAnswer = false;\n\n    const description = this.description;\n    let bundle = description.entries.map(entry => entry.mid);\n    const sdpDescription: RTCSessionDescriptionInit = {\n      type: isAnswer ? 'answer' : 'offer',\n      sdp: description.generateSdp({\n        bundle,\n        entries: description.entries.filter(entry => bundle.includes(entry.mid)),\n        // isAnswer: isAnswer\n        isAnswer: !isAnswer\n      })\n    };\n\n    await connection.setRemoteDescription(sdpDescription);\n\n    answer = await connection.createAnswer();\n\n    await connection.setLocalDescription(answer);\n    \n    const initialSetup = parseSignalingData(parseSdp(answer.sdp));\n    this.log('[InitialSetup] send 1');\n    this.sendCallSignalingData(initialSetup);\n    \n    this.unlockStreamManager();\n  }\n\n  public overrideConnectionState(state?: CALL_STATE) {\n    this._connectionState = state;\n    this.dispatchEvent('state', this.connectionState);\n  }\n\n  public get duration() {\n    return this.connectedAt !== undefined ? (Date.now() - this.connectedAt) / 1000 | 0 : 0;\n  }\n\n  protected onInputStream(stream: MediaStream): void {\n    super.onInputStream(stream);\n\n    const videoTrack = stream.getVideoTracks()[0];\n    if(videoTrack) {\n      const state = this.getMediaState('input');\n\n      // handle starting camera\n      if(!this.wasStartingScreen && !this.wasStartingVideo) {\n        this.wasStartingVideo = true;\n      }\n\n      if(this.isSharingVideo) {\n        state.videoState = 'active';\n      } else if(this.isSharingScreen) {\n        state.screencastState = 'active';\n      }\n\n      videoTrack.addEventListener('ended', () => {\n        this.stopVideoSharing();\n      }, {once: true});\n    }\n\n    if(stream.getAudioTracks().length) {\n      this.onMutedChange();\n    }\n  }\n  \n  private onMutedChange() {\n    const isMuted = this.isMuted;\n    this.dispatchEvent('muted', isMuted);\n\n    const state = this.getMediaState('input');\n    state.muted = isMuted;\n  }\n\n  public toggleMuted(): Promise<void> {\n    return this.requestAudioSource(true).then(() => {\n      this.setMuted();\n      this.onMutedChange();\n    });\n  }\n\n  public async hangUp(discardReason?: PhoneCallDiscardReason['_'], discardedByOtherParty?: boolean) {\n    if(this.isClosing) {\n      return;\n    }\n\n    this.discardReason = discardReason;\n    this.log('hangUp', discardReason);\n    this.overrideConnectionState(CALL_STATE.CLOSED);\n\n    if(this.connectionInstance) {\n      this.connectionInstance.closeConnectionAndStream(true);\n    }\n\n    if(discardReason && !discardedByOtherParty) {\n      let hasVideo = false;\n      for(const type in this.mediaStates) {\n        const mediaState = this.mediaStates[type as 'input' | 'output'];\n        hasVideo = mediaState.videoState === 'active' || mediaState.screencastState === 'active' || hasVideo;\n      }\n\n      await this.appCallsManager.discardCall(this.id, this.duration, discardReason, hasVideo);\n    }\n  }\n\n  private performCodec(_codec: P2PAudioCodec | P2PVideoCodec) {\n    const payloadTypes: AudioCodec['payload-types'] = _codec.payloadTypes.map(payloadType => {\n      return {\n        ...payloadType,\n        'rtcp-fbs': payloadType.feedbackTypes\n      }\n    });\n    \n    const codec: AudioCodec = {\n      'rtp-hdrexts': _codec.rtpExtensions,\n      'payload-types': payloadTypes\n    };\n    \n    return codec;\n  }\n\n  private setDataToDescription(data: CallSignalingData.initialSetup) {\n    this.description.setData({\n      transport: {\n        pwd: data.pwd,\n        ufrag: data.ufrag,\n        fingerprints: data.fingerprints,\n        'rtcp-mux': true\n      },\n      audio: this.performCodec(data.audio),\n      video: data.video ? this.performCodec(data.video) as VideoCodec : undefined,\n      screencast: data.screencast ? this.performCodec(data.screencast) as VideoCodec : undefined\n    });\n  }\n\n  private filterNotVP8(initialSetup: CallSignalingData.initialSetup) {\n    if(!this.isOutgoing) { // only VP8 works now\n      [initialSetup.video, initialSetup.screencast].filter(Boolean).forEach(codec => {\n        const payloadTypes = codec.payloadTypes;\n        const idx = payloadTypes.findIndex(payloadType => payloadType.name === 'VP8');\n        const vp8PayloadType = payloadTypes[idx];\n        const rtxIdx = payloadTypes.findIndex(payloadType => +payloadType.parameters?.apt === vp8PayloadType.id);\n        codec.payloadTypes = [payloadTypes[idx], payloadTypes[rtxIdx]];\n      });\n    }\n  }\n\n  public async applyCallSignalingData(data: CallSignalingData) {\n    this.log('applyCallSignalingData', this, data);\n    \n    const {connection, description} = this.connectionInstance;\n\n    switch(data['@type']) {\n      case 'InitialSetup': {\n        this.log('[sdp] InitialSetup', data);\n\n        this.filterNotVP8(data);\n        this.setDataToDescription(data);\n\n        const performSsrcGroups = (ssrcGroups: P2PVideoCodec['ssrcGroups']): GroupCallParticipantVideoSourceGroup[] => {\n          return ssrcGroups.map(ssrcGroup => {\n            return {\n              _: 'groupCallParticipantVideoSourceGroup',\n              semantics: ssrcGroup.semantics,\n              sources: ssrcGroup.ssrcs.map(source => +source)\n            };\n          });\n        };\n\n        const ssrcs = [\n          generateSsrc('audio', +data.audio.ssrc),\n          data.video ? generateSsrc('video', performSsrcGroups(data.video.ssrcGroups)) : undefined,\n          data.screencast ? generateSsrc('screencast', performSsrcGroups(data.screencast.ssrcGroups)) : undefined\n        ].filter(Boolean);\n\n        ssrcs.forEach(ssrc => {\n          let entry = description.getEntryBySource(ssrc.source);\n          if(entry) {\n            return;\n          }\n          \n          const sendRecvEntry = description.findFreeSendRecvEntry(ssrc.type, false);\n          entry = new ConferenceEntry(sendRecvEntry.mid, ssrc.type);\n          entry.setDirection('sendrecv');\n          sendRecvEntry.recvEntry = entry;\n\n          description.setEntrySource(entry, ssrc.sourceGroups || ssrc.source);\n        });\n\n        this.createDataChannelEntry();\n\n        const isAnswer = this.offerSent;\n        this.offerSent = false;\n\n        let bundle = description.entries.map(entry => entry.mid);\n        const sdpDescription: RTCSessionDescriptionInit = {\n          type: isAnswer ? 'answer' : 'offer',\n          sdp: description.generateSdp({\n            bundle,\n            entries: description.entries.filter(entry => bundle.includes(entry.mid)),\n            // isAnswer: isAnswer\n            isAnswer: !isAnswer\n          })\n        };\n\n        this.log('[sdp] remote', sdpDescription.sdp);\n\n        await connection.setRemoteDescription(sdpDescription);\n\n        await this.tryToReleaseCandidates();\n\n        if(!isAnswer) {\n          await this.doTheMagic();\n        }\n\n        break;\n      }\n      \n      case 'Candidates': {\n        for(const candidate of data.candidates) {\n          const init: RTCIceCandidateInit = P2PSdpBuilder.generateCandidate(candidate);\n          init.sdpMLineIndex = 0;\n          const iceCandidate = new RTCIceCandidate(init);\n          this.candidates.push(iceCandidate);\n        }\n        \n        await this.tryToReleaseCandidates();\n        break;\n      }\n\n      default: {\n        this.log.error('unrecognized signaling data', data);\n      }\n    }\n  }\n\n  public async tryToReleaseCandidates() {\n    const {connectionInstance} = this;\n    if(!connectionInstance) {\n      return;\n    }\n\n    const {connection} = connectionInstance;\n    if(connection.remoteDescription) {\n      const promises: Promise<void>[] = this.candidates.map(candidate => this.addIceCandidate(connection, candidate));\n      this.candidates.length = 0;\n\n      await Promise.all(promises);\n    } else {\n      this.log('[candidates] postpone');\n    }\n  }\n\n  private async addIceCandidate(connection: RTCPeerConnection, candidate: RTCIceCandidate) {\n    this.log('[candidate] start', candidate);\n    try {\n      // if(!candidate.address) return;\n      await connection.addIceCandidate(candidate);\n      this.log('[candidate] add', candidate);\n    } catch(e) {\n      this.log.error('[candidate] error', candidate, e);\n    }\n  }\n\n  private async processDecryptQueue() {\n    const {encryptor} = this;\n    if(!encryptor) {\n      this.log.warn('got encrypted signaling data before the encryption key');\n      return;\n    }\n\n    const length = this.decryptQueue.length;\n    if(!length) {\n      return;\n    }\n    \n    const queue = this.decryptQueue.slice();\n    this.decryptQueue.length = 0;\n    \n    for(const data of queue) {\n      const decryptedData = await encryptor.decryptRawPacket(data);\n      if(!decryptedData) {\n        continue;\n      }\n\n      // this.log('[update] updateNewCallSignalingData', update, decryptedData);\n      \n      const str = new TextDecoder().decode(decryptedData);\n      try {\n        const signalingData: CallSignalingData = JSON.parse(str);\n        this.log('[update] updateNewCallSignalingData', signalingData);\n        this.applyCallSignalingData(signalingData);\n      } catch(err) {\n        this.log.error('wrong signaling data', str);\n        this.hangUp('phoneCallDiscardReasonDisconnect');\n      }\n    }\n  }\n\n  public onUpdatePhoneCallSignalingData(update: Update.updatePhoneCallSignalingData) {\n    this.decryptQueue.push(update.data);\n    this.processDecryptQueue();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport { PhoneCallProtocol } from \"../../../layer\";\n\nexport default function getCallProtocol(): PhoneCallProtocol {\n  return {\n    _: 'phoneCallProtocol',\n    pFlags: {\n      udp_p2p: true,\n      udp_reflector: true\n    },\n    min_layer: 92,\n    max_layer: 92,\n    library_versions: ['4.0.0']\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport { PhoneCall } from \"../../../layer\";\n\nexport default function getRtcConfiguration(call: PhoneCall.phoneCall): RTCConfiguration {\n  const iceServers: RTCIceServer[] = [];\n  call.connections.forEach((connection) => {\n    switch(connection._) {\n      /* case 'callServerTypeTelegramReflector': {\n        break;\n      } */\n      case 'phoneConnectionWebrtc': {\n        const {ip, ipv6, port, username, password} = connection;\n        const urls: string[] = [];\n        if(connection.pFlags.turn) {\n          if(ip) {\n            urls.push(`turn:${ip}:${port}`);\n          }\n          if(ipv6) {\n            urls.push(`turn:[${ipv6}]:${port}`);\n          }\n        } else if(connection.pFlags.stun) {\n          if(ip) {\n            urls.push(`stun:${ip}:${port}`);\n          }\n          if(ipv6) {\n            urls.push(`stun:[${ipv6}]:${port}`);\n          }\n        }\n        \n        if(urls.length > 0) {\n          iceServers.push({\n            urls,\n            username,\n            credential: password\n          });\n        }\n        break;\n      }\n    }\n  });\n  \n  return {\n    iceServers,\n    iceTransportPolicy: call.pFlags.p2p_allowed ? 'all' : 'relay'\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\nimport ListenerSetter from \"../helpers/listenerSetter\";\nimport type { AppGroupCallsManager } from \"../lib/appManagers/appGroupCallsManager\";\nimport GROUP_CALL_STATE from \"../lib/calls/groupCallState\";\nimport rootScope from \"../lib/rootScope\";\nimport ButtonIcon from \"./buttonIcon\";\nimport TopbarWeave from \"./topbarWeave\";\nimport SetTransition from \"./singleTransition\";\nimport PopupGroupCall from \"./groupCall\";\nimport type { AppPeersManager } from \"../lib/appManagers/appPeersManager\";\nimport type { AppChatsManager } from \"../lib/appManagers/appChatsManager\";\nimport GroupCallDescriptionElement from \"./groupCall/description\";\nimport GroupCallTitleElement from \"./groupCall/title\";\nimport PopupElement from \"./popups\";\nimport throttle from \"../helpers/schedulers/throttle\";\nimport GroupCallInstance from \"../lib/calls/groupCallInstance\";\nimport CALL_STATE from \"../lib/calls/callState\";\nimport replaceContent from \"../helpers/dom/replaceContent\";\nimport PeerTitle from \"./peerTitle\";\nimport CallDescriptionElement from \"./call/description\";\nimport PopupCall from \"./call\";\nimport type { AppAvatarsManager } from \"../lib/appManagers/appAvatarsManager\";\nimport GroupCallMicrophoneIconMini from \"./groupCall/microphoneIconMini\";\nimport CallInstance from \"../lib/calls/callInstance\";\nimport type { AppCallsManager } from \"../lib/appManagers/appCallsManager\";\n\nfunction convertCallStateToGroupState(state: CALL_STATE, isMuted: boolean) {\n  switch(state) {\n    case CALL_STATE.CLOSING:\n    case CALL_STATE.CLOSED:\n      return GROUP_CALL_STATE.CLOSED;\n    case CALL_STATE.CONNECTED:\n      return isMuted ? GROUP_CALL_STATE.MUTED : GROUP_CALL_STATE.UNMUTED;\n    default:\n      return GROUP_CALL_STATE.CONNECTING;\n  }\n}\n\nconst CLASS_NAME = 'topbar-call';\n\nexport default class TopbarCall {\n  public container: HTMLElement;\n  private listenerSetter: ListenerSetter;\n  private weave: TopbarWeave;\n  private center: HTMLDivElement;\n  private groupCallTitle: GroupCallTitleElement;\n  private groupCallDescription: GroupCallDescriptionElement;\n  private groupCallMicrophoneIconMini: GroupCallMicrophoneIconMini;\n  private callDescription: CallDescriptionElement;\n  \n  private currentDescription: GroupCallDescriptionElement | CallDescriptionElement;\n\n  private instance: GroupCallInstance | any/* CallInstance */;\n  private instanceListenerSetter: ListenerSetter;\n  \n  constructor(\n    private appGroupCallsManager: AppGroupCallsManager,\n    private appPeersManager: AppPeersManager,\n    private appChatsManager: AppChatsManager,\n    private appAvatarsManager: AppAvatarsManager,\n    private appCallsManager: AppCallsManager\n  ) {\n    const listenerSetter = this.listenerSetter = new ListenerSetter();\n\n    listenerSetter.add(rootScope)('call_instance', ({instance}) => {\n      if(!this.instance) {\n        this.updateInstance(instance);\n      }\n    });\n\n    listenerSetter.add(rootScope)('call_accepting', (instance) => {\n      if(this.instance !== instance) {\n        this.updateInstance(instance);\n      }\n    });\n\n    listenerSetter.add(rootScope)('group_call_instance', (instance) => {\n      this.updateInstance(instance);\n    });\n    \n    listenerSetter.add(rootScope)('group_call_update', (groupCall) => {\n      const instance = this.appGroupCallsManager.groupCall;\n      if(instance?.id === groupCall.id) {\n        this.updateInstance(instance);\n      }\n    });\n\n    listenerSetter.add(rootScope)('group_call_amplitude', ({amplitudes, type}) => {\n      const {weave} = this;\n      if(!amplitudes.length || !weave/*  || type !== 'input' */) return;\n\n      let max = 0;\n      for(let i = 0; i < amplitudes.length; ++i) {\n        const {type, value} = amplitudes[i];\n        max = value > max ? value : max;\n      }\n\n      weave.setAmplitude(max);\n    });\n  }\n\n  private onState = () => {\n    this.updateInstance(this.instance);\n  };\n\n  private clearCurrentInstance() {\n    if(!this.instance) return;\n    this.center.textContent = '';\n    \n    if(this.currentDescription) {\n      this.currentDescription.detach();\n      this.currentDescription = undefined;\n    }\n\n    this.instance = undefined;\n    this.instanceListenerSetter.removeAll();\n  }\n\n  private updateInstance(instance: TopbarCall['instance']) {\n    if(this.construct) {\n      this.construct();\n      this.construct = undefined;\n    }\n\n    const isChangingInstance = this.instance !== instance;\n    if(isChangingInstance) {\n      this.clearCurrentInstance();\n      \n      this.instance = instance;\n      this.instanceListenerSetter = new ListenerSetter();\n\n      this.instanceListenerSetter.add(instance as GroupCallInstance)('state', this.onState);\n\n      if(instance instanceof GroupCallInstance) {\n        this.currentDescription = this.groupCallDescription;\n      } else {\n        this.currentDescription = this.callDescription;\n        this.instanceListenerSetter.add(instance)('muted', this.onState);\n      }\n\n      this.container.classList.toggle('is-call', !(instance instanceof GroupCallInstance));\n    }\n\n    const isMuted = this.instance.isMuted;\n    let state = instance instanceof GroupCallInstance ? instance.state : convertCallStateToGroupState(instance.connectionState, isMuted);\n\n    const {weave} = this;\n\n    weave.componentDidMount();\n    \n    const isClosed = state === GROUP_CALL_STATE.CLOSED;\n    if((!document.body.classList.contains('is-calling') || isChangingInstance) || isClosed) {\n      if(isClosed) {\n        weave.setAmplitude(0);\n      }\n\n      SetTransition(document.body, 'is-calling', !isClosed, 250, isClosed ? () => {\n        weave.componentWillUnmount();\n\n        this.clearCurrentInstance();\n      }: undefined);\n    }\n    \n    if(isClosed) {\n      return;\n    }\n    \n    weave.setCurrentState(state, true);\n    // if(state === GROUP_CALL_STATE.CONNECTING) {\n    //   weave.setCurrentState(state, true);\n    // } else {\n    //   /* var a = 0;\n    //   animate(() => {\n    //     a += 0.1;\n    //     if(a > 1) a = 0;\n    //     weave.setAmplitude(a);\n    //     return true;\n    //   });\n    //   weave.setAmplitude(1); */\n    //   weave.setCurrentState(state, true);\n    // }\n    \n    this.setTitle(instance);\n    this.setDescription(instance);\n    this.groupCallMicrophoneIconMini.setState(!isMuted);\n  }\n\n  private setDescription(instance: TopbarCall['instance']) {\n    return this.currentDescription.update(instance as any);\n  }\n\n  private setTitle(instance: TopbarCall['instance']) {\n    if(instance instanceof GroupCallInstance) {\n      return this.groupCallTitle.update(instance);\n    } else {\n      replaceContent(this.center, new PeerTitle({peerId: instance.interlocutorUserId.toPeerId()}).element);\n    }\n  }\n\n  private construct() {\n    const {listenerSetter} = this;\n    const container = this.container = document.createElement('div');\n    container.classList.add('sidebar-header', CLASS_NAME + '-container');\n\n    const left = document.createElement('div');\n    left.classList.add(CLASS_NAME + '-left');\n\n    const groupCallMicrophoneIconMini = this.groupCallMicrophoneIconMini = new GroupCallMicrophoneIconMini();\n    \n    const mute = ButtonIcon();\n    mute.append(groupCallMicrophoneIconMini.container);\n    left.append(mute);\n\n    const throttledMuteClick = throttle(() => {\n      this.instance.toggleMuted();\n    }, 600, true);\n    \n    attachClickEvent(mute, (e) => {\n      cancelEvent(e);\n      throttledMuteClick();\n    }, {listenerSetter});\n    \n    const center = this.center = document.createElement('div');\n    center.classList.add(CLASS_NAME + '-center');\n    \n    this.groupCallTitle = new GroupCallTitleElement(center);\n    this.groupCallDescription = new GroupCallDescriptionElement(left);\n\n    this.callDescription = new CallDescriptionElement(left);\n    \n    const right = document.createElement('div');\n    right.classList.add(CLASS_NAME + '-right');\n    \n    const end = ButtonIcon('endcall_filled');\n    right.append(end);\n    \n    attachClickEvent(end, (e) => {\n      cancelEvent(e);\n\n      const {instance} = this;\n      if(!instance) {\n        return;\n      }\n\n      if(instance instanceof GroupCallInstance) {\n        instance.hangUp();\n      } else {\n        instance.hangUp('phoneCallDiscardReasonHangup');\n      }\n    }, {listenerSetter});\n\n    attachClickEvent(container, () => {\n      if(this.instance instanceof GroupCallInstance) {\n        if(PopupElement.getPopups(PopupGroupCall).length) {\n          return;\n        }\n        \n        new PopupGroupCall({\n          appGroupCallsManager: this.appGroupCallsManager,\n          appPeersManager: this.appPeersManager,\n          appChatsManager: this.appChatsManager\n        }).show();\n      } else if(this.instance instanceof CallInstance) {\n        const popups = PopupElement.getPopups(PopupCall) as PopupCall[];\n        if(popups.find(popup => popup.getCallInstance() === this.instance)) {\n          return;\n        }\n\n        new PopupCall({\n          appCallsManager: this.appCallsManager,\n          appAvatarsManager: this.appAvatarsManager,\n          appPeersManager: this.appPeersManager,\n          instance: this.instance\n        }).show();\n      }\n    }, {listenerSetter});\n    \n    container.append(left, center, right);\n\n    const weave = this.weave = new TopbarWeave();\n    const weaveContainer = weave.render(CLASS_NAME + '-weave');\n    container.prepend(weaveContainer);\n    \n    document.getElementById('column-center').prepend(container);\n    weave.componentDidMount();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport IS_CALL_SUPPORTED from \"../../environment/callSupport\";\nimport indexOfAndSplice from \"../../helpers/array/indexOfAndSplice\";\nimport insertInDescendSortedArray from \"../../helpers/array/insertInDescendSortedArray\";\nimport AudioAssetPlayer from \"../../helpers/audioAssetPlayer\";\nimport bytesCmp from \"../../helpers/bytes/bytesCmp\";\nimport safeReplaceObject from \"../../helpers/object/safeReplaceObject\";\nimport { nextRandomUint } from \"../../helpers/random\";\nimport tsNow from \"../../helpers/tsNow\";\nimport { InputPhoneCall, MessagesDhConfig, PhoneCall, PhoneCallDiscardReason, PhoneCallProtocol, PhonePhoneCall } from \"../../layer\";\nimport CallInstance from \"../calls/callInstance\";\nimport CALL_STATE from \"../calls/callState\";\nimport { logger } from \"../logger\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport { NULL_PEER_ID } from \"../mtproto/mtproto_config\";\nimport rootScope from \"../rootScope\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appProfileManager from \"./appProfileManager\";\nimport appUsersManager from \"./appUsersManager\";\n\nexport type CallId = PhoneCall['id'];\n\nexport type MyPhoneCall = Exclude<PhoneCall, PhoneCall.phoneCallEmpty | PhoneCall.phoneCallDiscarded>;\n\nconst CALL_REQUEST_TIMEOUT = 45e3;\n\nexport type CallAudioAssetName = \"call_busy.mp3\" | \"call_connect.mp3\" | \"call_end.mp3\" | \"call_incoming.mp3\" | \"call_outgoing.mp3\" | \"voip_failed.mp3\" | \"voip_connecting.mp3\";\n\nexport class AppCallsManager {\n  private log: ReturnType<typeof logger>;\n  private calls: Map<CallId, MyPhoneCall>;\n  private instances: Map<CallId, CallInstance>;\n  private sortedInstances: Array<CallInstance>;\n  private tempId: number;\n  private audioAsset: AudioAssetPlayer<CallAudioAssetName>;\n  \n  constructor() {\n    this.log = logger('CALLS');\n    \n    this.tempId = 0;\n    this.calls = new Map();\n    this.instances = new Map();\n    this.sortedInstances = [];\n\n    if(!IS_CALL_SUPPORTED) {\n      return;\n    }\n    \n    rootScope.addMultipleEventsListeners({\n      updatePhoneCall: async(update) => {\n        const call = this.saveCall(update.phone_call);\n\n        let instance = this.instances.get(call.id);\n        \n        switch(call._) {\n          case 'phoneCallDiscarded': {\n            if(instance) {\n              instance.hangUp(call.reason?._, true);\n            }\n\n            break;\n          }\n\n          case 'phoneCallAccepted': {\n            if(instance) {\n              instance.confirmCall();\n            }\n\n            break;\n          }\n          \n          case 'phoneCallRequested': {\n            if(!instance) {\n              instance = this.createCallInstance({\n                isOutgoing: false,\n                interlocutorUserId: call.admin_id\n              });\n          \n              instance.overrideConnectionState(CALL_STATE.PENDING);\n              instance.setPhoneCall(call);\n              instance.setHangUpTimeout(CALL_REQUEST_TIMEOUT, 'phoneCallDiscardReasonMissed');\n            }\n            \n            break;\n          }\n\n          case 'phoneCall': {\n            if(!instance || instance.encryptionKey) {\n              break;\n            }\n\n            const g_a = instance.dh.g_a = call.g_a_or_b;\n            const dh = instance.dh;\n            const g_a_hash = await apiManager.invokeCrypto('sha256', g_a);\n            if(!bytesCmp(dh.g_a_hash, g_a_hash)) {\n              this.log.error('Incorrect g_a_hash', dh.g_a_hash, g_a_hash);\n              break;\n            }\n\n            const {key, key_fingerprint} = await this.computeKey(g_a, dh.b, dh.p);\n            if(call.key_fingerprint !== key_fingerprint) {\n              this.log.error('Incorrect key fingerprint', call.key_fingerprint, key_fingerprint);\n              break;\n            }\n\n            instance.encryptionKey = key;\n            instance.joinCall();\n\n            break;\n          }\n        }\n      },\n      \n      updatePhoneCallSignalingData: (update) => {\n        const instance = this.instances.get(update.phone_call_id);\n        if(instance?.id !== update.phone_call_id) {\n          return;\n        }\n        \n        instance.onUpdatePhoneCallSignalingData(update);\n      }\n    });\n\n    this.audioAsset = new AudioAssetPlayer<CallAudioAssetName>([\n      'call_busy.mp3',\n      'call_connect.mp3',\n      'call_end.mp3',\n      'call_incoming.mp3',\n      'call_outgoing.mp3',\n      'voip_failed.mp3'\n    ]);\n  }\n\n  public get currentCall() {\n    return this.sortedInstances[0];\n  }\n\n  public getCallByUserId(userId: UserId) {\n    for(const [callId, instance] of this.instances) {\n      if(instance.interlocutorUserId === userId) {\n        return instance;\n      }\n    }\n  }\n\n  public async computeKey(g_b: Uint8Array, a: Uint8Array, p: Uint8Array) {\n    return apiManager.invokeCrypto('compute-dh-key', g_b, a, p);\n  }\n  \n  public saveCall(call: PhoneCall) {\n    const isDiscarded = call._ === 'phoneCallDiscarded';\n    const oldCall = this.calls.get(call.id);\n    if(oldCall) {\n      // if(shouldUpdate) {\n      safeReplaceObject(oldCall, call);\n      // }\n\n      if(isDiscarded) {\n        this.calls.delete(call.id);\n      }\n      \n      call = oldCall;\n    } else if(!isDiscarded) {\n      this.calls.set(call.id, call as any);\n    }\n\n    return call;\n  }\n  \n  public getCall(callId: CallId) {\n    return this.calls.get(callId);\n  }\n  \n  public getCallInput(id: CallId): InputPhoneCall {\n    const call = this.getCall(id);\n    return {\n      _: 'inputPhoneCall',\n      id: call.id,\n      access_hash: call.access_hash\n    };\n  }\n  \n  private createCallInstance(options: {\n    isOutgoing: boolean,\n    interlocutorUserId: UserId,\n    protocol?: PhoneCallProtocol\n  }) {\n    const call = new CallInstance({\n      appCallsManager: this,\n      apiManager,\n      apiUpdatesManager,\n      ...options,\n    });\n\n    call.addEventListener('state', (state) => {\n      const currentCall = this.currentCall;\n      if(state === CALL_STATE.CLOSED) {\n        this.instances.delete(call.id);\n        indexOfAndSplice(this.sortedInstances, call);\n      } else {\n        insertInDescendSortedArray(this.sortedInstances, call, 'sortIndex');\n      }\n\n      if(state === CALL_STATE.EXCHANGING_KEYS) {\n        call.wasTryingToJoin = true;\n      }\n\n      const hasConnected = call.connectedAt !== undefined;\n      if(state === CALL_STATE.EXCHANGING_KEYS || (state === CALL_STATE.CONNECTING && hasConnected)) {\n        call.setHangUpTimeout(CALL_REQUEST_TIMEOUT, 'phoneCallDiscardReasonDisconnect');\n      } else {\n        call.clearHangUpTimeout();\n      }\n\n      if(currentCall === call || !currentCall) {\n        if(state === CALL_STATE.CLOSED) {\n          if(!call.isOutgoing && !call.wasTryingToJoin) { // incoming call has been accepted on other device or ended\n            this.audioAsset.stopSound();\n          } else if(call.wasTryingToJoin && !hasConnected) { // something has happened during the key exchanging\n            this.audioAsset.playSound('voip_failed.mp3');\n          } else {\n            this.audioAsset.playSound(call.discardReason === 'phoneCallDiscardReasonBusy' ? 'call_busy.mp3' : 'call_end.mp3');\n          }\n        } else if(state === CALL_STATE.PENDING) {\n          this.audioAsset.playSound(call.isOutgoing ? 'call_outgoing.mp3' : 'call_incoming.mp3', true);\n        } else if(state === CALL_STATE.EXCHANGING_KEYS) {\n          this.audioAsset.playSoundIfDifferent('call_connect.mp3');\n        } else if(state === CALL_STATE.CONNECTING) {\n          if(call.duration) {\n            this.audioAsset.playSound('voip_connecting.mp3', true);\n          }\n        } else {\n          this.audioAsset.stopSound();\n        }\n      }\n    });\n\n    call.addEventListener('id', (id, prevId) => {\n      if(prevId !== undefined) {\n        this.instances.delete(prevId);\n      }\n\n      const hasCurrent = !!this.currentCall;\n      this.instances.set(id, call);\n\n      if(prevId === undefined) {\n        rootScope.dispatchEvent('call_instance', {instance: call, hasCurrent: hasCurrent});\n      }\n    });\n\n    return call;\n  }\n\n  public savePhonePhoneCall(phonePhoneCall: PhonePhoneCall) {\n    appUsersManager.saveApiUsers(phonePhoneCall.users);\n    return this.saveCall(phonePhoneCall.phone_call);\n  }\n\n  public generateDh() {\n    return apiManager.invokeApi('messages.getDhConfig', {\n      version: 0,\n      random_length: 256\n    }).then(async(dhConfig) => {\n      return apiManager.invokeCrypto('generate-dh', dhConfig as MessagesDhConfig.messagesDhConfig);\n    });\n  }\n  \n  public startCallInternal(userId: UserId, isVideo: boolean) {\n    this.log('p2pStartCallInternal', userId, isVideo);\n    \n    const fullInfo = appProfileManager.getCachedFullUser(userId);\n    if(!fullInfo) return;\n    \n    const {video_calls_available} = fullInfo.pFlags;\n    \n    const call = this.createCallInstance({\n      isOutgoing: true,\n      interlocutorUserId: userId\n    });\n\n    call.requestInputSource(true, !!(isVideo && video_calls_available), false);\n\n    call.overrideConnectionState(CALL_STATE.REQUESTING);\n    call.setPhoneCall({\n      _: 'phoneCallWaiting',\n      access_hash: '',\n      admin_id: NULL_PEER_ID,\n      date: tsNow(true),\n      id: --this.tempId,\n      participant_id: userId,\n      protocol: call.protocol,\n      pFlags: {\n        video: isVideo || undefined\n      }\n    });\n\n    // return;\n    this.generateDh().then(dh => {\n      call.dh = dh;\n\n      return apiManager.invokeApi('phone.requestCall', {\n        user_id: appUsersManager.getUserInput(userId),\n        protocol: call.protocol,\n        video: isVideo && video_calls_available,\n        random_id: nextRandomUint(32),\n        g_a_hash: call.dh.g_a_hash\n      });\n    }).then(result => {\n      const phoneCall = this.savePhonePhoneCall(result);\n      call.overrideConnectionState(CALL_STATE.PENDING);\n      call.setPhoneCall(phoneCall);\n      call.setHangUpTimeout(CALL_REQUEST_TIMEOUT, 'phoneCallDiscardReasonHangup');\n    });\n  }\n\n  public async discardCall(callId: CallId, duration: number, reason: PhoneCallDiscardReason['_'], video?: boolean) {\n    if(!this.getCall(callId)) {\n      return;\n    }\n\n    const updates = await apiManager.invokeApi('phone.discardCall', {\n      video,\n      peer: this.getCallInput(callId),\n      duration,\n      reason: {\n        _: reason\n      },\n      connection_id: '0'\n    });\n\n    apiUpdatesManager.processUpdateMessage(updates);\n  }\n}\n\nconst appCallsManager = new AppCallsManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appCallsManager = appCallsManager);\nexport default appCallsManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n//import apiManager from '../mtproto/apiManager';\nimport animationIntersector from '../../components/animationIntersector';\nimport appSidebarLeft, { LEFT_COLUMN_ACTIVE_CLASSNAME } from \"../../components/sidebarLeft\";\nimport appSidebarRight, { RIGHT_COLUMN_ACTIVE_CLASSNAME } from '../../components/sidebarRight';\nimport mediaSizes, { ScreenSize } from '../../helpers/mediaSizes';\nimport { logger, LogTypes } from \"../logger\";\nimport apiManager from '../mtproto/mtprotoworker';\nimport rootScope from '../rootScope';\nimport apiUpdatesManager from './apiUpdatesManager';\nimport appUsersManager from \"./appUsersManager\";\nimport Chat, { ChatType } from '../../components/chat/chat';\nimport appChatsManager from './appChatsManager';\nimport appDocsManager from './appDocsManager';\nimport appInlineBotsManager from './appInlineBotsManager';\nimport appMessagesManager from './appMessagesManager';\nimport appPeersManager from './appPeersManager';\nimport appPhotosManager from './appPhotosManager';\nimport appProfileManager from './appProfileManager';\nimport appStickersManager from './appStickersManager';\nimport appWebPagesManager from './appWebPagesManager';\nimport PopupNewMedia, { getCurrentNewMediaPopup } from '../../components/popups/newMedia';\nimport MarkupTooltip from '../../components/chat/markupTooltip';\nimport { IS_TOUCH_SUPPORTED } from '../../environment/touchSupport';\nimport appPollsManager from './appPollsManager';\nimport SetTransition from '../../components/singleTransition';\nimport ChatDragAndDrop from '../../components/chat/dragAndDrop';\nimport { doubleRaf } from '../../helpers/schedulers';\nimport lottieLoader from '../rlottie/lottieLoader';\nimport useHeavyAnimationCheck, { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport appDraftsManager from './appDraftsManager';\nimport serverTimeManager from '../mtproto/serverTimeManager';\nimport stateStorage from '../stateStorage';\nimport appDownloadManager from './appDownloadManager';\nimport { AppStateManager, STATE_INIT } from './appStateManager';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport appNavigationController from '../../components/appNavigationController';\nimport appNotificationsManager from './appNotificationsManager';\nimport AppPrivateSearchTab from '../../components/sidebarRight/tabs/search';\nimport I18n, { i18n, join, LangPackKey } from '../langPack';\nimport { ChatInvite, Dialog, Message, SendMessageAction } from '../../layer';\nimport { hslaStringToHex } from '../../helpers/color';\nimport { getFilesFromEvent } from '../../helpers/files';\nimport PeerTitle from '../../components/peerTitle';\nimport PopupPeer from '../../components/popups/peer';\nimport { SliceEnd } from '../../helpers/slicedArray';\nimport blurActiveElement from '../../helpers/dom/blurActiveElement';\nimport { cancelEvent } from '../../helpers/dom/cancelEvent';\nimport disableTransition from '../../helpers/dom/disableTransition';\nimport placeCaretAtEnd from '../../helpers/dom/placeCaretAtEnd';\nimport replaceContent from '../../helpers/dom/replaceContent';\nimport whichChild from '../../helpers/dom/whichChild';\nimport appEmojiManager from './appEmojiManager';\nimport PopupElement from '../../components/popups';\nimport singleInstance from '../mtproto/singleInstance';\nimport PopupStickers from '../../components/popups/stickers';\nimport PopupJoinChatInvite from '../../components/popups/joinChatInvite';\nimport { toast, toastNew } from '../../components/toast';\nimport debounce from '../../helpers/schedulers/debounce';\nimport { pause } from '../../helpers/schedulers/pause';\nimport appMessagesIdsManager from './appMessagesIdsManager';\nimport { InternalLink, InternalLinkTypeMap, INTERNAL_LINK_TYPE } from './internalLink';\nimport RichTextProcessor from '../richtextprocessor';\nimport MEDIA_MIME_TYPES_SUPPORTED from '../../environment/mediaMimeTypesSupport';\nimport { NULL_PEER_ID } from '../mtproto/mtproto_config';\nimport telegramMeWebManager from '../mtproto/telegramMeWebManager';\nimport { ONE_DAY } from '../../helpers/date';\nimport appGroupCallsManager, { GroupCallId, MyGroupCall } from './appGroupCallsManager';\nimport TopbarCall from '../../components/topbarCall';\nimport confirmationPopup from '../../components/confirmationPopup';\nimport IS_GROUP_CALL_SUPPORTED from '../../environment/groupCallSupport';\nimport appAvatarsManager from './appAvatarsManager';\nimport appCallsManager from './appCallsManager';\nimport IS_CALL_SUPPORTED from '../../environment/callSupport';\nimport { CallType } from '../calls/types';\nimport { Modify, SendMessageEmojiInteractionData } from '../../types';\nimport htmlToSpan from '../../helpers/dom/htmlToSpan';\nimport getVisibleRect from '../../helpers/dom/getVisibleRect';\nimport { simulateClickEvent } from '../../helpers/dom/clickEvent';\nimport appReactionsManager from './appReactionsManager';\nimport PopupCall from '../../components/call';\nimport copy from '../../helpers/object/copy';\nimport getObjectKeysAndSort from '../../helpers/object/getObjectKeysAndSort';\nimport type GroupCallInstance from '../calls/groupCallInstance';\nimport type CallInstance from '../calls/callInstance';\nimport numberThousandSplitter from '../../helpers/number/numberThousandSplitter';\n\n//console.log('appImManager included33!');\n\nappSidebarLeft; // just to include\n\nexport const CHAT_ANIMATION_GROUP = 'chat';\nconst FOCUS_EVENT_NAME = IS_TOUCH_SUPPORTED ? 'touchstart' : 'mousemove';\n\nexport type ChatSavedPosition = {\n  mids: number[], \n  top: number\n};\n\nexport type ChatSetPeerOptions = {\n  peerId?: PeerId, \n  lastMsgId?: number, \n  threadId?: number,\n  startParam?: string\n};\n\nexport type ChatSetInnerPeerOptions = Modify<ChatSetPeerOptions, {\n  peerId: PeerId\n}> & {\n  type?: ChatType\n};\n\nexport class AppImManager {\n  public columnEl = document.getElementById('column-center') as HTMLDivElement;\n  public chatsContainer: HTMLElement;\n\n  public offline = false;\n  public updateStatusInterval = 0;\n\n  public log: ReturnType<typeof logger>;\n\n  public setPeerPromise: Promise<void> = null;\n\n  public tabId = -1;\n  \n  public chats: Chat[] = [];\n  private prevTab: HTMLElement;\n  private chatsSelectTabDebounced: () => void;\n  \n  public markupTooltip: MarkupTooltip;\n  private backgroundPromises: {[slug: string]: Promise<string>};\n  \n  private topbarCall: TopbarCall;\n  public emojiAnimationContainer: HTMLDivElement;\n\n  private lastBackgroundUrl: string;\n\n  get myId() {\n    return rootScope.myId;\n  }\n\n  get chat(): Chat {\n    return this.chats[this.chats.length - 1];\n  }\n\n  constructor() {\n    apiUpdatesManager.attach();\n    appNotificationsManager.start();\n\n    this.log = logger('IM', LogTypes.Log | LogTypes.Warn | LogTypes.Debug | LogTypes.Error);\n\n    this.backgroundPromises = {};\n    STATE_INIT.settings.themes.forEach(theme => {\n      if(theme.background.slug) {\n        const url = /* window.location.origin + window.location.pathname +  */'assets/img/' + theme.background.slug + '.svg';\n        this.backgroundPromises[theme.background.slug] = Promise.resolve(url);\n      }\n    });\n\n    this.selectTab(0);\n    \n    window.addEventListener('blur', () => {\n      animationIntersector.checkAnimations(true);\n      \n      this.offline = rootScope.idle.isIDLE = true;\n      this.updateStatus();\n      clearInterval(this.updateStatusInterval);\n      rootScope.dispatchEvent('idle', rootScope.idle.isIDLE);\n      \n      window.addEventListener('focus', () => {\n        this.offline = rootScope.idle.isIDLE = false;\n        this.updateStatus();\n        this.updateStatusInterval = window.setInterval(() => this.updateStatus(), 50e3);\n        \n        // в обратном порядке\n        animationIntersector.checkAnimations(false);\n\n        rootScope.dispatchEvent('idle', rootScope.idle.isIDLE);\n      }, {once: true});\n    });\n\n    // * Prevent setting online after reloading page\n    window.addEventListener(FOCUS_EVENT_NAME, () => {\n      this.updateStatusInterval = window.setInterval(() => this.updateStatus(), 50e3);\n      this.updateStatus();\n\n      this.offline = rootScope.idle.isIDLE = false;\n      rootScope.dispatchEvent('idle', rootScope.idle.isIDLE);\n    }, {once: true, passive: true});\n\n    this.chatsContainer = document.createElement('div');\n    this.chatsContainer.classList.add('chats-container', 'tabs-container');\n    this.chatsContainer.dataset.animation = 'navigation';\n\n    this.emojiAnimationContainer = document.createElement('div');\n    this.emojiAnimationContainer.classList.add('emoji-animation-container');\n    this.appendEmojiAnimationContainer(mediaSizes.activeScreen);\n\n    this.columnEl.append(this.chatsContainer);\n    \n    this.createNewChat();\n    this.chatsSelectTab(this.chat.container);\n\n    appNavigationController.onHashChange = this.onHashChange;\n    //window.addEventListener('hashchange', this.onHashChange);\n\n    this.setSettings();\n    rootScope.addEventListener('settings_updated', this.setSettings);\n\n    useHeavyAnimationCheck(() => {\n      animationIntersector.setOnlyOnePlayableGroup('lock');\n      animationIntersector.checkAnimations(true);\n    }, () => {\n      animationIntersector.setOnlyOnePlayableGroup('');\n      animationIntersector.checkAnimations(false);\n    });\n\n    // setTimeout(() => {\n    this.applyCurrentTheme();\n    // }, 0);\n\n    // * fix simultaneous opened both sidebars, can happen when floating sidebar is opened with left sidebar\n    mediaSizes.addEventListener('changeScreen', (from, to) => {\n      if(document.body.classList.contains(LEFT_COLUMN_ACTIVE_CLASSNAME) \n        && document.body.classList.contains(RIGHT_COLUMN_ACTIVE_CLASSNAME)) {\n        appSidebarRight.toggleSidebar(false);\n      }\n\n      this.appendEmojiAnimationContainer(to);\n    });\n\n    const resizeBackgroundDebounced = debounce(() => {\n      this.setBackground(this.lastBackgroundUrl, false);\n    }, 200, false, true);\n    mediaSizes.addEventListener('resize', () => {\n      resizeBackgroundDebounced();\n    });\n\n    rootScope.addEventListener('history_focus', (e) => {\n      let {peerId, threadId, mid, startParam} = e;\n      if(threadId) threadId = appMessagesIdsManager.generateMessageId(threadId);\n      if(mid) mid = appMessagesIdsManager.generateMessageId(mid); // because mid can come from notification, i.e. server message id\n      \n      this.setInnerPeer({\n        peerId, \n        lastMsgId: mid, \n        type: threadId ? 'discussion' : undefined, \n        threadId,\n        startParam\n      });\n    });\n\n    rootScope.addEventListener('peer_changing', (chat) => {\n      this.saveChatPosition(chat);\n    });\n\n    rootScope.addEventListener('theme_change', () => {\n      this.applyCurrentTheme();\n    });\n\n    rootScope.addEventListener('choosing_sticker', (choosing) => {\n      this.setChoosingStickerTyping(!choosing);\n    });\n\n    rootScope.addEventListener('peer_typings', ({peerId, typings}) => {\n      const chat = this.chat;\n      if(\n        !chat || \n        chat.peerId !== peerId || \n        rootScope.overlaysActive || (\n          mediaSizes.activeScreen === ScreenSize.mobile && \n          this.tabId !== 1\n        )\n      ) {\n        return;\n      }\n\n      const typing = typings.find(typing => typing.action._ === 'sendMessageEmojiInteraction');\n      if(typing?.action?._ === 'sendMessageEmojiInteraction') {\n        const action = typing.action;\n        const bubble = chat.bubbles.bubbles[appMessagesIdsManager.generateMessageId(typing.action.msg_id)];\n        if(bubble && bubble.classList.contains('emoji-big') && bubble.classList.contains('sticker') && getVisibleRect(bubble, chat.bubbles.scrollable.container)) {\n          const stickerWrapper: HTMLElement = bubble.querySelector('.media-sticker-wrapper:not(.bubble-hover-reaction-sticker):not(.reaction-sticker)');\n\n          const data: SendMessageEmojiInteractionData = JSON.parse(action.interaction.data);\n          data.a.forEach(a => {\n            setTimeout(() => {\n              simulateClickEvent(stickerWrapper);\n            }, a.t * 1000);\n          });\n          \n          appMessagesManager.setTyping(peerId, {\n            _: 'sendMessageEmojiInteractionSeen',\n            emoticon: action.emoticon\n          });\n        }\n      }\n    });\n\n    rootScope.addEventListener('instance_deactivated', () => {\n      const popup = new PopupElement('popup-instance-deactivated', undefined, {overlayClosable: true});\n      const c = document.createElement('div');\n      c.classList.add('instance-deactivated-container');\n      (popup as any).container.replaceWith(c);\n\n      const header = document.createElement('div');\n      header.classList.add('header');\n      header.append(i18n('Deactivated.Title'));\n\n      const subtitle = document.createElement('div');\n      subtitle.classList.add('subtitle');\n      subtitle.append(i18n('Deactivated.Subtitle'));\n\n      c.append(header, subtitle);\n\n      document.body.classList.add('deactivated');\n\n      popup.addEventListener('close', () => {\n        document.body.classList.add('deactivated-backwards');\n\n        singleInstance.activateInstance();\n\n        setTimeout(() => {\n          document.body.classList.remove('deactivated', 'deactivated-backwards');\n        }, 333);\n      });\n\n      popup.show();\n    });\n\n    // remove scroll listener when setting chat to tray\n    rootScope.addEventListener('chat_changing', ({to}) => {\n      this.toggleChatGradientAnimation(to);\n    });\n\n    stateStorage.get('chatPositions').then((c) => {\n      stateStorage.setToCache('chatPositions', c || {});\n    });\n\n    if(IS_CALL_SUPPORTED || IS_GROUP_CALL_SUPPORTED) {\n      this.topbarCall = new TopbarCall(appGroupCallsManager, appPeersManager, appChatsManager, appAvatarsManager, appCallsManager);\n    }\n\n    if(IS_CALL_SUPPORTED) {\n      rootScope.addEventListener('call_instance', ({instance/* , hasCurrent */}) => {\n        // if(hasCurrent) {\n          // return;\n        // }\n        \n        const popup = new PopupCall({\n          appCallsManager,\n          appAvatarsManager,\n          appPeersManager,\n          instance\n        });\n\n        instance.addEventListener('acceptCallOverride', () => {\n          return this.discardCurrentCall(instance.interlocutorUserId.toPeerId(), undefined, instance)\n          .then(() => {\n            rootScope.dispatchEvent('call_accepting', instance);\n            return true;\n          })\n          .catch(() => false);\n        });\n\n        popup.addEventListener('close', () => {\n          const currentCall = appCallsManager.currentCall;\n          if(currentCall && currentCall !== instance && !instance.wasTryingToJoin) {\n            instance.hangUp('phoneCallDiscardReasonBusy');\n          }\n        }, {once: true});\n\n        popup.show();\n      });\n    }\n\n    // ! do not remove this line \n    // ! instance can be deactivated before the UI starts, because it waits in background for RAF that is delayed\n    singleInstance.activateInstance();\n\n    const setAuthorized = () => {\n      telegramMeWebManager.setAuthorized(true);\n    };\n\n    setInterval(setAuthorized, ONE_DAY);\n    setAuthorized();\n\n    this.addAnchorListener<{}>({\n      name: 'showMaskedAlert', \n      callback: (params, element) => {\n        const href = element.href;\n\n        const a = element.cloneNode(true) as HTMLAnchorElement;\n        a.className = 'anchor-url';\n        a.innerText = href;\n        a.removeAttribute('onclick');\n\n        new PopupPeer('popup-masked-url', {\n          titleLangKey: 'OpenUrlTitle',\n          descriptionLangKey: 'OpenUrlAlert2',\n          descriptionLangArgs: [a],\n          buttons: [{\n            langKey: 'Open',\n            callback: () => {\n              a.click();\n            },\n          }]\n        }).show();\n      }\n    });\n\n    this.addAnchorListener<{uriParams: {command: string, bot: string}}>({\n      name: 'execBotCommand', \n      callback: ({uriParams}) => {\n        const {command, bot} = uriParams;\n\n        /* const promise = bot ? this.openUsername(bot).then(() => this.chat.peerId) : Promise.resolve(this.chat.peerId);\n        promise.then(peerId => {\n          appMessagesManager.sendText(peerId, '/' + command);\n        }); */\n\n        appMessagesManager.sendText(this.chat.peerId, '/' + command + (bot ? '@' + bot : ''));\n\n        //console.log(command, bot);\n      }\n    });\n\n    this.addAnchorListener<{uriParams: {hashtag: string}}>({\n      name: 'searchByHashtag', \n      callback: ({uriParams}) => {\n        const {hashtag} = uriParams;\n        if(!hashtag) {\n          return;\n        }\n\n        this.chat.initSearch('#' + hashtag + ' ');\n      }\n    });\n\n    this.addAnchorListener<{pathnameParams: ['addstickers', string]}>({\n      name: 'addstickers', \n      callback: ({pathnameParams}) => {\n        const link: InternalLink = {\n          _: INTERNAL_LINK_TYPE.STICKER_SET,\n          set: pathnameParams[1]\n        };\n\n        this.processInternalLink(link);\n      }\n    });\n\n    // Support old t.me/joinchat/asd and new t.me/+asd\n    this.addAnchorListener<{pathnameParams: ['joinchat', string]}>({\n      name: 'joinchat', \n      callback: ({pathnameParams}) => {\n        const link: InternalLink = {\n          _: INTERNAL_LINK_TYPE.JOIN_CHAT,\n          invite: pathnameParams[1] || decodeURIComponent(pathnameParams[0]).slice(1)\n        };\n\n        this.processInternalLink(link);\n      }\n    });\n\n    if(IS_GROUP_CALL_SUPPORTED) {\n      this.addAnchorListener<{\n        uriParams: Omit<InternalLink.InternalLinkVoiceChat, '_'>\n      }>({\n        name: 'voicechat',\n        protocol: 'tg',\n        callback: ({uriParams}) => {\n          const link = this.makeLink(INTERNAL_LINK_TYPE.VOICE_CHAT, uriParams);\n          this.processInternalLink(link);\n        }\n      });\n    }\n\n    this.addAnchorListener<{\n    //   pathnameParams: ['c', string, string],\n    //   uriParams: {thread?: number}\n    // } | {\n    //   pathnameParams: [string, string?],\n    //   uriParams: {comment?: number}\n      pathnameParams: ['c', string, string] | [string, string?],\n      uriParams: {thread?: string, comment?: string} | {comment?: string, start?: string}\n    }>({\n      name: 'im',\n      callback: async({pathnameParams, uriParams}) => {\n        let link: InternalLink;\n        if(pathnameParams[0] === 'c') {\n          link = {\n            _: INTERNAL_LINK_TYPE.PRIVATE_POST,\n            channel: pathnameParams[1],\n            post: pathnameParams[2],\n            thread: 'thread' in uriParams && uriParams.thread,\n            comment: uriParams.comment\n          };\n        } else {\n          link = {\n            _: INTERNAL_LINK_TYPE.MESSAGE,\n            domain: pathnameParams[0],\n            post: pathnameParams[1],\n            comment: uriParams.comment,\n            start: 'start' in uriParams ? uriParams.start : undefined\n          };\n        }\n\n        this.processInternalLink(link);\n      }\n    });\n\n    this.addAnchorListener<{\n      uriParams: {\n        domain: string,\n\n        // telegrampassport\n        scope?: string,\n        nonce?: string,\n        payload?: string,\n        bot_id?: string,\n        public_key?: string,\n        callback_url?: string,\n\n        // regular\n        start?: string,\n        startgroup?: string,\n        game?: string,\n        voicechat?: string,\n        post?: string,\n        thread?: string,\n        comment?: string\n      }\n    }>({\n      name: 'resolve',\n      protocol: 'tg',\n      callback: ({uriParams}) => {\n        let link: InternalLink;\n        if(uriParams.domain === 'telegrampassport') {\n\n        } else {\n          link = this.makeLink(INTERNAL_LINK_TYPE.MESSAGE, uriParams);\n        }\n\n        this.processInternalLink(link);\n      }\n    });\n\n    this.addAnchorListener<{\n      uriParams: {\n        channel: string,\n        post: string,\n        thread?: string,\n        comment?: string\n      }\n    }>({\n      name: 'privatepost',\n      protocol: 'tg',\n      callback: ({uriParams}) => {\n        const link = this.makeLink(INTERNAL_LINK_TYPE.PRIVATE_POST, uriParams);\n        this.processInternalLink(link);\n      }\n    });\n\n    this.addAnchorListener<{\n      uriParams: {\n        set: string\n      }\n    }>({\n      name: 'addstickers',\n      protocol: 'tg',\n      callback: ({uriParams}) => {\n        const link = this.makeLink(INTERNAL_LINK_TYPE.STICKER_SET, uriParams);\n        this.processInternalLink(link);\n      }\n    });\n\n    ['joinchat' as const, 'join' as const].forEach(name => {\n      this.addAnchorListener<{\n        uriParams: {\n          invite: string\n        }\n      }>({\n        name,\n        protocol: 'tg',\n        callback: ({uriParams}) => {\n          const link = this.makeLink(INTERNAL_LINK_TYPE.JOIN_CHAT, uriParams);\n          this.processInternalLink(link);\n        }\n      });\n    });\n\n    this.onHashChange();\n    this.attachKeydownListener();\n  }\n\n  private toggleChatGradientAnimation(activatingChat: Chat) {\n    this.chats.forEach(chat => {\n      if(chat.gradientRenderer) {\n        chat.gradientRenderer.scrollAnimate(rootScope.settings.animationsEnabled && chat === activatingChat);\n      }\n    });\n  }\n\n  private appendEmojiAnimationContainer(screen: ScreenSize) {\n    const appendTo = screen === ScreenSize.mobile ? this.columnEl : document.body;\n    if(this.emojiAnimationContainer.parentElement !== appendTo) {\n      appendTo.append(this.emojiAnimationContainer)\n    }\n  }\n\n  private attachKeydownListener() {\n    const IGNORE_KEYS = new Set(['PageUp', 'PageDown', 'Meta', 'Control']);\n    const onKeyDown = (e: KeyboardEvent) => {\n      const key = e.key;\n      if(rootScope.isOverlayActive || IGNORE_KEYS.has(key)) return;\n      \n      const target = e.target as HTMLElement;\n      \n      //if(target.tagName === 'INPUT') return;\n      \n      //this.log('onkeydown', e, document.activeElement);\n\n      const chat = this.chat;\n\n      if(e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT') {\n        return;\n      } else if(e.altKey && (key === 'ArrowUp' || key === 'ArrowDown')) {\n        const folder = appMessagesManager.dialogsStorage.getFolderDialogs(rootScope.filterId, true);\n        let nextDialog: Dialog.dialog;\n        if(!rootScope.peerId) {\n          if(key === 'ArrowDown') {\n            nextDialog = folder[0];\n          }\n        } else {\n          const idx = folder.findIndex(dialog => dialog.peerId === rootScope.peerId);\n          if(idx !== -1) {\n            const nextIndex = key === 'ArrowUp' ? idx - 1 : idx + 1;\n            nextDialog = folder[nextIndex];\n          }\n        }\n        \n        if(nextDialog) {\n          this.setPeer({peerId: nextDialog.peerId});\n        }\n      } else if(key === 'ArrowUp') {\n        if(!chat.input.editMsgId && chat.input.isInputEmpty()) {\n          const historyStorage = appMessagesManager.getHistoryStorage(chat.peerId, chat.threadId);\n          const slice = historyStorage.history.slice;\n          if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n            let goodMid: number;\n            for(const mid of slice) {\n              const message = chat.getMessage(mid);\n              const good = this.myId === chat.peerId ? message.fromId === this.myId : message.pFlags.out;\n\n              if(good) {\n                if(appMessagesManager.canEditMessage(chat.getMessage(mid), 'text')) {\n                  goodMid = mid;\n                  break;\n                }\n\n                // * this check will allow editing only last message\n                //break;\n              }\n            }\n  \n            if(goodMid) {\n              chat.input.initMessageEditing(goodMid);\n              cancelEvent(e); // * prevent from scrolling\n            }\n          }\n        } else {\n          return;\n        }\n      } else if(key === 'ArrowDown') {\n        return;\n      }\n      \n      if(\n        chat?.input?.messageInput && \n        e.target !== chat.input.messageInput && \n        target.tagName !== 'INPUT' && \n        !target.hasAttribute('contenteditable') && \n        !IS_TOUCH_SUPPORTED && \n        (!mediaSizes.isMobile || this.tabId === 1) && \n        !chat.selection.isSelecting && \n        !chat.input.recording\n      ) {\n        chat.input.messageInput.focus();\n        placeCaretAtEnd(chat.input.messageInput);\n\n        // clone and dispatch same event to new input. it is needed for sending message if input was blurred\n        const newEvent = new KeyboardEvent(e.type, e);\n        chat.input.messageInput.dispatchEvent(newEvent);\n      }\n    };\n    \n    document.body.addEventListener('keydown', onKeyDown);\n  }\n\n  private makeLink<T extends INTERNAL_LINK_TYPE>(type: T, uriParams: Omit<InternalLinkTypeMap[T], '_'>) {\n    return {\n      _: type,\n      ...uriParams\n    } as any as InternalLinkTypeMap[T];\n  }\n\n  public async processInternalLink(link: InternalLink) {\n    switch(link?._) {\n      case INTERNAL_LINK_TYPE.MESSAGE: {\n        const postId = link.post ? appMessagesIdsManager.generateMessageId(+link.post) : undefined;\n        const commentId = link.comment ? appMessagesIdsManager.generateMessageId(+link.comment) : undefined;\n\n        this.openUsername({\n          userName: link.domain, \n          lastMsgId: postId, \n          commentId,\n          startParam: link.start\n        });\n        break;\n      }\n\n      case INTERNAL_LINK_TYPE.PRIVATE_POST: {\n        const chatId = link.channel.toChatId();\n        const peerId = chatId.toPeerId(true);\n\n        const chat = appChatsManager.getChat(chatId);\n        if(chat.deleted) {\n          try {\n            await appChatsManager.resolveChannel(chatId);\n          } catch(err) {\n            toastNew({langPackKey: 'LinkNotFound'});\n            throw err;\n          }\n        }\n\n        const postId = appMessagesIdsManager.generateMessageId(+link.post);\n        const threadId = link.thread ? appMessagesIdsManager.generateMessageId(+link.thread) : undefined;\n\n        if(threadId) this.openThread(peerId, postId, threadId);\n        else this.setInnerPeer({\n          peerId,\n          lastMsgId: postId,\n          threadId\n        });\n        break;\n      }\n\n      case INTERNAL_LINK_TYPE.STICKER_SET: {\n        new PopupStickers({id: link.set}).show();\n        break;\n      }\n\n      case INTERNAL_LINK_TYPE.JOIN_CHAT: {\n        apiManager.invokeApi('messages.checkChatInvite', {\n          hash: link.invite\n        }).then(chatInvite => {\n          if((chatInvite as ChatInvite.chatInvitePeek).chat) {\n            appChatsManager.saveApiChat((chatInvite as ChatInvite.chatInvitePeek).chat, true);\n          }\n\n          // console.log(chatInvite);\n\n          if(chatInvite._ === 'chatInviteAlready' ||\n            chatInvite._ === 'chatInvitePeek'/*  && chatInvite.expires > tsNow(true) */) {\n            this.setInnerPeer({\n              peerId: chatInvite.chat.id.toPeerId(true)\n            });\n            return;\n          }\n\n          new PopupJoinChatInvite(link.invite, chatInvite).show();\n        }, (err) => {\n          if(err.type === 'INVITE_HASH_EXPIRED') {\n            toast(i18n('InviteExpired'));\n          }\n        });\n        break;\n      }\n\n      case INTERNAL_LINK_TYPE.VOICE_CHAT: {\n        if(IS_GROUP_CALL_SUPPORTED) {\n          this.joinGroupCall(link.chat_id.toPeerId(true), link.id);\n        }\n        \n        break;\n      }\n\n      default: {\n        this.log.warn('Not supported internal link:', link);\n        break;\n      }\n    }\n  }\n\n  private addAnchorListener<Params extends {pathnameParams?: any, uriParams?: any}>(options: {\n    name: 'showMaskedAlert' | 'execBotCommand' | 'searchByHashtag' | 'addstickers' | 'im' |\n          'resolve' | 'privatepost' | 'addstickers' | 'voicechat' | 'joinchat' | 'join', \n    protocol?: 'tg',\n    callback: (params: Params, element?: HTMLAnchorElement) => boolean | any, \n    noPathnameParams?: boolean,\n    noUriParams?: boolean\n  }) {\n    (window as any)[(options.protocol ? options.protocol + '_' : '') + options.name] = (element?: HTMLAnchorElement/* , e: Event */) => {\n      cancelEvent(null);\n\n      const href = element.href;\n      let pathnameParams: any[];\n      let uriParams: any;\n\n      if(!options.noPathnameParams) pathnameParams = new URL(element.href).pathname.split('/').slice(1);\n      if(!options.noUriParams) uriParams = this.parseUriParams(href);\n\n      const res = options.callback({pathnameParams, uriParams} as Params, element);\n      return res === undefined ? res : false;\n    };\n  }\n\n  private parseUriParams(uri: string, splitted = uri.split('?')) {\n    const params: any = {};\n    if(!splitted[1]) return params;\n    splitted[1].split('&').forEach(item => {\n      params[item.split('=')[0]] = decodeURIComponent(item.split('=')[1]);\n    });\n\n    return params;\n  }\n\n  private onHashChange = () => {\n    const hash = location.hash;\n    const splitted = hash.split('?');\n\n    const params = this.parseUriParams(hash, splitted);\n\n    this.log('hashchange', hash, splitted[0], params);\n\n    if(params.tgaddr) {\n      appNavigationController.replaceState();\n      const {onclick} = RichTextProcessor.wrapUrl(params.tgaddr);\n      if(onclick) {\n        const a = document.createElement('a');\n        a.href = params.tgaddr;\n        (window as any)[onclick](a);\n      }\n      return;\n    }\n\n    switch(splitted[0]) {\n      case '#/im': {\n        const p: string = params.p;\n        let postId = params.post !== undefined ? appMessagesIdsManager.generateMessageId(+params.post) : undefined;\n\n        switch(p[0]) {\n          case '@': {\n            this.openUsername({\n              userName: p, \n              lastMsgId: postId\n            });\n            break;\n          }\n\n          default: { // peerId\n            this.setInnerPeer({\n              peerId: postId ? p.toPeerId(true) : p.toPeerId(), \n              lastMsgId: postId\n            });\n            break;\n          }\n        }\n      }\n    }\n\n    //appNavigationController.replaceState();\n    //location.hash = '';\n  };\n\n  public openUsername(options: {\n    userName: string, \n    lastMsgId?: number, \n    threadId?: number, \n    commentId?: number,\n    startParam?: string\n  }) {\n    const {userName, lastMsgId, threadId, commentId, startParam} = options;\n    return appUsersManager.resolveUsername(userName).then(peer => {\n      const isUser = peer._ === 'user';\n      const peerId = peer.id.toPeerId(!isUser);\n\n      if(threadId) {\n        return this.openThread(peerId, lastMsgId, threadId);\n      } else if(commentId) {\n        return this.openComment(peerId, lastMsgId, commentId);\n      }\n      \n      return this.setInnerPeer({\n        peerId,\n        lastMsgId,\n        startParam: startParam\n      });\n    }, (err) => {\n      if(err.type === 'USERNAME_NOT_OCCUPIED') {\n        toastNew({langPackKey: 'NoUsernameFound'});\n      } else if(err.type === 'USERNAME_INVALID') {\n        toastNew({langPackKey: 'Alert.UserDoesntExists'});\n      }\n    });\n  }\n\n  /**\n   * Opens thread when peerId of discussion group is known\n   */\n  public openThread(peerId: PeerId, lastMsgId: number, threadId: number) {\n    return appMessagesManager.wrapSingleMessage(peerId, threadId).then(() => {\n      const message: Message = appMessagesManager.getMessageByPeer(peerId, threadId);\n      if(message._ === 'messageEmpty') {\n        lastMsgId = undefined;\n      } else {\n        appMessagesManager.generateThreadServiceStartMessage(message);\n      }\n\n      return this.setInnerPeer({\n        peerId,\n        lastMsgId,\n        threadId,\n        type: 'discussion'\n      });\n    });\n  }\n\n  /**\n   * Opens comment directly from original channel\n   */\n  public openComment(peerId: PeerId, msgId: number, commentId: number) {\n    return appMessagesManager.getDiscussionMessage(peerId, msgId).then(message => {\n      return this.openThread(message.peerId, commentId, message.mid);\n    });\n  }\n\n  public async callUser(userId: UserId, type: CallType) {\n    const call = appCallsManager.getCallByUserId(userId);\n    if(call) {\n      return;\n    }\n    \n    const userFull = await appProfileManager.getProfile(userId);\n    if(userFull.pFlags.phone_calls_private) {\n      confirmationPopup({\n        descriptionLangKey: 'Call.PrivacyErrorMessage',\n        descriptionLangArgs: [new PeerTitle({peerId: userId.toPeerId()}).element],\n        button: {\n          langKey: 'OK',\n          isCancel: true\n        }\n      });\n\n      return;\n    }\n\n    await this.discardCurrentCall(userId.toPeerId());\n\n    appCallsManager.startCallInternal(userId, type === 'video');\n  }\n\n  private discardCurrentCall(toPeerId: PeerId, ignoreGroupCall?: GroupCallInstance, ignoreCall?: CallInstance) {\n    if(appGroupCallsManager.groupCall && appGroupCallsManager.groupCall !== ignoreGroupCall) return this.discardGroupCallConfirmation(toPeerId);\n    else if(appCallsManager.currentCall && appCallsManager.currentCall !== ignoreCall) return this.discardCallConfirmation(toPeerId);\n    else return Promise.resolve();\n  }\n\n  private async discardCallConfirmation(toPeerId: PeerId) {\n    const currentCall = appCallsManager.currentCall;\n    if(currentCall) {\n      await confirmationPopup({\n        titleLangKey: 'Call.Confirm.Discard.Call.Header',\n        descriptionLangKey: toPeerId.isUser() ? 'Call.Confirm.Discard.Call.ToCall.Text' : 'Call.Confirm.Discard.Call.ToVoice.Text',\n        descriptionLangArgs: [\n          new PeerTitle({peerId: currentCall.interlocutorUserId.toPeerId(false)}).element, \n          new PeerTitle({peerId: toPeerId}).element\n        ],\n        button: {\n          langKey: 'OK'\n        }\n      });\n\n      if(!currentCall.isClosing) {\n        await currentCall.hangUp('phoneCallDiscardReasonDisconnect');\n      }\n    }\n  }\n\n  private async discardGroupCallConfirmation(toPeerId: PeerId) {\n    const currentGroupCall = appGroupCallsManager.groupCall;\n    if(currentGroupCall) {\n      await confirmationPopup({\n        titleLangKey: 'Call.Confirm.Discard.Voice.Header',\n        descriptionLangKey: toPeerId.isUser() ? 'Call.Confirm.Discard.Voice.ToCall.Text' : 'Call.Confirm.Discard.Voice.ToVoice.Text',\n        descriptionLangArgs: [\n          new PeerTitle({peerId: currentGroupCall.chatId.toPeerId(true)}).element, \n          new PeerTitle({peerId: toPeerId}).element\n        ],\n        button: {\n          langKey: 'OK'\n        }\n      });\n\n      if(appGroupCallsManager.groupCall === currentGroupCall) {\n        await currentGroupCall.hangUp();\n      }\n    }\n  }\n\n  public async joinGroupCall(peerId: PeerId, groupCallId?: GroupCallId) {\n    const chatId = peerId.toChatId();\n    const hasRights = appChatsManager.hasRights(chatId, 'manage_call');\n    const next = async() => {\n      const chatFull = await appProfileManager.getChatFull(chatId);\n      let call: MyGroupCall;\n      if(!chatFull.call) {\n        if(!hasRights) {\n          return;\n        }\n  \n        call = await appGroupCallsManager.createGroupCall(chatId);\n      } else {\n        call = appGroupCallsManager.saveGroupCall(chatFull.call, chatId);\n      }\n  \n      appGroupCallsManager.joinGroupCall(chatId, call.id, true, false);\n    };\n\n    if(groupCallId) {\n      const groupCall = await appGroupCallsManager.getGroupCallFull(groupCallId);\n      if(groupCall._ === 'groupCallDiscarded') {\n        if(!hasRights) {\n          toastNew({\n            langPackKey: 'VoiceChat.Chat.Ended'\n          });\n\n          return;\n        }\n\n        await confirmationPopup({\n          descriptionLangKey: 'VoiceChat.Chat.StartNew',\n          button: {\n            langKey: 'VoiceChat.Chat.StartNew.OK'\n          }\n        });\n      }\n    }\n\n    await this.discardCurrentCall(peerId);\n\n    next();\n  };\n\n  public setCurrentBackground(broadcastEvent = false) {\n    const theme = rootScope.getTheme();\n\n    if(theme.background.slug) {\n      const defaultTheme = AppStateManager.STATE_INIT.settings.themes.find(t => t.name === theme.name);\n      // const isDefaultBackground = theme.background.blur === defaultTheme.background.blur && \n        // theme.background.slug === defaultTheme.background.slug;\n\n      // if(!isDefaultBackground) {\n        return this.getBackground(theme.background.slug).then((url) => {\n          return this.setBackground(url, broadcastEvent);\n        }, () => { // * if NO_ENTRY_FOUND\n          theme.background = copy(defaultTheme.background); // * reset background\n          return this.setBackground('', true);\n        });\n      // }\n    }\n    \n    return this.setBackground('', broadcastEvent);\n  }\n\n  private getBackground(slug: string) {\n    if(this.backgroundPromises[slug]) return this.backgroundPromises[slug];\n    return this.backgroundPromises[slug] = appDownloadManager.cacheStorage.getFile('backgrounds/' + slug).then(blob => {\n      return URL.createObjectURL(blob);\n    });\n  }\n\n  public setBackground(url: string, broadcastEvent = true): Promise<void> {\n    this.lastBackgroundUrl = url;\n    const promises = this.chats.map(chat => chat.setBackground(url));\n    return promises[promises.length - 1].then(() => {\n      if(broadcastEvent) {\n        rootScope.dispatchEvent('background_change');\n      }\n    });\n  }\n\n  public saveChatPosition(chat: Chat) {\n    if(!(['chat', 'discussion'] as ChatType[]).includes(chat.type) || !chat.peerId) {\n      return;\n    }\n\n    //const bubble = chat.bubbles.getBubbleByPoint('top');\n    //if(bubble) {\n      //const top = bubble.getBoundingClientRect().top;\n      const chatBubbles = chat.bubbles;\n      const top = chatBubbles.scrollable.scrollTop;\n\n      const key = chat.peerId + (chat.threadId ? '_' + chat.threadId : '');\n\n      const chatPositions = stateStorage.getFromCache('chatPositions');\n      if(!(chatBubbles.scrollable.getDistanceToEnd() <= 16 && chatBubbles.scrollable.loadedAll.bottom) && Object.keys(chatBubbles.bubbles).length) {\n        const position = {\n          mids: getObjectKeysAndSort(chatBubbles.bubbles, 'desc'),\n          top\n        };\n\n        chatPositions[key] = position;\n\n        this.log('saved chat position:', position);\n      } else {\n        delete chatPositions[key];\n\n        this.log('deleted chat position');\n      }\n\n      stateStorage.set({chatPositions}, true);\n    //}\n  }\n\n  public getChatSavedPosition(chat: Chat): ChatSavedPosition {\n    if(!(['chat', 'discussion'] as ChatType[]).includes(chat.type) || !chat.peerId) {\n      return;\n    }\n    \n    const key = chat.peerId + (chat.threadId ? '_' + chat.threadId : '');\n    const cache = stateStorage.getFromCache('chatPositions');\n    return cache && cache[key];\n  }\n\n  public applyHighlightningColor() {\n    let hsla: string;\n    const theme = rootScope.getTheme();\n    if(theme.background.highlightningColor) {\n      hsla = theme.background.highlightningColor;\n      document.documentElement.style.setProperty('--message-highlightning-color', hsla);\n    } else {\n      document.documentElement.style.removeProperty('--message-highlightning-color');\n    }\n\n    if(!IS_TOUCH_SUPPORTED && hsla) {\n      rootScope.themeColor = hslaStringToHex(hsla);\n    }\n  }\n\n  public applyCurrentTheme(slug?: string, backgroundUrl?: string, broadcastEvent?: boolean) {\n    this.applyHighlightningColor();\n\n    rootScope.setTheme();\n\n    if(backgroundUrl) {\n      this.backgroundPromises[slug] = Promise.resolve(backgroundUrl);\n    }\n    \n    return this.setCurrentBackground(broadcastEvent === undefined ? !!slug : broadcastEvent);\n  }\n\n  private setSettings = () => {\n    document.documentElement.style.setProperty('--messages-text-size', rootScope.settings.messagesTextSize + 'px');\n    \n    document.body.classList.toggle('animation-level-0', !rootScope.settings.animationsEnabled);\n    document.body.classList.toggle('animation-level-1', false);\n    document.body.classList.toggle('animation-level-2', rootScope.settings.animationsEnabled);\n\n    this.chatsSelectTabDebounced = debounce(() => {\n      const topbar = this.chat.topbar;\n      if(topbar.pinnedMessage) { // * буду молиться богам, чтобы это ничего не сломало, но это исправляет получение пиннеда после анимации\n        topbar.pinnedMessage.setCorrectIndex(0);\n      }\n\n      apiManager.setQueueId(this.chat.bubbles.lazyLoadQueue.queueId);\n    }, rootScope.settings.animationsEnabled ? 250 : 0, false, true);\n\n    lottieLoader.setLoop(rootScope.settings.stickers.loop);\n    animationIntersector.checkAnimations(false);\n    \n    for(const chat of this.chats) {\n      chat.setAutoDownloadMedia();\n    }\n    \n    I18n.setTimeFormat(rootScope.settings.timeFormat);\n\n    this.toggleChatGradientAnimation(this.chat);\n  };\n\n  // * не могу использовать тут TransitionSlider, так как мне нужен отрисованный блок рядом \n  // * (или под текущим чатом) чтобы правильно отрендерить чат (напр. scrollTop)\n  private chatsSelectTab(tab: HTMLElement, animate?: boolean) {\n    if(this.prevTab === tab) {\n      return;\n    }\n\n    if(animate === false && this.prevTab) { // * will be used for Safari iOS history swipe\n      disableTransition([tab, this.prevTab].filter(Boolean));\n    }\n\n    if(this.prevTab) {\n      this.prevTab.classList.remove('active');\n      this.chatsSelectTabDebounced();\n\n      // ! нужно переделать на animation, так как при лаге анимация будет длиться не 250мс\n      if(rootScope.settings.animationsEnabled && animate !== false) { \n        dispatchHeavyAnimationEvent(pause(250 + 150), 250 + 150);\n      }\n\n      const prevIdx = whichChild(this.prevTab);\n      const idx = whichChild(tab);\n      if(idx > prevIdx) {\n        appNavigationController.pushItem({\n          type: 'chat', \n          onPop: (canAnimate) => {\n            this.setPeer({}, canAnimate);\n            blurActiveElement();\n          }\n        });\n      }\n    }\n\n    tab.classList.add('active');\n    this.prevTab = tab;\n  }\n\n  private init() {\n    document.addEventListener('paste', this.onDocumentPaste, true);\n    \n    if(!IS_TOUCH_SUPPORTED) {\n      this.attachDragAndDropListeners();\n    }\n\n    //if(!isTouchSupported) {\n      this.markupTooltip = new MarkupTooltip(this);\n      this.markupTooltip.handleSelection();\n    //}\n  }\n\n  private attachDragAndDropListeners() {\n    const drops: ChatDragAndDrop[] = [];\n    const mediaDrops: ChatDragAndDrop[] = [];\n    let mounted = false;\n    const toggle = async(e: DragEvent, mount: boolean) => {\n      if(mount === mounted) return;\n\n      const _types = e.dataTransfer.types;\n      // @ts-ignore\n      const isFiles = _types.contains ? _types.contains('Files') : _types.indexOf('Files') >= 0;\n\n      const newMediaPopup = getCurrentNewMediaPopup();\n      if(!isFiles || (!this.canDrag() && !newMediaPopup)) { // * skip dragging text case\n        counter = 0;\n        return;\n      }\n\n      const _dropsContainer = newMediaPopup ? mediaDropsContainer : dropsContainer;\n      const _drops = newMediaPopup ? mediaDrops : drops;\n\n      if(mount && !_drops.length) {\n        const types: string[] = await getFilesFromEvent(e, true);\n        const force = isFiles && !types.length; // * can't get file items not from 'drop' on Safari\n        \n        const foundMedia = types.filter(t => MEDIA_MIME_TYPES_SUPPORTED.has(t)).length;\n        // const foundDocuments = types.length - foundMedia;\n  \n        this.log('drag files', types);\n\n        if(newMediaPopup) {\n          newMediaPopup.appendDrops(_dropsContainer);\n\n          if(types.length || force) {\n            _drops.push(new ChatDragAndDrop(_dropsContainer, {\n              header: 'Preview.Dragging.AddItems',\n              headerArgs: [types.length],\n              onDrop: (e: DragEvent) => {\n                toggle(e, false);\n                appImManager.log('drop', e);\n                appImManager.onDocumentPaste(e, 'document');\n              }\n            }));\n          }\n        } else {\n          if(types.length || force) {\n            _drops.push(new ChatDragAndDrop(_dropsContainer, {\n              icon: 'dragfiles',\n              header: 'Chat.DropTitle',\n              subtitle: 'Chat.DropAsFilesDesc',\n              onDrop: (e: DragEvent) => {\n                toggle(e, false);\n                appImManager.log('drop', e);\n                appImManager.onDocumentPaste(e, 'document');\n              }\n            }));\n          }\n    \n          // if((foundMedia && !foundDocuments) || force) {\n          if(foundMedia || force) {\n            _drops.push(new ChatDragAndDrop(_dropsContainer, {\n              icon: 'dragmedia',\n              header: 'Chat.DropTitle',\n              subtitle: 'Chat.DropQuickDesc',\n              onDrop: (e: DragEvent) => {\n                toggle(e, false);\n                appImManager.log('drop', e);\n                appImManager.onDocumentPaste(e, 'media');\n              }\n            }));\n          }\n\n          this.chat.container.append(_dropsContainer);\n        }\n      }\n\n      //if(!mount) return;\n\n      SetTransition(_dropsContainer, 'is-visible', mount, 200, () => {\n        if(!mount) {\n          _drops.forEach(drop => {\n            drop.destroy();\n          });\n\n          _drops.length = 0;\n        }\n      });\n\n      if(mount) {\n        _drops.forEach(drop => {\n          drop.setPath();\n        });\n      } else {\n        counter = 0;\n      }\n\n      document.body.classList.toggle('is-dragging', mount);\n      mounted = mount;\n    };\n\n    /* document.body.addEventListener('dragover', (e) => {\n      cancelEvent(e);\n    }); */\n\n    let counter = 0;\n    document.body.addEventListener('dragenter', (e) => {\n      counter++;\n    });\n\n    document.body.addEventListener('dragover', (e) => {\n      //this.log('dragover', e/* , e.dataTransfer.types[0] */);\n      toggle(e, true);\n      cancelEvent(e);\n    });\n\n    document.body.addEventListener('dragleave', (e) => {\n      //this.log('dragleave', e, counter);\n      //if((e.pageX <= 0 || e.pageX >= appPhotosManager.windowW) || (e.pageY <= 0 || e.pageY >= appPhotosManager.windowH)) {\n      counter--;\n      if(counter === 0) { \n      //if(!findUpClassName(e.target, 'drops-container')) {\n        toggle(e, false);\n      }\n    });\n\n    const dropsContainer = document.createElement('div');\n    dropsContainer.classList.add('drops-container');\n\n    const mediaDropsContainer = dropsContainer.cloneNode(true) as HTMLElement;\n  }\n\n  private canDrag() {\n    const chat = this.chat;\n    const peerId = chat?.peerId;\n    return !(!peerId || rootScope.isOverlayActive || !chat.canSend('send_media'));\n  }\n\n  private onDocumentPaste = (e: ClipboardEvent | DragEvent, attachType?: 'media' | 'document') => {\n    const newMediaPopup = getCurrentNewMediaPopup();\n    if(!this.canDrag() && !newMediaPopup) return;\n\n    //console.log('document paste');\n    //console.log('item', event.clipboardData.getData());\n\n    if(e instanceof DragEvent) {\n      const _types = e.dataTransfer.types;\n      // @ts-ignore\n      const isFiles = _types.contains ? _types.contains('Files') : _types.indexOf('Files') >= 0;\n      if(isFiles) {\n        cancelEvent(e);\n      }\n    }\n    \n    getFilesFromEvent(e).then((files: File[]) => {\n      if(files.length) {\n        if(newMediaPopup) {\n          newMediaPopup.addFiles(files);\n          return;\n        }\n    \n        const chatInput = this.chat.input;\n        chatInput.willAttachType = attachType || (MEDIA_MIME_TYPES_SUPPORTED.has(files[0].type) ? 'media' : 'document');\n        new PopupNewMedia(this.chat, files, chatInput.willAttachType);\n      }\n    });\n  };\n\n  public selectTab(id: number, animate?: boolean) {\n    if(animate === false) { // * will be used for Safari iOS history swipe\n      disableTransition([appSidebarLeft.sidebarEl, this.columnEl, appSidebarRight.sidebarEl]);\n    }\n\n    document.body.classList.toggle(LEFT_COLUMN_ACTIVE_CLASSNAME, id === 0);\n\n    const prevTabId = this.tabId;\n\n    this.log('selectTab', id, prevTabId);\n\n    let animationPromise: Promise<any> = rootScope.settings.animationsEnabled ? doubleRaf() : Promise.resolve();\n    if(prevTabId !== -1 && prevTabId !== id && rootScope.settings.animationsEnabled && animate !== false) {\n      const transitionTime = (mediaSizes.isMobile ? 250 : 200) + 100; // * cause transition time could be > 250ms\n      animationPromise = pause(transitionTime);\n      dispatchHeavyAnimationEvent(animationPromise, transitionTime);\n\n      // ! it's very heavy operation. will blink in firefox\n      /* this.columnEl.classList.add('disable-hover');\n      animationPromise.finally(() => {\n        this.columnEl.classList.remove('disable-hover');\n      }); */\n    }\n\n    this.tabId = id;\n    blurActiveElement();\n    if(mediaSizes.isMobile && prevTabId === 2 && id < 2) {\n      document.body.classList.remove(RIGHT_COLUMN_ACTIVE_CLASSNAME);\n    }\n\n    if(prevTabId !== -1 && id > prevTabId) {\n      if(id < 2 || !appNavigationController.findItemByType('im')) {\n        appNavigationController.pushItem({\n          type: 'im', \n          onPop: (canAnimate) => {\n            //this.selectTab(prevTabId, !isSafari);\n            this.setPeer({}, canAnimate);\n          }\n        });\n      }\n    }\n\n    rootScope.dispatchEvent('im_tab_change', id);\n\n    //this._selectTab(id, mediaSizes.isMobile);\n    //document.body.classList.toggle(RIGHT_COLUMN_ACTIVE_CLASSNAME, id === 2);\n\n    return animationPromise;\n  }\n  \n  public updateStatus() {\n    if(!this.myId) return Promise.resolve();\n    \n    appUsersManager.setUserStatus(this.myId, this.offline);\n    return apiManager.invokeApiSingle('account.updateStatus', {offline: this.offline});\n  }\n\n  private createNewChat() {\n    const chat = new Chat(this, \n      appChatsManager, \n      appDocsManager, \n      appInlineBotsManager, \n      appMessagesManager, \n      appPeersManager, \n      appPhotosManager, \n      appProfileManager, \n      appStickersManager, \n      appUsersManager, \n      appWebPagesManager, \n      appPollsManager, \n      apiManager, \n      appDraftsManager, \n      serverTimeManager, \n      stateStorage, \n      appNotificationsManager, \n      appEmojiManager,\n      appMessagesIdsManager,\n      appGroupCallsManager,\n      appReactionsManager\n    );\n\n    if(this.chats.length) {\n      chat.setBackground(this.lastBackgroundUrl, true);\n    }\n\n    this.chats.push(chat);\n\n    return chat;\n  }\n\n  private spliceChats(fromIndex: number, justReturn = true, animate?: boolean, spliced?: Chat[]) {\n    if(fromIndex >= this.chats.length) return;\n\n    const chatFrom = this.chat;\n    if(this.chats.length > 1 && justReturn) {\n      rootScope.dispatchEvent('peer_changing', this.chat);\n    }\n\n    if(!spliced) {\n      spliced = this.chats.splice(fromIndex, this.chats.length - fromIndex);\n    }\n\n    rootScope.dispatchEvent('chat_changing', {from: chatFrom, to: this.chat});\n\n    // * -1 because one item is being sliced when closing the chat by calling .removeByType\n    for(let i = 0; i < spliced.length - 1; ++i) {\n      appNavigationController.removeByType('chat', true);\n    }\n\n    // * fix middle chat z-index on animation\n    if(spliced.length > 1) {\n      spliced.slice(0, -1).forEach(chat => {\n        chat.container.remove();\n      });\n    }\n\n    this.chatsSelectTab(this.chat.container, animate);\n\n    if(justReturn) {\n      rootScope.dispatchEvent('peer_changed', this.chat.peerId);\n\n      const searchTab = appSidebarRight.getTab(AppPrivateSearchTab);\n      if(searchTab) {\n        searchTab.close();\n      }\n  \n      const isSet = appSidebarRight.sharedMediaTab.setPeer(this.chat.peerId, this.chat.threadId);\n      if(isSet) {\n        appSidebarRight.sharedMediaTab.loadSidebarMedia(true);\n        appSidebarRight.sharedMediaTab.fillProfileElements();\n      }\n      \n      /* setTimeout(() => {\n        appSidebarRight.sharedMediaTab.loadSidebarMedia(false);\n      }); */\n    }\n\n    spliced.forEach(chat => {\n      chat.beforeDestroy();\n    });\n    \n    setTimeout(() => {\n      //chat.setPeer(0);\n      spliced.forEach(chat => {\n        chat.destroy();\n      });\n    }, 250 + 100);\n  }\n\n  public setPeer(options: ChatSetPeerOptions = {}, animate?: boolean): boolean {\n    if(this.init) {\n      this.init();\n      this.init = null;\n    }\n\n    options.peerId ??= NULL_PEER_ID;\n\n    const {peerId, lastMsgId} = options;\n\n    const chat = this.chat;\n    const chatIndex = this.chats.indexOf(chat);\n\n    if(!peerId) {\n      if(chatIndex > 0) {\n        this.spliceChats(chatIndex, undefined, animate);\n        return;\n      } else if(mediaSizes.activeScreen === ScreenSize.medium) { // * floating sidebar case\n        this.selectTab(+!this.tabId, animate);\n        return;\n      }\n    } else if(chatIndex > 0 && chat.peerId && chat.peerId !== peerId) {\n      // const firstChat = this.chats[0];\n      // if(firstChat.peerId !== chat.peerId) {\n        /* // * slice idx > 0, set background and slice first, so new one will be the first\n        const spliced = this.chats.splice(1, this.chats.length - 1);\n        this.createNewChat();\n        this.chats.splice(0, 1); */\n        const spliced = this.chats.splice(1, this.chats.length - 1);\n        if(this.chat.peerId === peerId) {\n          this.spliceChats(0, true, true, spliced);\n          return;\n        } else {\n          const ret = this.setPeer(options);\n          this.spliceChats(0, false, false, spliced);\n          return ret;\n        }\n      // } else {\n      //   this.spliceChats(1, false, animate);\n      // }\n\n      //return ret;\n    }\n\n    // * don't reset peer if returning\n    if(peerId === chat.peerId && mediaSizes.activeScreen <= ScreenSize.medium && document.body.classList.contains(LEFT_COLUMN_ACTIVE_CLASSNAME)) {\n      this.selectTab(1, animate);\n      return false;\n    }\n\n    if(peerId || mediaSizes.activeScreen !== ScreenSize.mobile) {\n      const result = chat.setPeer(peerId, lastMsgId, options.startParam);\n\n      // * wait for cached render\n      const promise = result?.cached ? result.promise : Promise.resolve();\n      if(peerId) {\n        Promise.all([\n          promise,\n          chat.setBackgroundPromise\n        ]).then(() => {\n          //window.requestAnimationFrame(() => {\n          setTimeout(() => { // * setTimeout is better here\n            setTimeout(() => {\n              this.chatsSelectTab(this.chat.container);\n            }, 0);\n            this.selectTab(1, animate);\n          }, 0);\n        });\n      }\n    }\n\n    if(!peerId) {\n      this.selectTab(0, animate);\n      return false;\n    }\n  }\n\n  public setInnerPeer(options: ChatSetInnerPeerOptions) {\n    const {peerId} = options;\n    if(peerId === NULL_PEER_ID || !peerId) {\n      return;\n    }\n\n    const type = options.type ??= 'chat';\n\n    // * prevent opening already opened peer\n    const existingIndex = this.chats.findIndex(chat => chat.peerId === peerId && chat.type === type);\n    if(existingIndex !== -1) {\n      this.spliceChats(existingIndex + 1);\n      return this.setPeer(options);\n    }\n\n    const oldChat = this.chat;\n    let chat = oldChat;\n    if(oldChat.inited) { // * use first not inited chat\n      chat = this.createNewChat();\n    }\n\n    if(type) {\n      chat.setType(type);\n\n      if(options.threadId) {\n        chat.threadId = options.threadId;\n      }\n    }\n\n    rootScope.dispatchEvent('chat_changing', {from: oldChat, to: chat});\n\n    //this.chatsSelectTab(chat.container);\n\n    return this.setPeer(options);\n  }\n\n  public openScheduled(peerId: PeerId) {\n    this.setInnerPeer({\n      peerId, \n      type: 'scheduled'\n    });\n  }\n\n  private getTypingElement(action: SendMessageAction) {\n    const el = document.createElement('span');\n    let c = 'peer-typing';\n    el.classList.add(c);\n    el.dataset.action = action._;\n    switch(action._) {\n      case 'sendMessageTypingAction': {\n      //default: {\n        c += '-text';\n        for(let i = 0; i < 3; ++i) {\n          const dot = document.createElement('span');\n          dot.className = c + '-dot';\n          el.append(dot);\n        }\n        break;\n      }\n\n      case 'sendMessageUploadAudioAction':\n      case 'sendMessageUploadDocumentAction':\n      case 'sendMessageUploadRoundAction':\n      case 'sendMessageUploadVideoAction':\n      case 'sendMessageUploadPhotoAction': {\n        c += '-upload';\n        /* const trail = document.createElement('span');\n        trail.className = c + '-trail';\n        el.append(trail); */\n        break;\n      }\n\n      case 'sendMessageRecordAudioAction':\n      case 'sendMessageRecordRoundAction':\n      case 'sendMessageRecordVideoAction': {\n        c += '-record';\n        break;\n      }\n\n      case 'sendMessageEmojiInteractionSeen':\n      case 'sendMessageChooseStickerAction': {\n        c += '-choosing-sticker';\n        for(let i = 0; i < 2; ++i) {\n          const eye = document.createElement('div');\n          eye.className = c + '-eye';\n          el.append(eye);\n        }\n        break;\n      }\n    }\n\n    el.classList.add(c);\n\n    return el;\n  }\n\n  public getPeerTyping(peerId: PeerId, container?: HTMLElement) {\n    if(!appUsersManager.isBot(peerId)) {\n      const typings = appProfileManager.getPeerTypings(peerId);\n      if(!typings || !typings.length) {\n        return;\n      }\n\n      const typing = typings[0];\n\n      const langPackKeys: {\n        [peerType in 'private' | 'chat' | 'multi']?: Partial<{[action in SendMessageAction['_']]: LangPackKey}>\n      } = {\n        private: {\n          'sendMessageTypingAction': 'Peer.Activity.User.TypingText',\n          'sendMessageUploadAudioAction': 'Peer.Activity.User.SendingFile',\n          'sendMessageUploadDocumentAction': 'Peer.Activity.User.SendingFile',\n          'sendMessageUploadPhotoAction': 'Peer.Activity.User.SendingPhoto',\n          'sendMessageUploadVideoAction': 'Peer.Activity.User.SendingVideo',\n          'sendMessageUploadRoundAction': 'Peer.Activity.User.SendingVideo',\n          'sendMessageRecordVideoAction': 'Peer.Activity.User.RecordingVideo',\n          'sendMessageRecordAudioAction': 'Peer.Activity.User.RecordingAudio',\n          'sendMessageRecordRoundAction': 'Peer.Activity.User.RecordingVideo',\n          'sendMessageGamePlayAction': 'Peer.Activity.User.PlayingGame',\n          'sendMessageChooseStickerAction': 'Peer.Activity.User.ChoosingSticker',\n          'sendMessageEmojiInteractionSeen': 'Peer.Activity.User.EnjoyingAnimations'\n        },\n        chat: {\n          'sendMessageTypingAction': 'Peer.Activity.Chat.TypingText',\n          'sendMessageUploadAudioAction': 'Peer.Activity.Chat.SendingFile',\n          'sendMessageUploadDocumentAction': 'Peer.Activity.Chat.SendingFile',\n          'sendMessageUploadPhotoAction': 'Peer.Activity.Chat.SendingPhoto',\n          'sendMessageUploadVideoAction': 'Peer.Activity.Chat.SendingVideo',\n          'sendMessageUploadRoundAction': 'Peer.Activity.Chat.SendingVideo',\n          'sendMessageRecordVideoAction': 'Peer.Activity.Chat.RecordingVideo',\n          'sendMessageRecordAudioAction': 'Peer.Activity.Chat.RecordingAudio',\n          'sendMessageRecordRoundAction': 'Peer.Activity.Chat.RecordingVideo',\n          'sendMessageGamePlayAction': 'Peer.Activity.Chat.PlayingGame',\n          'sendMessageChooseStickerAction': 'Peer.Activity.Chat.ChoosingSticker',\n          'sendMessageEmojiInteractionSeen': 'Peer.Activity.Chat.EnjoyingAnimations'\n        },\n        multi: {\n          'sendMessageTypingAction': 'Peer.Activity.Chat.Multi.TypingText1',\n          'sendMessageUploadAudioAction': 'Peer.Activity.Chat.Multi.SendingFile1',\n          'sendMessageUploadDocumentAction': 'Peer.Activity.Chat.Multi.SendingFile1',\n          'sendMessageUploadPhotoAction': 'Peer.Activity.Chat.Multi.SendingPhoto1',\n          'sendMessageUploadVideoAction': 'Peer.Activity.Chat.Multi.SendingVideo1',\n          'sendMessageUploadRoundAction': 'Peer.Activity.Chat.Multi.SendingVideo1',\n          'sendMessageRecordVideoAction': 'Peer.Activity.Chat.Multi.RecordingVideo1',\n          'sendMessageRecordAudioAction': 'Peer.Activity.Chat.Multi.RecordingAudio1',\n          'sendMessageRecordRoundAction': 'Peer.Activity.Chat.Multi.RecordingVideo1',\n          'sendMessageGamePlayAction': 'Peer.Activity.Chat.Multi.PlayingGame1',\n          'sendMessageChooseStickerAction': 'Peer.Activity.Chat.Multi.ChoosingSticker1'\n        }\n      };\n\n      const mapa = peerId.isUser() ? langPackKeys.private : (typings.length > 1 ? langPackKeys.multi : langPackKeys.chat);\n      let action = typing.action;\n\n      if(typings.length > 1) {\n        const s: any = {};\n        typings.forEach(typing => {\n          const type = typing.action._;\n          if(s[type] === undefined) s[type] = 0;\n          ++s[type];\n        });\n\n        if(Object.keys(s).length > 1) {\n          action = {\n            _: 'sendMessageTypingAction'\n          };\n        }\n      }\n\n      const langPackKey = mapa[action._];\n      if(!langPackKey) {\n        return;\n      }\n\n      if(!container) {\n        container = document.createElement('span');\n        container.classList.add('online', 'peer-typing-container');\n      }\n\n      container.classList.toggle('peer-typing-flex', action._ === 'sendMessageChooseStickerAction' || action._ === 'sendMessageEmojiInteractionSeen');\n\n      let typingElement = container.firstElementChild as HTMLElement;\n      if(!typingElement) {\n        typingElement = this.getTypingElement(action);\n        container.prepend(typingElement);\n      } else {\n        if(typingElement.dataset.action !== action._) {\n          typingElement.replaceWith(this.getTypingElement(action));\n        }\n      }\n\n      let args: any[];\n      if(peerId.isAnyChat()) {\n        args = [\n          new PeerTitle({peerId: typing.userId.toPeerId(false), onlyFirstName: true}).element,\n          typings.length - 1\n        ];\n      }\n\n      if(action._ === 'sendMessageEmojiInteractionSeen') {\n        if(args) {\n          args.pop();\n        } else {\n          args = [];\n        }\n\n        const span = htmlToSpan(RichTextProcessor.wrapEmojiText(action.emoticon));\n        args.push(span);\n      }\n\n      const descriptionElement = i18n(langPackKey, args);\n      descriptionElement.classList.add('peer-typing-description');\n\n      if(container.childElementCount > 1) container.lastElementChild.replaceWith(descriptionElement);\n      else container.append(descriptionElement);\n      return container;\n    }\n  }\n\n  public async getPeerStatus(peerId: PeerId, ignoreSelf?: boolean) {\n    let subtitle: HTMLElement;\n    if(!peerId) return;\n\n    if(peerId.isAnyChat()) { // not human\n      let span = this.getPeerTyping(peerId);\n      if(span) {\n        return span;\n      }\n\n      const chatId = peerId.toChatId();\n      const chatInfo = await appProfileManager.getChatFull(chatId) as any;\n      this.chat.log('chatInfo res:', chatInfo);\n\n      const participants_count = chatInfo.participants_count || (chatInfo.participants && chatInfo.participants.participants && chatInfo.participants.participants.length) || 1;\n      //if(participants_count) {\n        subtitle = appProfileManager.getChatMembersString(chatId);\n\n        if(participants_count < 2) {\n          return subtitle;\n        }\n\n        const onlines = await appProfileManager.getOnlines(chatId);\n        if(onlines > 1) {\n          const span = document.createElement('span');\n          \n          span.append(...join([subtitle, i18n('OnlineCount', [numberThousandSplitter(onlines)])], false));\n          subtitle = span;\n        }\n  \n        return subtitle;\n      //}\n    } else { // user\n      const user = appUsersManager.getUser(peerId);\n      \n      if(rootScope.myId === peerId && !ignoreSelf) {\n        return;\n      } else if(user) {\n        subtitle = appUsersManager.getUserStatusString(user.id);\n\n        if(!appUsersManager.isBot(peerId)) {\n          let span = this.getPeerTyping(peerId);\n          if(!span && user.status?._ === 'userStatusOnline') {\n            span = document.createElement('span');\n            span.classList.add('online');\n            span.append(subtitle);\n          }\n\n          if(span) {\n            return span;\n          }\n        }\n        \n        return subtitle;\n      }\n    }\n  }\n\n  public setPeerStatus(peerId: PeerId, element: HTMLElement, needClear: boolean, useWhitespace: boolean, middleware: () => boolean, ignoreSelf?: boolean) {\n    if(needClear) {\n      element.innerHTML = useWhitespace ? '‎' : ''; // ! HERE U CAN FIND WHITESPACE\n    }\n\n    // * good good good\n    const typingContainer = element.querySelector('.peer-typing-container') as HTMLElement;\n    if(typingContainer && this.getPeerTyping(peerId, typingContainer)) {\n      return;\n    }\n\n    this.getPeerStatus(peerId, ignoreSelf).then((subtitle) => {\n      if(!middleware()) {\n        return;\n      }\n\n      replaceContent(element, subtitle || (useWhitespace ? '‎' : ''));\n    });\n  }\n\n  public setChoosingStickerTyping(cancel: boolean) {\n    appMessagesManager.setTyping(this.chat.peerId, {_: cancel ? 'sendMessageCancelAction' : 'sendMessageChooseStickerAction'});\n  }\n}\n\nconst appImManager = new AppImManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appImManager = appImManager);\nexport default appImManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { deferredPromise } from \"../helpers/cancellablePromise\";\nimport mediaSizes from \"../helpers/mediaSizes\";\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\nimport { IS_MOBILE_SAFARI, IS_SAFARI } from \"../environment/userAgent\";\nimport appDocsManager, { MyDocument } from \"../lib/appManagers/appDocsManager\";\nimport appPhotosManager, { MyPhoto } from \"../lib/appManagers/appPhotosManager\";\nimport { logger } from \"../lib/logger\";\nimport VideoPlayer from \"../lib/mediaPlayer\";\nimport rootScope from \"../lib/rootScope\";\nimport animationIntersector from \"./animationIntersector\";\nimport appMediaPlaybackController from \"./appMediaPlaybackController\";\nimport AvatarElement from \"./avatar\";\nimport ButtonIcon from \"./buttonIcon\";\nimport { ButtonMenuItemOptions } from \"./buttonMenu\";\nimport ButtonMenuToggle from \"./buttonMenuToggle\";\nimport { LazyLoadQueueBase } from \"./lazyLoadQueue\";\nimport ProgressivePreloader from \"./preloader\";\nimport SwipeHandler from \"./swipeHandler\";\nimport { formatFullSentTime } from \"../helpers/date\";\nimport appNavigationController from \"./appNavigationController\";\nimport { Message } from \"../layer\";\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\nimport renderImageFromUrl, { renderImageFromUrlPromise } from \"../helpers/dom/renderImageFromUrl\";\nimport getVisibleRect from \"../helpers/dom/getVisibleRect\";\nimport appDownloadManager from \"../lib/appManagers/appDownloadManager\";\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport fillPropertyValue from \"../helpers/fillPropertyValue\";\nimport generatePathData from \"../helpers/generatePathData\";\nimport replaceContent from \"../helpers/dom/replaceContent\";\nimport PeerTitle from \"./peerTitle\";\nimport { doubleRaf, fastRaf } from \"../helpers/schedulers\";\nimport RangeSelector from \"./rangeSelector\";\nimport windowSize from \"../helpers/windowSize\";\nimport ListLoader from \"../helpers/listLoader\";\nimport EventListenerBase from \"../helpers/eventListenerBase\";\nimport { MyMessage } from \"../lib/appManagers/appMessagesManager\";\nimport RichTextProcessor from \"../lib/richtextprocessor\";\nimport { NULL_PEER_ID } from \"../lib/mtproto/mtproto_config\";\nimport { isFullScreen } from \"../helpers/dom/fullScreen\";\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\n\nconst ZOOM_STEP = 0.5;\nconst ZOOM_INITIAL_VALUE = 1;\nconst ZOOM_MIN_VALUE = 0.5;\nconst ZOOM_MAX_VALUE = 4;\n\n// TODO: масштабирование картинок (не SVG) при ресайзе, и правильный возврат на исходную позицию\n// TODO: картинки \"обрезаются\" если возвращаются или появляются с места, где есть их перекрытие (топбар, поле ввода)\n// TODO: видео в мобильной вёрстке, если показываются элементы управления: если свайпнуть в сторону, то элементы вернутся на место, т.е. прыгнут - это не ок, надо бы замаскировать\n\nexport const MEDIA_VIEWER_CLASSNAME = 'media-viewer';\n\nexport default class AppMediaViewerBase<\n  ContentAdditionType extends string, \n  ButtonsAdditionType extends string, \n  TargetType extends {element: HTMLElement\n}> extends EventListenerBase<{\n  setMoverBefore: () => void,\n  setMoverAfter: () => void\n}> {\n  protected wholeDiv: HTMLElement;\n  protected overlaysDiv: HTMLElement;\n  protected author: {[k in 'container' | 'avatarEl' | 'nameEl' | 'date']: HTMLElement} = {} as any;\n  protected content: {[k in 'main' | 'container' | 'media' | 'mover' | ContentAdditionType]: HTMLElement} = {} as any;\n  protected buttons: {[k in 'download' | 'close' | 'prev' | 'next' | 'mobile-close' | 'zoom' | ButtonsAdditionType]: HTMLElement} = {} as any;\n  protected topbar: HTMLElement;\n  protected moversContainer: HTMLElement;\n  \n  protected tempId = 0;\n  protected preloader: ProgressivePreloader = null;\n  protected preloaderStreamable: ProgressivePreloader = null;\n\n  //protected targetContainer: HTMLElement = null;\n  //protected loadMore: () => void = null;\n\n  protected log: ReturnType<typeof logger>; \n\n  protected isFirstOpen = true;\n\n  // protected needLoadMore = true;\n\n  protected pageEl = document.getElementById('page-chats') as HTMLDivElement;\n\n  protected setMoverPromise: Promise<void>;\n  protected setMoverAnimationPromise: Promise<void>;\n\n  protected lazyLoadQueue: LazyLoadQueueBase;\n\n  protected highlightSwitchersTimeout: number;\n\n  protected onDownloadClick: (e: MouseEvent) => void;\n  protected onPrevClick: (target: TargetType) => void;\n  protected onNextClick: (target: TargetType) => void;\n\n  protected videoPlayer: VideoPlayer;\n\n  protected zoomElements: {\n    container: HTMLElement,\n    btnOut: HTMLElement,\n    btnIn: HTMLElement,\n    rangeSelector: RangeSelector\n  } = {} as any;\n  // protected zoomValue = ZOOM_INITIAL_VALUE;\n  protected zoomSwipeHandler: SwipeHandler;\n  protected zoomSwipeStartX = 0;\n  protected zoomSwipeStartY = 0;\n  protected zoomSwipeX = 0;\n  protected zoomSwipeY = 0;\n  \n  protected ctrlKeyDown: boolean;\n\n  get target() {\n    return this.listLoader.current;\n  }\n\n  set target(value) {\n    this.listLoader.current = value;\n  }\n\n  constructor(\n    protected listLoader: ListLoader<TargetType, any>, \n    topButtons: Array<keyof AppMediaViewerBase<ContentAdditionType, ButtonsAdditionType, TargetType>['buttons']>\n  ) {\n    super(false);\n\n    this.log = logger('AMV');\n    this.preloader = new ProgressivePreloader();\n    this.preloaderStreamable = new ProgressivePreloader({\n      cancelable: false,\n      streamable: true\n    });\n    this.preloader.construct();\n    this.preloaderStreamable.construct();\n    this.lazyLoadQueue = new LazyLoadQueueBase();\n\n    this.wholeDiv = document.createElement('div');\n    this.wholeDiv.classList.add(MEDIA_VIEWER_CLASSNAME + '-whole');\n\n    this.overlaysDiv = document.createElement('div');\n    this.overlaysDiv.classList.add('overlays');\n\n    const mainDiv = document.createElement('div');\n    mainDiv.classList.add(MEDIA_VIEWER_CLASSNAME);\n\n    const topbar = this.topbar = document.createElement('div');\n    topbar.classList.add(MEDIA_VIEWER_CLASSNAME + '-topbar', MEDIA_VIEWER_CLASSNAME + '-appear');\n\n    const topbarLeft = document.createElement('div');\n    topbarLeft.classList.add(MEDIA_VIEWER_CLASSNAME + '-topbar-left');\n\n    this.buttons['mobile-close'] = ButtonIcon('close', {onlyMobile: true});\n    \n    // * author\n    this.author.container = document.createElement('div');\n    this.author.container.classList.add(MEDIA_VIEWER_CLASSNAME + '-author', 'no-select');\n    const authorRight = document.createElement('div');\n    \n    this.author.avatarEl = new AvatarElement();\n    this.author.avatarEl.classList.add(MEDIA_VIEWER_CLASSNAME + '-userpic', 'avatar-44');\n    \n    this.author.nameEl = document.createElement('div');\n    this.author.nameEl.classList.add(MEDIA_VIEWER_CLASSNAME + '-name');\n    \n    this.author.date = document.createElement('div');\n    this.author.date.classList.add(MEDIA_VIEWER_CLASSNAME + '-date');\n    \n    authorRight.append(this.author.nameEl, this.author.date);\n    \n    this.author.container.append(this.author.avatarEl, authorRight);\n    \n    // * buttons\n    const buttonsDiv = document.createElement('div');\n    buttonsDiv.classList.add(MEDIA_VIEWER_CLASSNAME + '-buttons');\n    \n    topButtons.concat(['download', 'zoom', 'close']).forEach(name => {\n      const button = ButtonIcon(name, {noRipple: true});\n      this.buttons[name] = button;\n      buttonsDiv.append(button);\n    });\n\n    this.buttons.zoom.classList.add('zoom-in');\n\n    // * zoom\n    this.zoomElements.container = document.createElement('div');\n    this.zoomElements.container.classList.add('zoom-container');\n\n    this.zoomElements.btnOut = ButtonIcon('zoomout', {noRipple: true});\n    attachClickEvent(this.zoomElements.btnOut, () => this.changeZoom(false));\n    this.zoomElements.btnIn = ButtonIcon('zoomin', {noRipple: true});\n    attachClickEvent(this.zoomElements.btnIn, () => this.changeZoom(true));\n\n    this.zoomElements.rangeSelector = new RangeSelector({\n      step: ZOOM_STEP, \n      min: ZOOM_MIN_VALUE, \n      max: ZOOM_MAX_VALUE, \n      withTransition: true\n    }, ZOOM_INITIAL_VALUE);\n    this.zoomElements.rangeSelector.setListeners();\n    this.zoomElements.rangeSelector.setHandlers({\n      onScrub: this.setZoomValue,\n      onMouseUp: () => this.setZoomValue()\n    });\n\n    this.zoomElements.container.append(this.zoomElements.btnOut, this.zoomElements.rangeSelector.container, this.zoomElements.btnIn);\n\n    this.wholeDiv.append(this.zoomElements.container);\n\n    // * content\n    this.content.main = document.createElement('div');\n    this.content.main.classList.add(MEDIA_VIEWER_CLASSNAME + '-content');\n\n    this.content.container = document.createElement('div');\n    this.content.container.classList.add(MEDIA_VIEWER_CLASSNAME + '-container');\n\n    this.content.media = document.createElement('div');\n    this.content.media.classList.add(MEDIA_VIEWER_CLASSNAME + '-media');\n\n    this.content.container.append(this.content.media);\n\n    this.content.main.append(this.content.container);\n    mainDiv.append(this.content.main);\n    this.overlaysDiv.append(mainDiv);\n    // * overlays end\n    \n    topbarLeft.append(this.buttons['mobile-close'], this.author.container);\n    topbar.append(topbarLeft, buttonsDiv);\n\n    this.buttons.prev = document.createElement('div');\n    this.buttons.prev.className = `${MEDIA_VIEWER_CLASSNAME}-switcher ${MEDIA_VIEWER_CLASSNAME}-switcher-left`;\n    this.buttons.prev.innerHTML = `<span class=\"tgico-down ${MEDIA_VIEWER_CLASSNAME}-prev-button\"></span>`;\n\n    this.buttons.next = document.createElement('div');\n    this.buttons.next.className = `${MEDIA_VIEWER_CLASSNAME}-switcher ${MEDIA_VIEWER_CLASSNAME}-switcher-right`;\n    this.buttons.next.innerHTML = `<span class=\"tgico-down ${MEDIA_VIEWER_CLASSNAME}-next-button\"></span>`;\n\n    this.moversContainer = document.createElement('div');\n    this.moversContainer.classList.add(MEDIA_VIEWER_CLASSNAME + '-movers');\n\n    this.wholeDiv.append(this.overlaysDiv, this.buttons.prev, this.buttons.next, this.topbar, this.moversContainer);\n\n    // * constructing html end\n\n    this.listLoader.onLoadedMore = () => {\n      this.buttons.prev.classList.toggle('hide', !this.listLoader.previous.length);\n      this.buttons.next.classList.toggle('hide', !this.listLoader.next.length);\n    };\n\n    this.setNewMover();\n  }\n\n  protected setListeners() {\n    attachClickEvent(this.buttons.download, this.onDownloadClick);\n    [this.buttons.close, this.buttons['mobile-close'], this.preloaderStreamable.preloader].forEach(el => {\n      attachClickEvent(el, this.close.bind(this));\n    });\n\n    ([[-1, this.buttons.prev], [1, this.buttons.next]] as [number, HTMLElement][]).forEach(([moveLength, button]) => {\n      // attachClickEvent(button, (e) => {\n      button.addEventListener('click', (e) => {\n        cancelEvent(e);\n        if(this.setMoverPromise) return;\n  \n        this.listLoader.go(moveLength);\n      });\n    });\n\n    attachClickEvent(this.buttons.zoom, () => {\n      if(this.isZooming()) this.toggleZoom(false);\n      else {\n        this.changeZoom(true);\n      }\n    });\n\n    // ! cannot use the function because it'll cancel slide event on touch devices\n    // attachClickEvent(this.wholeDiv, this.onClick);\n    this.wholeDiv.addEventListener('click', this.onClick);\n\n    this.listLoader.onJump = (item, older) => {\n      if(older) this.onNextClick(item);\n      else this.onPrevClick(item);\n    };\n\n    if(IS_TOUCH_SUPPORTED) {\n      const swipeHandler = new SwipeHandler({\n        element: this.wholeDiv, \n        onSwipe: (xDiff, yDiff) => {\n          if(isFullScreen()) {\n            return;\n          }\n          //console.log(xDiff, yDiff);\n\n          const percents = Math.abs(xDiff) / windowSize.width;\n          if(percents > .2 || xDiff > 125) {\n            //console.log('will swipe', xDiff);\n\n            if(xDiff < 0) {\n              this.buttons.prev.click();\n            } else {\n              this.buttons.next.click();\n            }\n\n            return true;\n          }\n\n          const percentsY = Math.abs(yDiff) / windowSize.height;\n          if(percentsY > .2 || yDiff > 125) {\n            this.close();\n            return true;\n          }\n\n          return false;\n        }, \n        verifyTouchTarget: (evt) => {\n          // * Fix for seek input\n          if((evt.target as HTMLElement).tagName === 'INPUT' || findUpClassName(evt.target, 'media-viewer-caption')) {\n            return false;\n          }\n\n          return true;\n        }\n      });\n    }\n  }\n\n  protected toggleZoom(enable?: boolean) {\n    const isVisible = this.isZooming();\n    if(this.zoomElements.rangeSelector.mousedown || this.ctrlKeyDown) {\n      enable = true;\n    }\n\n    if(isVisible === enable) return;\n\n    if(enable === undefined) {\n      enable = !isVisible;\n    }\n\n    this.buttons.zoom.classList.toggle('zoom-in', !enable);\n    this.zoomElements.container.classList.toggle('is-visible', enable);\n    const zoomValue = enable ? this.zoomElements.rangeSelector.value : 1;\n    this.setZoomValue(zoomValue);\n    this.zoomElements.rangeSelector.setProgress(zoomValue);\n\n    if(this.videoPlayer) {\n      this.videoPlayer.lockControls(enable ? false : undefined);\n    }\n\n    if(enable) {\n      if(!this.zoomSwipeHandler) {\n        let lastDiffX: number, lastDiffY: number;\n        const multiplier = -1;\n        this.zoomSwipeHandler = new SwipeHandler({\n          element: this.moversContainer,\n          onFirstSwipe: () => {\n            lastDiffX = lastDiffY = 0;\n            this.moversContainer.classList.add('no-transition');\n          },\n          onSwipe: (xDiff, yDiff) => {\n            [xDiff, yDiff] = [xDiff * multiplier, yDiff * multiplier];\n            this.zoomSwipeX += xDiff - lastDiffX;\n            this.zoomSwipeY += yDiff - lastDiffY;\n            [lastDiffX, lastDiffY] = [xDiff, yDiff];\n\n            this.setZoomValue();\n          },\n          onReset: () => {\n            this.moversContainer.classList.remove('no-transition');\n          },\n          cursor: 'move'\n        });\n      } else {\n        this.zoomSwipeHandler.setListeners();\n      }\n      \n      this.zoomElements.rangeSelector.setProgress(zoomValue);\n    } else if(!enable) {\n      this.zoomSwipeHandler.removeListeners();\n    }\n  }\n\n  protected changeZoom(add: boolean) {\n    this.zoomElements.rangeSelector.addProgress(ZOOM_STEP * (add ? 1 : -1));\n    this.setZoomValue();\n  }\n\n  protected setZoomValue = (value = this.zoomElements.rangeSelector.value) => {\n    // this.zoomValue = value;\n    if(value === ZOOM_INITIAL_VALUE) {\n      this.zoomSwipeX = 0;\n      this.zoomSwipeY = 0;\n    }\n\n    this.moversContainer.style.transform = `matrix(${value}, 0, 0, ${value}, ${this.zoomSwipeX}, ${this.zoomSwipeY})`;\n\n    this.zoomElements.btnOut.classList.toggle('inactive', value === ZOOM_MIN_VALUE);\n    this.zoomElements.btnIn.classList.toggle('inactive', value === ZOOM_MAX_VALUE);\n\n    this.toggleZoom(value !== ZOOM_INITIAL_VALUE);\n  };\n\n  protected isZooming() {\n    return this.zoomElements.container.classList.contains('is-visible');\n  }\n\n  protected setBtnMenuToggle(buttons: ButtonMenuItemOptions[]) {\n    const btnMenuToggle = ButtonMenuToggle({onlyMobile: true}, 'bottom-left', buttons);\n    this.topbar.append(btnMenuToggle);\n  }\n\n  public close(e?: MouseEvent) {\n    if(e) {\n      cancelEvent(e);\n    }\n\n    if(this.setMoverAnimationPromise) return Promise.reject();\n\n    appNavigationController.removeByType('media');\n\n    this.lazyLoadQueue.clear();\n\n    const promise = this.setMoverToTarget(this.target?.element, true).then(({onAnimationEnd}) => onAnimationEnd);\n\n    this.listLoader.reset();\n    (this.listLoader as any).cleanup && (this.listLoader as any).cleanup();\n    this.setMoverPromise = null;\n    this.tempId = -1;\n    (window as any).appMediaViewer = undefined;\n\n    if(this.zoomSwipeHandler) {\n      this.zoomSwipeHandler.removeListeners();\n      this.zoomSwipeHandler = undefined;\n    }\n\n    /* if(appSidebarRight.historyTabIDs.slice(-1)[0] === AppSidebarRight.SLIDERITEMSIDS.forward) {\n      promise.then(() => {\n        appSidebarRight.forwardTab.closeBtn.click();\n      });\n    } */\n\n    window.removeEventListener('keydown', this.onKeyDown);\n    window.removeEventListener('keyup', this.onKeyUp);\n    window.removeEventListener('wheel', this.onWheel, {capture: true});\n\n    promise.finally(() => {\n      this.wholeDiv.remove();\n      rootScope.isOverlayActive = false;\n      animationIntersector.checkAnimations(false);\n    });\n\n    return promise;\n  }\n\n  onClick = (e: MouseEvent) => {\n    if(this.setMoverAnimationPromise) return;\n\n    const target = e.target as HTMLElement;\n    if(target.tagName === 'A') return;\n    cancelEvent(e);\n\n    if(IS_TOUCH_SUPPORTED) {\n      if(this.highlightSwitchersTimeout) {\n        clearTimeout(this.highlightSwitchersTimeout);\n      } else {\n        this.wholeDiv.classList.add('highlight-switchers');\n      }\n\n      this.highlightSwitchersTimeout = window.setTimeout(() => {\n        this.wholeDiv.classList.remove('highlight-switchers');\n        this.highlightSwitchersTimeout = 0;\n      }, 3e3);\n      \n      return;\n    }\n\n    const isZooming = this.isZooming();\n    let mover: HTMLElement = null;\n    const classNames = ['ckin__player', 'media-viewer-buttons', 'media-viewer-author', 'media-viewer-caption', 'zoom-container'];\n    if(isZooming) {\n      classNames.push('media-viewer-movers');\n    }\n\n    classNames.find(s => {\n      try {\n        mover = findUpClassName(target, s);\n        if(mover) return true;\n      } catch(err) {return false;}\n    });\n\n    if(/* target === this.mediaViewerDiv */!mover || (!isZooming && (target.tagName === 'IMG' || target.tagName === 'image'))) {\n      this.close();\n    }\n  };\n\n  private onKeyDown = (e: KeyboardEvent) => {\n    //this.log('onKeyDown', e);\n    if(rootScope.overlaysActive > 1) {\n      return;\n    }\n\n    const key = e.key;\n    \n    let good = true;\n    if(key === 'ArrowRight') {\n      this.buttons.next.click();\n    } else if(key === 'ArrowLeft') {\n      this.buttons.prev.click();\n    } else if(key === '-' || key === '=') {\n      if(this.ctrlKeyDown) {\n        this.changeZoom(key === '=');\n      }\n    } else {\n      good = false;\n    }\n\n    if(e.ctrlKey || e.metaKey) {\n      this.ctrlKeyDown = true;\n    }\n\n    if(good) {\n      cancelEvent(e);\n    }\n  };\n\n  private onKeyUp = (e: KeyboardEvent) => {\n    if(rootScope.overlaysActive > 1) {\n      return;\n    }\n\n    if(!(e.ctrlKey || e.metaKey)) {\n      this.ctrlKeyDown = false;\n\n      if(this.isZooming()) {\n        this.setZoomValue();\n      }\n    }\n  };\n\n  private onWheel = (e: WheelEvent) => {\n    if(rootScope.overlaysActive > 1 || (findUpClassName(e.target, 'media-viewer-caption') && !this.ctrlKeyDown)) {\n      return;\n    }\n\n    cancelEvent(e);\n\n    if(this.ctrlKeyDown) {\n      const scrollingUp = e.deltaY < 0;\n      // if(!scrollingUp && !this.isZooming()) return;\n      this.changeZoom(!!scrollingUp);\n    }\n  };\n\n  protected async setMoverToTarget(target: HTMLElement, closing = false, fromRight = 0) {\n    this.dispatchEvent('setMoverBefore');\n\n    const mover = this.content.mover;\n\n    if(!closing) {\n      mover.innerHTML = '';\n      //mover.append(this.buttons.prev, this.buttons.next);\n    }\n    \n    const zoomValue = this.isZooming() && closing /* && false */ ? this.zoomElements.rangeSelector.value : ZOOM_INITIAL_VALUE;\n    /* if(!(zoomValue > 1 && closing)) */ this.removeCenterFromMover(mover);\n\n    const wasActive = fromRight !== 0;\n\n    const delay = rootScope.settings.animationsEnabled ? (wasActive ? 350 : 200) : 0;\n    //let delay = wasActive ? 350 : 10000;\n\n    /* if(wasActive) {\n      this.moveTheMover(mover);\n      mover = this.setNewMover();\n    } */\n\n    /* if(DEBUG) {\n      this.log('setMoverToTarget', target, closing, wasActive, fromRight);\n    } */\n\n    let realParent: HTMLElement;\n\n    let rect: DOMRect;\n    if(target) {\n      if(target instanceof AvatarElement || target.classList.contains('grid-item')/*  || target.classList.contains('document-ico') */) {\n        realParent = target;\n        rect = target.getBoundingClientRect();\n      } else if(target instanceof SVGImageElement || target.parentElement instanceof SVGForeignObjectElement) {\n        realParent = findUpClassName(target, 'attachment');\n        rect = realParent.getBoundingClientRect();\n      } else if(target.classList.contains('profile-avatars-avatar')) {\n        realParent = findUpClassName(target, 'profile-avatars-container');\n        rect = realParent.getBoundingClientRect();\n\n        // * if not active avatar\n        if(closing && target.getBoundingClientRect().left !== rect.left) {\n          target = realParent = rect = undefined;\n        }\n      }\n    }\n\n    if(!target) {\n      target = this.content.media;\n    }\n\n    if(!rect) {\n      realParent = target.parentElement as HTMLElement;\n      rect = target.getBoundingClientRect();\n    }\n\n    let needOpacity = false;\n    if(target !== this.content.media && !target.classList.contains('profile-avatars-avatar')) {\n      const overflowElement = findUpClassName(realParent, 'scrollable');\n      const visibleRect = getVisibleRect(realParent, overflowElement, true);\n\n      if(closing && (!visibleRect || visibleRect.overflow.vertical === 2 || visibleRect.overflow.horizontal === 2)) {\n        target = this.content.media;\n        realParent = target.parentElement as HTMLElement;\n        rect = target.getBoundingClientRect();\n      } else if(visibleRect && (visibleRect.overflow.vertical === 1 || visibleRect.overflow.horizontal === 1)) {\n        needOpacity = true;\n      }\n    }\n\n    const containerRect = this.content.media.getBoundingClientRect();\n    \n    let transform = '';\n    let left: number;\n    let top: number;\n\n    if(wasActive) {\n      left = fromRight === 1 ? windowSize.width : -containerRect.width;\n      top = containerRect.top;\n    } else {\n      left = rect.left;\n      top = rect.top;\n    }\n\n    /* if(zoomValue > 1) { // 33\n      // const diffX = (rect.width * zoomValue - rect.width) / 4;\n      const diffX = (rect.width * zoomValue - rect.width) / 2;\n      const diffY = (rect.height * zoomValue - rect.height) / 4;\n      // left -= diffX;\n      // top += diffY;\n    } */\n\n    transform += `translate3d(${left}px,${top}px,0) `;\n\n    /* if(wasActive) {\n      left = fromRight === 1 ? appPhotosManager.windowW / 2 : -(containerRect.width + appPhotosManager.windowW / 2);\n      transform += `translate(${left}px,-50%) `;\n    } else {\n      left = rect.left - (appPhotosManager.windowW / 2);\n      top = rect.top - (appPhotosManager.windowH / 2);\n      transform += `translate(${left}px,${top}px) `;\n    } */\n\n    let aspecter: HTMLDivElement;\n    if(target instanceof HTMLImageElement || target instanceof HTMLVideoElement || target.tagName === 'DIV') {\n      if(mover.firstElementChild && mover.firstElementChild.classList.contains('media-viewer-aspecter')) {\n        aspecter = mover.firstElementChild as HTMLDivElement;\n\n        const player = aspecter.querySelector('.ckin__player');\n        if(player) {\n          const video = player.firstElementChild as HTMLVideoElement;\n          aspecter.append(video);\n          player.remove();\n        }\n\n        if(!aspecter.style.cssText) { // всё из-за видео, элементы управления скейлятся, так бы можно было этого не делать\n          mover.classList.remove('active');\n          this.setFullAspect(aspecter, containerRect, rect);\n          void mover.offsetLeft; // reflow\n          mover.classList.add('active');\n        }\n      } else {\n        aspecter = document.createElement('div');\n        aspecter.classList.add('media-viewer-aspecter'/* , 'disable-hover' */);\n        mover.prepend(aspecter);\n      }\n      \n      aspecter.style.cssText = `width: ${rect.width}px; height: ${rect.height}px; transform: scale3d(${containerRect.width / rect.width}, ${containerRect.height / rect.height}, 1);`;\n    }\n\n    mover.style.width = containerRect.width + 'px';\n    mover.style.height = containerRect.height + 'px';\n\n    // const scaleX = rect.width / (containerRect.width * zoomValue);\n    // const scaleY = rect.height / (containerRect.height * zoomValue);\n    const scaleX = rect.width / containerRect.width;\n    const scaleY = rect.height / containerRect.height;\n    if(!wasActive) {\n      transform += `scale3d(${scaleX},${scaleY},1) `;\n    }\n\n    let borderRadius = window.getComputedStyle(realParent).getPropertyValue('border-radius');\n    const brSplitted = fillPropertyValue(borderRadius) as string[];\n    borderRadius = brSplitted.map(r => (parseInt(r) / scaleX) + 'px').join(' ');\n    if(!wasActive) {\n      mover.style.borderRadius = borderRadius;\n    }\n    //let borderRadius = '0px 0px 0px 0px';\n\n    if(closing && zoomValue !== 1) {\n      // const width = this.moversContainer.scrollWidth * scaleX;\n      // const height = this.moversContainer.scrollHeight * scaleY;\n      const willBeLeft = windowSize.width / 2 - rect.width / 2;\n      const willBeTop = windowSize.height / 2 - rect.height / 2;\n      const left = rect.left - willBeLeft/*  + (width - rect.width) / 2 */;\n      const top = rect.top - willBeTop/*  + (height - rect.height) / 2 */;\n      this.moversContainer.style.transform = `matrix(${scaleX}, 0, 0, ${scaleY}, ${left}, ${top})`;\n    } else {\n      mover.style.transform = transform;\n    }\n\n    needOpacity && (mover.style.opacity = '0'/* !closing ? '0' : '' */);\n\n    /* if(wasActive) {\n      this.log('setMoverToTarget', mover.style.transform);\n    } */\n\n    let path: SVGPathElement;\n    const isOut = target.classList.contains('is-out');\n\n    const deferred = this.setMoverAnimationPromise = deferredPromise<void>();\n    const ret = {onAnimationEnd: deferred};\n\n    const timeout = setTimeout(() => {\n      if(!deferred.isFulfilled && !deferred.isRejected) {\n        deferred.resolve();\n      }\n    }, 1000);\n\n    deferred.finally(() => {\n      this.dispatchEvent('setMoverAfter');\n\n      if(this.setMoverAnimationPromise === deferred) {\n        this.setMoverAnimationPromise = null;\n      }\n      \n      clearTimeout(timeout);\n    });\n\n    if(!closing) {\n      let mediaElement: HTMLImageElement | HTMLVideoElement;\n      let src: string;\n\n      if(target instanceof HTMLVideoElement) {\n        const elements = Array.from(target.parentElement.querySelectorAll('img')) as HTMLImageElement[];\n        if(elements.length) {\n          target = elements.pop();\n        }\n      }\n\n      if(target.tagName === 'DIV' || target.tagName === 'AVATAR-ELEMENT') { // useContainerAsTarget\n        const images = Array.from(target.querySelectorAll('img')) as HTMLImageElement[];\n        const image = images.pop();\n        if(image) {\n          mediaElement = new Image();\n          src = image.src;\n          mover.append(mediaElement);\n        }\n        /* mediaElement = new Image();\n        src = target.style.backgroundImage.slice(5, -2); */\n        \n      } else if(target instanceof HTMLImageElement) {\n        mediaElement = new Image();\n        src = target.src;\n      } else if(target instanceof HTMLVideoElement) {\n        mediaElement = document.createElement('video');\n        mediaElement.src = target.src;\n      } else if(target instanceof SVGSVGElement) {\n        const clipId = target.dataset.clipId;\n        const newClipId = clipId + '-mv';\n\n        const {width, height} = containerRect;\n\n        const newSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        newSvg.setAttributeNS(null, 'width', '' + width);\n        newSvg.setAttributeNS(null, 'height', '' + height);\n\n        // нижние два свойства для масштабирования\n        newSvg.setAttributeNS(null, 'viewBox', `0 0 ${width} ${height}`);\n        newSvg.setAttributeNS(null, 'preserveAspectRatio', 'xMidYMid meet');\n\n        newSvg.insertAdjacentHTML('beforeend', target.firstElementChild.outerHTML.replace(clipId, newClipId));\n        newSvg.insertAdjacentHTML('beforeend', target.lastElementChild.outerHTML.replace(clipId, newClipId));\n\n        // теперь надо выставить новую позицию для хвостика\n        const defs = newSvg.firstElementChild;\n        const use = defs.firstElementChild.firstElementChild as SVGUseElement;\n        if(use instanceof SVGUseElement) {\n          let transform = use.getAttributeNS(null, 'transform');\n          transform = transform.replace(/translate\\((.+?), (.+?)\\) scale\\((.+?), (.+?)\\)/, (match, x, y, sX, sY) => {\n            x = +x;\n            if(x !== 2) {\n              x = width - (2 / scaleX);\n            } else {\n              x = 2 / scaleX;\n            }\n            \n            y = height;\n  \n            return `translate(${x}, ${y}) scale(${+sX / scaleX}, ${+sY / scaleY})`;\n          });\n          use.setAttributeNS(null, 'transform', transform);\n  \n          // и новый RECT\n          path = defs.firstElementChild.lastElementChild as SVGPathElement;\n\n          // код ниже нужен только чтобы скрыть моргание до момента как сработает таймаут\n          let d: string;\n          const br: [number, number, number, number] = borderRadius.split(' ').map(v => parseInt(v)) as any;\n          if(isOut) d = generatePathData(0, 0, width - 9 / scaleX, height, ...br);\n          else d = generatePathData(9 / scaleX, 0, width - 9 / scaleX, height, ...br);\n          path.setAttributeNS(null, 'd', d);\n        }\n\n        const foreignObject = newSvg.lastElementChild;\n        foreignObject.setAttributeNS(null, 'width', '' + containerRect.width);\n        foreignObject.setAttributeNS(null, 'height', '' + containerRect.height);\n        \n        mover.prepend(newSvg);\n      }\n\n      if(aspecter) {\n        aspecter.style.borderRadius = borderRadius;\n\n        if(mediaElement) {\n          aspecter.append(mediaElement);\n        }\n      }\n\n      mediaElement = mover.querySelector('video, img');\n      if(mediaElement instanceof HTMLImageElement) {\n        mediaElement.classList.add('thumbnail');\n        if(!aspecter) {\n          mediaElement.style.width = containerRect.width + 'px';\n          mediaElement.style.height = containerRect.height + 'px';\n        }\n\n        if(src) {\n          await renderImageFromUrlPromise(mediaElement, src);\n        }\n      }/*  else if(mediaElement instanceof HTMLVideoElement && mediaElement.firstElementChild && ((mediaElement.firstElementChild as HTMLSourceElement).src || src)) {\n        await new Promise((resolve, reject) => {\n          mediaElement.addEventListener('loadeddata', resolve);\n\n          if(src) {\n            (mediaElement.firstElementChild as HTMLSourceElement).src = src;\n          }\n        });\n      } */\n  \n      mover.style.display = '';\n\n      fastRaf(() => {\n        mover.classList.add(wasActive ? 'moving' : 'active');\n      });\n    } else {\n      /* if(mover.classList.contains('center')) {\n        mover.classList.remove('center');\n        void mover.offsetLeft; // reflow\n      } */\n      \n      if(target instanceof SVGSVGElement) {\n        path = mover.querySelector('path');\n\n        if(path) {\n          this.sizeTailPath(path, containerRect, scaleX, delay, false, isOut, borderRadius);\n        }\n      }\n\n      if(target.classList.contains('media-viewer-media')) {\n        mover.classList.add('hiding');\n      }\n\n      this.wholeDiv.classList.add('backwards');\n      setTimeout(() => {\n        this.wholeDiv.classList.remove('active');\n      }, 0);\n\n      //return ret;\n\n      setTimeout(() => {\n        mover.style.borderRadius = borderRadius;\n\n        if(mover.firstElementChild) {\n          (mover.firstElementChild as HTMLElement).style.borderRadius = borderRadius;\n        }\n      }, delay / 2);\n\n      setTimeout(() => {\n        mover.innerHTML = '';\n        mover.classList.remove('moving', 'active', 'hiding');\n        mover.style.cssText = 'display: none;';\n\n        deferred.resolve();\n      }, delay);\n\n      mover.classList.remove('opening');\n\n      return ret;\n    }\n\n    mover.classList.add('opening');\n\n    //await new Promise((resolve) => setTimeout(resolve, 0));\n    //await new Promise((resolve) => window.requestAnimationFrame(resolve));\n    // * одного RAF'а недостаточно, иногда анимация с одним не срабатывает (преимущественно на мобильных)\n    await doubleRaf();\n\n    // чтобы проверить установленную позицию - раскомментировать\n    // throw '';\n\n    //await new Promise((resolve) => setTimeout(resolve, 5e3));\n\n    mover.style.transform = `translate3d(${containerRect.left}px,${containerRect.top}px,0) scale3d(1,1,1)`;\n    //mover.style.transform = `translate(-50%,-50%) scale(1,1)`;\n    needOpacity && (mover.style.opacity = ''/* closing ? '0' : '' */);\n\n    if(aspecter) {\n      this.setFullAspect(aspecter, containerRect, rect);\n    }\n\n    //throw '';\n\n    setTimeout(() => {\n      mover.style.borderRadius = '';\n\n      if(mover.firstElementChild) {\n        (mover.firstElementChild as HTMLElement).style.borderRadius = '';\n      }\n    }, 0/* delay / 2 */);\n\n    mover.dataset.timeout = '' + setTimeout(() => {\n      mover.classList.remove('moving', 'opening');\n\n      if(aspecter) { // всё из-за видео, элементы управления скейлятся, так бы можно было этого не делать\n        if(mover.querySelector('video') || true) {\n          mover.classList.remove('active');\n          aspecter.style.cssText = '';\n          void mover.offsetLeft; // reflow\n        }\n        \n        //aspecter.classList.remove('disable-hover');\n      }\n\n      // эти строки нужны для установки центральной позиции, в случае ресайза это будет нужно\n      mover.classList.add('center', 'no-transition');\n      /* mover.style.left = mover.style.top = '50%';\n      mover.style.transform = 'translate(-50%, -50%)';\n      void mover.offsetLeft; // reflow */\n\n      // это уже нужно для будущих анимаций\n      mover.classList.add('active');\n      delete mover.dataset.timeout;\n\n      deferred.resolve();\n    }, delay);\n\n    if(path) {\n      this.sizeTailPath(path, containerRect, scaleX, delay, true, isOut, borderRadius);\n    }\n\n    return ret;\n  }\n\n  protected setFullAspect(aspecter: HTMLDivElement, containerRect: DOMRect, rect: DOMRect) {\n    /* let media = aspecter.firstElementChild;\n    let proportion: number;\n    if(media instanceof HTMLImageElement) {\n      proportion = media.naturalWidth / media.naturalHeight;\n    } else if(media instanceof HTMLVideoElement) {\n      proportion = media.videoWidth / media.videoHeight;\n    } */\n    const proportion = containerRect.width / containerRect.height;\n\n    let {width, height} = rect;\n    /* if(proportion === 1) {\n      aspecter.style.cssText = '';\n    } else { */\n      if(proportion > 0) {\n        width = height * proportion;\n      } else {\n        height = width * proportion;\n      }\n\n      //this.log('will set style aspecter:', `width: ${width}px; height: ${height}px; transform: scale(${containerRect.width / width}, ${containerRect.height / height});`);\n\n      aspecter.style.cssText = `width: ${width}px; height: ${height}px; transform: scale3d(${containerRect.width / width}, ${containerRect.height / height}, 1);`;\n    //}\n  }\n\n  protected sizeTailPath(path: SVGPathElement, rect: DOMRect, scaleX: number, delay: number, upscale: boolean, isOut: boolean, borderRadius: string) {\n    const start = Date.now();\n    const {width, height} = rect;\n    delay = delay / 2;\n\n    const br = borderRadius.split(' ').map(v => parseInt(v));\n\n    const step = () => {\n      const diff = Date.now() - start;\n\n      let progress = delay ? diff / delay : 1;\n      if(progress > 1) progress = 1;\n      if(upscale) progress = 1 - progress;\n\n      const _br: [number, number, number, number] = br.map(v => v * progress) as any;\n\n      let d: string;\n      if(isOut) d = generatePathData(0, 0, width - (9 / scaleX * progress), height, ..._br);\n      else d = generatePathData(9 / scaleX * progress, 0, width/* width - (9 / scaleX * progress) */, height, ..._br);\n      path.setAttributeNS(null, 'd', d);\n\n      if(diff < delay) fastRaf(step);\n    };\n    \n    //window.requestAnimationFrame(step);\n    step();\n  }\n\n  protected removeCenterFromMover(mover: HTMLElement) {\n    if(mover.classList.contains('center')) {\n      //const rect = mover.getBoundingClientRect();\n      const rect = this.content.media.getBoundingClientRect();\n      mover.style.transform = `translate3d(${rect.left}px,${rect.top}px,0)`;\n      mover.classList.remove('center');\n      void mover.offsetLeft; // reflow\n      mover.classList.remove('no-transition');\n    }\n  }\n\n  protected moveTheMover(mover: HTMLElement, toLeft = true) {\n    const windowW = windowSize.width;\n\n    this.removeCenterFromMover(mover);\n\n    //mover.classList.remove('active');\n    mover.classList.add('moving');\n\n    if(mover.dataset.timeout) { // и это тоже всё из-за скейла видео, так бы это не нужно было\n      clearTimeout(+mover.dataset.timeout);\n    }\n\n    const rect = mover.getBoundingClientRect();\n\n    const newTransform = mover.style.transform.replace(/translate3d\\((.+?),/, (match, p1) => {\n      const x = toLeft ? -rect.width : windowW;\n      //const x = toLeft ? -(rect.right + (rect.width / 2)) : windowW / 2;\n\n      return match.replace(p1, x + 'px');\n    });\n\n    ////////this.log('set newTransform:', newTransform, mover.style.transform, toLeft);\n    mover.style.transform = newTransform;\n\n    setTimeout(() => {\n      mover.remove();\n    }, 350);\n  }\n\n  protected setNewMover() {\n    const newMover = document.createElement('div');\n    newMover.classList.add('media-viewer-mover');\n    newMover.style.display = 'none';\n\n    if(this.content.mover) {\n      const oldMover = this.content.mover;\n      oldMover.parentElement.append(newMover);\n    } else {\n      this.moversContainer.append(newMover);\n    }\n\n    return this.content.mover = newMover;\n  }\n\n  protected updateMediaSource(target: HTMLElement, url: string, tagName: 'video' | 'img') {\n    //if(target instanceof SVGSVGElement) {\n      const el = target.tagName.toLowerCase() === tagName ? target : target.querySelector(tagName) as HTMLElement;\n      if(el && !findUpClassName(target, 'document')) {\n        if(findUpClassName(target, 'attachment')) {\n          // two parentElements because element can be contained in aspecter\n          const preloader = target.parentElement.parentElement.querySelector('.preloader-container') as HTMLElement;\n          if(preloader) {\n            if(tagName === 'video') {\n              if(preloader.classList.contains('manual')) {\n                preloader.click();\n                // return;\n              }\n    \n              return;\n            }\n            \n            preloader.remove();\n          }\n        }\n\n        renderImageFromUrl(el, url);\n\n        // ! костыль, но он тут даже и не нужен\n        if(el.classList.contains('thumbnail') && el.parentElement.classList.contains('media-container-aspecter')) {\n          el.classList.remove('thumbnail');\n        }\n      }\n    /* } else {\n\n    } */\n  }\n\n  protected setAuthorInfo(fromId: PeerId | string, timestamp: number) {\n    replaceContent(this.author.date, formatFullSentTime(timestamp));\n\n    const isPeerId = fromId.isPeerId();\n    let title: HTMLElement;\n    if(isPeerId) {\n      title = new PeerTitle({\n        peerId: fromId as PeerId,\n        dialog: false,\n        onlyFirstName: false,\n        plainText: false\n      }).element;\n    } else {\n      title = document.createElement('span');\n      title.innerHTML = RichTextProcessor.wrapEmojiText(fromId);\n      title.classList.add('peer-title');\n    }\n\n    replaceContent(this.author.nameEl, title);\n\n    let oldAvatar = this.author.avatarEl;\n    this.author.avatarEl = (oldAvatar.cloneNode() as AvatarElement);\n\n    if(!isPeerId) {\n      this.author.avatarEl.setAttribute('peer-title', '' + fromId);\n    } else {\n      this.author.avatarEl.removeAttribute('peer-title');\n    }\n\n    this.author.avatarEl.setAttribute('peer', '' + (fromId || NULL_PEER_ID));\n\n    oldAvatar.parentElement.replaceChild(this.author.avatarEl, oldAvatar);\n  }\n  \n  protected async _openMedia(\n    media: MyDocument | MyPhoto, \n    timestamp: number, \n    fromId: PeerId | string, \n    fromRight: number, \n    target?: HTMLElement, \n    reverse = false, \n    prevTargets: TargetType[] = [], \n    nextTargets: TargetType[] = [], \n    message?: MyMessage\n    /* , needLoadMore = true */\n  ) {\n    if(this.setMoverPromise) return this.setMoverPromise;\n\n    /* if(DEBUG) {\n      this.log('openMedia:', media, fromId, prevTargets, nextTargets);\n    } */\n\n    this.setAuthorInfo(fromId, timestamp);\n    \n    const isDocument = media._ === 'document';\n    const isVideo = isDocument && media.mime_type && ((['video', 'gif'] as MyDocument['type'][]).includes(media.type) || media.mime_type.indexOf('video/') === 0);\n\n    if(this.isFirstOpen) {\n      //this.targetContainer = targetContainer;\n      // this.needLoadMore = needLoadMore;\n      this.isFirstOpen = false;\n      this.listLoader.setTargets(prevTargets, nextTargets, reverse);\n      (window as any).appMediaViewer = this;\n      //this.loadMore = loadMore;\n\n      /* if(appSidebarRight.historyTabIDs.slice(-1)[0] === AppSidebarRight.SLIDERITEMSIDS.forward) {\n        appSidebarRight.forwardTab.closeBtn.click();\n        await new Promise((resolve) => setTimeout(resolve, 200));\n      } */\n    }\n\n    if(this.listLoader.next.length < 10) {\n      setTimeout(() => {\n        this.listLoader.load(true);\n      }, 0);\n    }\n\n    //if(prevTarget && (!prevTarget.parentElement || !this.isElementVisible(this.targetContainer, prevTarget))) prevTarget = null;\n    //if(nextTarget && (!nextTarget.parentElement || !this.isElementVisible(this.targetContainer, nextTarget))) nextTarget = null;\n\n    this.buttons.prev.classList.toggle('hide', !this.listLoader.previous.length);\n    this.buttons.next.classList.toggle('hide', !this.listLoader.next.length);\n    \n    const container = this.content.media;\n    const useContainerAsTarget = !target || target === container;\n    if(useContainerAsTarget) target = container;\n\n    this.target = {element: target} as any;\n    const tempId = ++this.tempId;\n\n    if(container.firstElementChild) {\n      container.innerHTML = '';\n    }\n    \n    // ok set\n\n    const wasActive = fromRight !== 0;\n    if(wasActive) {\n      this.moveTheMover(this.content.mover, fromRight === 1);\n      this.setNewMover();\n    } else {\n      rootScope.isOverlayActive = true;\n      window.addEventListener('keydown', this.onKeyDown);\n      window.addEventListener('keyup', this.onKeyUp);\n      if(!IS_TOUCH_SUPPORTED) window.addEventListener('wheel', this.onWheel, {passive: false, capture: true});\n      const mainColumns = document.getElementById('main-columns');\n      this.pageEl.insertBefore(this.wholeDiv, mainColumns);\n      void this.wholeDiv.offsetLeft; // reflow\n      this.wholeDiv.classList.add('active');\n      animationIntersector.checkAnimations(true);\n\n      if(!IS_MOBILE_SAFARI) {\n        appNavigationController.pushItem({\n          type: 'media',\n          onPop: (canAnimate) => {\n            if(this.setMoverAnimationPromise) {\n              return false;\n            }\n            \n            this.close();\n          }\n        });\n      }\n    }\n\n    ////////this.log('wasActive:', wasActive);\n\n    const mover = this.content.mover;\n\n    const maxWidth = windowSize.width;\n    //const maxWidth = this.pageEl.scrollWidth;\n    // TODO: const maxHeight = mediaSizes.isMobile ? appPhotosManager.windowH : appPhotosManager.windowH - 100;\n    let padding = 0;\n    const windowH = windowSize.height;\n    if(windowH < 1000000 && !mediaSizes.isMobile) {\n      padding = 120;\n    }\n    const maxHeight = windowH - 120 - padding;\n    let thumbPromise: Promise<any> = Promise.resolve();\n    const size = appPhotosManager.setAttachmentSize(media, container, maxWidth, maxHeight, mediaSizes.isMobile ? false : true, undefined, !!(isDocument && media.w && media.h)).photoSize;\n    if(useContainerAsTarget) {\n      const cacheContext = appDownloadManager.getCacheContext(media, size.type);\n      let img: HTMLImageElement;\n      if(cacheContext.downloaded) {\n        img = new Image();\n        img.src = cacheContext.url;\n      } else {\n        const gotThumb = appPhotosManager.getStrippedThumbIfNeeded(media, cacheContext, true);\n        if(gotThumb) {\n          thumbPromise = gotThumb.loadPromise;\n          img = gotThumb.image;\n        }\n      }\n\n      if(img) {\n        img.classList.add('thumbnail');\n        container.append(img);\n      }\n    }\n\n    // need after setAttachmentSize\n    /* if(useContainerAsTarget) {\n      target = target.querySelector('img, video') || target;\n    } */\n\n    const supportsStreaming: boolean = !!(isDocument && media.supportsStreaming);\n    const preloader = supportsStreaming ? this.preloaderStreamable : this.preloader;\n\n    let setMoverPromise: Promise<void>;\n    if(isVideo) {\n      ////////this.log('will wrap video', media, size);\n\n      // потому что для safari нужно создать элемент из event'а\n      // const video = document.createElement('video');\n      const useController = message && media.type !== 'gif';\n      const video = /* useController ? \n        appMediaPlaybackController.addMedia(message, false, true) as HTMLVideoElement : \n         */document.createElement('video');\n\n      const set = () => this.setMoverToTarget(target, false, fromRight).then(({onAnimationEnd}) => {\n      //return; // set and don't move\n      //if(wasActive) return;\n        //return;\n  \n        const div = mover.firstElementChild && mover.firstElementChild.classList.contains('media-viewer-aspecter') ? mover.firstElementChild : mover;\n        //const video = mover.querySelector('video') || document.createElement('video');\n  \n        const moverVideo = mover.querySelector('video');\n        if(moverVideo) {\n          moverVideo.remove();\n        }\n  \n        //video.src = '';\n  \n        video.setAttribute('playsinline', 'true');\n  \n        // * fix for playing video if viewer is closed (https://contest.com/javascript-web-bonus/entry1425#issue11629)\n        video.addEventListener('timeupdate', () => {\n          if(this.tempId !== tempId) {\n            video.pause();\n          }\n        });\n\n        video.addEventListener('error', () => {\n          if(video.error.code !== 4) {\n            this.log.error(\"Error \" + video.error.code + \"; details: \" + video.error.message);\n          }\n\n          if(preloader) {\n            preloader.detach();\n          }\n        }, {once: true});\n\n        this.addEventListener('setMoverAfter', () => {\n          video.src = '';\n          video.load();\n        }, {once: true});\n  \n        if(IS_SAFARI) {\n          // test stream\n          // video.controls = true;\n          video.autoplay = true;\n        }\n  \n        if(media.type === 'gif') {\n          video.muted = true;\n          video.autoplay = true;\n          video.loop = true;\n        } else if(media.duration < 60) {\n          video.loop = true;\n        }\n  \n        // if(!video.parentElement) {\n          div.append(video);\n        // }\n  \n        const canPlayThrough = new Promise((resolve) => {\n          video.addEventListener('canplay', resolve, {once: true});\n        });\n  \n        const createPlayer = () => {\n          if(media.type !== 'gif') {\n            video.dataset.ckin = 'default';\n            video.dataset.overlay = '1';\n\n            Promise.all([canPlayThrough, onAnimationEnd]).then(() => {\n              if(this.tempId !== tempId) {\n                return;\n              }\n  \n              // const play = useController ? appMediaPlaybackController.willBePlayedMedia === video : true;\n              const play = true;\n              const player = this.videoPlayer = new VideoPlayer({\n                video, \n                play, \n                streamable: supportsStreaming,\n                onPlaybackRackMenuToggle: (open) => {\n                  this.wholeDiv.classList.toggle('hide-caption', !!open);\n                }\n              });\n              player.addEventListener('toggleControls', (show) => {\n                this.wholeDiv.classList.toggle('has-video-controls', show);\n              });\n\n              this.addEventListener('setMoverBefore', () => {\n                this.wholeDiv.classList.remove('has-video-controls');\n                this.videoPlayer.removeListeners();\n                this.videoPlayer = undefined;\n              }, {once: true});\n\n              if(this.isZooming()) {\n                this.videoPlayer.lockControls(false);\n              }\n              /* div.append(video);\n              mover.append(player.wrapper); */\n            });\n          }\n        };\n  \n        if(supportsStreaming) {\n          onAnimationEnd.then(() => {\n            if(video.readyState < video.HAVE_FUTURE_DATA) {\n              preloader.attach(mover, true);\n            }\n  \n            /* canPlayThrough.then(() => {\n              preloader.detach();\n            }); */\n          });\n  \n          const attachCanPlay = () => {\n            video.addEventListener('canplay', () => {\n              //this.log('video waited and progress loaded');\n              preloader.detach();\n              video.parentElement.classList.remove('is-buffering');\n            }, {once: true});\n          };\n  \n          video.addEventListener('waiting', () => {\n            const loading = video.networkState === video.NETWORK_LOADING;\n            const isntEnoughData = video.readyState < video.HAVE_FUTURE_DATA;\n  \n            //this.log('video waiting for progress', loading, isntEnoughData);\n            if(loading && isntEnoughData) {\n              attachCanPlay();\n  \n              preloader.attach(mover, true);\n  \n              // поставлю класс для плеера, чтобы убрать большую иконку пока прелоадер на месте\n              video.parentElement.classList.add('is-buffering');\n            }\n          });\n\n          if(this.wholeDiv.classList.contains('no-forwards')) {\n            video.addEventListener('contextmenu', (e) => {\n              cancelEvent(e);\n            });\n          }\n  \n          attachCanPlay();\n        }\n        \n        //if(!video.src || media.url !== video.src) {\n          const load = () => {\n            /* if(useController) {\n              appMediaPlaybackController.resolveWaitingForLoadMedia(message.peerId, message.mid, message.pFlags.is_scheduled);\n            } */\n\n            const cacheContext = appDownloadManager.getCacheContext(media);\n            const promise: Promise<any> = supportsStreaming ? Promise.resolve() : appDocsManager.downloadDoc(media);\n            \n            if(!supportsStreaming) {\n              onAnimationEnd.then(() => {\n                if(!cacheContext.url) {\n                  preloader.attach(mover, true, promise);\n                }\n              });\n            }\n  \n            Promise.all([promise, onAnimationEnd]).then(() => {\n              if(this.tempId !== tempId) {\n                this.log.warn('media viewer changed video');\n                return;\n              }\n\n              const url = cacheContext.url;\n              if(target instanceof SVGSVGElement/*  && (video.parentElement || !isSafari) */) { // if video exists\n                //if(!video.parentElement) {\n                  div.firstElementChild.lastElementChild.append(video);\n                //}\n              } else {\n                renderImageFromUrl(video, url);\n              }\n\n              // * have to set options (especially playbackRate) after src\n              // * https://github.com/videojs/video.js/issues/2516\n              if(useController) {\n                const rollback = appMediaPlaybackController.setSingleMedia(video, message as Message.message);\n\n                this.addEventListener('setMoverBefore', () => {\n                  rollback();\n                }, {once: true});\n              }\n\n              this.updateMediaSource(target, url, 'video');\n\n              createPlayer();\n            });\n  \n            return promise;\n          };\n  \n          this.lazyLoadQueue.unshift({load});\n        //} else createPlayer();\n      });\n\n      setMoverPromise = thumbPromise.then(set);\n    } else {\n      const set = () => this.setMoverToTarget(target, false, fromRight).then(({onAnimationEnd}) => {\n      //return; // set and don't move\n      //if(wasActive) return;\n        //return;\n        \n        const load = () => {\n          const cacheContext = appDownloadManager.getCacheContext(media, size.type);\n          const cancellablePromise = isDocument ? appDocsManager.downloadDoc(media) : appPhotosManager.preloadPhoto(media, size);\n  \n          onAnimationEnd.then(() => {\n            if(!cacheContext.url) {\n              this.preloader.attachPromise(cancellablePromise);\n              //this.preloader.attach(mover, true, cancellablePromise);\n            }\n          });\n          \n          Promise.all([onAnimationEnd, cancellablePromise]).then(() => {\n            if(this.tempId !== tempId) {\n              this.log.warn('media viewer changed photo');\n              return;\n            }\n            \n            ///////this.log('indochina', blob);\n    \n            const url = cacheContext.url;\n            if(target instanceof SVGSVGElement) {\n              this.updateMediaSource(target, url, 'img');\n              this.updateMediaSource(mover, url, 'img');\n  \n              if(mediaSizes.isMobile) {\n                const imgs = mover.querySelectorAll('img');\n                if(imgs && imgs.length) {\n                  imgs.forEach(img => {\n                    img.classList.remove('thumbnail'); // может здесь это вообще не нужно\n                  });\n                }\n              }\n            } else {\n              const div = mover.firstElementChild && mover.firstElementChild.classList.contains('media-viewer-aspecter') ? mover.firstElementChild : mover;\n              const haveImage = div.firstElementChild?.tagName === 'IMG' ? div.firstElementChild as HTMLImageElement : null;\n              if(!haveImage || haveImage.src !== url)  {\n                let image = new Image();\n                image.classList.add('thumbnail');\n    \n                //this.log('will renderImageFromUrl:', image, div, target);\n    \n                renderImageFromUrl(image, url, () => {\n                  this.updateMediaSource(target, url, 'img');\n  \n                  if(haveImage) {\n                    fastRaf(() => {\n                      haveImage.remove();\n                    });\n                  }\n    \n                  div.append(image);\n                });\n              }\n            }\n    \n            //this.preloader.detach();\n          }).catch(err => {\n            this.log.error(err);\n            this.preloader.attach(mover);\n            this.preloader.setManual();\n          });\n  \n          return cancellablePromise;\n        };\n  \n        this.lazyLoadQueue.unshift({load});\n      });\n\n      setMoverPromise = thumbPromise.then(set);\n    }\n\n    return this.setMoverPromise = setMoverPromise.catch(() => {\n      this.setMoverAnimationPromise = null;\n    }).finally(() => {\n      this.setMoverPromise = null;\n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function fillPropertyValue(str: string) {\r\n  let splitted = str.split(' ');\r\n  if(splitted.length !== 4) {\r\n    if(!splitted[0]) splitted[0] = '0px';\r\n    for(let i = splitted.length; i < 4; ++i) {\r\n      splitted[i] = splitted[i % 2] || splitted[0] || '0px';\r\n    }\r\n  }\r\n\r\n  return splitted;\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport MEDIA_MIME_TYPES_SUPPORTED from \"../environment/mediaMimeTypesSupport\";\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport { attachClickEvent, detachClickEvent } from \"../helpers/dom/clickEvent\";\nimport setInnerHTML from \"../helpers/dom/setInnerHTML\";\nimport mediaSizes from \"../helpers/mediaSizes\";\nimport SearchListLoader from \"../helpers/searchListLoader\";\nimport { Message } from \"../layer\";\nimport appDocsManager, { MyDocument } from \"../lib/appManagers/appDocsManager\";\nimport appImManager from \"../lib/appManagers/appImManager\";\nimport appMessagesManager, { MyMessage } from \"../lib/appManagers/appMessagesManager\";\nimport appPhotosManager, { MyPhoto } from \"../lib/appManagers/appPhotosManager\";\nimport RichTextProcessor from \"../lib/richtextprocessor\";\nimport { MediaSearchContext } from \"./appMediaPlaybackController\";\nimport AppMediaViewerBase, { MEDIA_VIEWER_CLASSNAME } from \"./appMediaViewerBase\";\nimport { ButtonMenuItemOptions } from \"./buttonMenu\";\nimport PopupDeleteMessages from \"./popups/deleteMessages\";\nimport PopupForward from \"./popups/forward\";\nimport Scrollable from \"./scrollable\";\nimport appSidebarRight from \"./sidebarRight\";\nimport AppSharedMediaTab from \"./sidebarRight/tabs/sharedMedia\";\n\ntype AppMediaViewerTargetType = {\n  element: HTMLElement,\n  mid: number,\n  peerId: PeerId\n};\nexport default class AppMediaViewer extends AppMediaViewerBase<'caption', 'delete' | 'forward', AppMediaViewerTargetType> {\n  protected listLoader: SearchListLoader<AppMediaViewerTargetType>;\n  protected btnMenuForward: ButtonMenuItemOptions;\n  protected btnMenuDownload: ButtonMenuItemOptions;\n  protected btnMenuDelete: ButtonMenuItemOptions;\n\n  get searchContext() {\n    return this.listLoader.searchContext;\n  }\n\n  constructor() {\n    super(new SearchListLoader({\n      processItem: (item) => {\n        const isForDocument = this.searchContext.inputFilter._ === 'inputMessagesFilterDocument';\n        const {mid, peerId} = item;\n        const media: MyPhoto | MyDocument = appMessagesManager.getMediaFromMessage(item);\n\n        if(!media) return;\n        \n        if(isForDocument && !AppMediaViewer.isMediaCompatibleForDocumentViewer(media)) {\n          return;\n        }\n\n        return {element: null as HTMLElement, mid, peerId};\n      }\n    }), ['delete', 'forward']);\n\n    this.listLoader.onEmptied = () => {\n      this.close();\n    };\n\n    /* const stub = document.createElement('div');\n    stub.classList.add(MEDIA_VIEWER_CLASSNAME + '-stub');\n    this.content.main.prepend(stub); */\n\n    this.content.caption = document.createElement('div');\n    this.content.caption.classList.add(MEDIA_VIEWER_CLASSNAME + '-caption'/* , 'media-viewer-stub' */);\n\n    let captionTimeout: number;\n    const setCaptionTimeout = () => {\n      if(captionTimeout) {\n        clearTimeout(captionTimeout);\n      }\n\n      captionTimeout = window.setTimeout(() => {\n        captionTimeout = undefined;\n        this.content.caption.classList.remove('is-focused');\n      }, 800);\n    };\n    this.content.caption.addEventListener('touchstart', () => {\n      if(!mediaSizes.isMobile) return;\n\n      this.content.caption.classList.add('is-focused');\n      \n      if(captionTimeout) {\n        clearTimeout(captionTimeout);\n        captionTimeout = undefined;\n      }\n      \n      document.addEventListener('touchend', setCaptionTimeout, {once: true});\n    });\n\n    const captionScrollable = new Scrollable(this.content.caption);\n    captionScrollable.onAdditionalScroll = setCaptionTimeout;\n\n    //this.content.main.append(this.content.caption);\n    this.wholeDiv.append(this.content.caption);\n\n    attachClickEvent(this.buttons.delete, this.onDeleteClick);\n\n    const buttons: ButtonMenuItemOptions[] = [this.btnMenuForward = {\n      icon: 'forward',\n      text: 'Forward',\n      onClick: this.onForwardClick\n    }, this.btnMenuDownload = {\n      icon: 'download',\n      text: 'MediaViewer.Context.Download',\n      onClick: this.onDownloadClick\n    }, this.btnMenuDelete = {\n      icon: 'delete danger',\n      text: 'Delete',\n      onClick: this.onDeleteClick\n    }];\n\n    this.setBtnMenuToggle(buttons);\n\n    // * constructing html end\n    \n    this.setListeners();\n  }\n\n  protected setListeners() {\n    super.setListeners();\n    attachClickEvent(this.buttons.forward, this.onForwardClick);\n    attachClickEvent(this.author.container, this.onAuthorClick);\n\n    const onCaptionClick = (e: MouseEvent) => {\n      if(e.target instanceof HTMLAnchorElement) { // close viewer if it's t.me/ redirect\n        const onclick = (e.target as HTMLElement).getAttribute('onclick');\n        if(!onclick || onclick.includes('showMaskedAlert')) {\n          return;\n        }\n\n        cancelEvent(e);\n\n        this.close().then(() => {\n          detachClickEvent(this.content.caption, onCaptionClick, {capture: true});\n          (e.target as HTMLAnchorElement).click();\n        });\n\n        return false;\n      }\n    };\n\n    attachClickEvent(this.content.caption, onCaptionClick, {capture: true});\n  }\n\n  /* public close(e?: MouseEvent) {\n    const good = !this.setMoverAnimationPromise;\n    const promise = super.close(e);\n\n    if(good) { // clear\n      this.currentMessageId = 0;\n      this.peerId = 0;\n    }\n\n    return promise;\n  } */\n\n  protected getMessageByPeer(peerId: PeerId, mid: number) {\n    return this.searchContext.isScheduled ? appMessagesManager.getScheduledMessageByPeer(peerId, mid) : appMessagesManager.getMessageByPeer(peerId, mid);\n  }\n\n  onPrevClick = (target: AppMediaViewerTargetType) => {\n    this.openMedia(this.getMessageByPeer(target.peerId, target.mid), target.element, -1);\n  };\n\n  onNextClick = (target: AppMediaViewerTargetType) => {\n    this.openMedia(this.getMessageByPeer(target.peerId, target.mid), target.element, 1);\n  };\n\n  onDeleteClick = () => {\n    const target = this.target;\n    new PopupDeleteMessages(target.peerId, [target.mid], 'chat', () => {\n      this.target = {element: this.content.media} as any;\n      this.close();\n    });\n  };\n\n  onForwardClick = () => {\n    const target = this.target;\n    if(target.mid) {\n      //appSidebarRight.forwardTab.open([target.mid]);\n      new PopupForward({\n        [target.peerId]: [target.mid]\n      }, () => {\n        return this.close();\n      });\n    }\n  };\n\n  onAuthorClick = (e: MouseEvent) => {\n    const {mid, peerId} = this.target;\n    if(mid && mid !== Number.MAX_SAFE_INTEGER) {\n      const threadId = this.searchContext.threadId;\n      const message = this.getMessageByPeer(peerId, mid);\n      this.close(e)\n      //.then(() => mediaSizes.isMobile ? appSidebarRight.sharedMediaTab.closeBtn.click() : Promise.resolve())\n      .then(() => {\n        if(mediaSizes.isMobile) {\n          const tab = appSidebarRight.getTab(AppSharedMediaTab);\n          if(tab) {\n            tab.close();\n          }\n        }\n\n        appImManager.setInnerPeer({\n          peerId: message.peerId, \n          lastMsgId: mid, \n          type: threadId ? 'discussion' : undefined, \n          threadId\n        });\n      });\n    }\n  };\n\n  onDownloadClick = () => {\n    const {peerId, mid} = this.target;\n    const message = this.getMessageByPeer(peerId, mid);\n    if(message.media.photo) {\n      appPhotosManager.savePhotoFile(message.media.photo, appImManager.chat.bubbles.lazyLoadQueue.queueId);\n    } else {\n      let document: MyDocument = null;\n\n      if(message.media.webpage) document = message.media.webpage.document;\n      else document = message.media.document;\n\n      if(document) {\n        //console.log('will save document:', document);\n        appDocsManager.saveDocFile(document, appImManager.chat.bubbles.lazyLoadQueue.queueId);\n      }\n    }\n  };\n\n  private setCaption(message: MyMessage) {\n    const caption = (message as Message.message).message;\n    let html = '';\n    if(caption) {\n      html = RichTextProcessor.wrapRichText(caption, {\n        entities: (message as Message.message).totalEntities\n      });\n    }\n    \n    // html = 'Dandelion are a family of flowering plants that grow in many parts of the world.';\n    setInnerHTML(this.content.caption.firstElementChild, html);\n    this.content.caption.classList.toggle('hide', !caption);\n    // this.content.container.classList.toggle('with-caption', !!caption);\n  }\n\n  public setSearchContext(context: MediaSearchContext) {\n    this.listLoader.setSearchContext(context);\n\n    return this;\n  }\n\n  public async openMedia(message: MyMessage, target?: HTMLElement, fromRight = 0, reverse = false, \n    prevTargets: AppMediaViewerTargetType[] = [], nextTargets: AppMediaViewerTargetType[] = []/* , needLoadMore = true */) {\n    if(this.setMoverPromise) return this.setMoverPromise;\n\n    const mid = message.mid;\n    const fromId = (message as Message.message).fwd_from && !message.fromId ? (message as Message.message).fwd_from.from_name : message.fromId;\n    const media = appMessagesManager.getMediaFromMessage(message);\n\n    const cantForwardMessage = message._ === 'messageService' || !appMessagesManager.canForward(message);\n    [this.buttons.forward, this.btnMenuForward.element].forEach(button => {\n      button.classList.toggle('hide', cantForwardMessage);\n    });\n\n    this.wholeDiv.classList.toggle('no-forwards', cantForwardMessage);\n    \n    const cantDownloadMessage = cantForwardMessage;\n    [this.buttons.download, this.btnMenuDownload.element].forEach(button => {\n      button.classList.toggle('hide', cantDownloadMessage);\n    });\n\n    const canDeleteMessage = appMessagesManager.canDeleteMessage(message);\n    [this.buttons.delete, this.btnMenuDelete.element].forEach(button => {\n      button.classList.toggle('hide', !canDeleteMessage);\n    });\n\n    this.setCaption(message);\n    const promise = super._openMedia(media, message.date, fromId, fromRight, target, reverse, prevTargets, nextTargets, message/* , needLoadMore */);\n    this.target.mid = mid;\n    this.target.peerId = message.peerId;\n\n    return promise;\n  }\n\n  public static isMediaCompatibleForDocumentViewer(media: MyPhoto | MyDocument) {\n    return media._ === 'photo' || MEDIA_MIME_TYPES_SUPPORTED.has(media.mime_type);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { Photo } from \"../layer\";\nimport appPhotosManager from \"../lib/appManagers/appPhotosManager\";\nimport ListLoader, { ListLoaderOptions } from \"./listLoader\";\n\nexport default class AvatarListLoader<Item extends {photoId: Photo.photo['id']}> extends ListLoader<Item, any> {\n  private peerId: PeerId;\n\n  constructor(options: Omit<ListLoaderOptions<Item, any>, 'loadMore'> & {peerId: PeerId}) {\n    super({\n      ...options,\n      loadMore: (anchor, older, loadCount) => {\n        if(this.peerId.isAnyChat() || !older) return Promise.resolve({count: 0, items: []}); // ! это значит, что открыло аватар чата, но следующих фотографий нет.\n\n        const maxId = anchor?.photoId || this.current?.photoId;\n        return appPhotosManager.getUserPhotos(this.peerId, maxId, loadCount).then(value => {\n          const items = value.photos.map(photoId => {\n            return {element: null as HTMLElement, photoId} as any;\n          });\n\n          return {count: value.count, items};\n        });\n      }\n    });\n\n    this.loadedAllUp = true;\n    this.peerId = options.peerId;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport AvatarListLoader from \"../helpers/avatarListLoader\";\nimport { Photo } from \"../layer\";\nimport appImManager from \"../lib/appManagers/appImManager\";\nimport appPhotosManager from \"../lib/appManagers/appPhotosManager\";\nimport AppMediaViewerBase from \"./appMediaViewerBase\";\n\ntype AppMediaViewerAvatarTargetType = {element: HTMLElement, photoId: Photo.photo['id']};\nexport default class AppMediaViewerAvatar extends AppMediaViewerBase<'', 'delete', AppMediaViewerAvatarTargetType> {\n  public peerId: PeerId;\n\n  constructor(peerId: PeerId) {\n    super(new AvatarListLoader({peerId}), [/* 'delete' */]);\n\n    this.peerId = peerId;\n\n    this.setBtnMenuToggle([{\n      icon: 'download',\n      text: 'MediaViewer.Context.Download',\n      onClick: this.onDownloadClick\n    }/* , {\n      icon: 'delete danger btn-disabled',\n      text: 'Delete',\n      onClick: () => {}\n    } */]);\n\n    // * constructing html end\n    \n    this.setListeners();\n  }\n\n  onPrevClick = (target: AppMediaViewerAvatarTargetType) => {\n    this.openMedia(target.photoId, target.element, -1);\n  };\n\n  onNextClick = (target: AppMediaViewerAvatarTargetType) => {\n    this.openMedia(target.photoId, target.element, 1);\n  };\n\n  onDownloadClick = () => {\n    appPhotosManager.savePhotoFile(appPhotosManager.getPhoto(this.target.photoId), appImManager.chat.bubbles.lazyLoadQueue.queueId);\n  };\n\n  public async openMedia(photoId: Photo.photo['id'], target?: HTMLElement, fromRight = 0, prevTargets?: AppMediaViewerAvatarTargetType[], nextTargets?: AppMediaViewerAvatarTargetType[]) {\n    if(this.setMoverPromise) return this.setMoverPromise;\n\n    const photo = appPhotosManager.getPhoto(photoId);\n    const ret = super._openMedia(photo, photo.date, this.peerId, fromRight, target, false, prevTargets, nextTargets);\n    this.target.photoId = photo.id;\n\n    return ret;\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appMessagesManager from \"../lib/appManagers/appMessagesManager\";\r\nimport appProfileManager from \"../lib/appManagers/appProfileManager\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { Message, Photo } from \"../layer\";\r\nimport appPeersManager from \"../lib/appManagers/appPeersManager\";\r\nimport appPhotosManager from \"../lib/appManagers/appPhotosManager\";\r\nimport type { LazyLoadQueueIntersector } from \"./lazyLoadQueue\";\r\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport appAvatarsManager from \"../lib/appManagers/appAvatarsManager\";\r\nimport AppMediaViewer from \"./appMediaViewer\";\r\nimport AppMediaViewerAvatar from \"./appMediaViewerAvatar\";\r\nimport { NULL_PEER_ID } from \"../lib/mtproto/mtproto_config\";\r\nimport isObject from \"../helpers/object/isObject\";\r\n\r\nconst onAvatarUpdate = (peerId: PeerId) => {\r\n  appAvatarsManager.removeFromAvatarsCache(peerId);\r\n  (Array.from(document.querySelectorAll('avatar-element[peer=\"' + peerId + '\"]')) as AvatarElement[]).forEach(elem => {\r\n    //console.log('updating avatar:', elem);\r\n    elem.update();\r\n  });\r\n};\r\n\r\nrootScope.addEventListener('avatar_update', onAvatarUpdate);\r\nrootScope.addEventListener('peer_title_edit', (peerId) => {\r\n  if(!appAvatarsManager.isAvatarCached(peerId)) {\r\n    onAvatarUpdate(peerId);\r\n  }\r\n});\r\n\r\nexport async function openAvatarViewer(\r\n  target: HTMLElement, \r\n  peerId: PeerId, \r\n  middleware: () => boolean, \r\n  message?: any, \r\n  prevTargets?: {element: HTMLElement, item: Photo.photo['id'] | Message.messageService}[], \r\n  nextTargets?: typeof prevTargets\r\n) {\r\n  let photo = await appProfileManager.getFullPhoto(peerId);\r\n  if(!middleware() || !photo) {\r\n    return;\r\n  }\r\n\r\n  const getTarget = () => {\r\n    const good = Array.from(target.querySelectorAll('img')).find(img => !img.classList.contains('emoji'));\r\n    return good ? target : null;\r\n  };\r\n\r\n  if(peerId.isAnyChat()) {\r\n    const hadMessage = !!message;\r\n    const inputFilter = 'inputMessagesFilterChatPhotos';\r\n    if(!message) {\r\n      message = await appMessagesManager.getSearch({\r\n        peerId, \r\n        inputFilter: {_: inputFilter}, \r\n        maxId: 0, \r\n        limit: 1 \r\n      }).then(value => {\r\n        //console.log(lol);\r\n        // ! by descend\r\n        return value.history[0];\r\n      });\r\n\r\n      if(!middleware()) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if(message) {\r\n      // ! гений в деле, костылируем (но это гениально)\r\n      const messagePhoto = message.action.photo;\r\n      if(messagePhoto.id !== photo.id) {\r\n        if(!hadMessage) {\r\n          message = appMessagesManager.generateFakeAvatarMessage(peerId, photo);\r\n        } else {\r\n          \r\n        }\r\n      }\r\n\r\n      const f = (arr: typeof prevTargets) => arr.map(el => ({\r\n        element: el.element,\r\n        mid: (el.item as Message.messageService).mid,\r\n        peerId: (el.item as Message.messageService).peerId\r\n      }));\r\n\r\n      new AppMediaViewer()\r\n      .setSearchContext({\r\n        peerId,\r\n        inputFilter: {_: inputFilter},\r\n      })\r\n      .openMedia(message, getTarget(), undefined, undefined, prevTargets ? f(prevTargets) : undefined, nextTargets ? f(nextTargets) : undefined);\r\n\r\n      return;\r\n    }\r\n  }\r\n\r\n  if(photo) {\r\n    if(!isObject(message) && message) {\r\n      photo = appPhotosManager.getPhoto(message);\r\n    }\r\n    \r\n    const f = (arr: typeof prevTargets) => arr.map(el => ({\r\n      element: el.element,\r\n      photoId: el.item as string\r\n    }));\r\n\r\n    new AppMediaViewerAvatar(peerId).openMedia(photo.id, getTarget(), undefined, prevTargets ? f(prevTargets) : undefined, nextTargets ? f(nextTargets) : undefined);\r\n  }\r\n}\r\n\r\nconst believeMe: Map<PeerId, Set<AvatarElement>> = new Map();\r\nconst seen: Set<PeerId> = new Set();\r\n\r\nexport default class AvatarElement extends HTMLElement {\r\n  private peerId: PeerId;\r\n  private isDialog: boolean;\r\n  private peerTitle: string;\r\n  public loadPromises: Promise<any>[];\r\n  public lazyLoadQueue: LazyLoadQueueIntersector;\r\n  public isBig: boolean;\r\n  private addedToQueue = false;\r\n\r\n  connectedCallback() {\r\n    // браузер вызывает этот метод при добавлении элемента в документ\r\n    // (может вызываться много раз, если элемент многократно добавляется/удаляется)\r\n\r\n    this.isDialog = this.getAttribute('dialog') === '1';\r\n    if(this.getAttribute('clickable') === '') {\r\n      this.setAttribute('clickable', 'set');\r\n      let loading = false;\r\n      attachClickEvent(this, async(e) => {\r\n        cancelEvent(e);\r\n        if(loading) return;\r\n        //console.log('avatar clicked');\r\n        const peerId = this.peerId;\r\n        loading = true;\r\n        await openAvatarViewer(this, this.peerId, () => this.peerId === peerId);\r\n        loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    // браузер вызывает этот метод при удалении элемента из документа\r\n    // (может вызываться много раз, если элемент многократно добавляется/удаляется)\r\n    const set = believeMe.get(this.peerId);\r\n    if(set && set.has(this)) {\r\n      set.delete(this);\r\n      if(!set.size) {\r\n        believeMe.delete(this.peerId);\r\n      }\r\n    }\r\n\r\n    if(this.lazyLoadQueue) {\r\n      this.lazyLoadQueue.unobserve(this);\r\n    }\r\n  }\r\n\r\n  static get observedAttributes(): string[] {\r\n    return ['peer', 'dialog', 'peer-title'/* массив имён атрибутов для отслеживания их изменений */];\r\n  }\r\n\r\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n    //console.log('avatar changed attribute:', name, oldValue, newValue);\r\n    // вызывается при изменении одного из перечисленных выше атрибутов\r\n    if(name === 'peer') {\r\n      const newPeerId = (newValue || '').toPeerId() || NULL_PEER_ID;\r\n      if(this.peerId === newPeerId) {\r\n        return;\r\n      }\r\n      \r\n      this.peerId = appPeersManager.getPeerMigratedTo(newPeerId) || newPeerId;\r\n\r\n      const wasPeerId = (oldValue || '').toPeerId() || NULL_PEER_ID;\r\n      if(wasPeerId) {\r\n        const set = believeMe.get(wasPeerId);\r\n        if(set) {\r\n          set.delete(this);\r\n          if(!set.size) {\r\n            believeMe.delete(wasPeerId);\r\n          }\r\n        }\r\n      }\r\n\r\n      this.update();\r\n    } else if(name === 'peer-title') {\r\n      this.peerTitle = newValue;\r\n    } else if(name === 'dialog') {\r\n      this.isDialog = newValue === '1';\r\n    }\r\n  }\r\n\r\n  private r(onlyThumb = false) {\r\n    const res = appAvatarsManager.putPhoto(this, this.peerId, this.isDialog, this.peerTitle, onlyThumb, this.isBig);\r\n    const promise = res ? res.loadPromise : Promise.resolve();\r\n    if(this.loadPromises) {\r\n      if(res && res.cached) {\r\n        this.loadPromises.push(promise);\r\n      }\r\n\r\n      promise.finally(() => {\r\n        this.loadPromises = undefined;\r\n      });\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  public update() {\r\n    if(this.lazyLoadQueue) {\r\n      if(!seen.has(this.peerId)) {\r\n        if(this.addedToQueue) return;\r\n        this.addedToQueue = true;\r\n        \r\n        let set = believeMe.get(this.peerId);\r\n        if(!set) {\r\n          set = new Set();\r\n          believeMe.set(this.peerId, set);\r\n        }\r\n  \r\n        set.add(this);\r\n\r\n        this.r(true);\r\n\r\n        this.lazyLoadQueue.push({\r\n          div: this, \r\n          load: () => {\r\n            seen.add(this.peerId);\r\n            return this.update();\r\n          }\r\n        });\r\n\r\n        return;\r\n      } else if(this.addedToQueue) {\r\n        this.lazyLoadQueue.unobserve(this);\r\n      }\r\n    } \r\n    \r\n    seen.add(this.peerId);\r\n    \r\n    const res = this.r();\r\n    const promise = res ? res.loadPromise : Promise.resolve();\r\n\r\n    if(this.addedToQueue) {\r\n      promise.finally(() => {\r\n        this.addedToQueue = false;\r\n      });\r\n    }\r\n\r\n    const set = believeMe.get(this.peerId);\r\n    if(set) {\r\n      set.delete(this);\r\n      const arr = Array.from(set);\r\n      believeMe.delete(this.peerId);\r\n      \r\n\r\n      for(let i = 0, length = arr.length; i < length; ++i) {\r\n        arr[i].update();\r\n      }\r\n    }\r\n\r\n    return promise;\r\n  }\r\n}\r\n\r\ncustomElements.define('avatar-element', AvatarElement);\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appDialogsManager from \"../lib/appManagers/appDialogsManager\";\nimport appMessagesManager, {Dialog} from \"../lib/appManagers/appMessagesManager\";\nimport appPeersManager from \"../lib/appManagers/appPeersManager\";\nimport rootScope from \"../lib/rootScope\";\nimport { positionMenu, openBtnMenu } from \"./misc\";\nimport ButtonMenu, { ButtonMenuItemOptions } from \"./buttonMenu\";\nimport PopupDeleteDialog from \"./popups/deleteDialog\";\nimport { i18n } from \"../lib/langPack\";\nimport findUpTag from \"../helpers/dom/findUpTag\";\nimport appNotificationsManager from \"../lib/appManagers/appNotificationsManager\";\nimport PopupPeer from \"./popups/peer\";\nimport AppChatFoldersTab from \"./sidebarLeft/tabs/chatFolders\";\nimport appSidebarLeft from \"./sidebarLeft\";\nimport { toastNew } from \"./toast\";\nimport PopupMute from \"./popups/mute\";\n\nexport default class DialogsContextMenu {\n  private element: HTMLElement;\n  private buttons: (ButtonMenuItemOptions & {verify: () => boolean})[];\n\n  private selectedId: PeerId;\n  private filterId: number;\n  private dialog: Dialog;\n\n  private init() {\n    this.buttons = [{\n      icon: 'unread',\n      text: 'MarkAsUnread',\n      onClick: this.onUnreadClick,\n      verify: () => !appMessagesManager.isDialogUnread(this.dialog)\n    }, {\n      icon: 'readchats',\n      text: 'MarkAsRead',\n      onClick: this.onUnreadClick,\n      verify: () => appMessagesManager.isDialogUnread(this.dialog)\n    }, {\n      icon: 'pin',\n      text: 'ChatList.Context.Pin',\n      onClick: this.onPinClick,\n      verify: () => {\n        const isPinned = this.filterId > 1 ? appMessagesManager.filtersStorage.getFilter(this.filterId).pinnedPeerIds.includes(this.dialog.peerId) : !!this.dialog.pFlags?.pinned;\n        return !isPinned;\n      }\n    }, {\n      icon: 'unpin',\n      text: 'ChatList.Context.Unpin',\n      onClick: this.onPinClick,\n      verify: () => {\n        const isPinned = this.filterId > 1 ? appMessagesManager.filtersStorage.getFilter(this.filterId).pinnedPeerIds.includes(this.dialog.peerId) : !!this.dialog.pFlags?.pinned;\n        return isPinned;\n      }\n    }, {\n      icon: 'mute',\n      text: 'ChatList.Context.Mute',\n      onClick: this.onMuteClick,\n      verify: () => {\n        return this.selectedId !== rootScope.myId && !appNotificationsManager.isPeerLocalMuted(this.dialog.peerId); \n      }\n    }, {\n      icon: 'unmute',\n      text: 'ChatList.Context.Unmute',\n      onClick: this.onUnmuteClick,\n      verify: () => {\n        return this.selectedId !== rootScope.myId && appNotificationsManager.isPeerLocalMuted(this.dialog.peerId); \n      }\n    }, {\n      icon: 'archive',\n      text: 'Archive',\n      onClick: this.onArchiveClick,\n      verify: () => this.filterId === 0 && this.selectedId !== rootScope.myId\n    }, {\n      icon: 'unarchive',\n      text: 'Unarchive',\n      onClick: this.onArchiveClick,\n      verify: () => this.filterId === 1 && this.selectedId !== rootScope.myId\n    }, {\n      icon: 'delete danger',\n      text: 'Delete',\n      onClick: this.onDeleteClick,\n      verify: () => true\n    }];\n\n    this.element = ButtonMenu(this.buttons);\n    this.element.id = 'dialogs-contextmenu';\n    this.element.classList.add('contextmenu');\n    document.getElementById('page-chats').append(this.element);\n  }\n\n  private onArchiveClick = () => {\n    let dialog = appMessagesManager.getDialogOnly(this.selectedId);\n    if(dialog) {\n      appMessagesManager.editPeerFolders([dialog.peerId], +!dialog.folder_id);\n    }\n  };\n\n  private onPinClick = () => {\n    appMessagesManager.toggleDialogPin(this.selectedId, this.filterId).catch(err => {\n      if(err.type === 'PINNED_DIALOGS_TOO_MUCH') {\n        if(this.filterId >= 1) {\n          toastNew({langPackKey: 'PinFolderLimitReached'});\n        } else {\n          new PopupPeer('pinned-dialogs-too-much', {\n            buttons: [{\n              langKey: 'OK',\n              isCancel: true\n            }, {\n              langKey: 'FiltersSetupPinAlert',\n              callback: () => {\n                new AppChatFoldersTab(appSidebarLeft).open();\n              }\n            }],\n            descriptionLangKey: 'PinToTopLimitReached2',\n            descriptionLangArgs: [i18n('Chats', [rootScope.config.pinned_dialogs_count_max])]\n          }).show();\n        }\n      }\n    });\n  };\n\n  private onUnmuteClick = () => {\n    appMessagesManager.togglePeerMute(this.selectedId, false);\n  };\n  \n  private onMuteClick = () => {\n    new PopupMute(this.selectedId);\n  };\n\n  private onUnreadClick = () => {\n    const dialog = appMessagesManager.getDialogOnly(this.selectedId);\n    if(!dialog) return;\n\n    if(dialog.unread_count) {\n      appMessagesManager.readHistory(this.selectedId, dialog.top_message);\n      appMessagesManager.markDialogUnread(this.selectedId, true);\n    } else {\n      appMessagesManager.markDialogUnread(this.selectedId);\n    }\n  };\n\n  private onDeleteClick = () => {\n    new PopupDeleteDialog(this.selectedId/* , 'delete' */);\n  };\n\n  onContextMenu = (e: MouseEvent | Touch) => {\n    if(this.init) {\n      this.init();\n      this.init = null;\n    }\n\n    let li: HTMLElement = null;\n    \n    try {\n      li = findUpTag(e.target, 'LI');\n    } catch(e) {}\n    \n    if(!li) return;\n\n    if(e instanceof MouseEvent) e.preventDefault();\n    if(this.element.classList.contains('active')) {\n      return false;\n    }\n    if(e instanceof MouseEvent) e.cancelBubble = true;\n\n    this.filterId = appDialogsManager.filterId;\n\n    this.selectedId = li.dataset.peerId.toPeerId();\n    this.dialog = appMessagesManager.getDialogOnly(this.selectedId);\n\n    this.buttons.forEach(button => {\n      const good = button.verify();\n\n      button.element.classList.toggle('hide', !good);\n    });\n\n    // delete button\n    this.buttons[this.buttons.length - 1].element.lastChild.replaceWith(i18n(appPeersManager.getDeleteButtonText(this.selectedId)));\n\n    li.classList.add('menu-open');\n    positionMenu(e, this.element);\n    openBtnMenu(this.element, () => {\n      li.classList.remove('menu-open');\n      this.selectedId = this.dialog = this.filterId = undefined;\n    });\n  };\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport enum ConnectionStatus {\r\n  Connected,\r\n  Connecting,\r\n  Closed,\r\n  TimedOut\r\n};\r\n\r\nexport type ConnectionStatusChange = {\r\n  _: 'networkerStatus', \r\n  status: ConnectionStatus,\r\n  dcId: number,\r\n  name: string,\r\n  isFileNetworker: boolean,\r\n  isFileDownload: boolean,\r\n  isFileUpload: boolean,\r\n  retryAt?: number\r\n};\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { Message } from \"../layer\";\n/* import findUpClassName from \"../helpers/dom/findUpClassName\";\nimport rootScope from \"../lib/rootScope\";\nimport Transition from \"./transition\"; */\n\nexport enum SENDING_STATUS {\n  Error = -1,\n  Pending,\n  Sent,\n  Read\n}\n\nexport function getSendingStatus(message: Message.message | Message.messageService) {\n  return message.pFlags.is_outgoing ? \n    SENDING_STATUS.Pending : (\n      message.pFlags.unread ? \n      SENDING_STATUS.Sent : \n      SENDING_STATUS.Read\n    );\n}\n\nexport function setSendingStatus(\n  container: HTMLElement, \n  message?: Message.message | Message.messageService, \n  disableAnimationIfRippleFound?: boolean\n) {\n  let className: 'check' | 'checks' | 'sending';\n  if(message?.pFlags.out) {\n    if(message.pFlags.is_outgoing) {\n      className = 'sending';\n    } else if(message.pFlags.unread) {\n      className = 'check';\n    } else {\n      className = 'checks';\n    }\n  }\n\n  if(!className) {\n    container.textContent = '';\n    return;\n  }\n  \n  const iconClassName = 'tgico-' + className;\n  const lastElement = container.lastElementChild as HTMLElement;\n  if(lastElement && lastElement.classList.contains(iconClassName)) {\n    return;\n  }\n  \n  const element = document.createElement('i');\n  element.classList.add('sending-status-icon', /* 'transition-item', */ iconClassName);\n  container.append(element);\n\n  if(lastElement) {\n    lastElement.remove();\n  }\n\n  /* if(!lastElement) {\n    element.classList.add('active');\n    return;\n  }\n\n  const select = Transition(container, undefined, 350, () => {\n    lastElement.remove();\n  }, false, true, false);\n\n  let animate = rootScope.settings.animationsEnabled && className !== 'sending' && !lastElement.classList.contains('tgico-sending');\n  if(disableAnimationIfRippleFound && animate) {\n    const parent = findUpClassName(container, 'rp');\n    if(parent.querySelector('.c-ripple__circle') || parent.matches(':hover')) {\n      animate = false;\n    }\n  }\n\n  select(element, animate, lastElement); */\n\n  /* SetTransition(lastElement, 'is-visible', false, 350, () => {\n    // lastElement.remove();\n  }, 2);\n  SetTransition(element, 'is-visible', true, 350, undefined, 2); */\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport App from \"../config/app\";\r\nimport DEBUG from \"../config/debug\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\nimport apiUpdatesManager from \"../lib/appManagers/apiUpdatesManager\";\r\nimport { LangPackKey, i18n } from \"../lib/langPack\";\r\nimport { logger } from \"../lib/logger\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport Button from \"./button\";\r\nimport ProgressivePreloader from \"./preloader\";\r\nimport SetTransition from \"./singleTransition\";\r\nimport sessionStorage from '../lib/sessionStorage';\r\nimport { ConnectionStatus } from \"../lib/mtproto/connectionStatus\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport apiManager from \"../lib/mtproto/mtprotoworker\";\r\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\r\n\r\nexport default class ConnectionStatusComponent {\r\n  public static CHANGE_STATE_DELAY = 1000;\r\n\r\n  private statusContainer: HTMLElement;\r\n  private statusEl: HTMLElement;\r\n  private statusPreloader: ProgressivePreloader;\r\n\r\n  private currentLangPackKey: LangPackKey;\r\n\r\n  private hadConnect = false;\r\n  private retryAt: number;\r\n  private connecting = false;\r\n  private timedOut = false;\r\n  private updating = false;\r\n\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  private setFirstConnectionTimeout: number;\r\n  private setStateTimeout: number;\r\n\r\n  constructor(chatsContainer: HTMLElement) {\r\n    this.log = logger('CS', undefined, undefined);\r\n  \r\n    this.statusContainer = document.createElement('div');\r\n    this.statusContainer.classList.add('connection-status'/* , 'hide' */);\r\n\r\n    this.statusEl = Button('btn-primary bg-warning connection-status-button', {noRipple: true});\r\n    this.statusPreloader = new ProgressivePreloader({cancelable: false});\r\n    this.statusPreloader.constructContainer({color: 'transparent', bold: true});\r\n    this.statusContainer.append(this.statusEl);\r\n\r\n    chatsContainer.prepend(this.statusContainer);\r\n\r\n    rootScope.addEventListener('connection_status_change', (status) => {\r\n      console.log(status);\r\n\r\n      this.setConnectionStatus();\r\n    });\r\n\r\n    rootScope.addEventListener('state_synchronizing', (channelId) => {\r\n      if(!channelId) {\r\n        this.updating = true;\r\n        DEBUG && this.log('updating', this.updating);\r\n        this.setState();\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('state_synchronized', (channelId) => {\r\n      DEBUG && this.log('state_synchronized', channelId);\r\n      if(!channelId) {\r\n        this.updating = false;\r\n        DEBUG && this.log('updating', this.updating);\r\n        this.setState();\r\n      }\r\n    });\r\n\r\n    this.setFirstConnectionTimeout = window.setTimeout(this.setConnectionStatus, ConnectionStatusComponent.CHANGE_STATE_DELAY + 1e3);\r\n\r\n    /* let bool = true;\r\n    document.addEventListener('dblclick', () => {\r\n      const dcId = 2;\r\n      rootScope.dispatchEvent('connection_status_change', {\r\n        dcId: dcId,\r\n        isFileDownload: false,\r\n        isFileNetworker: false,\r\n        isFileUpload: false,\r\n        name: \"NET-\" + dcId,\r\n        status: bool ? (bool = false, ConnectionStatus.Closed) : (bool = true, ConnectionStatus.Connected),\r\n        _: \"networkerStatus\"\r\n      });\r\n    }); */\r\n  }\r\n\r\n  private setConnectionStatus = () => {\r\n    sessionStorage.get('dc').then(baseDcId => {\r\n      if(!baseDcId) {\r\n        baseDcId = App.baseDcId;\r\n      }\r\n      \r\n      if(this.setFirstConnectionTimeout) {\r\n        clearTimeout(this.setFirstConnectionTimeout);\r\n        this.setFirstConnectionTimeout = 0;\r\n      }\r\n\r\n      const status = rootScope.connectionStatus['NET-' + baseDcId];\r\n      const online = status && status.status === ConnectionStatus.Connected;\r\n\r\n      if(this.connecting && online) {\r\n        apiUpdatesManager.forceGetDifference();\r\n      }\r\n\r\n      if(online && !this.hadConnect) {\r\n        this.hadConnect = true;\r\n      }\r\n      \r\n      this.timedOut = status && status.status === ConnectionStatus.TimedOut;\r\n      this.connecting = !online;\r\n      this.retryAt = status && status.retryAt;\r\n      DEBUG && this.log('connecting', this.connecting);\r\n      this.setState();\r\n    });\r\n  };\r\n\r\n  private setStatusText = (langPackKey: LangPackKey, args?: any[]) => {\r\n    if(this.currentLangPackKey === langPackKey) return;\r\n    this.currentLangPackKey = langPackKey;\r\n    replaceContent(this.statusEl, i18n(langPackKey, args));\r\n    this.statusPreloader.attach(this.statusEl);\r\n  };\r\n\r\n  private getA(langPackKey: LangPackKey, callback: () => void) {\r\n    const a = document.createElement('a');\r\n    a.classList.add('force-reconnect');\r\n    a.append(i18n(langPackKey));\r\n    attachClickEvent(a, (e) => {\r\n      cancelEvent(e);\r\n      callback();\r\n    });\r\n\r\n    return a;\r\n  }\r\n\r\n  private setState = () => {\r\n    const timeout = ConnectionStatusComponent.CHANGE_STATE_DELAY;\r\n    if(this.connecting) {\r\n      if(this.timedOut) {\r\n        const a = this.getA('ConnectionStatus.ForceReconnect', () => apiManager.forceReconnect());\r\n        this.setStatusText('ConnectionStatus.TimedOut', [a]);\r\n      } else if(this.hadConnect) {\r\n        if(this.retryAt !== undefined) {\r\n          const timerSpan = document.createElement('span');\r\n          const retryAt = this.retryAt;\r\n          const setTime = () => {\r\n            const now = Date.now();\r\n            timerSpan.innerText = '' + Math.round((retryAt - now) / 1000);\r\n            if(now > retryAt) {\r\n              clearInterval(interval);\r\n            }\r\n          };\r\n          const interval = setInterval(setTime, 1e3);\r\n          setTime();\r\n  \r\n          const a = this.getA('ConnectionStatus.Reconnect', () => apiManager.forceReconnectTimeout());\r\n          this.setStatusText('ConnectionStatus.ReconnectIn', [timerSpan, a]);\r\n        } else {\r\n          this.setStatusText('ConnectionStatus.Reconnecting');\r\n        }\r\n      } else {\r\n        this.setStatusText('ConnectionStatus.Waiting');\r\n      }\r\n    } else if(this.updating) {\r\n      this.setStatusText('Updating');\r\n    }\r\n\r\n    DEBUG && this.log('setState', this.connecting || this.updating);\r\n    window.requestAnimationFrame(() => {\r\n      if(this.setStateTimeout) clearTimeout(this.setStateTimeout);\r\n\r\n      const cb = () => {\r\n        SetTransition(this.statusContainer, 'is-shown', this.connecting || this.updating, 200);\r\n        this.setStateTimeout = 0;\r\n        DEBUG && this.log('setState: isShown:', this.connecting || this.updating);\r\n      };\r\n\r\n      this.setStateTimeout = window.setTimeout(cb, timeout);\r\n      //cb();\r\n      /* if(timeout) this.setStateTimeout = window.setTimeout(cb, timeout);\r\n      else cb(); */\r\n    });\r\n  };\r\n}\r\n","export default function roundRect(\n  ctx: CanvasRenderingContext2D, \n  x: number, \n  y: number, \n  width: number, \n  height: number, \n  radius: {[k in 'tl' | 'tr' | 'br' | 'bl']?: number} | number, \n  fill?: boolean, \n  stroke?: boolean\n) {\n  if(typeof(radius) === 'number') {\n    radius = {tl: radius, tr: radius, br: radius, bl: radius};\n  } else {\n    const defaultRadius = {tl: 0, tr: 0, br: 0, bl: 0};\n    for(const side in defaultRadius) {\n      // @ts-ignore\n      radius[side] = radius[side] || defaultRadius[side];\n    }\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius.tl, y);\n  ctx.lineTo(x + width - radius.tr, y);\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n  ctx.lineTo(x + width, y + height - radius.br);\n  ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n  ctx.lineTo(x + radius.bl, y + height);\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n  ctx.lineTo(x, y + radius.tl);\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n  ctx.closePath();\n\n  if(fill) {\n    ctx.fill();\n  }\n\n  if(stroke) {\n    ctx.stroke();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { animate } from \"../helpers/animation\";\nimport customProperties from \"../helpers/dom/customProperties\";\nimport easeInOutSine from \"../helpers/easing/easeInOutSine\";\nimport mediaSizes from \"../helpers/mediaSizes\";\nimport roundRect from \"../helpers/roundRect\";\n\nconst DPR = window.devicePixelRatio;\nconst SIZE = 20 * DPR;\nconst MARGIN = 2.5 * DPR;\nconst WIDTH = 2 * DPR;\nconst RADIUS = 1 * DPR;\nconst LENGTH = 3;\n\nconst MIN_HEIGHT = 4;\nconst MAX_HEIGHT = 12;\nconst DURATION = 1000;\n\nexport default function groupCallActiveIcon(isActive = false) {\n  const canvas = document.createElement('canvas');\n  canvas.width = canvas.height = SIZE;\n  const context = canvas.getContext('2d');\n  \n  const TOTAL_WIDTH = LENGTH * WIDTH + (LENGTH - 1) * MARGIN;\n  const START_X = (SIZE - TOTAL_WIDTH) / 2;\n  \n  const startTime = Date.now();\n  let wasMounted = false;\n  // let hadRound = false;\n  const renderFrame = () => {\n    if(!canvas.isConnected) {\n      if(wasMounted) {\n        return false;\n      }\n    } else if(!wasMounted) {\n      wasMounted = canvas.isConnected;\n    }\n    \n    const time = Date.now();\n    // if(((time - startTime) / DURATION) >= 1) {\n    //   hadRound = true;\n    // }\n    \n    const progress = easeInOutSine((time - startTime) % DURATION, 0, 1, DURATION);\n    \n    context.clearRect(0, 0, SIZE, SIZE);\n    context.fillStyle = isActive && !mediaSizes.isMobile ? customProperties.getProperty('primary-color') : '#fff';\n\n    for(let i = 0; i < LENGTH; ++i) {\n      const x = START_X + (i * WIDTH) + (i * MARGIN);\n\n      let itemProgress: number;\n      if(progress >= .5) {\n        itemProgress = i % 2 ? 2 - progress * 2 : (progress - .5) * 2;\n      } else {\n        itemProgress = i % 2 ? progress * 2 : 1 - progress * 2;\n      }\n\n      let height = MIN_HEIGHT + (itemProgress * (MAX_HEIGHT - MIN_HEIGHT));\n      /* if(!hadRound && i === 1) {\n        console.log('call status animation', itemProgress, height, progress, progress >= .5);\n      } */\n      \n      height *= DPR;\n      const y = (SIZE - height) / 2;\n      \n      roundRect(context, x, y, WIDTH, height, RADIUS, true);\n    }\n\n    return true;\n  };\n\n  return {\n    canvas,\n    startAnimation: () => {\n      animate(renderFrame);\n      renderFrame();\n    },\n    setActive: (active: boolean) => {\n      isActive = active;\n      renderFrame();\n    }\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type DialogsStorage from \"../storages/dialogs\";\nimport type {MyDialogFilter as DialogFilter, MyDialogFilter} from \"../storages/filters\";\nimport type { LazyLoadQueueIntersector } from \"../../components/lazyLoadQueue\";\nimport AvatarElement from \"../../components/avatar\";\nimport DialogsContextMenu from \"../../components/dialogsContextMenu\";\nimport { horizontalMenu } from \"../../components/horizontalMenu\";\nimport { attachContextMenuListener, putPreloader } from \"../../components/misc\";\nimport { ripple } from \"../../components/ripple\";\n//import Scrollable from \"../../components/scrollable\";\nimport Scrollable, { ScrollableX, SliceSides } from \"../../components/scrollable\";\nimport { formatDateAccordingToTodayNew } from \"../../helpers/date\";\nimport { IS_MOBILE_SAFARI, IS_SAFARI } from \"../../environment/userAgent\";\nimport { logger, LogTypes } from \"../logger\";\nimport { RichTextProcessor } from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport appPeersManager from './appPeersManager';\nimport appImManager from \"./appImManager\";\nimport appMessagesManager, { Dialog, MyMessage } from \"./appMessagesManager\";\nimport appStateManager, { State } from \"./appStateManager\";\nimport appUsersManager from \"./appUsersManager\";\nimport Button from \"../../components/button\";\nimport SetTransition from \"../../components/singleTransition\";\nimport appDraftsManager, { MyDraftMessage } from \"./appDraftsManager\";\nimport DEBUG, { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport appNotificationsManager from \"./appNotificationsManager\";\nimport PeerTitle from \"../../components/peerTitle\";\nimport I18n, { FormatterArguments, i18n, LangPackKey, _i18n } from \"../langPack\";\nimport findUpTag from \"../../helpers/dom/findUpTag\";\nimport lottieLoader from \"../rlottie/lottieLoader\";\nimport { wrapLocalSticker, wrapPhoto } from \"../../components/wrappers\";\nimport AppEditFolderTab from \"../../components/sidebarLeft/tabs/editFolder\";\nimport appSidebarLeft, { SettingSection } from \"../../components/sidebarLeft\";\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\nimport positionElementByIndex from \"../../helpers/dom/positionElementByIndex\";\nimport replaceContent from \"../../helpers/dom/replaceContent\";\nimport ConnectionStatusComponent from \"../../components/connectionStatus\";\nimport appChatsManager from \"./appChatsManager\";\nimport { renderImageFromUrlPromise } from \"../../helpers/dom/renderImageFromUrl\";\nimport { fastRafConventional, fastRafPromise } from \"../../helpers/schedulers\";\nimport SortedUserList from \"../../components/sortedUserList\";\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\nimport handleTabSwipe from \"../../helpers/dom/handleTabSwipe\";\nimport windowSize from \"../../helpers/windowSize\";\nimport isInDOM from \"../../helpers/dom/isInDOM\";\nimport appPhotosManager, { MyPhoto } from \"./appPhotosManager\";\nimport { MyDocument } from \"./appDocsManager\";\nimport { setSendingStatus } from \"../../components/sendingStatus\";\nimport SortedList, { SortedElementBase } from \"../../helpers/sortedList\";\nimport debounce from \"../../helpers/schedulers/debounce\";\nimport generateVerifiedIcon from \"../../components/generateVerifiedIcon\";\nimport { NULL_PEER_ID } from \"../mtproto/mtproto_config\";\nimport groupCallActiveIcon from \"../../components/groupCallActiveIcon\";\nimport { Chat, NotifyPeer } from \"../../layer\";\nimport IS_GROUP_CALL_SUPPORTED from \"../../environment/groupCallSupport\";\nimport mediaSizes from \"../../helpers/mediaSizes\";\nimport appNavigationController, { NavigationItem } from \"../../components/appNavigationController\";\nimport assumeType from \"../../helpers/assumeType\";\n\nexport type DialogDom = {\n  avatarEl: AvatarElement,\n  captionDiv: HTMLDivElement,\n  titleSpan: HTMLSpanElement,\n  titleSpanContainer: HTMLSpanElement,\n  statusSpan: HTMLSpanElement,\n  lastTimeSpan: HTMLSpanElement,\n  unreadBadge: HTMLElement,\n  callIcon?: ReturnType<typeof groupCallActiveIcon>,\n  mentionsBadge?: HTMLElement,\n  lastMessageSpan: HTMLSpanElement,\n  containerEl: HTMLElement,\n  listEl: HTMLLIElement,\n  subtitleEl: HTMLElement\n};\n\ninterface SortedDialog extends SortedElementBase {\n  dom: DialogDom,\n  loadPromises?: Promise<any>[]\n}\n\nclass SortedDialogList extends SortedList<SortedDialog> {\n  constructor(\n    public list: HTMLUListElement, \n    public indexKey: ReturnType<DialogsStorage['getDialogIndexKey']>,\n    public onListLengthChange?: () => void\n  ) {\n    super({\n      getIndex: (element) => appMessagesManager.getDialogOnly(element.id)[this.indexKey],\n      onDelete: (element) => {\n        element.dom.listEl.remove();\n        this.onListLengthChange && this.onListLengthChange();\n      },\n      onSort: (element, idx) => {\n        const willChangeLength = element.dom.listEl.parentElement !== this.list;\n        positionElementByIndex(element.dom.listEl, this.list, idx);\n\n        if(willChangeLength) {\n          this.onListLengthChange && this.onListLengthChange();\n        }\n      },\n      onElementCreate: (base, batch) => {\n        const loadPromises: Promise<any>[] = batch ? [] : undefined;\n\n        const {dom} = appDialogsManager.addListDialog({dialog: base.id, loadPromises, isBatch: batch});\n        (base as SortedDialog).dom = dom;\n\n        if(loadPromises?.length) {\n          (base as SortedDialog).loadPromises = loadPromises;\n          Promise.all(loadPromises).finally(() => {\n            delete (base as SortedDialog).loadPromises;\n          });\n        }\n\n        return base as SortedDialog;\n      },\n      updateElementWith: fastRafConventional\n    });\n  }\n\n  public clear() {\n    this.list.innerHTML = '';\n    super.clear();\n  }\n}\n\n//const testScroll = false;\n//let testTopSlice = 1;\n\nexport class AppDialogsManager {\n  private chatsContainer = document.getElementById('chatlist-container') as HTMLDivElement;\n  private chatsPreloader: HTMLElement;\n\n  private loadDialogsPromise: Promise<any>;\n\n  private scroll: Scrollable = null;\n  \n  private log = logger('DIALOGS', LogTypes.Log | LogTypes.Error | LogTypes.Warn | LogTypes.Debug);\n\n  private contextMenu = new DialogsContextMenu();\n\n  public sortedList: SortedDialogList;\n  public sortedLists: {[filterId: number]: SortedDialogList} = {};\n  public scrollables: {[filterId: number]: Scrollable} = {};\n  public filterId: number;\n  private folders: {[k in 'menu' | 'container' | 'menuScrollContainer']: HTMLElement} = {\n    menu: document.getElementById('folders-tabs'),\n    menuScrollContainer: null,\n    container: document.getElementById('folders-container')\n  };\n  private filtersRendered: {\n    [filterId: string]: {\n      menu: HTMLElement, \n      container: HTMLElement,\n      unread: HTMLElement,\n      title: HTMLElement\n    }\n  } = {};\n  private showFiltersPromise: Promise<void>;\n  private allUnreadCount: HTMLElement;\n\n  private sliceTimeout: number;\n\n  private lastActiveElements: Set<HTMLElement> = new Set();\n\n  private offsets: {top: number, bottom: number} = {top: 0, bottom: 0};\n  \n  private loadContacts: () => void;\n  private processContact: (peerId: PeerId) => void;\n\n  private indexKey: ReturnType<DialogsStorage['getDialogIndexKey']>;\n\n  private initedListeners = false;\n\n  private onListLengthChange: () => Promise<void>;\n  private loadedDialogsAtLeastOnce = false;\n  private allChatsIntlElement: I18n.IntlElement;\n\n  private emptyDialogsPlaceholderSubtitle: I18n.IntlElement;\n  private updateContactsLengthPromise: Promise<number>;\n\n  private filtersNavigationItem: NavigationItem;\n\n  constructor() {\n    this.chatsPreloader = putPreloader(null, true);\n\n    this.allUnreadCount = this.folders.menu.querySelector('.badge');\n    \n    this.folders.menuScrollContainer = this.folders.menu.parentElement;\n\n    this.onListLengthChange = debounce(this._onListLengthChange, 100, false, true);\n\n    const bottomPart = document.createElement('div');\n    bottomPart.classList.add('connection-status-bottom');\n    bottomPart.append(this.folders.container);\n\n    /* if(isTouchSupported && isSafari) {\n      let allowUp: boolean, allowDown: boolean, slideBeginY: number;\n      const container = this.scroll.container;\n      container.addEventListener('touchstart', (event) => {\n        allowUp = container.scrollTop > 0;\n        allowDown = (container.scrollTop < container.scrollHeight - container.clientHeight);\n        // @ts-ignore\n        slideBeginY = event.pageY;\n      });\n      \n      container.addEventListener('touchmove', (event: any) => {\n        var up = (event.pageY > slideBeginY);\n        var down = (event.pageY < slideBeginY);\n        slideBeginY = event.pageY;\n        if((up && allowUp) || (down && allowDown)) {\n          event.stopPropagation();\n        } else if(up || down) {\n          event.preventDefault();\n        }\n      });\n    } */\n\n    if(IS_TOUCH_SUPPORTED) {\n      handleTabSwipe({\n        element: this.folders.container,\n        onSwipe: (xDiff) => {\n          const prevId = selectTab.prevId();\n          selectTab(xDiff > 0 ? prevId + 1 : prevId - 1);\n        }\n      });\n    }\n\n    this.allChatsIntlElement = new I18n.IntlElement({\n      key: 'FilterAllChatsShort'\n    });\n    this.setFilterId(0);\n    this.addFilter({\n      id: this.filterId,\n      title: '',\n      titleEl: this.allChatsIntlElement.element,\n      orderIndex: 0\n    });\n\n    this.sortedList = this.sortedLists[this.filterId];\n    this.scroll = this.scrollables[this.filterId];\n\n    /* if(testScroll) {\n      let i = 0;\n      let add = () => {\n        let li = document.createElement('li');\n        li.dataset.id = '' + i;\n        li.id = '' + i;\n        li.innerHTML = `<div class=\"rp\"><avatar-element style=\"background-color: rgb(166, 149, 231); font-size: 0px;\"><img src=\"assets/img/pepe.jpg\"></avatar-element><div class=\"user-caption\"><p><span class=\"user-title\">${i}</span><span><span class=\"message-status\"></span><span class=\"message-time\">18:33</span></span></p><p><span class=\"user-last-message\"><b>-_-_-_-: </b>qweasd</span><span></span></p></div></div>`;\n        i++;\n        this.scroll.append(li);\n      };\n      for(let i = 0; i < 500; ++i) {\n        add();\n      }\n      (window as any).addElement = add;\n    } */\n\n    rootScope.addEventListener('state_cleared', () => {\n      //setTimeout(() => \n      appStateManager.getState().then((state) => {\n        this.loadedDialogsAtLeastOnce = false;\n\n        appUsersManager.clear();\n        appChatsManager.clear();\n        \n        const filtersStorage = appMessagesManager.filtersStorage;\n        const filters = filtersStorage.filters;\n        for(const filterId in filters) { // delete filters\n          rootScope.dispatchEvent('updateDialogFilter', {\n            _: 'updateDialogFilter',\n            id: +filterId,\n          });\n        }\n\n        appMessagesManager.clear();\n\n        /* const clearPromises: Promise<any>[] = [];\n        for(const name in appStateManager.storagesResults) {\n          const results = appStateManager.storagesResults[name as keyof AppStateManager['storages']];\n          const storage = appStateManager.storages[name as keyof AppStateManager['storages']];\n          results.length = 0;\n          clearPromises.push(storage.clear());\n        } */\n\n        this.sortedList.clear();\n        this.onTabChange();\n        this.onStateLoaded(state);\n      })//, 5000);\n    });\n\n    const foldersScrollable = new ScrollableX(this.folders.menuScrollContainer);\n    bottomPart.prepend(this.folders.menuScrollContainer);\n    const selectTab = horizontalMenu(this.folders.menu, this.folders.container, (id, tabContent) => {\n      /* if(id !== 0) {\n        id += 1;\n      } */\n\n      id = +tabContent.dataset.filterId || 0;\n\n      if(!IS_MOBILE_SAFARI) {\n        if(id) {\n          if(!this.filtersNavigationItem) {\n            this.filtersNavigationItem = {\n              type: 'filters',\n              onPop: () => {\n                selectTab(0);\n                this.filtersNavigationItem = undefined;\n              }\n            };\n    \n            appNavigationController.unshiftItem(this.filtersNavigationItem);\n          }\n        } else if(this.filtersNavigationItem) {\n          appNavigationController.removeItem(this.filtersNavigationItem);\n          this.filtersNavigationItem = undefined;\n        }\n      }\n\n      if(this.filterId === id) return;\n\n      this.sortedLists[id].clear();\n      this.setFilterId(id);\n      this.onTabChange();\n    }, () => {\n      for(const folderId in this.sortedLists) {\n        if(+folderId !== this.filterId) {\n          this.sortedLists[folderId].clear();\n        }\n      }\n    }, undefined, foldersScrollable);\n\n    //selectTab(0);\n    (this.folders.menu.firstElementChild as HTMLElement).click();\n    appMessagesManager.construct();\n    appStateManager.getState().then((state) => {\n      return this.onStateLoaded(state);\n    })/* .then(() => {\n      const isLoadedMain = appMessagesManager.dialogsStorage.isDialogsLoaded(0);\n      const isLoadedArchive = appMessagesManager.dialogsStorage.isDialogsLoaded(1);\n      const wasLoaded = isLoadedMain || isLoadedArchive;\n      const a: Promise<any> = isLoadedMain ? Promise.resolve() : appMessagesManager.getConversationsAll('', 0);\n      const b: Promise<any> = isLoadedArchive ? Promise.resolve() : appMessagesManager.getConversationsAll('', 1);\n      a.finally(() => {\n        b.then(() => {\n          if(wasLoaded) {\n            (apiUpdatesManager.updatesState.syncLoading || Promise.resolve()).then(() => {\n              appMessagesManager.refreshConversations();\n            });\n          }\n        });\n      });\n    }) */;\n\n    mediaSizes.addEventListener('resize', () => {\n      this.changeFiltersAllChatsKey();\n    });\n\n    new ConnectionStatusComponent(this.chatsContainer);\n    this.chatsContainer.append(bottomPart);\n\n    setTimeout(() => {\n      lottieLoader.loadLottieWorkers();\n    }, 200);\n  }\n\n  public get chatList() {\n    return this.sortedList.list;\n  }\n\n  public setFilterId(filterId: number) {\n    this.filterId = filterId;\n    this.indexKey = appMessagesManager.dialogsStorage ? appMessagesManager.dialogsStorage.getDialogIndexKey(this.filterId) : 'index';\n    rootScope.filterId = filterId;\n  }\n\n  private setOnlineStatus(element: HTMLElement, online: boolean) {\n    const className = 'is-online';\n    const hasClassName = element.classList.contains(className);\n    !hasClassName && online && element.classList.add(className);\n    SetTransition(element, 'is-visible', online, 250, online ? undefined : () => {\n      element.classList.remove(className);\n    }, online && !hasClassName ? 2 : 0);\n  }\n\n  private initListeners() {\n    rootScope.addEventListener('user_update', (userId) => {\n      //console.log('updating user:', user, dialog);\n      \n      const peerId = userId.toPeerId();\n      const dom = this.getDialogDom(peerId);\n      if(dom && !appUsersManager.isBot(userId) && peerId !== rootScope.myId) {\n        const user = appUsersManager.getUser(userId);\n        const online = user.status?._ === 'userStatusOnline';\n        this.setOnlineStatus(dom.avatarEl, online);\n      }\n    });\n\n    rootScope.addEventListener('chat_update', (chatId) => {\n      const peerId = chatId.toPeerId(true);\n      const dialog = appMessagesManager.getDialogOnly(peerId);\n      if(dialog) {\n        this.processDialogForCallStatus(dialog);\n      }\n    });\n\n    /* rootScope.$on('dialog_top', (e) => {\n      const dialog = e;\n\n      this.setLastMessage(dialog);\n      this.setDialogPosition(dialog);\n\n      this.setFiltersUnreadCount();\n    }); */\n\n    rootScope.addEventListener('folder_unread', (folder) => {\n      this.setFilterUnreadCount(folder.id);\n    });\n\n    rootScope.addEventListener('contacts_update', (userId) => {\n      this.processContact && this.processContact(userId.toPeerId());\n    });\n\n    rootScope.addEventListener('dialog_flush', ({peerId}) => {\n      const dialog = appMessagesManager.getDialogOnly(peerId);\n      if(dialog) {\n        this.setLastMessage(dialog, undefined, undefined, undefined, undefined, undefined, true);\n        this.validateDialogForFilter(dialog);\n        this.setFiltersUnreadCount();\n      }\n    });\n\n    rootScope.addEventListener('dialogs_multiupdate', (dialogs) => {\n      for(const peerId in dialogs) {\n        const dialog = dialogs[peerId];\n        this.updateDialog(dialog);\n\n        if(this.processContact) {\n          this.processContact(peerId.toPeerId());\n        }\n\n        this.validateDialogForFilter(dialog);\n      }\n    });\n\n    rootScope.addEventListener('dialog_drop', ({peerId}) => {\n      this.deleteDialog(peerId);\n\n      if(this.processContact) {\n        this.processContact(peerId);\n      }\n    });\n\n    rootScope.addEventListener('dialog_unread', ({peerId}) => {\n      const dialog = appMessagesManager.getDialogOnly(peerId);\n      if(dialog) {\n        this.setUnreadMessages(dialog);\n        this.validateDialogForFilter(dialog);\n      }\n    });\n\n    rootScope.addEventListener('dialog_notify_settings', (dialog) => {\n      this.validateDialogForFilter(dialog);\n      this.setUnreadMessages(dialog); // возможно это не нужно, но нужно менять is-muted\n      this.setFiltersUnreadCount();\n    });\n\n    rootScope.addEventListener('dialog_draft', ({dialog, drop, peerId}) => {\n      if(drop) {\n        this.sortedList.delete(peerId);\n      } else {\n        this.updateDialog(dialog);\n      }\n\n      if(this.processContact) {\n        this.processContact(peerId);\n      }\n    });\n\n    rootScope.addEventListener('peer_changed', (peerId) => {\n      //const perf = performance.now();\n      for(const element of this.lastActiveElements) {\n        if(element.dataset.peerId.toPeerId() !== peerId) {\n          this.setDialogActive(element, false);\n        }\n      }\n\n      const elements = Array.from(document.querySelectorAll(`[data-autonomous=\"0\"] li[data-peer-id=\"${peerId}\"]`)) as HTMLElement[];\n      elements.forEach(element => {\n        this.setDialogActive(element, true);\n      });\n      //this.log('peer_changed total time:', performance.now() - perf);\n    });\n\n    rootScope.addEventListener('filter_update', (filter) => {\n      if(!this.filtersRendered[filter.id]) {\n        this.addFilter(filter);\n        return;\n      } else if(filter.id === this.filterId) { // это нет тут смысла вызывать, так как будет dialogs_multiupdate\n        const dialogs = appMessagesManager.dialogsStorage.getCachedDialogs(true);\n        this.validateListForFilter();\n        for(let i = 0, length = dialogs.length; i < length; ++i) {\n          const dialog = dialogs[i];\n          this.updateDialog(dialog);\n        }\n      }\n\n      const elements = this.filtersRendered[filter.id];\n      elements.title.innerHTML = RichTextProcessor.wrapEmojiText(filter.title);\n    });\n\n    rootScope.addEventListener('filter_delete', (filter) => {\n      const elements = this.filtersRendered[filter.id];\n      if(!elements) return;\n\n      // set tab\n      //(this.folders.menu.firstElementChild.children[Math.max(0, filter.id - 2)] as HTMLElement).click();\n      (this.folders.menu.firstElementChild as HTMLElement).click();\n\n      elements.container.remove();\n      elements.menu.remove();\n      \n      delete this.sortedLists[filter.id];\n      delete this.scrollables[filter.id];\n      delete this.filtersRendered[filter.id];\n\n      this.onFiltersLengthChange();\n    });\n\n    rootScope.addEventListener('filter_order', (order) => {\n      const containerToAppend = this.folders.menu as HTMLElement;\n      order.forEach((filterId) => {\n        const filter = appMessagesManager.filtersStorage.getFilter(filterId);\n        const renderedFilter = this.filtersRendered[filterId];\n\n        const sortedList = this.sortedLists[filterId];\n        sortedList.indexKey = appMessagesManager.dialogsStorage.getDialogIndexKey(filterId);\n\n        positionElementByIndex(renderedFilter.menu, containerToAppend, filter.orderIndex);\n        positionElementByIndex(renderedFilter.container, this.folders.container, filter.orderIndex);\n      });\n\n      this.indexKey = appMessagesManager.dialogsStorage.getDialogIndexKey(this.filterId);\n\n      /* if(this.filterId) {\n        const tabIndex = order.indexOf(this.filterId) + 1;\n        selectTab.prevId = tabIndex;\n      } */\n    });\n\n    rootScope.addEventListener('peer_typings', ({peerId, typings}) => {\n      const dialog = appMessagesManager.getDialogOnly(peerId);\n      if(!dialog) return;\n\n      if(typings.length) {\n        this.setTyping(dialog);\n      } else {\n        this.unsetTyping(dialog);\n      }\n    });\n  }\n\n  private setDialogActive(listEl: HTMLElement, active: boolean) {\n    // @ts-ignore\n    const dom = listEl.dialogDom as DialogDom;\n    listEl.classList.toggle('active', active);\n    if(active) {\n      this.lastActiveElements.add(listEl);\n    } else {\n      this.lastActiveElements.delete(listEl);\n    }\n\n    if(dom?.callIcon) {\n      dom.callIcon.setActive(active);\n    }\n  }\n\n  private async onStateLoaded(state: State) {\n    if(state.notifySettings) {\n      for(const key in state.notifySettings) {\n        assumeType<Exclude<NotifyPeer['_'], 'notifyPeer'>>(key);\n        appNotificationsManager.savePeerSettings({\n          key,\n          settings: state.notifySettings[key]\n        });\n      }\n    }\n\n    appNotificationsManager.getNotifyPeerTypeSettings();\n\n    if(!this.initedListeners) {\n      this.initListeners();\n      this.initedListeners = true;\n    }\n      \n    const renderFiltersPromise = appMessagesManager.filtersStorage.getDialogFilters().then((filters) => {\n      for(const filter of filters) {\n        this.addFilter(filter);\n      }\n    });\n\n    if(state.filters && Object.keys(state.filters).length) {\n      await renderFiltersPromise;\n      if(this.showFiltersPromise) {\n        await this.showFiltersPromise;\n      }\n    }\n\n    if(appStateManager.storagesResults.dialogs.length) {\n      appDraftsManager.addMissedDialogs();\n    }\n\n    return this.onChatsScroll().then(() => {\n      appMessagesManager.fillConversations();\n    });\n  }\n\n  /* private getOffset(side: 'top' | 'bottom'): {index: number, pos: number} {\n    if(!this.scroll.loadedAll[side]) {\n      const element = (side === 'top' ? this.chatList.firstElementChild : this.chatList.lastElementChild) as HTMLElement;\n      if(element) {\n        const peerId = element.dataset.peerId;\n        const dialog = appMessagesManager.getDialogByPeerId(peerId);\n        return {index: dialog[0].index, pos: dialog[1]};\n      }\n    }\n\n    return {index: 0, pos: -1};\n  } */\n  private getOffsetIndex(side: 'top' | 'bottom') {\n    return {index: this.scroll.loadedAll[side] ? 0 : this.offsets[side]};\n  }\n\n  private isDialogMustBeInViewport(dialog: Dialog) {\n    if(dialog.migratedTo !== undefined || !this.testDialogForFilter(dialog)) return false;\n    //return true;\n    const topOffset = this.getOffsetIndex('top');\n    const bottomOffset = this.getOffsetIndex('bottom');\n    \n    if(!topOffset.index && !bottomOffset.index) {\n      return true;\n    }\n    \n    const index = dialog[this.indexKey];\n    return (!topOffset.index || index <= topOffset.index) && (!bottomOffset.index || index >= bottomOffset.index);\n  }\n\n  private deleteDialog(peerId: PeerId) {\n    this.sortedList.delete(peerId);\n  }\n\n  private updateDialog(dialog: Dialog) {\n    if(this.isDialogMustBeInViewport(dialog)) {\n      if(!this.sortedList.has(dialog.peerId)) {\n        this.sortedList.add(dialog.peerId);\n        return;\n      }\n    } else {\n      this.deleteDialog(dialog.peerId);\n      return;\n    }\n\n    const dom = this.getDialogDom(dialog.peerId);\n    if(dom) {\n      this.setLastMessage(dialog, undefined, dom, undefined, undefined, undefined, true);\n      this.sortedList.update(dialog.peerId);\n    }\n  }\n\n  public onTabChange = () => {\n    this.scroll = this.scrollables[this.filterId];\n    this.scroll.loadedAll.top = true;\n    this.scroll.loadedAll.bottom = false;\n    this.offsets.top = this.offsets.bottom = 0;\n    this.loadDialogsPromise = undefined;\n    this.sortedList = this.sortedLists[this.filterId];\n    this.onChatsScroll();\n  };\n\n  private setFilterUnreadCount(filterId: number) {\n    const unreadSpan = filterId === 0 ? this.allUnreadCount : this.filtersRendered[filterId]?.unread;\n    if(!unreadSpan) {\n      return;\n    }\n\n    const folder = appMessagesManager.dialogsStorage.getFolder(filterId);\n    const foundUnmuted = filterId === 0 || !!folder.dialogs.find(dialog => {\n      return (dialog.unread_count || dialog.pFlags.unread_mark) && !appNotificationsManager.isPeerLocalMuted(dialog.peerId, true);\n    });\n    \n    unreadSpan.classList.toggle('badge-gray', !foundUnmuted);\n    \n    const sum = folder.unreadDialogsCount;\n    unreadSpan.innerText = sum ? '' + sum : '';\n  }\n\n  private setFiltersUnreadCount() {\n    for(const filterId in this.filtersRendered) {\n      this.setFilterUnreadCount(+filterId);\n    }\n  }\n\n  /**\n   * Удалит неподходящие чаты из списка, но не добавит их(!)\n   */\n  private validateListForFilter() {\n    const filter = appMessagesManager.filtersStorage.getFilter(this.filterId) || null;\n    this.sortedList.getAll().forEach((element) => {\n      const dialog = appMessagesManager.getDialogOnly(element.id);\n      if(!this.testDialogForFilter(dialog, filter)) {\n        this.deleteDialog(element.id);\n      }\n    });\n  }\n\n  /**\n   * Удалит неподходящий чат из списка, но не добавит его(!)\n   */\n  private validateDialogForFilter(dialog: Dialog, filter?: MyDialogFilter) {\n    if(!this.getDialogDom(dialog.peerId)) {\n      return;\n    }\n\n    if(!this.testDialogForFilter(dialog, filter)) {\n      this.deleteDialog(dialog.peerId);\n    }\n  }\n\n  public testDialogForFilter(dialog: Dialog, filter = appMessagesManager.filtersStorage.getFilter(this.filterId)) {\n    if(!dialog || \n      (filter && !appMessagesManager.filtersStorage.testDialogForFilter(dialog, filter)) || \n      (!filter && this.filterId !== dialog.folder_id)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public generateScrollable(list: HTMLUListElement, filterId: number) {\n    const scrollable = new Scrollable(null, 'CL', 500);\n    scrollable.container.addEventListener('scroll', this.onChatsRegularScroll);\n    scrollable.container.dataset.filterId = '' + filterId;\n    scrollable.onScrolledTop = this.onChatsScrollTop;\n    scrollable.onScrolledBottom = this.onChatsScroll;\n    scrollable.setVirtualContainer(list);\n\n    const sortedDialogList = new SortedDialogList(\n      list, \n      appMessagesManager.dialogsStorage ? appMessagesManager.dialogsStorage.getDialogIndexKey(filterId) : 'index',\n      this.onListLengthChange\n    );\n\n    this.scrollables[filterId] = scrollable;\n    this.sortedLists[filterId] = sortedDialogList;\n\n    // list.classList.add('hide');\n    // scrollable.container.style.backgroundColor = '#' + (Math.random() * (16 ** 6 - 1) | 0).toString(16);\n\n    return scrollable;\n  }\n\n  private addFilter(filter: Pick<DialogFilter, 'title' | 'id' | 'orderIndex'> & Partial<{titleEl: HTMLElement}>) {\n    if(this.filtersRendered[filter.id]) return;\n\n    const menuTab = document.createElement('div');\n    menuTab.classList.add('menu-horizontal-div-item');\n    const span = document.createElement('span');\n    const titleSpan = document.createElement('span');\n    titleSpan.classList.add('text-super');\n    if(filter.titleEl) titleSpan.append(filter.titleEl);\n    else titleSpan.innerHTML = RichTextProcessor.wrapEmojiText(filter.title);\n    const unreadSpan = document.createElement('div');\n    unreadSpan.classList.add('badge', 'badge-20', 'badge-primary');\n    const i = document.createElement('i');\n    span.append(titleSpan, unreadSpan, i);\n    ripple(menuTab);\n    menuTab.append(span);\n\n    const containerToAppend = this.folders.menu as HTMLElement;\n    positionElementByIndex(menuTab, containerToAppend, filter.orderIndex);\n    //containerToAppend.append(li);\n\n    const ul = this.createChatList();\n    const scrollable = this.generateScrollable(ul, filter.id);\n\n    scrollable.container.classList.add('tabs-tab', 'chatlist-parts');\n\n    /* const parts = document.createElement('div');\n    parts.classList.add('chatlist-parts'); */\n    \n    const top = document.createElement('div');\n    top.classList.add('chatlist-top');\n    \n    const bottom = document.createElement('div');\n    bottom.classList.add('chatlist-bottom');\n\n    top.append(ul);\n    scrollable.container.append(top, bottom);\n    /* parts.append(top, bottom);\n    scrollable.container.append(parts); */\n    \n    const div = scrollable.container;\n    //this.folders.container.append(div);\n    positionElementByIndex(scrollable.container, this.folders.container, filter.orderIndex);\n\n    this.setListClickListener(ul, null, true);\n\n    this.filtersRendered[filter.id] = {\n      menu: menuTab,\n      container: div,\n      unread: unreadSpan,\n      title: titleSpan\n    };\n\n    this.onFiltersLengthChange();\n  }\n\n  private changeFiltersAllChatsKey() {\n    const scrollable = this.folders.menuScrollContainer.firstElementChild;\n    const key: LangPackKey = scrollable.scrollWidth > scrollable.clientWidth ? 'FilterAllChatsShort' : 'FilterAllChats';\n    this.allChatsIntlElement.compareAndUpdate({key});\n  }\n\n  private onFiltersLengthChange() {\n    if(!this.showFiltersPromise) {\n      this.showFiltersPromise = new Promise<void>((resolve) => {\n        window.setTimeout(() => {\n          const length = Object.keys(this.filtersRendered).length;\n          const show = length > 1;\n          const wasShowing = !this.folders.menuScrollContainer.classList.contains('hide');\n\n          if(show !== wasShowing) {\n            this.folders.menuScrollContainer.classList.toggle('hide', !show);\n            if(show && !wasShowing) {\n              this.setFiltersUnreadCount();\n            }\n\n            this.chatsContainer.classList.toggle('has-filters', show);\n          }\n\n          this.changeFiltersAllChatsKey();\n\n          this.showFiltersPromise = undefined;\n          resolve();\n        }, 0);\n      });\n    }\n\n    return this.showFiltersPromise;\n  }\n\n  private loadDialogs(side: SliceSides) {\n    /* if(testScroll) {\n      return;\n    } */\n    \n    if(this.loadDialogsPromise/*  || 1 === 1 */) return this.loadDialogsPromise;\n\n    const promise = new Promise<void>(async(resolve) => {\n      const {chatList, filterId, indexKey} = this;\n\n      //return;\n  \n      // let loadCount = 30/*this.chatsLoadCount */;\n      let loadCount = windowSize.height / 72 * 1.25 | 0;\n      let offsetIndex = 0;\n      \n      const {index: currentOffsetIndex} = this.getOffsetIndex(side);\n      if(currentOffsetIndex) {\n        if(side === 'top') {\n          const storage = appMessagesManager.dialogsStorage.getFolderDialogs(filterId, true);\n          const index = storage.findIndex(dialog => dialog[indexKey] <= currentOffsetIndex);\n          const needIndex = Math.max(0, index - loadCount);\n          loadCount = index - needIndex;\n          offsetIndex = storage[needIndex][indexKey] + 1;\n        } else {\n          offsetIndex = currentOffsetIndex;\n        }\n      }\n      \n      //let offset = storage[storage.length - 1]?.index || 0;\n  \n      try {\n        //console.time('getDialogs time');\n  \n        const getConversationsResult = appMessagesManager.getConversations('', offsetIndex, loadCount, filterId, true);\n        if(!getConversationsResult.cached && !chatList.childElementCount) {\n          const container = chatList.parentElement;\n          container.append(this.chatsPreloader);\n        }\n  \n        const result = await getConversationsResult.promise;\n  \n        if(this.loadDialogsPromise !== promise) {\n          return;\n        }\n  \n        //console.timeEnd('getDialogs time');\n  \n        // * loaded all\n        //if(!result.dialogs.length || chatList.childElementCount === result.count) {\n        // !result.dialogs.length не подходит, так как при супердревном диалоге getConversations его не выдаст.\n        //if(chatList.childElementCount === result.count) {\n        if(side === 'bottom') {\n          if(result.isEnd) {\n            this.scroll.loadedAll[side] = true;\n          }\n        } else if(result.isTopEnd) {\n          this.scroll.loadedAll[side] = true;\n        }\n\n        this.loadedDialogsAtLeastOnce = true;\n        \n        if(result.dialogs.length) {\n          const dialogs = side === 'top' ? result.dialogs.slice().reverse() : result.dialogs;\n  \n          const loadPromises: Promise<any>[] = [];\n\n          const callbacks: (() => void)[] = [];\n          const cccc = (callback: () => void) => {\n            callbacks.push(callback);\n          };\n\n          dialogs.forEach((dialog) => {\n            // :(\n            const isBuggedDialog = !appMessagesManager.getDialogOnly(dialog.peerId);\n            if(isBuggedDialog) {\n              return;\n            }\n\n            const element = this.sortedList.add(dialog.peerId, true, cccc, false);\n            if(element.loadPromises) {\n              loadPromises.push(...element.loadPromises);\n            }\n          });\n\n          await Promise.all(loadPromises).finally();\n\n          callbacks.forEach(callback => callback());\n        } else {\n          this.onListLengthChange();\n        }\n\n        const offsetDialog = result.dialogs[side === 'top' ? 0 : result.dialogs.length - 1];\n        if(offsetDialog) {\n          this.offsets[side] = offsetDialog[indexKey];\n        }\n\n        this.log.debug('getDialogs ' + loadCount + ' dialogs by offset:', offsetIndex, result, chatList.childElementCount);\n  \n        setTimeout(() => {\n          this.scroll.onScroll();\n        }, 0);\n      } catch(err) {\n        this.log.error(err);\n      }\n      \n      if(this.chatsPreloader.parentElement) {\n        this.chatsPreloader.remove();\n      }\n      \n      resolve();\n    }).finally(() => {\n      this.loadDialogsPromise = undefined;\n    });\n\n    return this.loadDialogsPromise = promise;\n  }\n\n  private generateEmptyPlaceholder(options: {\n    title: LangPackKey,\n    subtitle?: LangPackKey,\n    subtitleArgs?: FormatterArguments,\n    classNameType: string\n  }) {\n    const BASE_CLASS = 'empty-placeholder';\n    const container = document.createElement('div');\n    container.classList.add(BASE_CLASS, BASE_CLASS + '-' + options.classNameType);\n    \n    const header = document.createElement('div');\n    header.classList.add(BASE_CLASS + '-header');\n    _i18n(header, options.title);\n\n    const subtitle = document.createElement('div');\n    subtitle.classList.add(BASE_CLASS + '-subtitle');\n    if(options.subtitle) {\n      _i18n(subtitle, options.subtitle, options.subtitleArgs);\n    }\n\n    container.append(header, subtitle);\n\n    return {container, header, subtitle};\n  }\n\n  private checkIfPlaceholderNeeded() {\n    if(this.filterId === 1) {\n      return;\n    }\n\n    const chatList = this.chatList;\n    const part = chatList.parentElement as HTMLElement;\n    let placeholderContainer = (Array.from(part.children) as HTMLElement[]).find(el => el.matches('.empty-placeholder'));\n    const needPlaceholder = this.scroll.loadedAll.bottom && !chatList.childElementCount/*  || true */;\n    // chatList.style.display = 'none';\n\n    if(needPlaceholder && placeholderContainer) {\n      return;\n    } else if(!needPlaceholder) {\n      if(placeholderContainer) {\n        part.classList.remove('with-placeholder');\n        placeholderContainer.remove();\n      }\n\n      return;\n    }\n\n    let placeholder: ReturnType<AppDialogsManager['generateEmptyPlaceholder']>, type: 'dialogs' | 'folder';\n    if(!this.filterId) {\n      placeholder = this.generateEmptyPlaceholder({\n        title: 'ChatList.Main.EmptyPlaceholder.Title',\n        classNameType: type = 'dialogs'\n      });\n      \n      placeholderContainer = placeholder.container;\n      \n      const img = document.createElement('img');\n      img.classList.add('empty-placeholder-dialogs-icon');\n\n      this.emptyDialogsPlaceholderSubtitle = new I18n.IntlElement({\n        element: placeholder.subtitle\n      });\n      \n      Promise.all([\n        this.updateContactsLength(false),\n        renderImageFromUrlPromise(img, 'assets/img/EmptyChats.svg'),\n        fastRafPromise()\n      ]).then(([usersLength]) => {\n        placeholderContainer.classList.add('visible');\n        part.classList.toggle('has-contacts', !!usersLength);\n      });\n\n      placeholderContainer.prepend(img);\n    } else {\n      placeholder = this.generateEmptyPlaceholder({\n        title: 'FilterNoChatsToDisplay',\n        subtitle: 'FilterNoChatsToDisplayInfo',\n        classNameType: type = 'folder'\n      });\n\n      placeholderContainer = placeholder.container;\n\n      placeholderContainer.prepend(wrapLocalSticker({\n        emoji: '📂',\n        width: 128,\n        height: 128\n      }).container)\n\n      const button = Button('btn-primary btn-color-primary btn-control tgico', {\n        text: 'FilterHeaderEdit',\n        icon: 'settings'\n      });\n\n      attachClickEvent(button, () => {\n        new AppEditFolderTab(appSidebarLeft).open(appMessagesManager.filtersStorage.getFilter(this.filterId));\n      });\n\n      placeholderContainer.append(button);\n    }\n\n    part.append(placeholderContainer);\n    part.classList.add('with-placeholder');\n    part.dataset.placeholderType = type;\n  }\n\n  private updateContactsLength(updatePartClassName: boolean) {\n    if(this.updateContactsLengthPromise) return this.updateContactsLengthPromise;\n    return this.updateContactsLengthPromise = appUsersManager.getContacts().then(users => {\n      const subtitle = this.emptyDialogsPlaceholderSubtitle;\n      if(subtitle) {\n        let key: LangPackKey, args: FormatterArguments;\n        \n        if(users.length/*  && false */) {\n          key = 'ChatList.Main.EmptyPlaceholder.Subtitle';\n          args = [i18n('Contacts.Count', [users.length])];\n        } else {\n          key = 'ChatList.Main.EmptyPlaceholder.SubtitleNoContacts';\n          args = [];\n        }\n\n        subtitle.compareAndUpdate({\n          key,\n          args\n        });\n      }\n\n      if(updatePartClassName) {\n        const chatList = this.chatList;\n        const part = chatList.parentElement as HTMLElement;\n        part.classList.toggle('has-contacts', !!users.length);\n      }\n\n      this.updateContactsLengthPromise = undefined;\n      \n      return users.length;\n    });\n  }\n\n  private removeContactsPlaceholder() {\n    const chatList = this.chatList;\n    const parts = chatList.parentElement.parentElement;\n    const bottom = chatList.parentElement.nextElementSibling as HTMLElement;\n    parts.classList.remove('with-contacts');\n    bottom.innerHTML = '';\n    this.loadContacts = undefined;\n    this.processContact = undefined;\n  }\n\n  private _onListLengthChange = () => {\n    if(!this.loadedDialogsAtLeastOnce) {\n      return;\n    }\n\n    this.checkIfPlaceholderNeeded();\n\n    if(this.filterId > 0) return;\n\n    const chatList = this.chatList;\n    const count = chatList.childElementCount;\n\n    const parts = chatList.parentElement.parentElement;\n    const bottom = chatList.parentElement.nextElementSibling as HTMLElement;\n    const hasContacts = !!bottom.childElementCount;\n    if(count >= 10) {\n      if(hasContacts) {\n        this.removeContactsPlaceholder();\n      }\n\n      return;\n    } else if(hasContacts) return;\n\n    parts.classList.add('with-contacts');\n\n    const section = new SettingSection({\n      name: 'Contacts',\n      noDelimiter: true,\n      fakeGradientDelimiter: true\n    });\n\n    section.container.classList.add('hide');\n\n    appUsersManager.getContactsPeerIds(undefined, undefined, 'online').then(contacts => {\n      let ready = false;\n      const onListLengthChange = () => {\n        if(ready) {\n          section.container.classList.toggle('hide', !sortedUserList.list.childElementCount);\n        }\n\n        this.updateContactsLength(true);\n      };\n\n      const sortedUserList = new SortedUserList({\n        avatarSize: 42, \n        createChatListOptions: {\n          dialogSize: 48,\n          new: true\n        },\n        autonomous: false, \n        onListLengthChange\n      });\n\n      this.loadContacts = () => {\n        const pageCount = windowSize.height / 60 | 0;\n        const arr = contacts.splice(0, pageCount).filter(this.verifyPeerIdForContacts);\n\n        arr.forEach((peerId) => {\n          sortedUserList.add(peerId);\n        });\n\n        if(!contacts.length) {\n          this.loadContacts = undefined;\n        }\n      };\n\n      this.loadContacts();\n\n      this.processContact = (peerId) => {\n        if(peerId.isAnyChat()) {\n          return;\n        }\n\n        const good = this.verifyPeerIdForContacts(peerId);\n        const added = sortedUserList.has(peerId);\n        if(!added && good) sortedUserList.add(peerId);\n        else if(added && !good) sortedUserList.delete(peerId);\n      };\n\n      const list = sortedUserList.list;\n      list.classList.add('chatlist-new');\n      this.setListClickListener(list);\n      section.content.append(list);\n\n      ready = true;\n      onListLengthChange();\n    });\n\n    bottom.append(section.container);\n  };\n\n  private verifyPeerIdForContacts = (peerId: PeerId) => {\n    return peerId.isContact() && !appMessagesManager.getDialogOnly(peerId);\n  };\n\n  public onChatsRegularScroll = () => {\n    // return;\n\n    if(this.sliceTimeout) clearTimeout(this.sliceTimeout);\n    this.sliceTimeout = window.setTimeout(() => {\n      this.sliceTimeout = undefined;\n\n      if(!this.chatList.childElementCount || this.processContact) {\n        return;\n      }\n\n      /* const observer = new IntersectionObserver((entries) => {\n        const \n      });\n\n      Array.from(this.chatList.children).forEach(el => {\n        observer.observe(el);\n      }); */\n\n      fastRafConventional(() => {\n\n      const perf = performance.now();\n\n      const scrollTopWas = this.scroll.scrollTop;\n\n      const firstElementChild = this.chatList.firstElementChild;\n      const rectContainer = this.scroll.container.getBoundingClientRect();\n      const rectTarget = firstElementChild.getBoundingClientRect();\n      const children = Array.from(this.scroll.splitUp.children) as HTMLElement[];\n\n      // const padding = 8;\n      // const offsetTop = this.folders.container.offsetTop;\n      let offsetTop = this.scroll.splitUp.offsetTop;\n      if(offsetTop && scrollTopWas < offsetTop) offsetTop -= scrollTopWas;\n      // const offsetTop = scrollTopWas < padding ? padding - scrollTopWas : 0;\n      const firstY = rectContainer.y + offsetTop;\n      const lastY = rectContainer.y/*  - 8 */; // 8px - .chatlist padding-bottom\n      \n      const firstElement = findUpTag(document.elementFromPoint(Math.ceil(rectTarget.x), Math.ceil(firstY + 1)), firstElementChild.tagName) as HTMLElement;\n      const lastElement = findUpTag(document.elementFromPoint(Math.ceil(rectTarget.x), Math.floor(lastY + rectContainer.height - 1)), firstElementChild.tagName) as HTMLElement;\n\n      //alert('got element:' + rect.y);\n\n      if(!firstElement || !lastElement) {\n        return;\n      }\n\n      //alert('got element:' + !!firstElement);\n\n      const firstElementRect = firstElement.getBoundingClientRect();\n      const elementOverflow = firstElementRect.y - firstY;\n\n      const sliced: HTMLElement[] = [];\n      const firstIndex = children.indexOf(firstElement);\n      const lastIndex = children.indexOf(lastElement);\n\n      const saveLength = 10;\n\n      const sliceFromStart = IS_SAFARI ? [] : children.slice(0, Math.max(0, firstIndex - saveLength));\n      const sliceFromEnd = children.slice(lastIndex + saveLength);\n\n      /* if(sliceFromStart.length !== sliceFromEnd.length) {\n        console.log('not equal', sliceFromStart.length, sliceFromEnd.length);\n      }\n\n      if(sliceFromStart.length > sliceFromEnd.length) {\n        const diff = sliceFromStart.length - sliceFromEnd.length;\n        sliceFromStart.splice(0, diff);\n      } else if(sliceFromEnd.length > sliceFromStart.length) {\n        const diff = sliceFromEnd.length - sliceFromStart.length;\n        sliceFromEnd.splice(sliceFromEnd.length - diff, diff);\n      } */\n\n      if(sliceFromStart.length) {\n        this.scroll.loadedAll.top = false;\n      }\n\n      if(sliceFromEnd.length) {\n        this.scroll.loadedAll.bottom = false;\n      }\n\n      sliced.push(...sliceFromStart);\n      sliced.push(...sliceFromEnd);\n\n      sliced.forEach(el => {\n        const peerId = el.dataset.peerId.toPeerId();\n        this.deleteDialog(peerId);\n      });\n\n      this.setOffsets();\n\n      //this.log('[slicer] elements', firstElement, lastElement, rect, sliced, sliceFromStart.length, sliceFromEnd.length);\n\n      //this.log('[slicer] reset scrollTop', this.scroll.scrollTop, firstElement.offsetTop, firstElementRect.y, rect.y, elementOverflow);\n\n      //alert('left length:' + children.length);\n\n      this.scroll.scrollTop = firstElement.offsetTop - elementOverflow;\n\n      this.log('slice time', performance.now() - perf);\n      /* const firstElementRect = firstElement.getBoundingClientRect();\n      const scrollTop =  */\n\n      //this.scroll.scrollIntoView(firstElement, false);\n    });\n    }, 200);\n  };\n\n  private setOffsets() {\n    const chatList = this.chatList;\n    const firstDialog = this.getDialogFromElement(chatList.firstElementChild as HTMLElement);\n    const lastDialog = this.getDialogFromElement(chatList.lastElementChild as HTMLElement);\n\n    const indexKey = this.indexKey;\n    this.offsets.top = firstDialog[indexKey];\n    this.offsets.bottom = lastDialog[indexKey];\n  }\n\n  private getDialogFromElement(element: HTMLElement) {\n    return appMessagesManager.getDialogOnly(element.dataset.peerId.toPeerId());\n  }\n\n  public onChatsScrollTop = () => {\n    return this.onChatsScroll('top');\n  };\n  \n  public onChatsScroll = (side: SliceSides = 'bottom') => {\n    if(this.scroll.loadedAll[side]) {\n      if(this.loadContacts) {\n        this.loadContacts();\n      }\n\n      return Promise.resolve();\n    } else if(this.loadDialogsPromise) return this.loadDialogsPromise;\n\n    this.log('onChatsScroll', side);\n    return this.loadDialogs(side);\n  };\n\n  public setListClickListener(list: HTMLUListElement, onFound?: () => void, withContext = false, autonomous = false, openInner = false) {\n    let lastActiveListElement: HTMLElement;\n\n    const setPeerFunc = (openInner ? appImManager.setInnerPeer : appImManager.setPeer).bind(appImManager);\n\n    list.dataset.autonomous = '' + +autonomous;\n    list.addEventListener('mousedown', (e) => {\n      if(e.button !== 0) return;\n      //cancelEvent(e);\n\n      this.log('dialogs click list');\n      const target = e.target as HTMLElement;\n      const elem = findUpTag(target, 'LI');\n\n      if(!elem) {\n        return;\n      }\n\n      if(autonomous) {\n        const sameElement = lastActiveListElement === elem;\n        if(lastActiveListElement && !sameElement) {\n          lastActiveListElement.classList.remove('active');\n        }\n\n        if(elem) {\n          elem.classList.add('active');\n          lastActiveListElement = elem;\n          this.lastActiveElements.add(elem);\n        }\n      }\n\n      if(elem) {\n        if(onFound) onFound();\n\n        const peerId = elem.dataset.peerId.toPeerId();\n        const lastMsgId = +elem.dataset.mid || undefined;\n\n        setPeerFunc({\n          peerId, lastMsgId\n        });\n      } else {\n        setPeerFunc();\n      }\n    }, {capture: true});\n\n    if(DEBUG) {\n      list.addEventListener('dblclick', (e) => {\n        const li = findUpTag(e.target, 'LI');\n        if(li) {\n          const peerId = li.dataset.peerId.toPeerId();\n          this.log('debug dialog:', appMessagesManager.getDialogByPeerId(peerId));\n        }\n      });\n    }\n\n    if(withContext) {\n      attachContextMenuListener(list, this.contextMenu.onContextMenu);\n    }\n  }\n\n  public createChatList(options: {\n    // avatarSize?: number,\n    // handheldsSize?: number,\n    // size?: number,\n    new?: boolean,\n    dialogSize?: number\n  } = {}) {\n    const list = document.createElement('ul');\n    list.classList.add('chatlist'/* , \n      'chatlist-avatar-' + (options.avatarSize || 54) *//* , 'chatlist-' + (options.size || 72) */);\n\n    if(options.new) {\n      list.classList.add('chatlist-new');\n    }\n\n    if(options.dialogSize) {\n      list.classList.add('chatlist-' + options.dialogSize);\n    }\n\n    /* if(options.handheldsSize) {\n      list.classList.add('chatlist-handhelds-' + options.handheldsSize);\n    } */\n\n    return list;\n  }\n\n  public setLastMessage(\n    dialog: Dialog, \n    lastMessage?: any, \n    dom?: DialogDom, \n    highlightWord?: string, \n    loadPromises?: Promise<any>[],\n    isBatch = false,\n    setUnread = false\n  ) {\n    ///////console.log('setlastMessage:', lastMessage);\n    if(!dom) {\n      dom = this.getDialogDom(dialog.peerId);\n\n      if(!dom) {\n        //this.log.error('no dom for dialog:', dialog, lastMessage, dom, highlightWord);\n        return;\n      }\n    }\n\n    let draftMessage: MyDraftMessage;\n    if(!lastMessage) {\n      if(dialog.draft && dialog.draft._ === 'draftMessage') {\n        draftMessage = dialog.draft;\n      }\n      \n      lastMessage = appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n    }\n\n    if(lastMessage._ === 'messageEmpty'/*  || (lastMessage._ === 'messageService' && !lastMessage.rReply) */) {\n      dom.lastMessageSpan.innerHTML = '';\n      dom.lastTimeSpan.innerHTML = '';\n      delete dom.listEl.dataset.mid;\n\n      if(setUnread) {\n        this.setUnreadMessages(dialog, dom, isBatch);\n      }\n\n      return;\n    }\n\n    const peerId = dialog.peerId;\n    const isRestricted = lastMessage && appMessagesManager.isRestricted(lastMessage);\n    //let peerId = appMessagesManager.getMessagePeer(lastMessage);\n\n    //console.log('setting last message:', lastMessage);\n\n    /* if(!dom.lastMessageSpan.classList.contains('user-typing')) */ {\n\n      let mediaContainer: HTMLElement;\n      if(!lastMessage.deleted && !draftMessage && !isRestricted) {\n        const media: MyDocument | MyPhoto = appMessagesManager.getMediaFromMessage(lastMessage);\n        if(media && (media._ === 'photo' || (['video', 'gif'] as MyDocument['type'][]).includes(media.type))) {\n          const size = appPhotosManager.choosePhotoSize(media, 20, 20);\n\n          if(size._ !== 'photoSizeEmpty') {\n            mediaContainer = document.createElement('div');\n            mediaContainer.classList.add('dialog-subtitle-media');\n            \n            wrapPhoto({\n              photo: media,\n              message: lastMessage,\n              container: mediaContainer,\n              withoutPreloader: true,\n              size,\n              loadPromises\n            });\n\n            if((media as MyDocument).type === 'video') {\n              const playIcon = document.createElement('span');\n              playIcon.classList.add('tgico-play');\n\n              mediaContainer.append(playIcon);\n            }\n          }\n        }\n      }\n\n      const withoutMediaType = !!mediaContainer && !!lastMessage?.message;\n\n      let fragment: DocumentFragment;\n      if(highlightWord && lastMessage.message) {\n        fragment = appMessagesManager.wrapMessageForReply(lastMessage, undefined, undefined, false, highlightWord, withoutMediaType);\n      } else if(draftMessage) {\n        fragment = appMessagesManager.wrapMessageForReply(draftMessage);\n      } else if(!lastMessage.deleted) {\n        fragment = appMessagesManager.wrapMessageForReply(lastMessage, undefined, undefined, false, undefined, withoutMediaType);\n      } else { // rare case\n        fragment = document.createDocumentFragment();\n      }\n\n      if(mediaContainer) {\n        fragment.prepend(mediaContainer);\n      }\n\n      replaceContent(dom.lastMessageSpan, fragment);\n  \n      /* if(lastMessage.from_id === auth.id) { // You:  */\n      if(draftMessage) {\n        const bold = document.createElement('b');\n        bold.classList.add('danger');\n        bold.append(i18n('Draft'), ': ');\n        dom.lastMessageSpan.prepend(bold);\n      } else if(peerId.isAnyChat() && peerId !== lastMessage.fromId && !lastMessage.action) {\n        const sender = appPeersManager.getPeer(lastMessage.fromId);\n        if(sender && sender.id) {\n          const senderBold = document.createElement('b');\n\n          if(sender.id === rootScope.myId) {\n            senderBold.append(i18n('FromYou'));\n          } else {\n            //str = sender.first_name || sender.last_name || sender.username;\n            senderBold.append(new PeerTitle({\n              peerId: lastMessage.fromId,\n              onlyFirstName: true,\n            }).element);\n          }\n\n          senderBold.append(': ');\n          //console.log(sender, senderBold.innerText);\n          dom.lastMessageSpan.prepend(senderBold);\n        } //////// else console.log('no sender', lastMessage, peerId);\n      }\n    }\n\n    if(!lastMessage.deleted || draftMessage/*  && lastMessage._ !== 'draftMessage' */) {\n      const date = draftMessage ? Math.max(draftMessage.date, lastMessage.date || 0) : lastMessage.date;\n      replaceContent(dom.lastTimeSpan, formatDateAccordingToTodayNew(new Date(date * 1000)));\n    } else dom.lastTimeSpan.textContent = '';\n\n    if(setUnread !== null) {\n      if(setUnread) {\n        this.setUnreadMessages(dialog, dom, isBatch);\n      } else { // means search\n        dom.listEl.dataset.mid = lastMessage.mid;\n      }\n    }\n  }\n\n  private setUnreadMessages(dialog: Dialog, dom = this.getDialogDom(dialog.peerId), isBatch = false) {\n    if(!dom) {\n      //this.log.error('setUnreadMessages no dom!', dialog);\n      return;\n    }\n\n    if(!isBatch) {\n      const isMuted = appNotificationsManager.isPeerLocalMuted(dialog.peerId, true);\n      const wasMuted = dom.listEl.classList.contains('is-muted');\n      if(isMuted !== wasMuted) {\n        SetTransition(dom.listEl, 'is-muted', isMuted, 200);\n      }\n    }\n\n    let setStatusMessage: MyMessage;\n    if(dialog.draft?._ !== 'draftMessage') {\n      const lastMessage: MyMessage = appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n      if(!lastMessage.deleted && lastMessage.pFlags.out && lastMessage.peerId !== rootScope.myId) {\n        setStatusMessage = lastMessage;\n      }\n    }\n\n    setSendingStatus(dom.statusSpan, setStatusMessage, true);\n\n    const filter = appMessagesManager.filtersStorage.getFilter(this.filterId);\n    let isPinned: boolean;\n    if(filter) {\n      isPinned = filter.pinnedPeerIds.indexOf(dialog.peerId) !== -1;\n    } else {\n      isPinned = !!dialog.pFlags.pinned;\n    }\n\n    const isDialogUnread = appMessagesManager.isDialogUnread(dialog);\n    const hasUnreadBadge = isPinned || isDialogUnread;\n    // dom.messageEl.classList.toggle('has-badge', hasBadge);\n\n    const isUnreadBadgeMounted = isInDOM(dom.unreadBadge);\n    if(hasUnreadBadge && !isUnreadBadgeMounted) {\n      dom.subtitleEl.append(dom.unreadBadge);\n    }\n\n    const hasMentionsBadge = dialog.unread_mentions_count && (dialog.unread_mentions_count > 1 || dialog.unread_count > 1);\n    const isMentionBadgeMounted = dom.mentionsBadge && isInDOM(dom.mentionsBadge);\n    if(hasMentionsBadge) {\n      if(!dom.mentionsBadge) {\n        dom.mentionsBadge = document.createElement('div');\n        dom.mentionsBadge.className = 'dialog-subtitle-badge badge badge-24 mention mention-badge';\n        dom.mentionsBadge.innerText = '@';\n        dom.subtitleEl.insertBefore(dom.mentionsBadge, dom.lastMessageSpan.nextSibling);\n      }\n    }\n\n    const transitionDuration = isBatch ? 0 : 200;\n\n    SetTransition(dom.unreadBadge, 'is-visible', hasUnreadBadge, transitionDuration, hasUnreadBadge ? undefined : () => {\n      dom.unreadBadge.remove();\n    }, !isUnreadBadgeMounted ? 2 : 0);\n\n    if(dom.mentionsBadge) {\n      SetTransition(dom.mentionsBadge, 'is-visible', hasMentionsBadge, transitionDuration, hasMentionsBadge ? undefined : () => {\n        dom.mentionsBadge.remove();\n        delete dom.mentionsBadge;\n      }, !isMentionBadgeMounted ? 2 : 0);\n    }\n\n    if(!hasUnreadBadge) {\n      return;\n    }\n\n    if(isPinned) {\n      dom.unreadBadge.classList.add('tgico-chatspinned', 'tgico');\n    } else {\n      dom.unreadBadge.classList.remove('tgico-chatspinned', 'tgico');\n    }\n\n    let isUnread = true, isMention = false;\n    if(dialog.unread_mentions_count && dialog.unread_count === 1) {\n      dom.unreadBadge.innerText = '@';\n      isMention = true;\n      // dom.unreadBadge.classList.add('tgico-mention', 'tgico');\n    } else if(isDialogUnread) {\n      //dom.unreadMessagesSpan.innerText = '' + (dialog.unread_count ? formatNumber(dialog.unread_count, 1) : ' ');\n      dom.unreadBadge.innerText = '' + (dialog.unread_count || ' ');\n    } else {\n      dom.unreadBadge.innerText = '';\n      isUnread = false;\n    }\n\n    dom.unreadBadge.classList.toggle('unread', isUnread);\n    dom.unreadBadge.classList.toggle('mention', isMention);\n  }\n\n  private getDialogDom(peerId: PeerId) {\n    // return this.doms[peerId];\n    const element = this.sortedList.get(peerId);\n    return element?.dom;\n  }\n\n  private getDialog(dialog: Dialog | PeerId): Dialog {\n    if(typeof(dialog) !== 'object') {\n      const originalDialog = appMessagesManager.getDialogOnly(dialog);\n      if(!originalDialog) {\n        const peerId = dialog || NULL_PEER_ID;\n        return {\n          peerId,\n          peer: appPeersManager.getOutputPeer(peerId),\n          pFlags: {}\n        } as any;\n      }\n\n      return originalDialog;\n    }\n    \n    return dialog as Dialog;\n  }\n\n  private setCallStatus(dom: DialogDom, visible: boolean) {\n    let {callIcon, listEl} = dom;\n    if(!callIcon && visible) {\n      const {canvas, startAnimation} = dom.callIcon = callIcon = groupCallActiveIcon(listEl.classList.contains('active'));\n      canvas.classList.add('dialog-group-call-icon');\n      listEl.append(canvas);\n      startAnimation();\n    }\n\n    if(!callIcon) {\n      return;\n    }\n\n    SetTransition(dom.callIcon.canvas, 'is-visible', visible, 200, visible ? undefined : () => {\n      dom.callIcon.canvas.remove();\n      dom.callIcon = undefined;\n    }, visible ? 2 : 0);\n  }\n\n  public addListDialog(options: Parameters<AppDialogsManager['addDialogNew']>[0] & {isBatch?: boolean}) {\n    const dialog = this.getDialog(options.dialog);\n\n    options.autonomous = false;\n\n    const ret = this.addDialogNew(options);\n\n    if(ret) {\n      const {peerId} = dialog;\n      const isMuted = appNotificationsManager.isPeerLocalMuted(peerId, true);\n      if(isMuted) {\n        ret.dom.listEl.classList.add('is-muted');\n      }\n\n      if(!peerId.isUser()) {\n        this.processDialogForCallStatus(dialog, ret.dom);\n      }\n\n      this.setLastMessage(dialog, undefined, ret.dom, undefined, options.loadPromises, options.isBatch, true);\n    }\n\n    return ret;\n  }\n\n  private processDialogForCallStatus(dialog: Dialog, dom?: DialogDom) {\n    if(!IS_GROUP_CALL_SUPPORTED) {\n      return;\n    }\n\n    if(!dom) dom = this.getDialogDom(dialog.peerId);\n    if(!dom) return;\n    \n    const chat: Chat.chat | Chat.channel = appChatsManager.getChat(dialog.peerId.toChatId());\n    this.setCallStatus(dom, !!(chat.pFlags.call_active && chat.pFlags.call_not_empty));\n  }\n\n  /**\n   * use for rendering search result\n   */\n  public addDialogAndSetLastMessage(options: Omit<Parameters<AppDialogsManager['addDialogNew']>[0], 'dialog'> & {\n    message: MyMessage, \n    peerId: PeerId,\n    query?: string\n  }) {\n    const {peerId, message, query} = options;\n    const ret = appDialogsManager.addDialogNew({\n      ...options,\n      ...appMessagesManager.getMessageSenderPeerIdOrName(message),\n      dialog: this.getDialog(peerId),\n    });\n\n    this.setLastMessage(ret.dialog, message, ret.dom, query);\n\n    if(message.peerId !== peerId) {\n      ret.dom.listEl.dataset.peerId = '' + message.peerId;\n    }\n\n    return ret;\n  }\n\n  public addDialogNew(options: {\n    dialog: Parameters<AppDialogsManager['addDialog']>[0],\n    container?: Parameters<AppDialogsManager['addDialog']>[1],\n    drawStatus?: boolean,\n    rippleEnabled?: boolean,\n    onlyFirstName?: boolean,\n    meAsSaved?: boolean,\n    append?: boolean,\n    avatarSize?: number,\n    autonomous?: boolean,\n    lazyLoadQueue?: LazyLoadQueueIntersector,\n    loadPromises?: Promise<any>[],\n    fromName?: string\n  }) {\n    return this.addDialog(options.dialog, options.container, options.drawStatus, options.rippleEnabled, options.onlyFirstName, options.meAsSaved, options.append, options.avatarSize, options.autonomous, options.lazyLoadQueue, options.loadPromises, options.fromName);\n  }\n\n  public addDialog(\n    _dialog: Parameters<AppDialogsManager['getDialog']>[0], \n    container?: HTMLElement | Scrollable | DocumentFragment | false, \n    drawStatus = true, \n    rippleEnabled = true, \n    onlyFirstName = false, \n    meAsSaved = true, \n    append = true, \n    avatarSize = 54, \n    autonomous = !!container, \n    lazyLoadQueue?: LazyLoadQueueIntersector,\n    loadPromises?: Promise<any>[],\n    fromName?: string\n  ) {\n    const dialog = this.getDialog(_dialog);\n    const peerId = dialog.peerId;\n\n    const avatarEl = new AvatarElement();\n    avatarEl.loadPromises = loadPromises;\n    avatarEl.lazyLoadQueue = lazyLoadQueue;\n    avatarEl.setAttribute('dialog', meAsSaved ? '1' : '0');\n    if(fromName !== undefined) avatarEl.setAttribute('peer-title', fromName);\n    avatarEl.setAttribute('peer', '' + peerId);\n    avatarEl.classList.add('dialog-avatar', 'avatar-' + avatarSize);\n\n    if(drawStatus && peerId !== rootScope.myId && peerId.isUser()) {\n      const user = appUsersManager.getUser(peerId);\n      if(user.status?._ === 'userStatusOnline') {\n        this.setOnlineStatus(avatarEl, true);\n      }\n    }\n\n    const captionDiv = document.createElement('div');\n    captionDiv.classList.add('user-caption');\n\n    const titleSpanContainer = document.createElement('span');\n    titleSpanContainer.classList.add('user-title');\n\n    const peerTitle = new PeerTitle({\n      peerId,\n      fromName,\n      dialog: meAsSaved,\n      onlyFirstName,\n      plainText: false\n    });\n\n    titleSpanContainer.append(peerTitle.element);\n    //p.classList.add('')\n\n    // в других случаях иконка верификации не нужна (а первый - это главные чатлисты)\n    //if(!container) {\n      \n      // for muted icon\n      titleSpanContainer.classList.add('tgico'); // * эта строка будет актуальна только для !container, но ладно\n      \n      const peer = appPeersManager.getPeer(peerId);\n      if(peer?.pFlags?.verified) {\n        titleSpanContainer.append(generateVerifiedIcon());\n      }\n    //}\n    \n    const span = document.createElement('span');\n    span.classList.add('user-last-message');\n    span.setAttribute('dir', 'auto');\n\n    //captionDiv.append(titleSpan);\n    //captionDiv.append(span);\n\n    const li = document.createElement('li');\n    li.classList.add('chatlist-chat');\n    if(rippleEnabled) {\n      ripple(li);\n    }\n\n    li.append(avatarEl, captionDiv);\n    li.dataset.peerId = '' + peerId;\n\n    const statusSpan = document.createElement('span');\n    statusSpan.classList.add('message-status', 'sending-status'/* , 'transition', 'reveal' */);\n\n    const lastTimeSpan = document.createElement('span');\n    lastTimeSpan.classList.add('message-time');\n\n    const unreadBadge = document.createElement('div');\n    unreadBadge.className = 'dialog-subtitle-badge badge badge-24';\n\n    const titleP = document.createElement('p');\n    titleP.classList.add('dialog-title');\n\n    const rightSpan = document.createElement('span');\n    rightSpan.classList.add('dialog-title-details');\n    rightSpan.append(statusSpan, lastTimeSpan);\n    titleP.append(titleSpanContainer, rightSpan);\n\n    const subtitleEl = document.createElement('p');\n    subtitleEl.classList.add('dialog-subtitle');\n    subtitleEl.append(span);\n\n    captionDiv.append(titleP, subtitleEl);\n\n    const dom: DialogDom = {\n      avatarEl,\n      captionDiv,\n      titleSpan: peerTitle.element,\n      titleSpanContainer,\n      statusSpan,\n      lastTimeSpan,\n      unreadBadge,\n      lastMessageSpan: span,\n      containerEl: li,\n      listEl: li,\n      subtitleEl\n    };\n\n    /* let good = false;\n    for(const folderId in this.chatLists) {\n      if(this.chatLists[folderId] === container) {\n        good = true;\n      }\n    } */\n    if(container) {\n      const method = append ? 'append' : 'prepend';\n      container[method](li);\n    }\n\n    if(!autonomous) {\n      // @ts-ignore\n      li.dialogDom = dom;\n\n      if(appImManager.chat?.peerId === peerId) {\n        this.setDialogActive(li, true);\n      }\n    } \n    \n    return {dom, dialog};\n  }\n\n  public setTyping(dialog: Dialog) {\n    const dom = this.getDialogDom(dialog.peerId);\n    if(!dom) {\n      return;\n    }\n\n    const oldTypingElement = dom.lastMessageSpan.querySelector('.peer-typing-container') as HTMLElement;\n    const newTypingElement = appImManager.getPeerTyping(dialog.peerId, oldTypingElement);\n    if(!oldTypingElement && newTypingElement) {\n      replaceContent(dom.lastMessageSpan, newTypingElement);\n      dom.lastMessageSpan.classList.add('user-typing');\n    }\n  }\n\n  public unsetTyping(dialog: Dialog) {\n    const dom = this.getDialogDom(dialog.peerId);\n    if(!dom) {\n      return;\n    }\n\n    dom.lastMessageSpan.classList.remove('user-typing');\n    this.setLastMessage(dialog, null, dom, undefined, undefined, undefined, null);\n  }\n}\n\nconst appDialogsManager = new AppDialogsManager();\nMOUNT_CLASS_TO.appDialogsManager = appDialogsManager;\nexport default appDialogsManager;\n","// https://spicyyoghurt.com/tools/easing-functions\nexport default function easeInOutSine (t: number, b: number, c: number, d: number) {\n  return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { AccountPassword, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo } from '../../layer';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport apiManager from './mtprotoworker';\r\n\r\nexport class PasswordManager {\r\n  public getState(): Promise<AccountPassword> {\r\n    return apiManager.invokeApi('account.getPassword').then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public updateSettings(settings: {\r\n    hint?: string,\r\n    email?: string,\r\n    newPassword?: string,\r\n    currentPassword?: string\r\n  } = {}) {\r\n    //state = Object.assign({}, state);\r\n    //state.new_algo = Object.assign({}, state.new_algo);\r\n\r\n    return this.getState().then(state => {\r\n      let currentHashPromise: Promise<InputCheckPasswordSRP>;\r\n      let newHashPromise: Promise<Uint8Array>;\r\n      const params: AccountUpdatePasswordSettings = {\r\n        password: null,\r\n        new_settings: {\r\n          _: 'account.passwordInputSettings',\r\n          hint: settings.hint,\r\n          email: settings.email\r\n        }\r\n      };\r\n  \r\n      if(settings.currentPassword) {\r\n        currentHashPromise = apiManager.invokeCrypto('computeSRP', settings.currentPassword, state, false) as any;\r\n      } else {\r\n        currentHashPromise = Promise.resolve({\r\n          _: 'inputCheckPasswordEmpty'\r\n        });\r\n      }\r\n  \r\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\r\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\r\n      salt1.randomize();\r\n      salt1.set(newAlgo.salt1, 0);\r\n      newAlgo.salt1 = salt1;\r\n  \r\n      if(settings.newPassword) {\r\n        newHashPromise = apiManager.invokeCrypto('computeSRP', settings.newPassword, state, true) as any;\r\n      } else {\r\n        newHashPromise = Promise.resolve(new Uint8Array());\r\n      }\r\n  \r\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\r\n        params.password = hashes[0];\r\n        params.new_settings.new_algo = newAlgo;\r\n        params.new_settings.new_password_hash = hashes[1];\r\n  \r\n        return apiManager.invokeApi('account.updatePasswordSettings', params);\r\n      });\r\n    });\r\n  }\r\n\r\n  public check(password: string, state: AccountPassword, options: any = {}) {\r\n    return apiManager.invokeCrypto('computeSRP', password, state, false).then((inputCheckPassword) => {\r\n      //console.log('SRP', inputCheckPassword);\r\n      return apiManager.invokeApi('auth.checkPassword', {\r\n        password: inputCheckPassword as InputCheckPasswordSRP.inputCheckPasswordSRP\r\n      }, options).then(auth => {\r\n        if(auth._ === 'auth.authorization') {\r\n          apiManager.setUser(auth.user);\r\n        }\r\n\r\n        return auth;\r\n      });\r\n    });\r\n  }\r\n\r\n  public confirmPasswordEmail(code: string) {\r\n    return apiManager.invokeApi('account.confirmPasswordEmail', {code});\r\n  }\r\n\r\n  public resendPasswordEmail() {\r\n    return apiManager.invokeApi('account.resendPasswordEmail');\r\n  }\r\n\r\n  public cancelPasswordEmail() {\r\n    return apiManager.invokeApi('account.cancelPasswordEmail');\r\n  }\r\n\r\n  /* public requestRecovery(options: any = {}) {\r\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\r\n  }\r\n\r\n  public recover(code: any, options: any = {}) {\r\n    return apiManager.invokeApi('auth.recoverPassword', {\r\n      code\r\n    }, options);\r\n  } */\r\n}\r\n\r\nconst passwordManager = new PasswordManager();\r\nMOUNT_CLASS_TO.passwordManager = passwordManager;\r\nexport default passwordManager;\r\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.Recorder=t():e.Recorder=t()}(\"undefined\"!=typeof self?self:this,(function(){return function(e){var t={};function o(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,o),n.l=!0,n.exports}return o.m=e,o.c=t,o.d=function(e,t,i){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},o.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(o.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var n in e)o.d(i,n,function(t){return e[t]}.bind(null,n));return i},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,\"a\",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p=\"\",o(o.s=0)}([function(e,t,o){\"use strict\";(function(t){var o=t.AudioContext||t.webkitAudioContext,i=function(e){if(!i.isRecordingSupported())throw new Error(\"Recording is not supported in this browser\");e||(e={}),this.state=\"inactive\",this.config=Object.assign({bufferLength:4096,encoderApplication:2049,encoderFrameSize:20,encoderPath:\"encoderWorker.min.js\",encoderSampleRate:48e3,maxFramesPerPage:40,mediaTrackConstraints:!0,monitorGain:0,numberOfChannels:1,recordingGain:1,resampleQuality:3,streamPages:!1,reuseWorker:!1,wavBitDepth:16},e),this.encodedSamplePosition=0};i.isRecordingSupported=function(){return o&&t.navigator&&t.navigator.mediaDevices&&t.navigator.mediaDevices.getUserMedia&&t.WebAssembly},i.prototype.clearStream=function(){this.stream&&(this.stream.getTracks?this.stream.getTracks().forEach((function(e){e.stop()})):this.stream.stop(),delete this.stream),this.audioContext&&this.closeAudioContext&&(this.audioContext.close(),delete this.audioContext)},i.prototype.encodeBuffers=function(e){if(\"recording\"===this.state){for(var t=[],o=0;o<e.numberOfChannels;o++)t[o]=e.getChannelData(o);this.encoder.postMessage({command:\"encode\",buffers:t})}},i.prototype.initAudioContext=function(e){return e&&e.context?(this.audioContext=e.context,this.closeAudioContext=!1):(this.audioContext=new o,this.closeAudioContext=!0),this.audioContext},i.prototype.initAudioGraph=function(){this.encodeBuffers=function(){delete this.encodeBuffers},this.scriptProcessorNode=this.audioContext.createScriptProcessor(this.config.bufferLength,this.config.numberOfChannels,this.config.numberOfChannels),this.scriptProcessorNode.connect(this.audioContext.destination),this.scriptProcessorNode.onaudioprocess=e=>{this.encodeBuffers(e.inputBuffer)},this.monitorGainNode=this.audioContext.createGain(),this.setMonitorGain(this.config.monitorGain),this.monitorGainNode.connect(this.audioContext.destination),this.recordingGainNode=this.audioContext.createGain(),this.setRecordingGain(this.config.recordingGain),this.recordingGainNode.connect(this.scriptProcessorNode)},i.prototype.initSourceNode=function(e){return e&&e.context?t.Promise.resolve(e):t.navigator.mediaDevices.getUserMedia({audio:this.config.mediaTrackConstraints}).then(e=>(this.stream=e,this.audioContext.createMediaStreamSource(e)))},i.prototype.loadWorker=function(){this.encoder||(this.encoder=new t.Worker(this.config.encoderPath))},i.prototype.initWorker=function(){var e=(this.config.streamPages?this.streamPage:this.storePage).bind(this);return this.recordedPages=[],this.totalLength=0,this.loadWorker(),new Promise((t,o)=>{var i=o=>{switch(o.data.message){case\"ready\":t();break;case\"page\":this.encodedSamplePosition=o.data.samplePosition,e(o.data.page);break;case\"done\":this.encoder.removeEventListener(\"message\",i),this.finish()}};this.encoder.addEventListener(\"message\",i),this.encoder.postMessage(Object.assign({command:\"init\",originalSampleRate:this.audioContext.sampleRate,wavSampleRate:this.audioContext.sampleRate},this.config))})},i.prototype.pause=function(e){if(\"recording\"===this.state){if(this.state=\"paused\",e&&this.config.streamPages){var t=this.encoder;return new Promise((e,o)=>{var i=o=>{\"flushed\"===o.data.message&&(t.removeEventListener(\"message\",i),this.onpause(),e())};t.addEventListener(\"message\",i),t.postMessage({command:\"flush\"})})}return this.onpause(),Promise.resolve()}},i.prototype.resume=function(){\"paused\"===this.state&&(this.state=\"recording\",this.onresume())},i.prototype.setRecordingGain=function(e){this.config.recordingGain=e,this.recordingGainNode&&this.audioContext&&this.recordingGainNode.gain.setTargetAtTime(e,this.audioContext.currentTime,.01)},i.prototype.setMonitorGain=function(e){this.config.monitorGain=e,this.monitorGainNode&&this.audioContext&&this.monitorGainNode.gain.setTargetAtTime(e,this.audioContext.currentTime,.01)},i.prototype.start=function(e){if(\"inactive\"===this.state)return this.initAudioContext(e),this.initAudioGraph(),this.encodedSamplePosition=0,this.initWorker().then(()=>this.initSourceNode(e)).then(e=>{this.sourceNode=e,this.state=\"recording\",this.onstart(),this.encoder.postMessage({command:\"getHeaderPages\"}),this.sourceNode.connect(this.monitorGainNode),this.sourceNode.connect(this.recordingGainNode)})},i.prototype.stop=function(){if(\"inactive\"!==this.state){this.state=\"inactive\",this.monitorGainNode.disconnect(),this.scriptProcessorNode.disconnect(),this.recordingGainNode.disconnect(),this.sourceNode.disconnect(),this.clearStream();var e=this.encoder;return new Promise(t=>{var o=i=>{\"done\"===i.data.message&&(e.removeEventListener(\"message\",o),t())};e.addEventListener(\"message\",o),e.postMessage({command:\"done\"}),this.config.reuseWorker||e.postMessage({command:\"close\"})})}return Promise.resolve()},i.prototype.destroyWorker=function(){\"inactive\"===this.state&&this.encoder&&(this.encoder.postMessage({command:\"close\"}),delete this.encoder)},i.prototype.storePage=function(e){this.recordedPages.push(e),this.totalLength+=e.length},i.prototype.streamPage=function(e){this.ondataavailable(e)},i.prototype.finish=function(){if(!this.config.streamPages){var e=new Uint8Array(this.totalLength);this.recordedPages.reduce((function(t,o){return e.set(o,t),t+o.length}),0),this.ondataavailable(e)}this.onstop(),this.config.reuseWorker||delete this.encoder},i.prototype.ondataavailable=function(){},i.prototype.onpause=function(){},i.prototype.onresume=function(){},i.prototype.onstart=function(){},i.prototype.onstop=function(){},e.exports=i}).call(this,o(1))},function(e,t){var o;o=function(){return this}();try{o=o||new Function(\"return this\")()}catch(e){\"object\"==typeof window&&(o=window)}e.exports=o}])}));"],"names":["CodeInputField","constructor","options","super","plainText","input","this","type","setAttribute","autocomplete","lastLength","addEventListener","e","classList","remove","setLabel","value","replace","slice","length","setValueSilently","onFill","PasswordMonkey","passwordInputField","size","needFrame","container","document","createElement","add","load","loadPromise","loop","autoplay","width","height","noCache","then","_animation","animation","currentFrame","direction","setSpeed","pause","onVisibilityClickAdditional","passwordVisible","setDirection","curFrame","play","TrackingMonkey","inputField","max","playAnimation","frame","Math","min","round","idleAnimation","stop","canvas","style","display","Promise","all","PasswordInputField","onVisibilityClick","toggleVisible","toggle","name","stealthy","tabIndex","parentElement","prepend","insertBefore","cloneNode","nextSibling","append","bufferConcats","args","reduce","acc","v","byteLength","tmp","Uint8Array","forEach","b","set","ArrayBuffer","bytesCmp","bytes1","bytes2","len","i","arr","concat","Set","setInnerHTML","elem","html","innerHTML","filterChatPhotosMessages","forEachReverse","history","message","idx","action","photo","splice","undefined","count","ListLoader","previous","next","reverse","loadCount","loadWhenLeft","loadedAllUp","loadedAllDown","safeAssign","setTargets","index","reset","loadedAll","current","loadPromiseUp","loadPromiseDown","go","dispatchJump","items","item","pop","push","shift","unshift","onJump","older","resolve","anchor","promise","loadMore","result","bind","processed","processItem","onLoadedMore","SearchListLoader","backLimit","maxId","mid","appMessagesIdsManager","appMessagesManager","searchContext","peerId","limit","inputFilter","_","next_rate","nextRate","filterMids","onHistoryDelete","msgs","shouldBeDeleted","has","filter","onEmptied","onHistoryMultiappend","obj","folderId","mids","sorted","Array","from","sort","a","targets","map","Boolean","onMessageSent","rootScope","storage","isScheduled","setSearchContext","context","useSearch","cleanup","SearchGroup","clearable","className","clickable","autonomous","onFound","list","nameEl","i18n","clear","setActive","childElementCount","AppSearch","searchInput","searchGroups","onSearch","minMsgId","loadedCount","foundCount","searchPromise","searchTimeout","query","listsContainer","threadId","scrollable","messages","setVirtualContainer","onChange","searchMore","onScrolledBottom","trim","window","setTimeout","beginSearch","focus","res","searchGroup","fromId","drawStatus","avatarSize","meAsSaved","err","console","error","replaceContent","catch","InputSearch","placeholder","prevValue","timeout","onInput","clearTimeout","onClearClick","onClear","searchIcon","clearBtn","removeEventListener","icon","SliderSuperTab","slider","destroyable","_constructor","header","closeBtn","noRipple","title","content","addTab","listenerSetter","close","closeTab","open","init","selectTab","onCloseAfterTimeout","tabs","delete","removeAll","setTitle","key","SliderSuperTabEventable","eventListener","dispatchEvent","SidebarSlider","historyTabIds","canHideFirst","onCloseBtnClick","appNavigationController","navigationType","id","animate","isNavigation","closingId","onCloseTab","tab","_selectTab","Map","tabsContainer","sidebarEl","querySelector","querySelectorAll","el","get","onOpen","onOpenAfterTimeout","onPop","canAnimate","removeTabFromHistory","indexOfAndSplice","sliceTabsUntilTab","tabConstructor","preserveTab","getTab","find","t","isTabExists","onClose","AvatarEdit","getContext","clearRect","AppNewGroupTab","uploadAvatar","isGeoChat","avatarEdit","_upload","section","SettingSection","inputWrapper","groupNameInputField","label","maxLength","groupLocationInputField","canBeEdited","valueCheck","contains","userLocationCoords","userLocationAddress","nextBtn","appChatsManager","about","geo_point","address","megagroup","chatId","inputFile","peerIds","disabled","toUserId","chatsSection","nameArgs","new","startLocating","userId","dom","dialog","rippleEnabled","lastMessageSpan","appUsersManager","navigator","geolocation","getCurrentPosition","location","lat","coords","latitude","long","longitude","uri","fetch","response","json","display_name","GeolocationPositionError","SHOULD_USE_SAFARI_FIX","IS_SAFARI","userAgent","match","appMediaPlaybackController","media","scheduled","mediaDetails","waitingMediaForLoad","waitingScheduledMediaForLoad","waitingDocumentsForLoad","_volume","_muted","_playbackRate","playbackRates","voice","video","audio","seekBackward","details","playingMedia","currentTime","seekOffset","seekForward","duration","seekTo","seekTime","onMediaDocumentLoad","doc","appDocsManager","docId","supportsStreaming","handleSafariStreamable","cacheContext","appDownloadManager","src","url","playbackRate","onPlay","target","getMessageByMedia","verify","element","listLoader","jumpLength","findIndex","setMedia","getPlayingDetails","onPause","onEnded","isTrusted","paused","clean","s","playingMediaType","playItem","getMedia","resolveWaitingForLoadMedia","lockedSwitchers","cssText","body","mediaSession","actions","seekbackward","seekforward","seekto","previoustrack","nexttrack","setActionHandler","warn","properties","_key","dispatchPlaybackParams","Object","defineProperties","volume","muted","addMedia","autoload","pFlags","is_scheduled","media_unread","once","deferred","w","waitingStorage","isSafariBuffering","safariBuffering","setSafariBuffering","setNewMediadata","artwork","isVoice","artist","thumbs","bytes","sizes","h","appPhotosManager","peerPhoto","appPeersManager","appAvatarsManager","cached","attribute","attributes","file_name","performer","IS_APPLE","IS_TOUCH_SUPPORTED","metadata","MediaMetadata","willBePlayed","willBePlayedMedia","deepEqual","copy","getSearchContext","prev","getPlaybackMediaTypeFromMessage","mediaType","setSingleMedia","wasPlaying","toggleSwitchers","enabled","attachGrabListeners","onStart","onMove","onEnd","onMouseMove","event","x","pageX","y","pageY","onMouseUp","onMouseDown","button","onTouchMove","preventDefault","touches","clientX","clientY","isTouch","onTouchEnd","onTouchStart","passive","RangeSelector","mousedown","events","withTransition","useTransform","vertical","scrub","rect","getBoundingClientRect","seek","setFilled","onScrub","filled","step","setProgress","stepStr","indexOf","decimals","setHandlers","setListeners","_removeListeners","addProgress","percents","clamp","transform","rectMax","offsetAxisValue","bottom","left","toFixed","removeListeners","ButtonMenuItem","text","onClick","checkboxField","noCheckboxClickListener","ripple","textElement","textArgs","regularText","keepOpen","cancelEvent","checked","buttons","ButtonMenuToggleHandler","openedMenu","asDiv","btnMenu","ControlsHover","hideControls","setHideTimeout","hideControlsTimeout","isShown","controlsLocked","canHideControls","showControls","toggleControls","show","setup","ignoreClickClassName","findUpClassName","relatedTarget","showOnLeaveToClassName","lockControls","visible","MediaProgressLine","streamable","progressRAF","onLoadedData","r","requestAnimationFrame","cancelAnimationFrame","setLoadProgress","onTimeUpdate","onProgress","filledLoad","setSeekMax","scrubTime","buf","buffered","numRanges","nearestStart","end","start","VolumeSelector","onMuteClick","setVolume","iconIndex","ICONS","btn","VideoPlayer","onPlaybackRackMenuToggle","wrapper","playbackRateButton","parentNode","appendChild","skin","stylePlayer","setBtnMenuToggle","controls","progress","finally","initDuration","buildControls","timeDuration","insertAdjacentHTML","fullScreenButton","timeElapsed","String","toHHMMSS","volumeSelector","leftControls","togglePlay","code","good","toggleFullScreen","altKey","nextIdx","PLAYBACK_RATES","onFullScreen","setPlaybackRateIcon","rate","PLAYBACK_RATES_ICONS","player","IS_APPLE_MOBILE","webkitEnterFullscreen","enterFullscreen","isFull","throttleWithRaf","fn","schedulerFn","waiting","_args","throttleWith","formatBytes","dm","floor","log","parseFloat","pow","constructDownloadPreloader","tryAgainOnFail","preloader","cancelable","construct","circle","setAttributeNS","totalLength","attr","findMediaTargets","isBubbles","justAudioSelector","selectors","matches","prefix","selector","join","elements","mediaItems","dataset","toPeerId","AudioElement","HTMLElement","withTime","voiceAsMusic","showSender","render","isRealVoice","isOutgoing","is_outgoing","uploading","durationStr","firstElementChild","downloadDiv","onTypeLoad","audioEl","out","waveform","valueCount","dataView","DataView","buffer","byteIndex","bitShift","getUint16","decodeWaveform","svg","svgContainer","availW","barHeightMax","mediaSizes","minW","maxW","createElementNS","normValue","wfSize","barCount","maxValue","maxDelta","barX","sumI","bar_value","barWidth","createWaveformBars","fakeSvgContainer","waveformContainer","timeDiv","throttledTimeUpdate","addAudioListener","readyPromise","mousemove","offsetX","MouseEvent","targetTouches","noop","wrapVoiceMessage","descriptionEl","parts","audioPerformer","htmlToSpan","date","joinElementsWith","titleEl","middleEllipsisEl","fontWeight","audioTitle","fileName","subtitleDiv","launched","progressLine","lastChild","replaceWith","wrapAudio","audioTimeDiv","onLoad","readyState","HAVE_CURRENT_DATA","onTypeDisconnect","getTimeStr","innerText","hadSearchContext","imgs","wrapped","wrapPhoto","boxWidth","boxHeight","loadPromises","withoutPreloader","lazyLoadQueue","images","thumb","full","img","attach","autoDownload","shouldPlay","onDownloadInit","pauseListener","notifyAll","done","total","cancel","Error","reject","playListener","download","setDownloadFunction","capture","disconnectedCallback","isConnected","customElements","define","DivAndCaption","fill","border","subtitle","MEDIA_SIZE","wrapReplyDivAndCaption","subtitleEl","mediaEl","limitSymbols","isRound","mediaChildren","children","middleware","textContent","webpage","wrapSticker","div","group","CHAT_ANIMATION_GROUP","noBlur","child","ReplyContainer","isMediaSet","accumulate","initialValue","Layouter","maxWidth","minWidth","spacing","maxHeight","ratios","countRatios","proportions","countProportions","averageRatio","maxSizeRatio","layout","ComplexLayouter","layoutTwo","layoutThree","layoutFour","layoutTwoTopBottom","layoutTwoLeftRightEqual","layoutTwoLeftRight","layoutThreeLeftAndOther","layoutThreeTopAndOther","layoutFourTopAndOther","layoutFourLeftAndOther","geometry","sides","RectPart","minimalWidth","secondWidth","firstWidth","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","thirdWidth","h0","w0","w2","w1","h1","h2","static","ratio","cropRatios","attempts","multiHeight","offset","sum","pushAttempt","lineCounts","heights","first","second","third","fourth","optimalAttempt","optimalDiff","attempt","counts","lineCount","totalHeight","minLineHeight","bad1","bad2","line","diff","abs","optimalCounts","optimalHeights","rowCount","row","colCount","lineHeight","col","EditPeer","_disabled","isChanged","changedLength","requiredLength","requiredValidLength","inputFields","isValid","required","handleChange","toggleAttribute","withoutAvatar","avatarElem","doNotEditAvatar","lockWithPromise","unlockOnSuccess","RadioForm","radios","form","Row","freezed","radioField","subtitleLangKey","subtitleLangArgs","havePadding","isToggle","titleRight","noCheckboxSubtitle","titleLangKey","c","titleRightSecondary","titleRightEl","navigationTab","createMedia","RadioFormFromRows","rows","copyTextToClipboard","clipboard","writeText","textArea","top","position","select","execCommand","removeChild","fallbackCopyTextToClipboard","RadioField","alignRight","stateKey","appStateManager","state","getDeepProperty","main","langKey","_i18n","Event","bubbles","toastEl","toast","toastNew","langPackKey","debounce","ms","shouldRunFirst","shouldRunLast","waitingTimeout","waitingPromise","hadNewCall","_resolve","_reject","UsernameInputField","checkUsernameDebounced","checkUsername","getValue","originalValue","setState","I","setError","invalidText","head","username","checkUsernamePromise","channel","toChatId","available","availableText","takenText","isValidToChange","PopupPeer","overlayClosable","avatarEl","AvatarElement","noTitle","titleLangArgs","fragment","createDocumentFragment","descriptionLangKey","description","p","descriptionLangArgs","checkboxes","o","withRipple","callback","original","nextElementSibling","AppChatTypeTab","isBroadcast","random","privateRow","publicRow","privateSection","publicSection","chat","linkRow","chatFull","exported_invite","link","btnRevoke","toggleDisability","appProfileManager","caption","noDelimiter","changed","linkInputField","applyBtn","channelId","setOriginalValue","onChatUpdate","noforwards","ScrollableLoader","loading","loaded","getPromise","checkForTriggers","AppSelectPeers","chatsContainer","selected","offsetIndex","loadedWhat","renderedPeerIds","peerType","multiSelect","exceptSelf","tempIds","selfPresence","needSwitchList","includes","cachedContacts","getMoreResults","f","renderResultsFunc","renderResults","splitUp","notRendered","filterPeerTypeBy","isPeerId","deleted","method","innerContainer","topContainer","selectedContainer","selectedScrollable","li","click","sectionNameLangPackKey","noShadow","findUpAttribute","checkbox","debouncedInput","generateDelimiter","appendTo","getResultsPromise","onFirstRender","renderSaved","getTempId","getMoreDialogs","dialogs","archived","pageCount","windowSize","tempId","newOffsetIndex","findAndSplice","d","chatRightsAction","filterByRights","isEnd","contacts","getMoreContacts","isUser","isGlobalSearch","searchResult","resultPeerIds","my_results","results","filterUnique","getMoreChannelParticipants","channelParticipants","q","participants","participant","promises","containerEl","isAnyChat","scroll","insertAdjacentElement","scrollIntoViewNew","offsetWidth","onAnimationEnd","getSelected","addInitial","values","forceDirection","PopupPickUser","closable","onSelect","hide","peerTypes","AppUserPermissionsTab","destroyListener","ChatPermissions","rights","takeOut","banned_rights","btnDeleteException","btnDelete","flags","exceptionText","toggleWith","defaultBannedRights","default_banned_rights","restrictionText","info","mainFlag","restriction","until_date","flag","AppGroupPermissionsTab","chatPermissions","addExceptionRow","openPermissions","generateContentElement","findUpTag","setSubtitle","bannedRights","cantWhat","peer","listEl","update","needAdd","new_participant","view_messages","user_id","prev_participant","exceptionsCount","setLength","loader","setLoader","migrateFrom","migrateTo","onScroll","PopupDeleteDialog","peerTitleElement","callbackLeave","flush","callbackDelete","descriptionArgs","isDanger","AppChatReactionsTab","availableReactions","appReactionsManager","originalReactions","available_reactions","enabledReactions","toggleSection","toggleCheckboxField","toggleRow","reactionsSection","checkboxFields","availableReaction","reaction","saveReactionsDebounced","wrapStickerToRow","static_icon","every","saveReactions","newReactions","AppEditChatTab","_init","isChannel","chatUpdateListeners","addChatUpdateListener","canChangeType","canChangePermissions","chatNameInputField","descriptionInputField","editPeer","chatTypeRow","setChatTypeSubtitle","reactionsRow","setReactionsLength","availableReactionsLength","inactive","reactions","permissionsRow","setPermissionsLength","race","removeAttribute","signMessagesCheckboxField","signatures","showChatHistoryCheckboxField","hidden_prehistory","AppEditContactTab","isNew","nameInputField","lastNameInputField","user","setDraftValue","first_name","last_name","notificationsCheckboxField","appNotificationsManager","notify_settings","profileNameDiv","profileSubtitleDiv","phoneRow","phone","notificationsRow","AppAddMembersTab","sel","skippable","attachToPromise","removeLoader","ret","isPrivacy","selectedPeerIds","IS_FIREFOX","generateVerifiedIcon","use","use2","getEvent","attachGlobalListenerTo","RESET_GLOBAL","SwipeHandler","cursor","listenerOptions","hadMove","xDown","yDown","handleMove","setCursorTo","onReset","handleStart","_e","verifyTouchTarget","xUp","yUp","xDiff","yDiff","setProperty","onFirstSwipe","onSwipeResult","onSwipe","setCursor","PeerProfileAvatars","photoId","avatar","BASE_CLASS","Image","draggable","loadCallback","avatars","intersectionObserver","observe","loadCallbacks","gradient","arrowPrevious","arrowNext","checkScrollTop","scrollTop","SWITCH_ZONE","freeze","clickX","prevTargets","nextTargets","openAvatarViewer","toRight","right","distance","offsetLeft","cancelNextClick","lastDiffX","minX","swipeHandler","lastX","SCALE","TRANSLATE_TEMPLATE","addIndex","ceil","IntersectionObserver","entries","entry","isIntersecting","loadNearestToTarget","setPeer","photos","Number","MAX_SAFE_INTEGER","m","chat_photo","activeTab","photo_id","unobserve","setText","PeerProfile","isDialog","setPeerStatus","needClear","bio","tagName","notifications","setMoreDetails","fillUsername","self","fillUserPhone","setAvatar","setPeerStatusInterval","setInterval","cleanupHTML","setMoreDetailsTimeout","canBeDetailed","oldAvatars","fillNotifications","fillRows","verified","fillProfileElements","cleaned","override","callbackify","peerFull","exportedInvite","AppSharedMediaTab","historiesStorage","newCloseBtn","animatedCloseIcon","transitionContainer","transitionFirstItem","editBtn","transitionLastItem","secondTitle","profile","onAdditionalScroll","searchSuper","nav","isSharedMedia","transition","cleanScrollPositions","isHeavyAnimationInProgress","toggleEditBtn","msgIdsByPeer","renderNewMessages","deleteDeletedMessages","AppSearchSuper","mediaTabs","onChangeTab","mediaTab","btnAddMembers","showConfirmation","onError","filtered","filterMessagesByType","usedFromHistory","performSearchResult","selection","isSelecting","toggleByElement","canViewMembers","setLoadMutex","loadMutex","peerChanged","setQuery","historyStorage","loadSidebarMedia","single","justLoad","RIGHT_COLUMN_ACTIVE_CLASSNAME","appSidebarRight","getElementById","isColumnProportionSet","to","toggleSidebar","setColumnProportion","sharedMediaTab","proportion","scrollWidth","previousElementSibling","documentElement","enable","active","willChange","animationPromise","AppPollResultsTab","resultsDiv","poll","appPollsManager","quiz","rQuestion","voters","total_voters","roundPercents","hr","answer","answers","answerEl","answerTitle","answerPercents","minHeight","option","votesList","votes","vote","showMore","lastElementChild","next_offset","down","lineTotalLength","minIndex","minRemainder","k","remainder","maxRemainder","pollElement","isClosed","closed","performResults","chosenIndexes","prevQuizHint","hideQuizHint","prevQuizHintOnHide","prevQuizHintTimeout","PollElement","setMaxLength","resizePolls","onHide","isQuiz","isRetracted","isPublic","isMultiple","chosingIndexes","sentVote","MAX_LENGTH","MAX_OFFSET","svgLines","setLineProgress","getTotalLength","pollId","descKey","public_voters","multiple_choice","multipleSelect","descDiv","typeDiv","avatarsDiv","close_period","close_date","timeLeftDiv","quizTimer","strokeWidth","radius","circumference","PI","period","closeTime","serverTimeManager","quizInterval","time","Date","now","timeLeft","color","stroke","strokeDashoffset","strokeDasharray","clearInterval","answerDivs","numberDivs","footerDiv","viewResults","votersCountDiv","sendVoteBtn","sendVotes","canVote","setVotersCount","clickHandler","initQuizHint","solution","solution_entities","toggleHint","textEl","entities","setQuizHint","correctResult","correct","chosen","answerIndex","foundIndex","indexes","sendVotePromise","timeEl","setResults","recent_voters","isVoted","hideSendVoteBtn","hideViewResultsBtn","maxPercents","cb","getPercentValue","iterate","fullTime","times","votersCount","multiplier","roundVideoCircumference","wrapVideo","withTail","isOut","noInfo","onlyPreview","noPlayButton","autoDownloadSize","noAutoDownload","isAlbumItem","canAutoplay","spanTime","spanPlay","needPlayButton","mime_type","photoRes","divRound","halfSize","ctx","globalVideo","isInDOM","onPaused","onFrame","drawImage","detached","foreignObject","getAttributeNS","gotThumb","poster","aspecter","isUpload","downloaded","attachMethod","renderDeferred","detach","isFulfilled","animationIntersector","loadPhotoThumbFunc","loadFunc","setManual","queueId","renderImageFromUrl","wrapDocument","audioElement","extSplitted","split","ext","isArray","toLowerCase","docDiv","icoDiv","descriptionParts","nameDiv","_downloadDiv","save","canOpenAfter","noThumb","noFadeIn","blurAfter","thumbImage","image","isFit","loadThumbPromise","isGif","photoSize","needFadeIn","renderOnLoad","renderImageWithFadeIn","canAttachPreloader","renderPromise","sequentialDom","wrapStickerAnimation","side","skipRatio","animationDiv","stickerPromise","withThumb","assumeType","frameNo","maxFrame","vibrate","generateRandomSigned","randomOffsetX","randomOffsetY","stableOffsetX","setPosition","onlyThumb","emoji","needUpscale","asStatic","stickerType","sticker","toneIndex","isAnimated","isThumbNeededForType","haveThumbCached","stickerCachedThumbs","afterRender","stickerThumbConverted","webpWorkerController","blob","animationData","data","sendInteractionThrottled","appStickersManager","restart","bubble","throttle","firstTime","msg_id","emoticon","interaction","JSON","stringify","devicePixelRatio","wrapStickerSetThumb","downloadOptions","animated","videos","lottieLoader","URL","createObjectURL","stickerSet","documents","previousMedia","_size","wrapReply","replyContainer","prepareAlbum","widthItem","heightItem","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","forMedia","mediaDiv","wrapAlbum","groupId","attachmentDiv","getMessage","positionElementByIndex","pos","prevPos","whichChild","SortedList","updateElementWith","updateListWith","_updateList","onSort","updateList","canUpdate","getAll","batch","updateBatch","base","onElementCreate","noScheduler","onDelete","getIndex","onUpdate","insertInDescendSortedArray","SortedUserList","onListLengthChange","status","willChangeLength","createChatListOptions","doTimeout","SORT_INTERVAL","handleHorizontalSwipe","cancelY","isSwipingBackSafari","handleTabSwipe","PopupForward","peerIdMids","overrideOnSelect","PopupDeleteMessages","onConfirm","revoke","titleArgs","hasRights","canRevoke","PopupSendNow","cancelSelection","getSelection","empty","removeAllRanges","accumulateMapSet","AppSelection","selectedMids","doNotAnimate","onCancelSelection","toggleSelection","listenElement","selectedText","toString","createRange","verifyTouchLongPress","getElementFromTarget","getElementsBetween","last","firstRect","lastRect","isHigher","parent","lookupBetweenParentClassName","lookupBetweenElementsQuery","firstIndex","lastIndex","targetLookupClassName","verifyTarget","seen","selecting","firstTarget","processElement","checkBetween","seenSet","isSelected","isMidSelected","seenLength","findUpAsChild","elementsBetween","toggleByMid","canceledSelection","verifyMouseMoveTarget","removeManual","documentListenerOptions","isElementShouldBeSelected","appendCheckbox","toggleElementCheckbox","hasCheckbox","getCheckboxInputFromElement","updateContainer","forceSelection","cantForward","cantDelete","cantSend","getScheduledMessagesStorage","getMessagesStorage","getMessageFromStorage","canForward","canDeleteMessage","onUpdateContainer","toggleCheckboxes","wasSelecting","blurActiveElement","forwards","onToggleSelection","IS_MOBILE_SAFARI","updateElementSelection","toggleMid","unselect","deleteSelectedMids","SearchSelection","contentTab","selectionCountEl","selectionGotoBtn","selectionForwardBtn","selectionDeleteBtn","navScrollableContainer","selectionContainer","btnCancel","attachClickOptions","keys","fromPeerId","isPrivate","transitionElement","opacity","ChatSelection","bubblesContainer","recording","canSelectBubble","isGroupedBubbleSelected","getMidsByMid","getBubbleGroupedItems","groupContainer","isGroupedSelected","isGroupedMidsSelected","mounted","getMountedBubble","needTranslateX","widthFrom","widthTo","center","selectionInputWrapper","selectionSendNowBtn","selectionLeft","selectionRight","translateButtonsX","inputContainer","isGrouped","groupedCheckboxInput","SearchContextMenu","attachTo","onGotoClick","onForwardClick","onSelectClick","onClearSelectionClick","onDeleteClick","cancelBubble","withSelection","prevTabId","urlsToRevoke","nextRates","loadedChats","firstLoad","logger","monthContainers","mediaTabsMap","asChatList","groupByMonth","hideEmptyTabs","onTransitionStart","onTransitionEnd","searchContextMenu","navScrollable","tabsMenu","menuTab","span","unlockScroll","prevId","lockers","lockTouchScroll","searchGroupMedia","horizontalMenu","tabContent","skipScroll","newMediaTab","fromMediaTab","offsetTop","scrollHeight","rect2","onMediaClick","targetClassName","AppMediaViewer","copySearchContext","openMedia","inputMessagesFilterPhotoVideo","inputMessagesFilterDocument","useHeavyAnimationCheck","lock","unlockAndRefresh","processEmptyFilter","processPhotoVideoFilter","elemsToAppend","processDocumentFilter","processUrlFilter","entity","totalEntities","display_url","sliced","same","hostname","hash","rDescription","previewDiv","rTitle","subtitleFragment","htmlToDocumentFragment","HTMLAnchorElement","decodeURIComponent","href","firstChild","sharedMediaDiv","processCallback","monthContainer","getMonthContainerByTimestamp","afterPerforming","loadChats","inputMessagesFilterEmpty","showMembersCount","participants_count","regExp","RegExp","escapeRegExp","cleanSearchText","titleSpan","formatPhoneNumber","formatted","arg","globalContacts","intlElement","isShort","minDate","renderRecentSearch","recent","recentSearch","peers","people","onlyFirstName","loadMembers","renderParticipants","membersList","LOAD_COUNT","loadType","logStr","used","slicedLength","ids","filters","counters","firstMediaTab","counter","membersTab","toLoad","timestamp","setHours","setDate","dateTimestamp","getTime","containers","month","getFullYear","year","dateElement","haveTimestamps","getObjectKeysAndSort","goFirst","revokeObjectURL","newInputFilter","maxDate","PrivacyType","appPrivacyManager","privacy","updatePrivacy","rules","setPrivacy","inputKey","privacyRules","users","chats","apiUpdatesManager","convertInputKeyToKey","inputRule","rule","assign","getPrivacy","privacyKey","getPrivacyRulesDetails","types","allowPeers","disallowPeers","PrivacySection","onRadioChange","captions","captionElement","radioSection","exceptions","Everybody","Nobody","radioRows","Contacts","skipTypes","noExceptions","generateSection","exceptionTexts","exception","_peerIds","newPeerIds","generateStr","splitPeersByType","setRadio","chatKey","usersKey","splitted","AppPrivacyPhoneNumberTab","phoneCaption","phoneSection","sCaption","AppTwoStepVerificationSetTab","stickerContainer","inputContent","btnReturn","AppSettingsTab","canFocus","isFirstInput","AppTwoStepVerificationEmailConfirmationTab","isFirst","email","codeInputField","passwordManager","goNext","btnChange","btnResend","disable","AppTwoStepVerificationEmailTab","onContinueClick","btnContinue","btnSkip","toggleButtons","hint","currentPassword","plainPassword","newPassword","symbols","isCancel","AppTwoStepVerificationHintTab","onSkipClick","saveHint","AppTwoStepVerificationReEnterPasswordTab","monkey","verifyInput","AppTwoStepVerificationEnterPasswordTab","has_password","labelText","getStateInterval","getState","_state","auth","AppTwoStepVerificationTab","btnChangePassword","btnDisablePassword","btnSetRecoveryEmail","has_recovery","btnSetPassword","AppPrivacyLastSeenTab","AppPrivacyProfilePhotoTab","AppPrivacyForwardMessagesTab","AppPrivacyAddToGroupsTab","AppPrivacyCallsTab","AppActiveSessionsTab","Session","app_name","app_version","ip","country","date_active","date_created","midtitle","device_model","system_version","platform","authorizations","session","btnTerminate","otherSection","onTerminateClick","menuElement","AppBlockedUsersTab","btnAdd","bot","blocked","convertKeyToInputKey","toUpperCase","AppPrivacyAndSecurityTab","SUBTITLE","blockedPeerIds","blockedUsersRow","passwordState","twoFactorRow","email_unconfirmed_pattern","activeSessionsRow","updateActiveSessions","setBlockedCount","updateBlocked","rowsByKeys","numberVisibilityRow","lastSeenTimeRow","photoVisibilityRow","callRow","linkAccountRow","groupChatsAddRow","updatePrivacyRow","disallowLength","allowLength","settings","sensitive_can_change","sensitive_enabled","sensitiveRow","_enabled","deleteButton","appDraftsManager","auths","averageColorFromCanvas","pixel","pixels","getImageData","pixelsLength","outPixel","Uint8ClampedArray","rgbaToHsla","g","l","hslaToRgba","hue2rgb","hexaToRgba","hexa","parseInt","hexToRgb","hex","rgbaToHexa","rgba","highlightningColor","ChatBackgroundGradientRenderer","_width","_height","_tails","_scrollTails","_curve","_positions","_phases","onWheel","_animatingToNextPosition","_scrollDelta","deltaY","_onWheelRAF","drawOnWheel","changeTail","curPos","curPosition","_phase","_tail","drawGradient","drawNextPositionAnimated","frames","_frames","drawImageData","leftLength","_incrementalCurve","getPositions","positions","getNextPositions","phase","curveMax","curve","distances","nextPos","tail","getGradientImageData","_hctx","createImageData","centerDistanceY","centerDistanceY2","centerDistanceX","swirlFactor","sqrt","theta","sinTheta","sin","cosTheta","cos","pixelX","pixelY","distanceSum","_colors","distanceX","distanceY","putImageData","_ctx","_hc","colors","getAttribute","_canvas","fillStyle","fillRect","toNextPosition","tails","nextPhaseOnIdx","inc","curves","scrollAnimate","_addedScrollListener","createCanvas","gradientRenderer","ColorPicker","hue","saturation","lightness","alpha","onGrabStart","boxDragger","onGrabEnd","box","sliders","hueDragger","hexInputField","rgbInputField","inputs","valid","setColor","rgbRegExp","attachBoxListeners","attachHueListeners","boxRect","saturationHandler","hueRect","hueHandler","updateHexInput","updateRgbInput","hexaToHsla","rgb","boxX","percentY","boxY","percentHue","hueX","updatePicker","getCurrentColor","rgbaArray","hsl","hsla","maxX","maxY","posX","posY","lightnessX","lightnessY","AppBackgroundColorTab","_applyColor","updateColorPicker","colorPicker","background","theme","intensity","slug","onColorChange","applyColor","gridSection","grid","backgroundColor","isColored","uploadTempId","AppBackgroundTab","clicked","wallpapersByElement","elementsByKey","onUploadClick","file","access_hash","dc_id","file_reference","wallpaper","upload","addNotifyListener","_wallpaper","newDoc","newCacheContext","setBackgroundDocument","getWallpaperKey","addWallPaper","onResetClick","defaultTheme","STATE_INIT","blurCheckboxField","blur","onGridClick","saveToCache","_tempId","onReady","getPixelPromise","imageUrl","naturalWidth","naturalHeight","averageColor","create","getColorsFromWallpaper","getWallpaperKeyFromTheme","uploadButton","colorButton","resetButton","pattern","accountWallpapers","wallpapers","gridContainer","background_color","second_background_color","third_background_color","fourth_background_color","hasFile","isDark","dark","webkitMaskImage","ANIMATION_GROUP","PopupStickers","stickerSetInput","onStickersClick","fileId","h6","stickersDiv","stickersFooter","loadStickerSet","installed_date","AppQuickReactionTab","quickReaction","RangeSettingSelector","minValue","writeValue","valueDiv","valueContainer","range","AppGeneralSettingsTab","chatBackgroundButton","animationsCheckboxField","enterRow","ctrlEnterRow","kilometersRow","milesRow","formats","format","runFirst","getNextTimeout","_callback","run","eachTimeout","getSeconds","eachMinute","str","toLocaleTimeString","hour","minute","suggestCheckboxField","bigCheckboxField","renderQuickReaction","loopCheckboxField","stickerSets","stickersContent","renderStickerSet","allStickers","sets","AppEditProfileTab","firstNameInputField","bioInputField","i18n_","usernameInputField","setProfileUrl","profileUrlContainer","profileUrlAnchor","userFull","AppIncludedChatsTab","foundInFilters","dialogsByFilters","onSelectChange","confirmBtn","cmp","pinnedPeerIds","pinned_peers","other","otherLegacy","editFolderTab","setFilter","categoriesSection","exclude_muted","ico","exclude_archived","exclude_read","non_contacts","groups","broadcasts","bots","selectedPeers","includePeerIds","excludePeerIds","addedInitial","_add","hasOwnProperty","originalFilter","AppEditFolderTab","deleteFolderButton","bool","menuBtn","inputSection","generateList","h2Text","categories","includedFlagsContainer","excludedFlagsContainer","include","include_peers","editCheckForChange","reloadMissingPromises","loadAnimationPromise","onCreateOpen","onEditOpen","ul","renderMore","_length","exclude_peers","AppChatFoldersTab","filtersRendered","renderFolder","dialogFilter","folder","channels","filterId","orderIndex","createFolderBtn","foldersSection","suggestedSection","onFiltersContainerUpdate","getSuggestedFilters","order","suggestedFilters","AppNotificationsTab","NotifySection","enabledRow","typeText","previewEnabledRow","inputNotifyPeer","notifySettings","applySettings","show_previews","mute","showPreviews","inputSettings","mute_until","contactsSignUpRow","soundRow","sound","AppLanguageTab","lang_pack","languages","language","lang_code","native_name","langPack","confirmationPopup","cancelButton","autoDownloadPeerTypeSection","contactsCheckboxField","privateCheckboxField","groupsCheckboxField","channelsCheckboxField","AppAutoDownloadPhotoTab","AppAutoDownloadFileTab","debouncedSave","sizeMax","MIN","MAX_RANGE","MAX","upTo","compareAndUpdate","AppAutoDownloadVideoTab","AUTO_DOWNLOAD_FOR_KEYS","private","AppDataAndStorageTab","autoCheckboxField","autoDownloadNew","setSubtitles","setAutoDownloadSubtitle","photoRow","videoRow","fileRow","file_size_max","openTab","onDisabledChange","gifsCheckboxField","videosCheckboxField","peerKeys","enabledKeys","isAll","edit","changeAvatarBtn","updateChangeAvatarBtn","buttonsDiv","devicesRow","languageRow","buttonsSection","getAuthorizations","overwrite","getAuthorizationsPromise","AppNewChannelTab","channelNameInputField","channelDescriptionInputField","onLengthChange","broadcast","PopupCreateContact","withConfirm","btnConfirm","telInputField","validate","country_code","AppContactsTab","inputSearch","openContacts","isContact","sortedUserList","createList","IS_MOBILE","renderPage","AppArchivedTab","chatList","wasFilterId","AppPeopleNearbyTab","isLocationWatched","errorCategory","retryBtn","locatedPeers","dialogSize","parseDistance","peopleSection","SettingChatListSection","sortedList","btnMakeVisible","makeButton","btnMakeInvisible","btnCreateGroup","startWatching","stopWatching","latestLocationSaved","accuracy","updates","orderedPeers","groupsCounter","usersCounter","watchPosition","isLongitudeDifferent","isLatitudeDifferent","distanceCheck","calculateDistance","lat1","long1","lat2","long2","asin","formatNumber","LEFT_COLUMN_ACTIVE_CLASSNAME","fakeGradientDelimiter","delimiter","appSidebarLeft","sidebarHeader","onContactsClick","backBtn","btnArchive","themeCheckboxField","filteredButtons","userName","sessionStorage","kz_version","toolsBtn","btnMenuFooter","rel","stopPropagation","newBtnMenu","updateBtn","reload","initSearch","archivedCount","unreadDialogsCount","checkUpdateInterval","cache","ok","hasUpdate","searchContainer","pickedElements","selectedPeerId","selectedMinDate","selectedMaxDate","updatePicked","removeProperty","helper","unselectEntity","renderEntity","dates","dateData","peopleContainer","hideNewBtnMenuTimeout","activeClassName","onFocus","clearRecentSearchBtn","BubbleGroups","detailsMap","newGroupDiff","removeBubble","updateGroup","changeBubbleMid","addBubble","viaBotId","fwdFromId","insertObject","foundBubble","foundAtIndex","foundMidOnSameTimestamp","_timestamp","_mid","bubbleGroup","insertIndex","updateGroupByMessageId","PopupDatePicker","initDate","onPick","noButtons","selectedDate","onPrevClick","selectedMonth","setMonth","getMonth","minMonth","prevBtn","onNextClick","maxMonth","onDateClick","selectedEl","setTimeTitle","setFullYear","getDate","controlsDiv","monthTitle","monthsContainer","handleTimeInput","onOverflow","maxString","hoursInputField","minutesInputField","number","setMinutes","getMinutes","getHours","popupCenterer","timeOptions","sendDate","dateOptions","day","weekday","renderElement","firstDate","weekStartDate","getDay","dayIndex","clonedDate","showOverflowMonths","lines","CLASS_NAME","StackedAvatars","avatarContainer","AVATAR_CLASS_NAME","ReactionElement","reactionCount","_reactionCount","setCanRenderAvatars","canRenderAvatars","doNotRenderSticker","hadStickerContainer","center_icon","wrapPromise","wrapStickerPromise","renderCounter","displayOn","renderAvatars","recentReactions","stackedAvatars","peer_id","setIsChosen","isChosen","fireAroundAnimation","REACTION_INLINE_SIZE","REACTION_BLOCK_SIZE","around_animation","iconPlayer","aroundPlayer","REACTIONS_ELEMENTS","ReactionsElement","connectedCallback","onConnectCallback","getReactionCount","reactionElement","isPlaceholder","changeMessage","changedResults","hasReactions","availableReactionsResult","some","totalReactions","can_see_list","reactionElementIdx","recent_reactions","handleChangedResults","childNodes","timeSpan","RepliesElement","updated","postKey","replies","leftPart","recent_repliers","isUnread","read_max_id","max_id","textSpan","iconSpan","rippleContainer","makeEdited","edited","makeSponsored","MessageRender","setTime","chatType","editedSpan","sponsoredSpan","reactionsElement","reactionsMessage","isSponsored","sponsored","isMessage","views","postAuthor","post_author","fwd_from","postViewsSpan","channelViews","edit_date","edit_hide","pinned","inner","clonedArgs","_reactionsElement","renderReplies","bubbleContainer","messageDiv","isFooter","repliesFooter","setReply","isReplacing","currentReplyDiv","reply_to_mid","replyToPeerId","reply_to","reply_to_peer_id","getPeerId","originalPeerTitle","originalMessage","getMessageByPeer","wrapSingleMessage","needUpdate","replyMid","getElementByPoint","verticalSide","horizontalSide","elementFromPoint","reflowScrollableElement","StickyIntersector","handler","observeHeaders","observeElements","headersObserver","targetInfo","boundingClientRect","stickyTarget","rootBoundsInfo","rootBounds","threshold","root","elementsObserver","addSentinel","sentinel","observeStickyHeaderChanges","headerSentinel","disconnect","EMOJI_LANG_PACK","keywords","version","langCode","AppEmojiManager","keywordLangPacks","indexedLangPacks","getKeywordsPromises","getEmojiKeywords","storageKey","stateStorage","pack","isObject","validateInitObject","from_version","keywordsDifference","packKeywords","keyword","emoticons","getBothEmojiKeywords","getRecentEmojis","indexEmojis","indexObject","searchEmojis","emojis","search","POPULAR_EMOJI","getRecentEmojisPromise","recentEmoji","pushRecentEmoji","appEmojiManager","loadedURLs","appendEmoji","unify","spanEmoji","kek","getEmojiFromElement","nodeType","nodeValue","EmojiTab","closeScrollTop","onContentClick","divs","category","titleDiv","itemsDiv","unified","menu","emojiScroll","hasRecent","activeId","EmoticonsDropdown","menuOnClick","stickyIntersector","setMenuActive","recentItemsDiv","GifsMasonry","scrollPromise","processInvisibleDiv","intersector","isVisible","processVisibleDiv","gifWidth","gifHeight","willUseWidth","calcImageInBox","GifsTab","gifsContainer","masonry","EMOTICONSSTICKERGROUP","gifs","SuperStickerRenderer","regularLazyLoadQueue","animatedDivs","checkAnimationContainer","renderSticker","observeAnimatedDiv","StickersTab","recentStickers","queueCategoryPush","categoryPush","categoryDiv","categoryTitle","superStickerRenderer","recentDiv","stickers","menuWrapper","menuScroll","setTyping","pushRecentSticker","appInlineBotsManager","inlineResults","setHash","getGeoInput","geo","accuracy_radius","getInlineResults","botId","stopTime","noErrorBox","botResults","queryId","query_id","generateQId","resultId","pushPopularBot","topPeers","botPeerId","topPeer","rating","switchToPM","startParam","checkSwitchReturn","bot_inline_placeholder","peerData","switchInlineQuery","callbackButtonClick","callbackAnswer","noLinks","noLinebreaks","sendInlineResult","queryAndResultIds","inlineResult","queryID","resultID","send_message","reply_markup","replyMarkup","inputMedia","sendMessage","geoPoint","provider","venue_id","venue_type","phone_number","vcard","percent","ANIMATIONGROUP","AppGifsTab","nextOffset","onGifsClick","gifsDiv","newSearch","gifBotPeerId","AppStickersTab","setsDiv","renderSet","countDiv","stickerDiv","renderFeatured","coveredSets","filterRendered","covered","DropdownHover","forceClose","inited","onMouseOut","displayTimeout","isActive","toElement","willBeActive","dispatchResultableEvent","attachButtonListener","onmouseout","onmouseover","tabId","onSelectTabClick","searchButton","deleteBtn","checkRights","tabsEl","tabsElements","canSendStickers","canSendGifs","savedRange","getGoodRange","unlock","refresh","emojiTab","stickersTab","gifsTab","HIDE_EMOJI_TAB","INIT_TAB_ID","addLazyLoadQueueRepeat","getVisible","clearVisible","getSavedRange","rangeCount","activeElement","getRangeAt","jumpedTo","stuck","which","scrollLeft","clearDraft","emoticonsDropdown","SEND_WHEN_ONLINE_TIMESTAMP","getVisibleRect","overflowElement","lookForSticky","overflowRect","overflowTop","overflowRight","overflowBottom","overflowLeft","sticky","overflow","horizontal","visualViewport","windowWidth","innerWidth","windowHeight","innerHeight","INTERNAL_LINK_TYPE","PopupJoinChatInvite","chatInvite","request_needed","peopleCount","numberThousandSplitter","ScrollSaver","previousScrollHeight","previousScrollHeightMinusTop","restore","useReflow","newScrollTop","lastScrollPosition","IGNORE_ACTIONS","SERVICE_AS_REGULAR","TEST_SCROLL_TIMES","TEST_SCROLL","ChatBubbles","unreadOut","skippedMids","dateMessages","scrolledDown","isScrollingTimeout","unreaded","unreadedSeen","loadedTopTimes","loadedBottomTimes","messagesQueuePromise","messagesQueue","messagesQueueOnRender","messagesQueueOnRenderAdditional","firstUnreadBubble","replyFollowHistory","isFirstLoad","passEntities","viewsMids","isTopPaddingSet","onBubblesMouseMove","unhoverPrevious","hoverBubble","hoverReaction","setHoverVisible","stickerWrapper","getGroupsFirstMessage","getMiddleware","getAvailableReactionsByMessage","select_animation","sendReaction","onBubblesClick","chatInner","onDatePick","contactDiv","appImManager","setInnerPeer","callDiv","callUser","spoiler","showDuration","useRafs","spoilerTimeout","bubbleMid","reply_to_top_id","lastMsgId","saved_from_msg_id","openThread","filterMessages","getDiscussionMessage","channel_id","via","setDraft","peerIdStr","savedFrom","messageId","documentDiv","groupedItem","SINGLE_MEDIA_CLASSNAME","isSingleMedia","isMediaCompatibleForDocumentViewer","getMediaFromMessage","parents","hasAspecter","albumItem","getMidsByMessage","isReplyClick","replyToMid","reply_to_msg_id","distanceToEnd","getDistanceToEnd","lastScrollDirection","setPeerPromise","topbar","pinnedMessage","setCorrectIndex","setStickyDateManually","requestHistory","setMessageId","setScroll","bubbleGroups","setBubblePosition","scrollingToBubble","scrollToEnd","deleteMessagesByIds","tempMessage","reactionsElements","repliesElement","grouped_id","newPoll","safeRenderMessage","scrollToBubbleIfLast","getGroupedBubble","updatePosition","saveOnUpdateScroll","deleteEmptyDateGroups","getBubbleByMessage","appendReactionsElementToBubble","deletedMids","renderedId","getMidsByAlbum","renderMaxId","groupedMessagesStorage","replyAfter","shouldReply","canSend","_target","initMessageReply","highlightBubble","constructPeerHelpers","renderNewMessagesByIds","msgIds","setUnreadCount","updateUnreadByDialog","finishPeerChange","isScrolledDown","setMessagesQueuePromise","performHistoryResult","postViewsElements","different","postViews","unreadedObserver","onUnreadedInViewport","viewsObserver","sendViewCountersDebounced","sponsoredMessage","random_id","apiManager","invokeApiSingle","getChannelInput","incrementMessageViews","wasHeight","offsetHeight","resizing","skip","scrolled","part","rAF","onResizeEnd","setEndRAF","processEntries","contentRect","realDiff","_part","needScrollTop","ResizeObserver","onUpdateScrollSaver","setReactionsHoverListeners","timestamps","lastVisible","dateMessage","visibleRect","previousStickyDate","needReflow","getRenderedLength","readUnreaded","readPromise","bubblesMaxId","getHistoryStorage","readContents","isMentionUnread","readMessages","readHistory","constructPinnedHelpers","constructScheduledHelpers","onGoDownClick","bad","getBubbleByPoint","grouped","findNextMountedBubbleByMsgId","loadMoreHistory","getHistoryTopPromise","getHistoryBottomPromise","getHistory","setLoaded","onScrolledTop","readMaxId","readOutboxMaxId","msgId","permanent","emptyPlaceholderMid","replyTo","getLastBubble","setPaddingTo","isPaddingNeeded","clientHeight","paddingTop","scrollToBubbleEnd","lastDateGroup","getLastDateGroup","scrollToBubble","forceDuration","fallbackToElementStartWhenCentering","isChangingHeight","messageInput","margin","axis","getNormalSize","lastElem","lastTime","firstTimestamp","datasetKey","getDateContainerByMessage","today","bubbleContent","serviceMsg","destroy","bubblesToo","attachedUnreadBubble","fetchNewPromise","getSponsoredMessagePromise","onAnimateLadder","resolveLadderAnimation","samePeer","isRestricted","topMessage","pinnedMessages","isTarget","followingUnread","savedPosition","overrideAdditionMsgId","getChatSavedPosition","getReadMaxIdIfUnread","getDialogOnly","unread_count","foundSlice","findSliceOffset","isJump","setStartParam","setQueueId","messageEntityBotCommand","isAnyGroup","isBot","additionMsgId","maxBubbleId","oldChatInner","fromUp","mountedByLastMsgId","afterSetPromise","fetchReactions","getMessagesReactions","needFetchInterval","isFetchIntervalNeeded","getNewHistory","isBottomEnd","onScrolledAllDown","unread_mark","markDialogUnread","canWrite","renderMessagesQueue","queue","setUnreadDelimiter","local","additionalCallback","renderMessage","multipleRender","albumMustBeRenderedFull","our","isMegagroup","contentWrapper","wasClassNames","classNames","transitionDelay","originalMid","unread","chat_id","wrapMessageActionTextNew","is_single","messageMessage","messageMedia","getAlbumText","richText","canHaveTail","isStandaloneMedia","needToSetHTML","emojiEntities","strLength","curr","getAnimatedEmojiSticker","forward","containerDiv","rowDiv","buttonEl","same_peer","popup","column","messageWithReplies","getMessageWithReplies","withReplies","fwdFrom","nameContainer","canHideNameIfMedia","processingWebPage","IS_ANDROID","previewResizer","preview","quote","mediaSize","quoteTextDiv","site_name","strong","textDiv","isSquare","setAttachmentSize","emojiSticker","animatedSticker","staticSticker","newNameContainer","wrapGroupedDocuments","lastContainer","formatCallDuration","reason","contact","texts","wrapPoll","UNSUPPORTED_LANG_PACK_KEY","needName","titleVia","isForwardFromChannel","from_id","isHidden","getUser","from_name","getPeerColorById","goto","generateTail","documentContainer","documentMessageDiv","isBackLimit","scrollSaver","needReflowScroll","processLocalMessageRender","firstSlice","lastSlice","getSearch","getScheduledMessages","animateAsLadder","additionMsgIds","isAdditionRender","targetMid","sortedMids","topIds","middleIds","bottomIds","getServerMessageId","setBubbles","delay","lastMsDelay","topRes","middleRes","bottomRes","delays","renderEmptyPlaceholder","listElements","getRestrictionReasonText","getGreetingSticker","channel_post","generateMessageId","start_param","chat_invite","chat_invite_hash","JOIN_CHAT","invite","processInternalLink","getPeer","creator","generateLocalMessageId","addOffset","generateLocalFirstMessage","service","getOutputPeer","saveMessages","checkPlaceholders","invokeApiCacheable","cacheSeconds","sponsoredMessages","saveApiUsers","saveApiChats","getProfile","bot_info","checkIfEmptyPlaceholderNeeded","realLoadCount","resultPromise","isFirstMessageRender","processResult","historyResult","serviceStartMessageId","threadsServiceMessagesIdsStorage","sup","processPromise","waitPromise","safeCount","mustBeCount","PopupPinMessage","unpin","canUnpin","oneSide","silent","buttonText","pinButtonText","isSelectionEmpty","selectionRange","START_TO_END","PopupReportMessagesConfirm","STICKER_EMOJI","PopupReportMessages","preloadStickerPromise","buttonsEl","marginTop","PopupSponsored","PopupReactedList","canViewReadParticipants","canViewMessageReadParticipants","newMessage","btnClose","loaders","hasAllReactions","createFakeReaction","hasReadParticipants","readUserIds","getMessageReadParticipants","chatlist","skipReadParticipants","skipReactionsList","getMessageReactionsListAndReadParticipants","combined","allReactionsSticker","REACTION_CLASS_NAME","REACTIONS_CLASS_NAME","CAN_USE_TRANSFORM","ChatReactionsMenu","reactionsMap","players","onScrollProcessItem","reactionDiv","appear","widthContainer","reactionsContainer","reactionsScrollable","animationGroup","renderReaction","setVisible","scaleContainer","appearWrapper","selectWrapper","appear_animation","selectLoadPromise","selectPlayer","REACTION_SIZE","ChatContextMenu","onContextMenu","isSelectable","isTextSelected","isAnchorTarget","isUsernameTarget","selectedMid","isOverBubble","isTargetAGroupedItem","noForwards","viewerPeerId","canOpenReactedList","initResult","menuPadding","onSendScheduledClick","onReplyClick","onEditClick","initMessageEditing","onCopyClick","onCopyAnchorLinkClick","onCopyLinkClick","threadMessage","getPeerUsername","onPinClick","onUnpinClick","onRetractVote","sendVote","onStopPoll","stopPoll","reactionsMenu","filterButtons","setButtons","hasAttribute","notDirect","scheduleSending","editMessage","scheduleDate","canEditMessage","canPinMessage","saveDocFile","hasTarget","isGoodType","viewsButton","isViewingReactions","participantsCount","reactedLength","i18nElem","fakeText","MAX_AVATARS","PADDING_PER_AVATAR","visibility","paddingRight","reactionsCount","fakeElem","readParticipants","totalSize","SendMenu","sendMenuButtons","onSilentClick","onScheduleClick","sendMenu","openSide","onContextElement","setPeerId","PopupCreatePoll","onSubmitClick","send","radioLabel","isEmpty","isInputEmpty","questions","appendMoreField","correctAnswers","optionInputFields","labelOptions","questionInputField","sendSilent","dd","settingsCaption","anonymousCheckboxField","multipleCheckboxField","quizCheckboxField","quizSolutionField","quizElements","quizSolutionCaption","quizHr","quizSolutionContainer","quizSolutionSubtitle","onEscape","getFilledAnswers","HTMLInputElement","getRichValue","question","quizSolution","force","quizSolutionEntities","inputMediaPoll","getInputMediaPoll","sendOther","getMessageSendingParams","helperType","clearHelper","questionField","getGifDuration","arrayBuffer","currentPopup","getCurrentNewMediaPopup","PopupNewMedia","files","willAttachType","confirmShortcutIsSendShortcut","onKeyDown","placeCaretAtEnd","attachFile","willAttach","shouldCompress","params","itemDiv","attachMedia","attachDocument","sendFileDetails","mediaContainer","wasInputValue","messageInputField","attachFiles","appendDrops","appendGroupCheckboxField","groupCheckboxField","mediaCheckboxField","appendMediaCheckboxField","addFiles","toPush","_file","lastModified","isMedia","sendingParams","sendText","sendAlbum","replyToMsgId","startsWith","source","objectURL","videoWidth","videoHeight","audioDecodedByteCount","webkitAudioDecodedByteCount","noSound","onload","isPhoto","isAudio","finish","onerror","mimeType","onRender","foundPhotos","foundVideos","foundFiles","n","appendMediaToContainer","firstType","albumContainer","HANDLE_EVENT","ACTIVE_CLASS_NAME","AXIS_Y_KEYS","AXIS_X_KEYS","AutocompleteHelper","hidden","onVisible","resetTarget","waitForKey","waitForKeySet","keyNames","getCurrentTarget","setCurrentTarget","scrollTo","hadTarget","fastSmoothScroll","getNextTargetX","currentTarget","isNext","nextTarget","handleArrowKey","property","endProperty","currentRect","targetRect","getNextTargetY","fireSelect","canContinue","attached","_onKeyDown","attachListNavigation","listType","navigationItem","noBlurOnPop","attachNavigation","controller","addHelper","toggleListNavigation","fromController","skipAnimation","hideOtherHelpers","StickersHelper","onChangeScreen","checkEmoticon","ready","getMinDate","getMaxDate","PopupSchedule","canSendWhenOnline","btnSendWhenOnline","getRichValueWithCaret","field","withEntities","selNode","selOffset","startOffset","startContainer","endContainer","endOffset","possibleChildrenFocusOffset","node","alt","getRichElementValue","caretPos","substr","EmojiHelper","chatInput","onEmojiSelected","checkQuery","firstChar","AutocompletePeerHelper","doNotShow","listElement","BASE","BASE_CLASS_LIST_ELEMENT","processPeerFullForCommands","botInfos","ignoreCase","commands","botInfo","botCommand","command","found","CommandsHelper","getReadyToSend","getProfileByPeerId","AutocompleteHelperController","helpers","preserveHelper","MentionsHelper","insertAtCaret","topMsgId","trimmed","getMentions","ReplyKeyboard","onBodyTouchStart","btnHover","checkAvailability","checkForceReply","touchListener","sendContact","getReplyMarkup","InlineHelper","_checkQuery","resolveUsername","gifsMasonry","isGallery","gallery","noCommands","separator","dcId","readBlobAsDataURL","dataURL","switch_pm","btnSwitchToPM","ChatBotCommands","setUserId","POSTING_MEDIA_NOT_ALLOWED","ChatInput","appWebPagesManager","lastUrl","lastTimeType","replyElements","willSendWebPage","recordCanceled","recordStartTime","lockRedo","canRedoFromHTML","undoHistory","executedHistory","canUndoFromHTML","onCancelRecordClick","recorder","opusDecodeController","onEmoticonsOpen","toggleClass","btnToggleEmoticons","onEmoticonsClose","isUserOnlineVisible","openScheduled","prepareDocumentExecute","undoRedo","needHTML","sameHTMLTimes","currentHTML","handleMarkdownShortcut","formatKeys","markupTooltip","applyMarkdown","showLinkEditor","shiftKey","onMessageInput","richValue","markdownEntities","urlEntities","getWebPagePromise","webPage","saveWebPage","setTopInfo","noWebPage","onHelperCancel","helperFunc","botCommands","updateBotCommandsToggle","editMsgId","saveDraftDebounced","checkAutocomplete","updateSendBtn","onBtnSendClick","forwarding","releaseMediaPlayback","setRecording","showDiscardPopup","btnCancelRecord","recordingOverlayListener","recordingNavigationItem","sourceNode","analyser","createAnalyser","connect","fftSize","frequencyData","frequencyBinCount","getByteFrequencyData","recordRippleEl","recordTimeEl","needReturn","onHelperClick","forwardElements","rowsWrapperWrapper","rowsWrapper","fakeRowsWrapper","fakeSelectionWrapper","goDownBtn","controlContainer","iconBtn","cancelBtn","onHideAuthorClick","isChangingAuthor","canToggleHideAuthor","onHideCaptionClick","forwardButtons","hideSender","showCaption","hideCaption","changePeer","changeForwardRecipient","forwardBtnMenu","forwardWasDroppingAuthor","replyTitle","forwardHover","modifyArgs","newMessageWrapper","sendAsContainer","sendAsCloseBtn","sendAsButtons","previousAvatar","onSendAsMenuToggle","sendAsAvatar","sendAsBtnMenu","inputMessageContainer","goDownUnreadBadge","goMentionBtn","goMentionUnreadBadge","goToNextMention","btnScheduled","btnToggleReplyMarkup","replyKeyboard","botCommandsToggle","scaler","botCommandsIcon","attachMenuButtons","fileInput","accept","attachMenu","multiple","autocompleteHelperController","stickersHelper","emojiHelper","commandsHelper","mentionsHelper","inlineHelper","btnSendContainer","btnSend","attachMessageInputField","previousQuery","onFakeInput","draft","saveDraft","updateSendAs","encoderSampleRate","monitorGain","numberOfChannels","recordingGain","reuseWorker","touchMouseDown","onstop","ondataavailable","typedArray","dataBlob","Blob","sendFile","isVoiceMessage","botStartBtn","toggleBotStartBtnDisability","startBot","pinnedControlBtn","originalChat","pinnedMessageContainer","neededFakeContainer","getNeededFakeContainer","fakeWrapperTo","oldFakeWrapperTo","borderRadius","fakeSelectionRect","fakeRowsRect","scale","initTranslateX","br","isStartButtonNeeded","isPeerLocalMuted","hasMentions","unread_mentions_count","serverTimeOffset","no_webpage","syncDraft","helperToo","clearInput","fromUpdate","getDraft","rMessage","setInputValue","inputFake","updateOffset","hasBotCommands","getUserFullResult","updateBotCommands","sendAsPeerId","updatingSendAsPromise","updateMessageInput","updateSendAsButtons","getChatMembersString","currentPeerId","channelFull","getCachedFullChat","default_send_as","updateSendAsAvatar","updateMessageInputPlaceholder","executeButtonsUpdate","sendAsPeerIds","getInputPeerById","send_as","getDefaultSendAs","getChannelFull","updateSendAsResult","getSendAs","isAnonymousSending","oldInputField","attachMessageInputListeners","fixSafariStickyInputFocusing","isSendShortcutPressed","ctrlKey","metaKey","setStart","collapse","addRange","readAllHistory","commandsMap","bold","italic","underline","strikethrough","monospace","saveExecuted","executed","haveThisType","isCollapsed","tag","commonAncestorContainer","setActiveMarkupButton","insertText","insertEntity","isHelper","fullValue","suffix","AUTO_COMPLETE_REG_EXP","matchIndex","newValue","hadEntities","insertLength","addEntities","caretEntity","insertCaretAtIndex","caret","originalNode","previousSibling","newNode","createTextNode","setStartAfter","insertNode","setCaretAt","_value","foundHelper","checkInlineAutocomplete","needPlaceholder","inlineMatch","btnPreloader","inlinePlaceholder","helperWaitingForward","canSetDraft","fireEvent","clearValue","fixSafariStickyInput","clearReply","unicode","forwardMessages","dropAuthor","dropCaptions","isDroppingCaptions","sendMessageWithDocument","getDoc","hideCaptionCheckboxField","replyFragment","wrapMessageForReply","initMessagesForward","fromPeerIdsMids","fromPeerIds","smth","messagesWithCaptionsLength","peerTitles","titleKey","senderTitles","firstMessage","usingFullAlbum","albumMids","newReply","intl","peerTitleEl","_message","callerFunc","replyParent","oldReply","haveReply","CLASSNAME_BASE","PinnedContainer","floating","divAndCaption","wrapperUtils","attachOnCloseEvent","needClose","isFloating","setFloating","setUtilsWidth","ChatAudio","onPlaybackRateChange","fasterEl","toggleEl","onStop","onMediaPlay","prevEl","nextEl","attachClick","volumeProgressLineContainer","tunnel","progressWrapper","playingDetails","BAR_HEIGHTS","PinnedMessageBorder","drawRect","getClipPath","barHeight","GAP","clipPath","path","getBarHeight","ONE","TWO","THREE","FOUR","MORE","getMarkHeight","markHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","clipPathId","markTranslateY","trackTranslateY","defs","mark","AnimatedSuper","getRow","animateFirst","clearRow","clearRows","currentIndex","DURATION","setNewRow","reflow","previousIndex","fromTop","ignorePrevious","previousRow","AnimatedCounter","previousNumber","getDecimal","animatedSuper","decimal","hideLeft","previousDecimalNumber","EMPTY_INDEX","setCount","previousByDecimal","decimalNumber","ChatPinnedMessage","pinnedMaxMid","pinnedMid","pinnedIndex","wasPinnedIndex","wasPinnedMediaIndex","locked","waitForScrollBottom","loadedBottom","loadedTop","scrollDownListenerSetter","getCurrentIndexPromise","isStatic","debug","dAC","pinnedMessageBorder","animatedSubtitle","animatedMedia","animatedCounter","btnOpen","openPinned","setPinnedMessage","_setPinnedMessage","unsetScrollDownListener","testMid","isNeededMore","getCurrentIndex","LOAD_OFFSET","correctAfter","gotRest","getPinnedMessage","backLimited","offset_id_offset","setScrollDownListener","lastY","isDown","handleScrollSideEvent","refreshPosition","handleFollowingPinnedMessage","followPinnedMessage","isLast","writeTo","writeMediaTo","PopupMute","tsNow","ONE_HOUR","radioForm","ChatTopbar","appGroupCallsManager","verifyButtons","isMenuOpen","btnMore","menuButtons","getDeleteButtonText","buttonsToVerify","verifyVideoChatButton","currentGroupCall","groupCall","getChatTyped","call_active","verifyCallButton","getCachedFullUser","phone_calls_available","video_calls_available","onJoinGroupCallClick","joinGroupCall","onResize","resize","setUtilsRAF","chatUtils","chatAudio","btnBack","chatInfoContainer","chatInfo","person","avatarElement","btnJoin","btnPinned","btnCall","btnGroupCall","btnMute","btnSearch","pushButtonToVerify","onBtnBackClick","isFirstChat","constructUtils","togglePeerMute","linked_chat_id","onCallClick","chatContextMenuHintWasShown","contactPeerId","toggleBlock","attachClickEvent","joinChannel","addChatUser","getChat","setMutedState","isTopMessage","hiddenPinnedMessages","constructDiscussionHelpers","byCurrent","wasPeerId","newPinnedMessage","getSearchCounters","AppPrivateSearchTab","appSearch","btnPickDate","ChatSearch","selectedIndex","onResultsClick","selectResult","onFooterClick","onUpClick","onDownClick","foundCountEl","upBtn","downBtn","footer","dateBtn","renderedCount","ChatBackgroundPatternRenderer","canvases","instance","INSTANCES","renderToCanvas","createCanvasPattern","fillCanvas","createCanvasPatternPromise","crossOrigin","createPatternFrom","createPattern","exportCanvasPatternToImage","exportCanvasPatternToImagePromise","toBlob","newUrl","objectUrl","setCanvasDimensions","Chat","backgroundEl","Log","backgroundTempId","setBackground","patternRenderer","gradientCanvas","previousGradientRenderer","previousPatternRenderer","previousPatternCanvas","patternCanvas","isDarkPattern","getInstance","_gradientRenderer","setBackgroundPromise","setType","contextMenu","beforeDestroy","cleanupBackground","searchTab","setAutoDownloadMedia","photoSizeMax","videoSizeMax","fileSizeMax","photo_size_max","video_size_max","getAutoDownloadSettingsByPeerId","setPrefix","wasAlreadyUsed","canSendToPeer","MarkupTooltip","addedListener","waitingForMouseUp","mouseUpCounter","onMouseUpSingle","resetSelection","tools1","tools2","cancelClosening","linkBackButton","linkInput","applyLink","isLinkValid","setTooltipPosition","linkApplyButton","applyDiv","delimiter1","delimiter2","delimiter3","hideTimeout","getActiveMarkupButton","nodes","getSelectedNodes","currentMarkups","closest","activeButtons","isLinkToggle","bodyRect","selectionRect","inputRect","selectionTop","sizesRect","containerRect","isFirstShow","setMouseUpEvent","handleSelection","arcParameter","rx","ry","xAxisRotation","largeArcFlag","sweepFlag","generatePathData","tl","tr","bl","ChatDragAndDrop","dropIcon","onDragOver","onDragLeave","onDrop","outlineWrapper","dropHeader","dropSubtitle","headerArgs","setPath","disableTransition","LineBlobDrawable","maxRadius","minRadius","N","radiusNext","speed","generateBlob","radDif","generateNextBlob","amplitude","speedScale","draw","paint","pinnedTop","progressToPinned","beginPath","moveTo","lineTo","r1","progressNext","x1","x2","cx","y1","y2","bezierCurveTo","closePath","WeavingState","stateId","createGradient","shader","getGradientFromType","x0","y0","createLinearGradient","addColorStop","dt","TopbarWeave","handleDevicePixelRatioChanged","setSize","forceUpdate","handleResize","resizeHandler","resizeCanvas","invokeDraw","handleFocus","focused","handleBlur","raf","lbd","lbd1","lbd2","currentState","previousState","progressToState","lastUpdateTime","animateToAmplitude","animateAmplitudeDiff","amplitude2","animateAmplitudeDiff2","top1","top2","paint1","globalAlpha","setCurrentState","states","componentDidMount","matchMedia","setAmplitude","componentWillUnmount","setCanvasSize","computedStyle","getProperty","getComputedStyle","getPropertyValue","RLottieIconItemPart","playPart","RLottieIconItem","createPart","initFrame","skipFirstFrameRendering","inverseColor","onLoadForColor","onLoadForPart","getPart","RLottieIcon","getItem","startFrame","endFrame","frameCount","SuperRLottieIcon","partState","colorState","getColor","partCallback","changedPartState","changedColorState","setPartState","setColorState","prevState","renderIfPaused","invoke","GroupCallMicrophoneIcon","GROUP_CALL_MICROPHONE_BUTTON_STATE","partName","HAND","MUTED","UNMUTED","GroupCallParticipantMutedIcon","colored","GROUP_CALL_PARTICIPANT_MUTED_STATE","colorStr","MUTED_FOR_ME","MUTED_BY_ADMIN","getColorByMutedState","generateEqualParts","clearMutedStateModifier","GroupCallParticipantStatusElement","withIcons","icons","iconClassName","element2","actionClassName","GroupCallParticipantsList","onElementDestroy","getGroupCallParticipantMutedState","mutedIcon","mutedState","callVideoCanvasBlur","renderFrame","GroupCallParticipantVideoElement","setPinned","setParticipant","peerTitle","groupCallParticipantMutedIcon","groupCallParticipantStatus","updateParticipant","GroupCallParticipantsVideoElement","participantsElements","groupCallId","setElementDisplay","pinnedSource","pinSource","unpinAll","setInstance","shouldDisplayElement","displayPinned","shouldDisplay","isPinned","hasAnyVideo","participantElements","participantVideo","getVideoElementFromParticipantByType","_onLengthChange","GroupCallParticipantContextMenu","onOpenProfileClick","PopupGroupCall","targetPeerId","toggleParticipantMuted","editParticipant","canManageCall","can_self_unmute","muted_by_you","kickFromChat","getParticipantByPeerId","getContainer","GroupCallParticipantsElement","groupCallParticipantsVideo","getGroupCallParticipants","GroupCallDescriptionElement","descriptionIntl","GroupCallTitleElement","mediaDevices","_className","buttonDiv","isConfirm","resizeHandlerClassName","MovableElement","fixDimensions","fixPosition","addResizeHandlers","setSwipeHandler","destroyElements","handlers","startTop","startLeft","startWidth","startHeight","resizingSide","isEnlarging","resizeDiff","maxPossible","setPositionToCenter","MovablePanel","toggleMovable","movable","movableOptions","toggleClassName","raise_hand_rating","withoutOverlay","onFullScreenClick","onToggleControls","buttonsContainer","onVideoClick","btnVideo","toggleVideoSharing","onScreenClick","btnScreen","toggleScreenSharing","toggleMuted","changeRaiseHand","onLeaveClick","hangUp","discard","onFullScreenChange","toggleBigLayout","btnFullScreen","btnExitFullScreen","wasFullScreen","movablePanel","isBig","videosCount","wasBig","btnInvite","btnShowColumn","toggleRightColumn","btnFullScreen2","headerInfo","newHeader","newHeaderInfo","newHeaderTitle","btnHideColumn","videosScrollable","groupCallTitle","groupCallDescription","groupCallBodyHeaderDescription","constructButtons","groupCallParticipants","updateInstance","setHasPinned","groupCallMicrophoneIcon","_makeButton","microphoneIcon","btnLeave","setDescription","microphoneButtonState","getGroupCallMicrophoneButtonState","micState","CALL_STATE","CallDescriptionElement","interval","connectionState","connectedAt","GroupCallMicrophoneIconMini","INIT_STATE","PopupCall","resizeVideoContainers","videoContainers","interlocutorUserId","emojisSubtitle","partyStates","partyMutedState","stateText","constructFirstButtons","constructSecondButtons","wasTryingToJoin","movableElement","controlsHover","getCallInstance","firstButtonsRow","muteI18nElement","secondButtonsRow","declineI18nElement","btnDecline","btnAccept","acceptCall","createVideoContainer","big","isPendingIncoming","isMuted","isSharingVideo","isSharingScreen","outputState","getMediaState","oldContainers","mediaState","getVideoElement","hasFrame","hasPromise","videoState","screencastState","videoContainer","output","getEmojisFingerprint","popupWidth","MAX_WIDTH_PX","MAX_HEIGHT_PX","isVertical","MAX_SIZE","biggestSideSize","widthRatio","heightRatio","parseSignalingData","sdp","parseMediaSectionInfo","fingerprints","fingerprint","ufrag","pwd","screencast","convertNumber","isSending","codec","ssrc","sourceGroups","ssrcGroups","sourceGroup","semantics","ssrcs","sources","rtpExtensions","payloadTypesMap","getPayloadType","payloadType","clockrate","feedbackTypes","subtype","parameters","payloadTypes","CallConnectionInstance","negotiateInternal","connection","call","localDescription","remoteDescription","descriptionInit","offerReceived","createAnswer","setLocalDescription","offer","createOffer","offerSent","initialSetup","sendCallSignalingData","crypto","subtle","P2PEncryptor","p2pKey","seqMap","concatSHA256","TextEncoder","encode","convertToUint8Array","encryptPrepared","msgKeyLarge","subarray","msgKey","aesKeyIv","prepareAesKeyIv","aesProcessCtr","encryptRawPacket","seq","setUint32","sha256a","sha256b","iv","encryptedData","dataSize","encrypt","cryptoKey","constTimeIsDifferent","msgKeyEquals","decryptRawPacket","encryptedDataSize","decryptionBuffer","getUint32","ChromeP2PSdpBuilder","stringBuilder","streamName","addExtmap","addPayloadTypes","addSsrc","finalize","FirefoxP2PSdpBuilder","dir","SafariP2PSdpBuilder","isFirefox","isSafari","extmap","j","fmtp","getOwnPropertyNames","pName","ssrcGroup","P2PSdpBuilder","sdpString","sdpMLineIndex","sdpMid","foundation","component","protocol","priority","relAddress","generation","tcpType","networkId","networkCost","candidate","generateOffer","generateAnswer","CallInstance","udp_p2p","udp_reflector","min_layer","max_layer","library_versions","createdAt","decryptQueue","candidates","streamManager","canCreateConferenceEntry","lowBattery","videoRotation","Proxy","setMediaState","sendMediaState","mediaStates","_sendMediaState","_connectionState","connectionInstance","iceConnectionState","sortIndex","findEntry","recvEntry","startScreenSharingInternal","wasStartingScreen","wasStartingVideo","requestScreen","stopVideoSharing","startVideoSharingInternal","requestInputSource","track","inputStream","getVideoTracks","stopTrack","appendToConference","isSharingVideoType","audioTrack","getAudioTracks","isClosing","setHangUpTimeout","clearHangUpTimeout","hangUpTimeout","setPhoneCall","phoneCall","canAccept","overrideConnectionState","g_a_hash","appCallsManager","generateDh","dh","g_b","g_a","g_b_hash","invokeApi","getCallInput","phonePhoneCall","savePhonePhoneCall","joinCall","encryptionKey","configuration","iceServers","connections","ipv6","port","password","urls","turn","stun","credential","iceTransportPolicy","p2p_allowed","getRtcConfiguration","bindPrefix","createPeerConnection","negotiate","sendIceCandidate","onTrack","createDescription","encryptor","decryptor","appendStreamToConference","createDataChannel","processDecryptQueue","createDataChannelEntry","dataChannelEntry","createEntry","sendEntry","dataChannel","negotiated","applyDataChannelData","parse","sendDataChannelData","iceCandidate","parsed","p2pParseCandidate","confirmCall","key_fingerprint","computeKey","emojisFingerprint","getEmojisFingerprintPromise","invokeCrypto","codePoints","unlockStreamManager","doTheMagic","getTransceivers","transceiver","getEntryByMid","bundle","sdpDescription","generateSdp","isAnswer","setRemoteDescription","onInputStream","stream","videoTrack","onMutedChange","requestAudioSource","setMuted","discardReason","discardedByOtherParty","closeConnectionAndStream","hasVideo","discardCall","performCodec","_codec","setDataToDescription","setData","transport","filterNotVP8","vp8PayloadType","rtxIdx","apt","applyCallSignalingData","performSsrcGroups","getEntryBySource","sendRecvEntry","findFreeSendRecvEntry","setEntrySource","tryToReleaseCandidates","generateCandidate","RTCIceCandidate","addIceCandidate","decryptedData","TextDecoder","decode","signalingData","onUpdatePhoneCallSignalingData","TopbarCall","onState","amplitudes","weave","clearCurrentInstance","currentDescription","instanceListenerSetter","isChangingInstance","callDescription","convertCallStateToGroupState","groupCallMicrophoneIconMini","throttledMuteClick","weaveContainer","CALL_REQUEST_TIMEOUT","calls","instances","sortedInstances","updatePhoneCall","saveCall","phone_call","createCallInstance","admin_id","g_a_or_b","updatePhoneCallSignalingData","phone_call_id","audioAsset","currentCall","getCallByUserId","callId","isDiscarded","oldCall","safeReplaceObject","getCall","hasConnected","playSound","stopSound","playSoundIfDifferent","hasCurrent","random_length","dhConfig","startCallInternal","isVideo","fullInfo","participant_id","connection_id","FOCUS_EVENT_NAME","columnEl","offline","updateStatusInterval","onHashChange","parseUriParams","tgaddr","onclick","postId","post","openUsername","setSettings","chatsSelectTabDebounced","toggleChatGradientAnimation","onDocumentPaste","attachType","newMediaPopup","canDrag","DragEvent","_types","dataTransfer","backgroundPromises","updateStatus","emojiAnimationContainer","appendEmojiAnimationContainer","createNewChat","chatsSelectTab","applyCurrentTheme","resizeBackgroundDebounced","lastBackgroundUrl","saveChatPosition","choosing","setChoosingStickerTyping","typings","typing","singleInstance","topbarCall","discardCurrentCall","setAuthorized","telegramMeWebManager","addAnchorListener","uriParams","hashtag","pathnameParams","STICKER_SET","makeLink","VOICE_CHAT","PRIVATE_POST","thread","comment","MESSAGE","domain","attachKeydownListener","myId","activatingChat","screen","IGNORE_KEYS","goodMid","nextDialog","newEvent","KeyboardEvent","commentId","noPathnameParams","pathname","noUriParams","openComment","phone_calls_private","ignoreGroupCall","ignoreCall","discardGroupCallConfirmation","discardCallConfirmation","setCurrentBackground","broadcastEvent","AppStateManager","getBackground","chatBubbles","chatPositions","applyHighlightningColor","val","endsWith","hslaStringToRgba","hslaStringToHexa","hslaStringToHex","backgroundUrl","prevTab","prevIdx","attachDragAndDropListeners","drops","mediaDrops","mount","isFiles","_dropsContainer","mediaDropsContainer","dropsContainer","_drops","foundMedia","drop","transitionTime","spliceChats","fromIndex","justReturn","spliced","chatFrom","chatIndex","existingIndex","oldChat","getTypingElement","dot","eye","getPeerTyping","langPackKeys","multi","mapa","typingElement","descriptionElement","getPeerStatus","ignoreSelf","onlines","useWhitespace","typingContainer","AppMediaViewerBase","topButtons","author","preloaderStreamable","isFirstOpen","pageEl","zoomElements","zoomSwipeStartX","zoomSwipeStartY","zoomSwipeX","zoomSwipeY","setZoomValue","rangeSelector","moversContainer","btnOut","btnIn","toggleZoom","setMoverAnimationPromise","highlightSwitchersTimeout","wholeDiv","isZooming","mover","ctrlKeyDown","changeZoom","onKeyUp","scrollingUp","MEDIA_VIEWER_CLASSNAME","overlaysDiv","mainDiv","topbarLeft","onlyMobile","authorRight","zoom","setNewMover","onDownloadClick","moveLength","setMoverPromise","evt","zoomValue","videoPlayer","zoomSwipeHandler","lastDiffY","btnMenuToggle","setMoverToTarget","appMediaViewer","closing","fromRight","removeCenterFromMover","wasActive","realParent","SVGImageElement","SVGForeignObjectElement","needOpacity","HTMLImageElement","HTMLVideoElement","setFullAspect","scaleX","scaleY","brSplitted","fillPropertyValue","willBeLeft","willBeTop","isRejected","SVGSVGElement","sizeTailPath","mediaElement","clipId","newClipId","newSvg","outerHTML","SVGUseElement","sX","sY","upscale","_br","moveTheMover","toLeft","windowW","newTransform","p1","newMover","updateMediaSource","setAuthorInfo","oldAvatar","replaceChild","_openMedia","isDocument","useContainerAsTarget","mainColumns","padding","windowH","thumbPromise","useController","moverVideo","canPlayThrough","createPlayer","ckin","overlay","HAVE_FUTURE_DATA","attachCanPlay","networkState","NETWORK_LOADING","isntEnoughData","rollback","cancellablePromise","attachPromise","haveImage","captionTimeout","isForDocument","onAuthorClick","setCaptionTimeout","btnMenuForward","btnMenuDownload","btnMenuDelete","onCaptionClick","setCaption","cantForwardMessage","cantDownloadMessage","AvatarListLoader","AppMediaViewerAvatar","onAvatarUpdate","getTarget","hadMessage","believeMe","addedToQueue","observedAttributes","attributeChangedCallback","oldValue","newPeerId","DialogsContextMenu","onArchiveClick","selectedId","folder_id","onUnmuteClick","onUnreadClick","top_message","ConnectionStatus","SENDING_STATUS","ConnectionStatusComponent","hadConnect","connecting","timedOut","updating","setConnectionStatus","baseDcId","setFirstConnectionTimeout","online","Connected","TimedOut","retryAt","setStatusText","currentLangPackKey","statusEl","statusPreloader","CHANGE_STATE_DELAY","getA","timerSpan","setStateTimeout","statusContainer","constructContainer","roundRect","defaultRadius","quadraticCurveTo","DPR","SIZE","MARGIN","RADIUS","SortedDialogList","indexKey","appDialogsManager","addListDialog","isBatch","AppDialogsManager","sortedLists","scrollables","folders","menuScrollContainer","lastActiveElements","offsets","initedListeners","loadedDialogsAtLeastOnce","onTabChange","loadDialogsPromise","onChatsScroll","_onListLengthChange","checkIfPlaceholderNeeded","hasContacts","removeContactsPlaceholder","updateContactsLength","loadContacts","verifyPeerIdForContacts","processContact","added","setListClickListener","onChatsRegularScroll","sliceTimeout","perf","performance","scrollTopWas","rectContainer","rectTarget","firstY","firstElement","lastElement","elementOverflow","sliceFromStart","sliceFromEnd","deleteDialog","setOffsets","onChatsScrollTop","loadDialogs","chatsPreloader","allUnreadCount","bottomPart","allChatsIntlElement","setFilterId","addFilter","onStateLoaded","foldersScrollable","filtersNavigationItem","changeFiltersAllChatsKey","setOnlineStatus","hasClassName","initListeners","getDialogDom","processDialogForCallStatus","setFilterUnreadCount","setLastMessage","validateDialogForFilter","setFiltersUnreadCount","updateDialog","setUnreadMessages","setDialogActive","validateListForFilter","onFiltersLengthChange","containerToAppend","renderedFilter","unsetTyping","dialogDom","callIcon","renderFiltersPromise","showFiltersPromise","getOffsetIndex","isDialogMustBeInViewport","migratedTo","testDialogForFilter","topOffset","bottomOffset","unreadSpan","foundUnmuted","generateScrollable","sortedDialogList","createChatList","clientWidth","wasShowing","currentOffsetIndex","needIndex","getConversationsResult","isTopEnd","callbacks","cccc","offsetDialog","generateEmptyPlaceholder","classNameType","subtitleArgs","placeholderContainer","wrapLocalSticker","emptyDialogsPlaceholderSubtitle","usersLength","placeholderType","updatePartClassName","updateContactsLengthPromise","firstDialog","getDialogFromElement","lastDialog","withContext","openInner","lastActiveListElement","setPeerFunc","sameElement","lastMessage","highlightWord","setUnread","draftMessage","lastTimeSpan","playIcon","withoutMediaType","sender","senderBold","setStatusMessage","disableAnimationIfRippleFound","setSendingStatus","statusSpan","isDialogUnread","hasUnreadBadge","isUnreadBadgeMounted","unreadBadge","hasMentionsBadge","isMentionBadgeMounted","mentionsBadge","transitionDuration","isMention","getDialog","originalDialog","setCallStatus","startAnimation","START_X","startTime","wasMounted","itemProgress","groupCallActiveIcon","addDialogNew","call_not_empty","addDialogAndSetLastMessage","addDialog","fromName","_dialog","captionDiv","titleSpanContainer","titleP","rightSpan","oldTypingElement","newTypingElement","updateSettings","currentHashPromise","newHashPromise","new_settings","newAlgo","new_algo","salt1","randomize","hashes","new_password_hash","check","inputCheckPassword","confirmPasswordEmail","resendPasswordEmail","cancelPasswordEmail","module","exports","defineProperty","enumerable","Symbol","toStringTag","__esModule","default","prototype","AudioContext","webkitAudioContext","isRecordingSupported","config","bufferLength","encoderApplication","encoderFrameSize","encoderPath","maxFramesPerPage","mediaTrackConstraints","resampleQuality","streamPages","wavBitDepth","encodedSamplePosition","getUserMedia","WebAssembly","clearStream","getTracks","audioContext","closeAudioContext","encodeBuffers","getChannelData","encoder","postMessage","buffers","initAudioContext","initAudioGraph","scriptProcessorNode","createScriptProcessor","destination","onaudioprocess","inputBuffer","monitorGainNode","createGain","setMonitorGain","recordingGainNode","setRecordingGain","initSourceNode","createMediaStreamSource","loadWorker","Worker","initWorker","streamPage","storePage","recordedPages","samplePosition","page","originalSampleRate","sampleRate","wavSampleRate","onpause","resume","onresume","gain","setTargetAtTime","onstart","destroyWorker","Function"],"sourceRoot":""}