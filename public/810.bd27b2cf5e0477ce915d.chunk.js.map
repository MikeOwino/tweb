{"version":3,"file":"810.bd27b2cf5e0477ce915d.chunk.js","mappings":"4cA4CA,IAAuCA,EAAnCC,EAA6B,KAgdjC,MAAMC,EAAO,IAAI,IAAK,aAAa,GA9chB,KAmBjB,MAAMC,EAAe,KACnBC,EAAY,gCACJC,IAAU,MAAC,QAAe,QAAd,EAAAA,EAAQC,cAAM,eAAEC,WACnCC,MAAK,CAACC,EAAGC,KAAOD,EAAEE,MAAQF,EAAEG,cAAcC,cAAcH,EAAEC,MAAQD,EAAEE,iBAEvE,IAAIR,EAEJD,IAEA,2BAA2B,mBAAmB,KAC5CA,OAGF,MAAMW,EAAsC,IAAIC,IAEhD,IAAIC,EAAkCC,EAEtC,MAAMC,EAAeC,SAASC,cAAc,OAC5CF,EAAaG,UAAUC,IAAI,iBAE3B,MAAMC,EAAoB,IAAI,IAAW,CACvCC,MAAO,6BACPb,MAAM,WAGRY,EAAkBE,UAAUJ,UAAUC,IAAI,gBAE1C,MAAMI,EAAeH,EAAkBI,MAGjCC,EAAgBT,SAASC,cAAc,OAC7CQ,EAAcP,UAAUC,IAAI,iBAAkB,YAAa,QAE3D,MAAMO,EAAYV,SAASC,cAAc,QACzCS,EAAUR,UAAUC,IAAI,QAAS,cACjCC,EAAkBE,UAAUK,OAAOD,GAEnC,MAAME,EAAaZ,SAASC,cAAc,MAC1CQ,EAAcI,YAAYD,GAEX,IAAI,KAAWH,GAE9B,IAAIK,EAAa,KACfA,EAAa,KAEb7B,EAAU8B,SAASC,IACjB,MAAMC,GAAQ,QAAgBD,EAAEE,MAE1BC,EAA8B,GACpCH,EAAEI,cAAcL,SAASM,IACvB,MAAMC,EAAKtB,SAASC,cAAc,MAElC,IAAIsB,EAAU,kBAAgCN,GAC9C,GAAG,IAAoB,CACrB,MAAMO,EAAYxB,SAASC,cAAc,QACzCuB,EAAUC,UAAYF,EACtBD,EAAGX,OAAOa,QAEVF,EAAGG,UAAYF,EAGjB,MAAMG,GAAK,IAAAC,MAAKX,EAAEvB,cAClBiC,EAAGE,QAAQC,YAAcb,EAAEvB,aAC3B6B,EAAGX,OAAOe,GAEV,MAAMI,EAAO9B,SAASC,cAAc,QACpC6B,EAAK5B,UAAUC,IAAI,cACnB2B,EAAKC,UAAY,IAAMV,EAAYW,aACnCV,EAAGT,YAAYiB,GAEfX,EAAMc,KAAKX,GACXV,EAAWD,OAAOW,MAGpB3B,EAAMuC,IAAIlB,EAAEE,KAAMC,MAGpBP,EAAWuB,iBAAiB,aAAcC,IACxC,GAAgB,IAAbA,EAAEC,OACH,OAGF,MAAMC,GAAS,OAAUF,EAAEE,OAAQ,MACnCC,EAAsBD,MAIxBlC,EAAkBE,UAAUO,YAAYJ,IAG1C,MAAM8B,EAAyBD,IAC7B,MAAMT,EAAeS,EAAOE,WAAW,GAAmBZ,QAAQC,YAC5DY,EAAYH,EAAOI,cAA2B,eAAeX,UAC7DV,EAAcoB,EAAUE,QAAQ,MAAO,KAE7C,OAAepC,GAAc,IAAAoB,MAAKE,KAClC,OAActB,EAAc,SAC5BV,EAAsBZ,EAAU2D,MAAK5B,GAAKA,EAAEvB,eAAiBoC,IAC7D/B,EAA0BD,EAAoBuB,cAAcwB,MAAKC,GAAgBA,EAAab,eAAiBX,IAE/GyB,EAAcC,MAAQD,EAAcE,UAAYP,EAChDQ,IACAC,YAAW,KACTC,GAAMC,SACN,OAAgBD,IAAO,KACtB,IAKL,IAAIE,EAFJvC,IAIAP,EAAa4B,iBAAiB,SAAS,SAAoCC,GACtEtB,EACDA,IAEA7B,EAAU8B,SAASC,IACjBrB,EAAM2D,IAAItC,EAAEE,MAAMH,SAAQO,GAAMA,EAAGiC,MAAMC,QAAU,QAIvDC,aAAaJ,GACbA,OAAcK,EAEdjD,EAAcP,UAAUyD,OAAO,QAC1BlD,EAAcmD,YACnBnD,EAAcP,UAAUC,IAAI,UAE5BC,EAAkByD,UAElB,OAAiB,CACfvD,UAAWvB,EAAK+E,OAAOC,cAAcA,cACrCC,QAASzD,EACT0D,SAAU,QACVC,OAAQ,IAGVhB,YAAW,KACLiB,IACFnE,SAASmC,iBAAiB,YAAaiC,EAAa,CAACC,SAAS,IAC9DF,GAA2B,KAE5B,MAGL,IAAIA,GAA2B,EAC/B,MAAMC,EAAehC,KAChB,OAAgBA,EAAEE,OAAQ,iBAG1BF,EAAEE,SAAW/B,IAIhB0C,IACAjD,SAASsE,oBAAoB,YAAaF,EAAa,CAACC,SAAS,IACjEF,GAA2B,IAGvBlB,EAAa,UACES,IAAhBL,IACH5C,EAAcP,UAAUyD,OAAO,UAC/BN,EAAckB,OAAOrB,YAAW,KAC9BzC,EAAcP,UAAUC,IAAI,QAC5BkD,OAAcK,IACb,OAQLnD,EAAa4B,iBAAiB,SAAUC,IACtC,MAAMoC,EAAMpC,EAAEoC,IACd,GAAGpC,EAAEqC,SAAmB,YAARD,EAAmB,OAAO,EAG1C,IAAIE,EAAStE,EAAkB2C,MAAM4B,cACjCC,EAAyB,GAC7B3F,EAAU8B,SAASC,IACjB,MAAM6D,EAAQ,CACZ7D,EAAExB,KACFwB,EAAEvB,aACFuB,EAAEE,MAGJ2D,EAAMC,OAAOC,SAAShE,SAAQvB,IAC5B,MAAMwF,EAAOxF,EAAKyF,MAAM,KAAKH,QAAOI,GAAQ,KAAKC,KAAKD,KAAOE,KAAIF,GAAQA,EAAK,KAAIG,KAAK,IACpFL,EAAKM,OAAS,GACfT,EAAM5C,KAAK+C,MAIf,IAAIO,IAASV,EAAMC,OAAOC,SAASnC,MAAK4C,IAA8C,IAAvCA,EAAIb,cAAcc,QAAQf,KAEzE/E,EAAM2D,IAAItC,EAAEE,MAAMH,SAAQO,GAAMA,EAAGiC,MAAMC,QAAU+B,EAAO,GAAK,SAC5DA,GAAMX,EAAQ3C,KAAKjB,MAYQ,IAAnB4D,EAAQU,OACnBrG,EAAU8B,SAASC,IACjBrB,EAAM2D,IAAItC,EAAEE,MAAMH,SAAQO,GAAMA,EAAGiC,MAAMC,QAAU,QAE1B,IAAnBoB,EAAQU,QAAwB,UAARd,GAChCjC,EAAsB5C,EAAM2D,IAAIsB,EAAQ,GAAG1D,MAAM,OAIrDR,EAAUyB,iBAAiB,aAAa,SAAiCC,GACvEA,EAAEsD,cAAe,EACjBtD,EAAEuD,iBACCpF,EAAaqE,QAAQ,UAAWrE,EAAaqF,OAC3CrF,EAAa6C,WAGpB,MAAMN,EAAgB,IAAI,IAAc,CACtC+C,QAAUC,IACR,wBAEA,MAAM,QAAC5G,EAAO,KAAE6G,GAAQD,GAAa,GACrC,IAAIE,EAAc9G,EAAUA,EAAQM,MAAQN,EAAQO,aAAe,GAChEuG,IAAgB5F,EAAkB2C,OAChClD,GACAX,GACA6G,IACClG,IAAwBX,GACxBY,EAAwBkC,eAAiB+D,EAAK/D,iBAIlD,OAAezB,EAAcrB,GAAU,IAAAyC,MAAKzC,EAAQO,cAAuBuG,GAC3EnG,EAAsBX,EACtBY,EAA0BiG,GAIzB7G,GAAY4D,EAAcC,MAAMuC,OAAS,EAAK,EAC/CxG,EAAQyE,MAAM0C,WAAa,GAE3BnH,EAAQyE,MAAM0C,WAAa,YAK3B9C,GAAQL,EAActC,MAE5B2C,GAAMhB,iBAAiB,YAAaC,IAElC,IAAItD,EAAQyE,MAAM0C,YAAuD,UAAV7D,EAAEoC,IAC/D,OAAO0B,QAQX,MAAMC,GAAsB,IAAI,IAAc,CAC5CC,KAAM,mBACN5G,KAAM,cACN6G,YAAY,EACZC,SAAS,IAGXH,GAAoB3F,MAAM2B,iBAAiB,UAAU,KACnD,MAAMoE,EAAaJ,GAAoBG,QACvC,sBAA4B,aAAcC,GAE1C,kBAAyBA,GACzB,kBAAqCA,GACrC,kBAAyBA,GACzB,kBAA6BA,MAG/B,qBAA2BC,MAAKC,IAC1B,gCAIFN,GAAoBG,QAAUG,EAAMF,YAHpCJ,GAAoBG,SAAU,EAC9BH,GAAoB9F,MAAMH,UAAUC,IAAI,yBAM5CrB,GAAU,OAAO,gCAAiC,CAACsH,KAAM,eACzDtH,EAAQyE,MAAM0C,WAAa,SAE3B,MAAMC,GAAY9D,IACbA,IACD,OAAYA,GAGd,MAAMsE,GAAS,OAAiB,CAA4B5H,EAASD,IAAQ,IAE7E,OAAeC,GAAS,IAAA6C,MAAK,gBAC7B,QAAa7C,GAIb,IAAI6H,EAAe7D,EAAcC,MACjC,cAAqB,gBAAiB,CACpC4D,aAAcA,EACdC,OAAQ,OACRC,SAAU,SACVC,SAAU,CACRC,EAAG,kBAGJP,MAAMT,IAGP,8BAAyBS,MAAKQ,GAAKA,EAAEC,QAAQC,MAAMC,OAAOC,OAAOrB,EAAM,CAACY,aAAcA,UACrFU,OAAMC,IACPZ,IAGO,yBADAY,EAAIC,MAEPzE,EAAc0E,YACd,OAAe1E,EAAczC,OAAO,IAAAsB,MAAK,4BACzCwB,GAAMjD,UAAUC,IAAI,UACpB,OAAerB,GAAS,IAAA6C,MAAK,iBAG7B8F,QAAQC,MAAM,uBAAwBJ,GACtCxI,EAAQiD,UAAYuF,EAAIC,WAMhC,QAAiBzI,EAASoH,IAE1BrH,GAAQ,OAAO,4DAA6D,CAACuH,KAAM,mBAGnFvH,EAAMsD,iBAAiB,SAAS,KAC9B,qBAsBFpC,EAAaY,OAAOP,EAAkBE,UAAWwC,EAAcxC,UAAW6F,GAAoB9F,MAAOvB,EAASD,GAE9G,MAAM8I,GAAK3H,SAASC,cAAc,MAClC0H,GAAGzH,UAAUC,IAAI,gBACjB,IAAAyH,OAAMD,GAAI,eAEV,MAAME,GAAW7H,SAASC,cAAc,OACxC4H,GAAS3H,UAAUC,IAAI,WAAY,gBACnC,IAAAyH,OAAMC,GAAU,mBAEhB9I,EAAK+E,OAAOpB,cAAc,cAAc/B,OAAOgH,GAAIE,GAAU9H,GAuDzD,EAAA+H,oBACF5E,YAAW,KACTC,GAAMC,UACL,IAGL,OAAwBrD,GA1DtB,cAAqB,qBAAqByG,MAAMuB,I,MAC9C,MAAMC,EAAW,iBAA0B,YACxCA,KAA+B,QAAlB,EAAAA,EAAS/I,iBAAS,eAAEgJ,OAClC,sBAAiBD,EAASE,WAAW1B,MAAK,MACxC,OAAcrD,GAAO,YAIzB,MAAMgF,EAAM,IAAIC,IAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAC3BC,EAAiB,CAACN,EAAgBO,SAExC,IAAIC,EA+BJ,OA9BGR,EAAgBS,aAAeT,EAAgBO,UAChDC,EAAU,iBAAwBR,EAAgBS,YAAYhC,MAAK,KACjE6B,EAAKpG,KAAK8F,EAAgBS,iBAI7BD,GAAWE,QAAQC,WAAWlC,MAAK,KAClC6B,EAAKtH,SAAQ4H,IACXR,EAAIS,OAAOD,MAGb,MAAME,EAAO,IAAIV,GACXW,EAAI,KAA0B,O,OAAD,E,OAAA,E,EAAA,YACjC,MAAMH,EAAOE,EAAKE,QAClB,IAAIJ,EAAM,OAEV,MAAMK,EAAmB,KAAKL,aAE9B,SADkB,QAAmBK,GAEnC,OAAOF,IAGT5F,YAAW,KACT,iBAAwByF,GAAkCM,QAAQH,KACjC,M,YAZF,K,+QAenCA,OAGKf,KACNvB,MAAMuB,IACH3H,EAAkB2C,MAAMuC,QAAWxC,EAAcC,MAAMuC,QACzD/C,EAAsB5C,EAAM2D,IAAIyE,EAAgB7I,SAAS,UAkBV,KAClDJ,KACD,OAAeA,GAAS,IAAA6C,MAAK,gBAC7B,IAAAuH,QAAOpK,OAAS4E,OAAWA,GAAW,GACtC5E,EAAQqK,gBAAgB,aAGvBtK,GACDA,EAAMsK,gBAAgB,YAGxB,sBAA4B,YAAa,CAACpC,EAAG,uBAG/C","sources":["webpack://tweb/./src/pages/pageSignIn.ts"],"sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { putPreloader } from \"../components/misc\";\r\nimport Scrollable from '../components/scrollable';\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport apiManager from \"../lib/mtproto/mtprotoworker\";\r\nimport { RichTextProcessor } from '../lib/richtextprocessor';\r\nimport Page from \"./page\";\r\nimport InputField from \"../components/inputField\";\r\nimport CheckboxField from \"../components/checkboxField\";\r\nimport Button from \"../components/button\";\r\nimport fastSmoothScroll from \"../helpers/fastSmoothScroll\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\r\nimport App from \"../config/app\";\r\nimport I18n, { _i18n, i18n } from \"../lib/langPack\";\r\nimport lottieLoader from \"../lib/rlottie/lottieLoader\";\r\nimport { ripple } from \"../components/ripple\";\r\nimport findUpTag from \"../helpers/dom/findUpTag\";\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport { randomLong } from \"../helpers/random\";\r\nimport AppStorage from \"../lib/storage\";\r\nimport CacheStorageController from \"../lib/cacheStorage\";\r\nimport pageSignQR from \"./pageSignQR\";\r\nimport getLanguageChangeButton from \"../components/languageChangeButton\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\nimport toggleDisability from \"../helpers/dom/toggleDisability\";\r\nimport sessionStorage from \"../lib/sessionStorage\";\r\nimport { DcAuthKey } from \"../types\";\r\nimport placeCaretAtEnd from \"../helpers/dom/placeCaretAtEnd\";\r\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\r\nimport { getCountryEmoji } from \"../vendor/emoji\";\r\nimport simulateEvent from \"../helpers/dom/dispatchEvent\";\r\nimport stateStorage from \"../lib/stateStorage\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport TelInputField from \"../components/telInputField\";\r\nimport IS_EMOJI_SUPPORTED from \"../environment/emojiSupport\";\r\n\r\n//import _countries from '../countries_pretty.json';\r\nlet btnNext: HTMLButtonElement = null, btnQr: HTMLButtonElement;\r\n\r\nlet onFirstMount = () => {\r\n  /* if(Modes.test) {\r\n    Countries.push({\r\n      _: 'help.country',\r\n      default_name: 'Test Country',\r\n      country_codes: [{\r\n        _: 'help.countryCode',\r\n        country_code: '999 66',\r\n        patterns: ['999 66 XXX XX']\r\n      }],\r\n      iso2: 'KK'\r\n    });\r\n  \r\n    console.log('Added test country to list!');\r\n  } */\r\n\r\n  //const countries: Country[] = _countries.default.filter(c => c.emoji);\r\n  // const countries: Country[] = Countries.filter(c => c.emoji).sort((a, b) => a.name.localeCompare(b.name));\r\n  // const countries = I18n.countriesList.filter(country => !country.pFlags?.hidden);\r\n  const setCountries = () => {\r\n    countries = I18n.countriesList\r\n    .filter(country => !country.pFlags?.hidden)\r\n    .sort((a, b) => (a.name || a.default_name).localeCompare(b.name || b.default_name));\r\n  };\r\n  let countries: HelpCountry.helpCountry[]; \r\n\r\n  setCountries();\r\n\r\n  rootScope.addEventListener('language_change', () => {\r\n    setCountries();\r\n  });\r\n\r\n  const liMap: Map<string, HTMLLIElement[]> = new Map();\r\n\r\n  let lastCountrySelected: HelpCountry, lastCountryCodeSelected: HelpCountryCode;\r\n\r\n  const inputWrapper = document.createElement('div');\r\n  inputWrapper.classList.add('input-wrapper');\r\n\r\n  const countryInputField = new InputField({\r\n    label: 'Login.CountrySelectorLabel',\r\n    name: randomLong()\r\n  });\r\n\r\n  countryInputField.container.classList.add('input-select');\r\n\r\n  const countryInput = countryInputField.input;\r\n  // countryInput.autocomplete = randomLong();\r\n\r\n  const selectWrapper = document.createElement('div');\r\n  selectWrapper.classList.add('select-wrapper', 'z-depth-3', 'hide');\r\n\r\n  const arrowDown = document.createElement('span');\r\n  arrowDown.classList.add('arrow', 'arrow-down');\r\n  countryInputField.container.append(arrowDown);\r\n\r\n  const selectList = document.createElement('ul');\r\n  selectWrapper.appendChild(selectList);\r\n\r\n  const scroll = new Scrollable(selectWrapper);\r\n\r\n  let initSelect = () => {\r\n    initSelect = null;\r\n\r\n    countries.forEach((c) => {\r\n      const emoji = getCountryEmoji(c.iso2);\r\n\r\n      const liArr: Array<HTMLLIElement> = [];\r\n      c.country_codes.forEach((countryCode) => {\r\n        const li = document.createElement('li');\r\n\r\n        let wrapped = RichTextProcessor.wrapEmojiText(emoji);\r\n        if(IS_EMOJI_SUPPORTED) {\r\n          const spanEmoji = document.createElement('span');\r\n          spanEmoji.innerHTML = wrapped;\r\n          li.append(spanEmoji);\r\n        } else {\r\n          li.innerHTML = wrapped;\r\n        }\r\n        \r\n        const el = i18n(c.default_name as any);\r\n        el.dataset.defaultName = c.default_name;\r\n        li.append(el);\r\n\r\n        const span = document.createElement('span');\r\n        span.classList.add('phone-code');\r\n        span.innerText = '+' + countryCode.country_code;\r\n        li.appendChild(span);\r\n\r\n        liArr.push(li);\r\n        selectList.append(li);\r\n      });\r\n\r\n      liMap.set(c.iso2, liArr);\r\n    });\r\n    \r\n    selectList.addEventListener('mousedown', (e) => {\r\n      if(e.button !== 0) { // other buttons but left shall not pass\r\n        return;\r\n      }\r\n      \r\n      const target = findUpTag(e.target, 'LI')\r\n      selectCountryByTarget(target);\r\n      //console.log('clicked', e, countryName, phoneCode);\r\n    });\r\n\r\n    countryInputField.container.appendChild(selectWrapper);\r\n  };\r\n\r\n  const selectCountryByTarget = (target: HTMLElement) => {\r\n    const defaultName = (target.childNodes[1] as HTMLElement).dataset.defaultName;\r\n    const phoneCode = target.querySelector<HTMLElement>('.phone-code').innerText;\r\n    const countryCode = phoneCode.replace(/\\D/g, '');\r\n\r\n    replaceContent(countryInput, i18n(defaultName as any));\r\n    simulateEvent(countryInput, 'input');\r\n    lastCountrySelected = countries.find(c => c.default_name === defaultName);\r\n    lastCountryCodeSelected = lastCountrySelected.country_codes.find(_countryCode => _countryCode.country_code === countryCode);\r\n    \r\n    telInputField.value = telInputField.lastValue = phoneCode;\r\n    hidePicker();\r\n    setTimeout(() => {\r\n      telEl.focus();\r\n      placeCaretAtEnd(telEl, true);\r\n    }, 0);\r\n  };\r\n  \r\n  initSelect();\r\n\r\n  let hideTimeout: number;\r\n\r\n  countryInput.addEventListener('focus', function(this: typeof countryInput, e) {\r\n    if(initSelect) {\r\n      initSelect();\r\n    } else {\r\n      countries.forEach((c) => {\r\n        liMap.get(c.iso2).forEach(li => li.style.display = '');\r\n      });\r\n    }\r\n\r\n    clearTimeout(hideTimeout);\r\n    hideTimeout = undefined;\r\n\r\n    selectWrapper.classList.remove('hide');\r\n    void selectWrapper.offsetWidth; // reflow\r\n    selectWrapper.classList.add('active');\r\n\r\n    countryInputField.select();\r\n\r\n    fastSmoothScroll({\r\n      container: page.pageEl.parentElement.parentElement, \r\n      element: countryInput, \r\n      position: 'start', \r\n      margin: 4\r\n    });\r\n\r\n    setTimeout(() => {\r\n      if(!mouseDownHandlerAttached) {\r\n        document.addEventListener('mousedown', onMouseDown, {capture: true});\r\n        mouseDownHandlerAttached = true;\r\n      }\r\n    }, 0);\r\n  });\r\n\r\n  let mouseDownHandlerAttached = false;\r\n  const onMouseDown = (e: MouseEvent) => {\r\n    if(findUpClassName(e.target, 'input-select')) {\r\n      return;\r\n    }\r\n    if(e.target === countryInput) {\r\n      return;\r\n    }\r\n\r\n    hidePicker();\r\n    document.removeEventListener('mousedown', onMouseDown, {capture: true});\r\n    mouseDownHandlerAttached = false;\r\n  };\r\n\r\n  const hidePicker = () => {\r\n    if(hideTimeout !== undefined) return;\r\n    selectWrapper.classList.remove('active');\r\n    hideTimeout = window.setTimeout(() => {\r\n      selectWrapper.classList.add('hide');\r\n      hideTimeout = undefined;\r\n    }, 200);\r\n  };\r\n  /* false && countryInput.addEventListener('blur', function(this: typeof countryInput, e) {\r\n    hidePicker();\r\n    \r\n    e.cancelBubble = true;\r\n  }, {capture: true}); */\r\n\r\n  countryInput.addEventListener('keyup', (e) => {\r\n    const key = e.key;\r\n    if(e.ctrlKey || key === 'Control') return false;\r\n\r\n    //let i = new RegExp('^' + this.value, 'i');\r\n    let _value = countryInputField.value.toLowerCase();\r\n    let matches: HelpCountry[] = [];\r\n    countries.forEach((c) => {\r\n      const names = [\r\n        c.name, \r\n        c.default_name,\r\n        c.iso2\r\n      ];\r\n\r\n      names.filter(Boolean).forEach(name => {\r\n        const abbr = name.split(' ').filter(word => /\\w/.test(word)).map(word => word[0]).join('');\r\n        if(abbr.length > 1) {\r\n          names.push(abbr);\r\n        }\r\n      });\r\n\r\n      let good = !!names.filter(Boolean).find(str => str.toLowerCase().indexOf(_value) !== -1)/*  === 0 */;//i.test(c.name);\r\n\r\n      liMap.get(c.iso2).forEach(li => li.style.display = good ? '' : 'none');\r\n      if(good) matches.push(c);\r\n    });\r\n\r\n    // Код ниже автоматически выберет страну если она осталась одна при поиске\r\n    /* if(matches.length === 1 && matches[0].li.length === 1) {\r\n      if(matches[0].name === lastCountrySelected) return false;\r\n      //console.log('clicking', matches[0]);\r\n\r\n      var clickEvent = document.createEvent('MouseEvents');\r\n      clickEvent.initEvent('mousedown', true, true);\r\n      matches[0].li[0].dispatchEvent(clickEvent);\r\n      return false;\r\n    } else  */if(matches.length === 0) {\r\n      countries.forEach((c) => {\r\n        liMap.get(c.iso2).forEach(li => li.style.display = '');\r\n      });\r\n    } else if(matches.length === 1 && key === 'Enter') {\r\n      selectCountryByTarget(liMap.get(matches[0].iso2)[0]);\r\n    }\r\n  });\r\n\r\n  arrowDown.addEventListener('mousedown', function(this: typeof arrowDown, e) {\r\n    e.cancelBubble = true;\r\n    e.preventDefault();\r\n    if(countryInput.matches(':focus')) countryInput.blur();\r\n    else countryInput.focus();\r\n  });\r\n\r\n  const telInputField = new TelInputField({\r\n    onInput: (formatted) => {\r\n      lottieLoader.loadLottieWorkers();\r\n\r\n      const {country, code} = formatted || {};\r\n      let countryName = country ? country.name || country.default_name : ''/* 'Unknown' */;\r\n      if(countryName !== countryInputField.value && (\r\n          !lastCountrySelected || \r\n          !country ||\r\n          !code || (\r\n            lastCountrySelected !== country && \r\n            lastCountryCodeSelected.country_code !== code.country_code\r\n          )\r\n        )\r\n      ) {\r\n        replaceContent(countryInput, country ? i18n(country.default_name as any) : countryName);\r\n        lastCountrySelected = country;\r\n        lastCountryCodeSelected = code;\r\n      }\r\n  \r\n      //if(country && (telInputField.value.length - 1) >= (country.pattern ? country.pattern.length : 9)) {\r\n      if(country || (telInputField.value.length - 1) > 1) {\r\n        btnNext.style.visibility = '';\r\n      } else {\r\n        btnNext.style.visibility = 'hidden';\r\n      }\r\n    }\r\n  });\r\n\r\n  const telEl = telInputField.input;\r\n\r\n  telEl.addEventListener('keypress', (e) => {\r\n    //console.log('keypress', this.value);\r\n    if(!btnNext.style.visibility &&/* this.value.length >= 9 && */ e.key === 'Enter') {\r\n      return onSubmit();\r\n    }\r\n  });\r\n\r\n  /* telEl.addEventListener('focus', function(this: typeof telEl, e) {\r\n    this.removeAttribute('readonly'); // fix autocomplete\r\n  });*/\r\n\r\n  const signedCheckboxField = new CheckboxField({\r\n    text: 'Login.KeepSigned', \r\n    name: 'keepSession',\r\n    withRipple: true,\r\n    checked: true\r\n  });\r\n\r\n  signedCheckboxField.input.addEventListener('change', () => {\r\n    const keepSigned = signedCheckboxField.checked;\r\n    appStateManager.pushToState('keepSigned', keepSigned);\r\n    \r\n    AppStorage.toggleStorage(keepSigned);\r\n    CacheStorageController.toggleStorage(keepSigned);\r\n    apiManager.toggleStorage(keepSigned);\r\n    sessionStorage.toggleStorage(keepSigned);\r\n  });\r\n\r\n  appStateManager.getState().then(state => {\r\n    if(!appStateManager.storage.isAvailable()) {\r\n      signedCheckboxField.checked = false;\r\n      signedCheckboxField.label.classList.add('checkbox-disabled');\r\n    } else {\r\n      signedCheckboxField.checked = state.keepSigned;\r\n    }\r\n  });\r\n\r\n  btnNext = Button('btn-primary btn-color-primary', {text: 'Login.Next'});\r\n  btnNext.style.visibility = 'hidden';\r\n\r\n  const onSubmit = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    const toggle = toggleDisability([/* telEl, countryInput,  */btnNext, btnQr], true);\r\n\r\n    replaceContent(btnNext, i18n('PleaseWait'));\r\n    putPreloader(btnNext);\r\n\r\n    //return;\r\n\r\n    let phone_number = telInputField.value;\r\n    apiManager.invokeApi('auth.sendCode', {\r\n      phone_number: phone_number,\r\n      api_id: App.id,\r\n      api_hash: App.hash,\r\n      settings: {\r\n        _: 'codeSettings' // that's how we sending Type\r\n      }\r\n      //lang_code: navigator.language || 'en'\r\n    }).then((code) => {\r\n      //console.log('got code', code);\r\n\r\n      import('./pageAuthCode').then(m => m.default.mount(Object.assign(code, {phone_number: phone_number})));\r\n    }).catch(err => {\r\n      toggle();\r\n\r\n      switch(err.type) {\r\n        case 'PHONE_NUMBER_INVALID':\r\n          telInputField.setError();\r\n          replaceContent(telInputField.label, i18n('Login.PhoneLabelInvalid'));\r\n          telEl.classList.add('error');\r\n          replaceContent(btnNext, i18n('Login.Next'));\r\n          break;\r\n        default:\r\n          console.error('auth.sendCode error:', err);\r\n          btnNext.innerText = err.type;\r\n          break;\r\n      }\r\n    });\r\n  };\r\n\r\n  attachClickEvent(btnNext, onSubmit);\r\n\r\n  btnQr = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.QR.Login'});\r\n\r\n  let qrMounted = false;\r\n  btnQr.addEventListener('click', () => {\r\n    pageSignQR.mount();\r\n    /* const promise = import('./pageSignQR');\r\n    btnQr.disabled = true;\r\n\r\n    let preloaderDiv: HTMLElement;\r\n    if(!qrMounted) {\r\n      preloaderDiv = putPreloader(btnQr);\r\n      qrMounted = true;\r\n    }\r\n\r\n    promise.then(module => {\r\n      module.default.mount();\r\n\r\n      setTimeout(() => {\r\n        btnQr.removeAttribute('disabled');\r\n        if(preloaderDiv) {\r\n          preloaderDiv.remove();\r\n        }\r\n      }, 200);\r\n    }); */\r\n  });\r\n\r\n  inputWrapper.append(countryInputField.container, telInputField.container, signedCheckboxField.label, btnNext, btnQr);\r\n\r\n  const h4 = document.createElement('h4');\r\n  h4.classList.add('text-center');\r\n  _i18n(h4, 'Login.Title');\r\n\r\n  const subtitle = document.createElement('div');\r\n  subtitle.classList.add('subtitle', 'text-center');\r\n  _i18n(subtitle, 'Login.StartText');\r\n\r\n  page.pageEl.querySelector('.container').append(h4, subtitle, inputWrapper);\r\n\r\n  let tryAgain = () => {\r\n    apiManager.invokeApi('help.getNearestDc').then((nearestDcResult) => {\r\n      const langPack = stateStorage.getFromCache('langPack');\r\n      if(langPack && !langPack.countries?.hash) {\r\n        I18n.getLangPack(langPack.lang_code).then(() => {\r\n          simulateEvent(telEl, 'input');\r\n        });\r\n      }\r\n\r\n      const dcs = new Set([1, 2, 3, 4, 5]);\r\n      const done: number[] = [nearestDcResult.this_dc];\r\n\r\n      let promise: Promise<any>;\r\n      if(nearestDcResult.nearest_dc !== nearestDcResult.this_dc) {\r\n        promise = apiManager.getNetworker(nearestDcResult.nearest_dc).then(() => {\r\n          done.push(nearestDcResult.nearest_dc);\r\n        });\r\n      }\r\n\r\n      (promise || Promise.resolve()).then(() => {\r\n        done.forEach(dcId => {\r\n          dcs.delete(dcId);\r\n        });\r\n\r\n        const _dcs = [...dcs];\r\n        const g = async(): Promise<void> => {\r\n          const dcId = _dcs.shift();\r\n          if(!dcId) return;\r\n\r\n          const dbKey: DcAuthKey = `dc${dcId}_auth_key` as any;\r\n          const key = await sessionStorage.get(dbKey);\r\n          if(key) {\r\n            return g();\r\n          }\r\n\r\n          setTimeout(() => { // * если одновременно запросить все нетворкеры, не будет проходить запрос на код\r\n            apiManager.getNetworker(dcId/* , {fileDownload: true} */).finally(g);\r\n          }, /* done.includes(dcId) ? 0 :  */3000);\r\n        };\r\n        \r\n        g();\r\n      });\r\n      \r\n      return nearestDcResult;\r\n    }).then((nearestDcResult) => {\r\n      if(!countryInputField.value.length && !telInputField.value.length) {\r\n        selectCountryByTarget(liMap.get(nearestDcResult.country)[0]);\r\n      }\r\n  \r\n      //console.log('woohoo', nearestDcResult, country);\r\n    })//.catch(tryAgain);\r\n  };\r\n\r\n  if(!IS_TOUCH_SUPPORTED) {\r\n    setTimeout(() => {\r\n      telEl.focus();\r\n    }, 0);\r\n  }\r\n\r\n  getLanguageChangeButton(inputWrapper);\r\n\r\n  tryAgain();\r\n};\r\n\r\nconst page = new Page('page-sign', true, onFirstMount, () => {\r\n  if(btnNext) {\r\n    replaceContent(btnNext, i18n('Login.Next'));\r\n    ripple(btnNext, undefined, undefined, true);\r\n    btnNext.removeAttribute('disabled');\r\n  }\r\n\r\n  if(btnQr) {\r\n    btnQr.removeAttribute('disabled');\r\n  }\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStateSignIn'});\r\n});\r\n\r\nexport default page;\r\n"],"names":["btnQr","btnNext","page","setCountries","countries","country","pFlags","hidden","sort","a","b","name","default_name","localeCompare","liMap","Map","lastCountrySelected","lastCountryCodeSelected","inputWrapper","document","createElement","classList","add","countryInputField","label","container","countryInput","input","selectWrapper","arrowDown","append","selectList","appendChild","initSelect","forEach","c","emoji","iso2","liArr","country_codes","countryCode","li","wrapped","spanEmoji","innerHTML","el","i18n","dataset","defaultName","span","innerText","country_code","push","set","addEventListener","e","button","target","selectCountryByTarget","childNodes","phoneCode","querySelector","replace","find","_countryCode","telInputField","value","lastValue","hidePicker","setTimeout","telEl","focus","hideTimeout","get","style","display","clearTimeout","undefined","remove","offsetWidth","select","pageEl","parentElement","element","position","margin","mouseDownHandlerAttached","onMouseDown","capture","removeEventListener","window","key","ctrlKey","_value","toLowerCase","matches","names","filter","Boolean","abbr","split","word","test","map","join","length","good","str","indexOf","cancelBubble","preventDefault","blur","onInput","formatted","code","countryName","visibility","onSubmit","signedCheckboxField","text","withRipple","checked","keepSigned","then","state","toggle","phone_number","api_id","api_hash","settings","_","m","default","mount","Object","assign","catch","err","type","setError","console","error","h4","_i18n","subtitle","IS_TOUCH_SUPPORTED","nearestDcResult","langPack","hash","lang_code","dcs","Set","done","this_dc","promise","nearest_dc","Promise","resolve","dcId","delete","_dcs","g","shift","dbKey","finally","ripple","removeAttribute"],"sourceRoot":""}