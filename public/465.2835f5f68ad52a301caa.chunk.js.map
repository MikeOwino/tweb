{"version":3,"file":"465.2835f5f68ad52a301caa.chunk.js","mappings":"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","sources":["webpack://tweb/./src/components/languageChangeButton.ts","webpack://tweb/./src/helpers/bytes/bytesCmp.ts","webpack://tweb/./src/helpers/fixBase64String.ts","webpack://tweb/./src/lib/mtproto/serverTimeManager.ts","webpack://tweb/./src/helpers/bytes/bytesToBase64.ts","webpack://tweb/./src/pages/pageSignQR.ts"],"sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\nimport loadFonts from \"../helpers/dom/loadFonts\";\nimport { Config, LangPackDifference, LangPackString } from \"../layer\";\nimport I18n, { LangPackKey } from \"../lib/langPack\";\nimport apiManager from \"../lib/mtproto/mtprotoworker\";\nimport rootScope from \"../lib/rootScope\";\nimport Button from \"./button\";\nimport { putPreloader } from \"./misc\";\n\nlet set = false;\n\nfunction getLang(): Promise<[Config.config, LangPackString[], LangPackDifference.langPackDifference]> {\n  if(cachedPromise) return cachedPromise;\n  return cachedPromise = apiManager.getConfig().then(config => {\n    if(config.suggested_lang_code !== I18n.lastRequestedLangCode) {\n      //I18n.loadLangPack(config.suggested_lang_code);\n\n      return Promise.all([\n        config,\n        I18n.getStrings(config.suggested_lang_code, ['Login.ContinueOnLanguage']),\n        I18n.getCacheLangPack()\n      ]);\n    } else {\n      return [] as any;\n    }\n  });\n}\n\nlet cachedPromise: ReturnType<typeof getLang>;\n\nexport default function getLanguageChangeButton(appendTo: HTMLElement) {\n  if(set) return;\n  getLang().then(([config, strings]) => {\n    if(!config) {\n      return;\n    }\n\n    const backup: LangPackString[] = [];\n    strings.forEach(string => {\n      const backupString = I18n.strings.get(string.key as LangPackKey);\n      if(!backupString) {\n        return;\n      }\n      \n      backup.push(backupString);\n      I18n.strings.set(string.key as LangPackKey, string);\n    });\n\n    const btnChangeLanguage = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.ContinueOnLanguage'});\n    btnChangeLanguage.lastElementChild.classList.remove('i18n'); // prevent changing language\n    loadFonts().then(() => {\n      window.requestAnimationFrame(() => {\n        appendTo.append(btnChangeLanguage);\n      });\n    });\n\n    rootScope.addEventListener('language_change', () => {\n      btnChangeLanguage.remove();\n    }, {once: true});\n\n    backup.forEach(string => {\n      I18n.strings.set(string.key as LangPackKey, string);\n    });\n    \n    attachClickEvent(btnChangeLanguage, (e) => {\n      cancelEvent(e);\n\n      set = true;\n\n      btnChangeLanguage.disabled = true;\n      putPreloader(btnChangeLanguage);\n\n      I18n.getLangPack(config.suggested_lang_code);\n    });\n  });\n}\n","export default function bytesCmp(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\n  const len = bytes1.length;\n  if(len !== bytes2.length) {\n    return false;\n  }\n\n  for(let i = 0; i < len; ++i) {\n    if(bytes1[i] !== bytes2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","export default function fixBase64String(str: string, toUrl: boolean) {\n  if(toUrl) {\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\n  } else {\n    return str.replace(/-/g, '+').replace(/_/g, '/');\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { ApplyServerTimeOffsetTask } from './timeManager';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\n// import { tsNow } from '../../helpers/date';\r\nimport sessionStorage from '../sessionStorage';\r\nimport apiManager from './mtprotoworker';\r\n\r\nexport class ServerTimeManager {\r\n  /* private midnightNoOffset: number;\r\n  private midnightOffseted: Date;\r\n\r\n  private midnightOffset: number; */\r\n\r\n  public serverTimeOffset: number; // in seconds\r\n  /* private timeParams: {\r\n    midnightOffset: number,\r\n    serverTimeOffset: number\r\n  }; */\r\n\r\n  constructor() {\r\n    /* const timestampNow = tsNow(true);\r\n    this.midnightNoOffset = timestampNow - (timestampNow % 86400);\r\n    this.midnightOffseted = new Date();\r\n    this.midnightOffseted.setHours(0, 0, 0, 0);\r\n    \r\n    this.midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000)); */\r\n\r\n    this.serverTimeOffset = 0;\r\n    /* this.timeParams = {\r\n      midnightOffset: this.midnightOffset,\r\n      serverTimeOffset: this.serverTimeOffset\r\n    }; */\r\n\r\n    sessionStorage.get('server_time_offset').then((to) => {\r\n      if(to) {\r\n        this.serverTimeOffset = to;\r\n        // this.timeParams.serverTimeOffset = to;\r\n      }\r\n    });\r\n\r\n    apiManager.addTaskListener('applyServerTimeOffset', (task: ApplyServerTimeOffsetTask) => {\r\n      this.serverTimeOffset = task.payload;\r\n    });\r\n  }\r\n}\r\n\r\nconst serverTimeManager = new ServerTimeManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.serverTimeManager = serverTimeManager);\r\nexport default serverTimeManager;\r\n","export default function bytesToBase64(bytes: number[] | Uint8Array) {\n  let mod3: number;\n  let result = '';\n\n  for(let nLen = bytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; ++nIdx) {\n    mod3 = nIdx % 3;\n    nUint24 |= bytes[nIdx] << (16 >>> mod3 & 24);\n    if(mod3 === 2 || nLen - nIdx === 1) {\n      result += String.fromCharCode(\n        uint6ToBase64(nUint24 >>> 18 & 63),\n        uint6ToBase64(nUint24 >>> 12 & 63),\n        uint6ToBase64(nUint24 >>> 6 & 63),\n        uint6ToBase64(nUint24 & 63)\n      );\n      nUint24 = 0;\n    }\n  }\n\n  return result.replace(/A(?=A$|$)/g, '=');\n}\n\nexport function uint6ToBase64(nUint6: number) {\n  return nUint6 < 26\n    ? nUint6 + 65\n    : nUint6 < 52\n      ? nUint6 + 71\n      : nUint6 < 62\n        ? nUint6 - 4\n        : nUint6 === 62\n          ? 43\n          : nUint6 === 63\n            ? 47\n            : 65;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { DcId } from '../types';\r\nimport type { ApiError } from '../lib/mtproto/apiManager';\r\nimport apiManager from '../lib/mtproto/mtprotoworker';\r\nimport Page from './page';\r\nimport serverTimeManager from '../lib/mtproto/serverTimeManager';\r\nimport { AuthAuthorization, AuthLoginToken } from '../layer';\r\nimport App from '../config/app';\r\nimport Button from '../components/button';\r\nimport { _i18n, i18n, LangPackKey } from '../lib/langPack';\r\nimport appStateManager from '../lib/appManagers/appStateManager';\r\nimport rootScope from '../lib/rootScope';\r\nimport { putPreloader } from '../components/misc';\r\nimport getLanguageChangeButton from '../components/languageChangeButton';\r\nimport { pause } from '../helpers/schedulers/pause';\r\nimport fixBase64String from '../helpers/fixBase64String';\r\nimport bytesCmp from '../helpers/bytes/bytesCmp';\r\nimport bytesToBase64 from '../helpers/bytes/bytesToBase64';\r\n\r\nconst FETCH_INTERVAL = 3;\r\n\r\nlet onFirstMount = async() => {\r\n  const pageElement = page.pageEl;\r\n  const imageDiv = pageElement.querySelector('.auth-image') as HTMLDivElement;\r\n\r\n  let preloader = putPreloader(imageDiv, true);\r\n\r\n  const inputWrapper = document.createElement('div');\r\n  inputWrapper.classList.add('input-wrapper');\r\n\r\n  const btnBack = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.QR.Cancel'});\r\n  inputWrapper.append(btnBack);\r\n\r\n  getLanguageChangeButton(inputWrapper);\r\n\r\n  const container = imageDiv.parentElement;\r\n\r\n  const h4 = document.createElement('h4');\r\n  _i18n(h4, 'Login.QR.Title');\r\n\r\n  const helpList = document.createElement('ol');\r\n  helpList.classList.add('qr-description');\r\n  (['Login.QR.Help1', 'Login.QR.Help2', 'Login.QR.Help3'] as LangPackKey[]).forEach((key) => {\r\n    const li = document.createElement('li');\r\n    li.append(i18n(key));\r\n    helpList.append(li);\r\n  });\r\n\r\n  container.append(h4, helpList, inputWrapper);\r\n\r\n  btnBack.addEventListener('click', () => {\r\n    import('./pageSignIn').then(m => m.default.mount());\r\n    stop = true;\r\n  });\r\n  \r\n  const results = await Promise.all([\r\n    import('qr-code-styling' as any)\r\n  ]);\r\n  const QRCodeStyling = results[0].default;\r\n\r\n  let stop = false;\r\n  rootScope.addEventListener('user_auth', () => {\r\n    stop = true;\r\n    cachedPromise = null;\r\n  }, {once: true});\r\n  \r\n  let options: {dcId?: DcId, ignoreErrors: true} = {ignoreErrors: true};\r\n  let prevToken: Uint8Array | number[];\r\n\r\n  const iterate = async(isLoop: boolean) => {\r\n    try {\r\n      let loginToken = await apiManager.invokeApi('auth.exportLoginToken', {\r\n        api_id: App.id,\r\n        api_hash: App.hash,\r\n        except_ids: []\r\n      }, {ignoreErrors: true});\r\n  \r\n      if(loginToken._ === 'auth.loginTokenMigrateTo') {\r\n        if(!options.dcId) {\r\n          options.dcId = loginToken.dc_id as DcId;\r\n          apiManager.setBaseDcId(loginToken.dc_id);\r\n          //continue;\r\n        }\r\n        \r\n        loginToken = await apiManager.invokeApi('auth.importLoginToken', {\r\n          token: loginToken.token\r\n        }, options) as AuthLoginToken.authLoginToken;\r\n      }\r\n\r\n      if(loginToken._ === 'auth.loginTokenSuccess') {\r\n        const authorization = loginToken.authorization as any as AuthAuthorization.authAuthorization;\r\n        apiManager.setUser(authorization.user);\r\n        import('./pageIm').then(m => m.default.mount());\r\n        return true;\r\n      }\r\n\r\n      /* // to base64\r\n      var decoder = new TextDecoder('utf8');\r\n      var b64encoded = btoa(String.fromCharCode.apply(null, [...loginToken.token])); */\r\n\r\n      if(!prevToken || !bytesCmp(prevToken, loginToken.token)) {\r\n        prevToken = loginToken.token;\r\n\r\n        let encoded = bytesToBase64(loginToken.token);\r\n        let url = \"tg://login?token=\" + fixBase64String(encoded, true);\r\n\r\n        const style = window.getComputedStyle(document.documentElement);\r\n        const surfaceColor = style.getPropertyValue('--surface-color').trim();\r\n        const textColor = style.getPropertyValue('--primary-text-color').trim();\r\n        const primaryColor = style.getPropertyValue('--primary-color').trim();\r\n\r\n        const logoUrl = await fetch('assets/img/logo_padded.svg')\r\n        .then(res => res.text())\r\n        .then(text => {\r\n          text = text.replace(/(fill:).+?(;)/, `$1${primaryColor}$2`);\r\n          const blob = new Blob([text], {type: 'image/svg+xml;charset=utf-8'});\r\n\r\n          // * because iOS Safari doesn't want to eat objectURL\r\n          return new Promise<string>((resolve) => {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n              resolve(e.target.result as string);\r\n            };\r\n            reader.readAsDataURL(blob);\r\n          });\r\n          //return URL.createObjectURL(blob);\r\n        });\r\n\r\n        const qrCode = new QRCodeStyling({\r\n          width: 240 * window.devicePixelRatio,\r\n          height: 240 * window.devicePixelRatio,\r\n          data: url,\r\n          image: logoUrl,\r\n          dotsOptions: {\r\n            color: textColor,\r\n            type: 'rounded'\r\n          },\r\n          cornersSquareOptions: {\r\n            type: 'extra-rounded'\r\n          },\r\n          imageOptions: {\r\n            imageSize: 1,\r\n            margin: 0\r\n          },\r\n          backgroundOptions: {\r\n            color: surfaceColor\r\n          },\r\n          qrOptions: {\r\n            errorCorrectionLevel: \"L\"\r\n          }\r\n        });\r\n\r\n        qrCode.append(imageDiv);\r\n        (imageDiv.lastChild as HTMLCanvasElement).classList.add('qr-canvas');\r\n\r\n        let promise: Promise<void>;\r\n        if(qrCode._drawingPromise) {\r\n          promise = qrCode._drawingPromise;\r\n        } else {\r\n          promise = Promise.race([\r\n            pause(1000),\r\n            new Promise<void>((resolve) => {\r\n              qrCode._canvas._image.addEventListener('load', () => {\r\n                window.requestAnimationFrame(() => resolve());\r\n              }, {once: true});\r\n            })\r\n          ]);\r\n        }\r\n\r\n        // * это костыль, но библиотека не предоставляет никаких событий\r\n        await promise.then(() => {\r\n          if(preloader) {\r\n            preloader.style.animation = 'hide-icon .4s forwards';\r\n\r\n            const c = imageDiv.children[1] as HTMLElement;\r\n            c.style.display = 'none';\r\n            c.style.animation = 'grow-icon .4s forwards';\r\n            setTimeout(() => {\r\n              c.style.display = '';\r\n            }, 150);\r\n\r\n            setTimeout(() => {\r\n              c.style.animation = '';\r\n            }, 500);\r\n            preloader = undefined;\r\n          } else {\r\n            Array.from(imageDiv.children).slice(0, -1).forEach(el => {\r\n              el.remove();\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      if(isLoop) {\r\n        let timestamp = Date.now() / 1000;\r\n        let diff = loginToken.expires - timestamp - serverTimeManager.serverTimeOffset;\r\n  \r\n        await pause(diff > FETCH_INTERVAL ? 1e3 * FETCH_INTERVAL : 1e3 * diff | 0);\r\n      }\r\n    } catch(err) {\r\n      switch((err as ApiError).type) {\r\n        case 'SESSION_PASSWORD_NEEDED':\r\n          console.warn('pageSignQR: SESSION_PASSWORD_NEEDED');\r\n          (err as ApiError).handled = true;\r\n          import('./pagePassword').then(m => m.default.mount());\r\n          stop = true;\r\n          cachedPromise = null;\r\n          break;\r\n        default:\r\n          console.error('pageSignQR: default error:', err);\r\n          stop = true;\r\n          break;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  //await iterate(false);\r\n\r\n  return async() => {\r\n    stop = false;\r\n\r\n    do {\r\n      if(stop) {\r\n        break;\r\n      }\r\n  \r\n      const needBreak = await iterate(true);\r\n      if(needBreak) {\r\n        break;\r\n      }\r\n    } while(true);\r\n  };\r\n};\r\n\r\nlet cachedPromise: Promise<() => Promise<void>>;\r\nconst page = new Page('page-signQR', true, () => {\r\n  return cachedPromise;\r\n}, () => {\r\n  //console.log('onMount');\r\n  if(!cachedPromise) cachedPromise = onFirstMount();\r\n  cachedPromise.then(func => {\r\n    func();\r\n  });\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStateSignQr'});\r\n});\r\n\r\nexport default page;\r\n"],"names":["cachedPromise","set","getLanguageChangeButton","appendTo","then","config","suggested_lang_code","Promise","all","strings","backup","forEach","string","backupString","key","push","btnChangeLanguage","text","lastElementChild","classList","remove","window","requestAnimationFrame","append","once","e","disabled","bytesCmp","bytes1","bytes2","len","length","i","fixBase64String","str","toUrl","replace","serverTimeManager","constructor","this","serverTimeOffset","to","task","payload","uint6ToBase64","nUint6","imageDiv","pageEl","querySelector","preloader","inputWrapper","document","createElement","add","btnBack","container","parentElement","h4","_i18n","helpList","li","i18n","addEventListener","m","default","mount","stop","QRCodeStyling","rootScope","prevToken","options","ignoreErrors","iterate","isLoop","loginToken","api_id","api_hash","except_ids","_","dcId","dc_id","token","authorization","user","encoded","bytes","mod3","result","nLen","nUint24","nIdx","String","fromCharCode","bytesToBase64","url","style","getComputedStyle","documentElement","surfaceColor","getPropertyValue","trim","textColor","primaryColor","logoUrl","fetch","res","blob","Blob","type","resolve","reader","FileReader","onload","target","readAsDataURL","qrCode","width","devicePixelRatio","height","data","image","dotsOptions","color","cornersSquareOptions","imageOptions","imageSize","margin","backgroundOptions","qrOptions","errorCorrectionLevel","promise","lastChild","_drawingPromise","race","pause","_canvas","_image","animation","c","children","display","setTimeout","undefined","Array","from","slice","el","timestamp","Date","now","diff","expires","err","console","warn","handled","error","func","appStateManager"],"sourceRoot":""}