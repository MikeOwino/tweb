{"version":3,"file":"874.0c0c899a41c0a10875da.chunk.js","mappings":"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","sources":["webpack://tweb/./src/components/animationIntersector.ts","webpack://tweb/./src/components/horizontalMenu.ts","webpack://tweb/./src/components/transition.ts","webpack://tweb/./src/helpers/animation.ts","webpack://tweb/./src/helpers/array/forEachReverse.ts","webpack://tweb/./src/helpers/array/indexOfAndSplice.ts","webpack://tweb/./src/helpers/dom/findUpAsChild.ts","webpack://tweb/./src/helpers/dom/isInDOM.ts","webpack://tweb/./src/helpers/dom/whichChild.ts","webpack://tweb/./src/helpers/fastSmoothScroll.ts","webpack://tweb/./src/helpers/number/clamp.ts","webpack://tweb/./src/helpers/schedulers.ts","webpack://tweb/./src/hooks/useHeavyAnimationCheck.ts","webpack://tweb/./src/lib/rlottie/rlottie.worker.ts","webpack://tweb/./src/lib/rlottie/queryableWorker.ts","webpack://tweb/./src/lib/rlottie/lottieLoader.ts","webpack://tweb/./src/environment/canUseTransferables.ts","webpack://tweb/./src/lib/rlottie/rlottiePlayer.ts","webpack://tweb/./src/pages/pagesManager.ts","webpack://tweb/./src/pages/page.ts"],"sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { IS_SAFARI } from \"../environment/userAgent\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport isInDOM from \"../helpers/dom/isInDOM\";\r\nimport RLottiePlayer from \"../lib/rlottie/rlottiePlayer\";\r\nimport indexOfAndSplice from \"../helpers/array/indexOfAndSplice\";\r\nimport forEachReverse from \"../helpers/array/forEachReverse\";\r\n\r\nexport interface AnimationItem {\r\n  el: HTMLElement,\r\n  group: string,\r\n  animation: RLottiePlayer | HTMLVideoElement\r\n};\r\n\r\nexport class AnimationIntersector {\r\n  private observer: IntersectionObserver;\r\n  private visible: Set<AnimationItem> = new Set();\r\n\r\n  private overrideIdleGroups: Set<string>;\r\n  private byGroups: {[group: string]: AnimationItem[]} = {};\r\n  private lockedGroups: {[group: string]: true} = {};\r\n  private onlyOnePlayableGroup: string = '';\r\n  \r\n  private intersectionLockedGroups: {[group: string]: true} = {};\r\n  private videosLocked = false;\r\n\r\n  constructor() {\r\n    this.observer = new IntersectionObserver((entries) => {\r\n      // if(rootScope.idle.isIDLE) return;\r\n\r\n      for(const entry of entries) {\r\n        const target = entry.target;\r\n\r\n        for(const group in this.byGroups) {\r\n          if(this.intersectionLockedGroups[group]) {\r\n            continue;\r\n          }\r\n\r\n          const player = this.byGroups[group].find(p => p.el === target);\r\n          if(player) {\r\n            if(entry.isIntersecting) {\r\n              this.visible.add(player);\r\n              this.checkAnimation(player, false);\r\n            } else {\r\n              this.visible.delete(player);\r\n              this.checkAnimation(player, true);\r\n\r\n              if(player.animation instanceof RLottiePlayer/*  && player.animation.cachingDelta === 2 */) {\r\n                //console.warn('will clear cache', player);\r\n                player.animation.clearCache();\r\n              }\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    this.overrideIdleGroups = new Set();\r\n\r\n    rootScope.addEventListener('media_play', ({doc}) => {\r\n      if(doc.type === 'round') {\r\n        this.videosLocked = true;\r\n        this.checkAnimations();\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('media_pause', () => {\r\n      if(this.videosLocked) {\r\n        this.videosLocked = false;\r\n        this.checkAnimations();\r\n      }\r\n    });\r\n  }\r\n\r\n  public setOverrideIdleGroup(group: string, override: boolean) {\r\n    if(override) this.overrideIdleGroups.add(group);\r\n    else this.overrideIdleGroups.delete(group);\r\n  }\r\n\r\n  public getAnimations(element: HTMLElement) {\r\n    const found: AnimationItem[] = [];\r\n    for(const group in this.byGroups) {\r\n      for(const player of this.byGroups[group]) {\r\n        if(player.el === element) {\r\n          found.push(player);\r\n        }\r\n      }\r\n    }\r\n\r\n    return found;\r\n  }\r\n\r\n  public removeAnimation(player: AnimationItem) {\r\n    //console.log('destroy animation');\r\n    const {el, animation} = player;\r\n    animation.remove();\r\n\r\n    if(animation instanceof HTMLVideoElement && IS_SAFARI) {\r\n      setTimeout(() => { // TODO: очистка по очереди, а не все вместе с этим таймаутом\r\n        animation.src = '';\r\n        animation.load();\r\n      }, 1e3);\r\n    }\r\n\r\n    const group = this.byGroups[player.group];\r\n    if(group) {\r\n      indexOfAndSplice(group, player);\r\n      if(!group.length) {\r\n        delete this.byGroups[player.group];\r\n      }\r\n    }\r\n  \r\n    this.observer.unobserve(el);\r\n    this.visible.delete(player);\r\n  }\r\n\r\n  public addAnimation(animation: RLottiePlayer | HTMLVideoElement, group = '') {\r\n    const player = {\r\n      el: animation instanceof RLottiePlayer ? animation.el : animation, \r\n      animation: animation, \r\n      group\r\n    };\r\n\r\n    if(animation instanceof RLottiePlayer) {\r\n      if(!rootScope.settings.stickers.loop && animation.loop) {\r\n        animation.loop = rootScope.settings.stickers.loop;\r\n      }\r\n    }\r\n\r\n    (this.byGroups[group] ?? (this.byGroups[group] = [])).push(player);\r\n    this.observer.observe(player.el);\r\n  }\r\n\r\n  public checkAnimations(blurred?: boolean, group?: string, destroy = false) {\r\n    // if(rootScope.idle.isIDLE) return;\r\n\r\n    if(group !== undefined && !this.byGroups[group]) {\r\n      //console.warn('no animation group:', group);\r\n      return;\r\n    }\r\n    \r\n    const groups = group !== undefined /* && false */ ? [group] : Object.keys(this.byGroups);\r\n\r\n    for(const group of groups) {\r\n      const animations = this.byGroups[group];\r\n\r\n      forEachReverse(animations, (player) => {\r\n        this.checkAnimation(player, blurred, destroy);\r\n      });\r\n    }\r\n  }\r\n\r\n  public checkAnimation(player: AnimationItem, blurred = false, destroy = false) {\r\n    const {el, animation, group} = player;\r\n    //return;\r\n    if((destroy || (!isInDOM(el) && !this.lockedGroups[group]))/*  && false */) {\r\n      this.removeAnimation(player);\r\n      return;\r\n    }\r\n\r\n    if(blurred || (this.onlyOnePlayableGroup && this.onlyOnePlayableGroup !== group) || (animation instanceof HTMLVideoElement && this.videosLocked)) {\r\n      if(!animation.paused) {\r\n        //console.warn('pause animation:', animation);\r\n        animation.pause();\r\n      }\r\n    } else if(animation.paused && \r\n      this.visible.has(player) && \r\n      animation.autoplay && \r\n      (!this.onlyOnePlayableGroup || this.onlyOnePlayableGroup === group) &&\r\n      (!rootScope.idle.isIDLE || this.overrideIdleGroups.has(player.group))\r\n    ) {\r\n      //console.warn('play animation:', animation);\r\n      animation.play();\r\n    }\r\n  }\r\n\r\n  public setOnlyOnePlayableGroup(group: string) {\r\n    this.onlyOnePlayableGroup = group;\r\n  }\r\n\r\n  public lockGroup(group: string) {\r\n    this.lockedGroups[group] = true;\r\n  }\r\n\r\n  public unlockGroup(group: string) {\r\n    delete this.lockedGroups[group];\r\n    this.checkAnimations(undefined, group);\r\n  }\r\n\r\n  public refreshGroup(group: string) {\r\n    const animations = this.byGroups[group];\r\n    if(animations && animations.length) {\r\n      animations.forEach(animation => {\r\n        this.observer.unobserve(animation.el);\r\n      });\r\n\r\n      window.requestAnimationFrame(() => {\r\n        animations.forEach(animation => {\r\n          this.observer.observe(animation.el);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public lockIntersectionGroup(group: string) {\r\n    this.intersectionLockedGroups[group] = true;\r\n  }\r\n\r\n  public unlockIntersectionGroup(group: string) {\r\n    delete this.intersectionLockedGroups[group];\r\n    this.refreshGroup(group);\r\n  }\r\n}\r\n\r\nconst animationIntersector = new AnimationIntersector();\r\nif(MOUNT_CLASS_TO) {\r\n  MOUNT_CLASS_TO.animationIntersector = animationIntersector;\r\n}\r\nexport default animationIntersector;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { TransitionSlider } from \"./transition\";\r\nimport { ScrollableX } from \"./scrollable\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { fastRaf } from \"../helpers/schedulers\";\r\nimport { FocusDirection } from \"../helpers/fastSmoothScroll\";\r\nimport findUpAsChild from \"../helpers/dom/findUpAsChild\";\r\nimport whichChild from \"../helpers/dom/whichChild\";\r\n\r\nexport function horizontalMenu(\r\n  tabs: HTMLElement, \r\n  content: HTMLElement, \r\n  onClick?: (id: number, tabContent: HTMLDivElement, animate: boolean) => void | boolean, \r\n  onTransitionEnd?: () => void, \r\n  transitionTime = 250, \r\n  scrollableX?: ScrollableX\r\n) {\r\n  const selectTab = TransitionSlider(content, tabs || content.dataset.animation === 'tabs' ? 'tabs' : 'navigation', transitionTime, onTransitionEnd);\r\n\r\n  if(tabs) {\r\n    const proxy = new Proxy(selectTab, {\r\n      apply: (target, that, args) => {\r\n        const id = +args[0];\r\n        const animate = args[1] !== undefined ? args[1] : true;\r\n  \r\n        const el = (tabs.querySelector(`[data-tab=\"${id}\"]`) || tabs.children[id]) as HTMLElement;\r\n        selectTarget(el, id, animate);\r\n      }\r\n    });\r\n\r\n    const selectTarget = (target: HTMLElement, id: number, animate = true) => {\r\n      const tabContent = content.children[id] as HTMLDivElement;\r\n\r\n      if(onClick) {\r\n        const canChange = onClick(id, tabContent, animate);\r\n        if(canChange !== undefined && !canChange) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      if(scrollableX) {\r\n        scrollableX.scrollIntoViewNew({\r\n          element: target.parentElement.children[id] as HTMLElement, \r\n          position: 'center', \r\n          forceDirection: animate ? undefined : FocusDirection.Static, \r\n          forceDuration: transitionTime, \r\n          axis: 'x'\r\n        });\r\n      }\r\n\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        animate = false;\r\n      }\r\n\r\n      const prevId = selectTab.prevId();\r\n      if(target.classList.contains('active') || id === prevId) {\r\n        return false;\r\n      }\r\n      \r\n      const prev = tabs.querySelector(tagName.toLowerCase() + '.active') as HTMLElement;\r\n\r\n      fastRaf(() => {\r\n        prev && prev.classList.remove('active');\r\n      });\r\n      \r\n      // stripe from ZINCHUK\r\n      if(useStripe && prevId !== -1 && animate) {\r\n        fastRaf(() => {\r\n          const indicator = target.querySelector('i')!;\r\n          const currentIndicator = target.parentElement.children[prevId].querySelector('i')!;\r\n    \r\n          currentIndicator.classList.remove('animate');\r\n          indicator.classList.remove('animate');\r\n    \r\n          // We move and resize our indicator so it repeats the position and size of the previous one.\r\n          const shiftLeft = currentIndicator.parentElement.parentElement.offsetLeft - indicator.parentElement.parentElement.offsetLeft;\r\n          const scaleFactor = currentIndicator.clientWidth / indicator.clientWidth;\r\n          indicator.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\r\n  \r\n          //console.log(`translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`);\r\n    \r\n          requestAnimationFrame(() => {\r\n            // Now we remove the transform to let it animate to its own position and size.\r\n            indicator.classList.add('animate');\r\n            indicator.style.transform = 'none';\r\n          });\r\n        });\r\n      }\r\n      // stripe END\r\n\r\n      fastRaf(() => {\r\n        target.classList.add('active');\r\n      });\r\n      \r\n      selectTab(id, animate);\r\n    };\r\n\r\n    const useStripe = !tabs.classList.contains('no-stripe');\r\n\r\n    //const tagName = tabs.classList.contains('menu-horizontal-div') ? 'BUTTON' : 'LI';\r\n    const tagName = tabs.firstElementChild.tagName;\r\n    tabs.addEventListener('click', function(e) {\r\n      let target = e.target as HTMLElement;\r\n      \r\n      target = findUpAsChild(target, tabs);\r\n      \r\n      //console.log('tabs click:', target);\r\n      \r\n      if(!target) return false;\r\n\r\n      let id: number;\r\n      if(target.dataset.tab) {\r\n        id = +target.dataset.tab;\r\n        if(id === -1) {\r\n          return false;\r\n        }\r\n      } else {\r\n        id = whichChild(target);\r\n      }\r\n\r\n      selectTarget(target, id);\r\n    });\r\n\r\n    return proxy;\r\n  }\r\n  \r\n  return selectTab;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { CancellablePromise, deferredPromise } from \"../helpers/cancellablePromise\";\r\nimport { dispatchHeavyAnimationEvent } from \"../hooks/useHeavyAnimationCheck\";\r\nimport whichChild from \"../helpers/dom/whichChild\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\n\r\nfunction slideNavigation(tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) {\r\n  const width = prevTabContent.getBoundingClientRect().width;\r\n  const elements = [tabContent, prevTabContent];\r\n  if(toRight) elements.reverse();\r\n  elements[0].style.filter = `brightness(80%)`;\r\n  elements[0].style.transform = `translate3d(${-width * .25}px, 0, 0)`;\r\n  elements[1].style.transform = `translate3d(${width}px, 0, 0)`;\r\n  \r\n  tabContent.classList.add('active');\r\n  void tabContent.offsetWidth; // reflow\r\n\r\n  tabContent.style.transform = '';\r\n  tabContent.style.filter = '';\r\n\r\n  return () => {\r\n    prevTabContent.style.transform = prevTabContent.style.filter = '';\r\n  };\r\n}\r\n\r\nfunction slideTabs(tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) {\r\n  // Jolly Cobra's // Workaround for scrollable content flickering during animation.\r\n  // const scrollableContainer = findUpClassName(tabContent, 'scrollable-y');\r\n  // if(scrollableContainer && scrollableContainer.style.overflowY !== 'hidden') {\r\n  //   // const scrollBarWidth = scrollableContainer.offsetWidth - scrollableContainer.clientWidth;\r\n  //   scrollableContainer.style.overflowY = 'hidden';\r\n  //   // scrollableContainer.style.paddingRight = `${scrollBarWidth}px`;\r\n  //   // this.container.classList.add('sliding');\r\n  // }\r\n\r\n  //window.requestAnimationFrame(() => {\r\n    const width = prevTabContent.getBoundingClientRect().width;\r\n    /* tabContent.style.setProperty('--width', width + 'px');\r\n    prevTabContent.style.setProperty('--width', width + 'px');\r\n\r\n    tabContent.classList.add('active'); */\r\n    //void tabContent.offsetWidth; // reflow\r\n    const elements = [tabContent, prevTabContent];\r\n    if(toRight) elements.reverse();\r\n    elements[0].style.transform = `translate3d(${-width}px, 0, 0)`;\r\n    elements[1].style.transform = `translate3d(${width}px, 0, 0)`;\r\n  \r\n    tabContent.classList.add('active');\r\n    void tabContent.offsetWidth; // reflow\r\n  \r\n    tabContent.style.transform = '';\r\n  //});\r\n  \r\n  return () => {\r\n    prevTabContent.style.transform = '';\r\n\r\n    // if(scrollableContainer) {\r\n    //   // Jolly Cobra's // Workaround for scrollable content flickering during animation.\r\n    //   if(isSafari) { // ! safari doesn't respect sticky header, so it flicks when overflow is changing\r\n    //     scrollableContainer.style.display = 'none';\r\n    //   }\r\n\r\n    //   scrollableContainer.style.overflowY = '';\r\n\r\n    //   if(isSafari) {\r\n    //     void scrollableContainer.offsetLeft; // reflow\r\n    //     scrollableContainer.style.display = '';\r\n    //   }\r\n\r\n    //   // scrollableContainer.style.paddingRight = '0';\r\n    //   // this.container.classList.remove('sliding');\r\n    // }\r\n  };\r\n}\r\n\r\nexport const TransitionSlider = (\r\n  content: HTMLElement, \r\n  type: 'tabs' | 'navigation' | 'zoom-fade' | 'slide-fade' | 'none'/*  | 'counter' */, \r\n  transitionTime: number, \r\n  onTransitionEnd?: (id: number) => void, \r\n  isHeavy = true\r\n) => {\r\n  let animationFunction: TransitionFunction = null;\r\n\r\n  switch(type) {\r\n    case 'tabs':\r\n      animationFunction = slideTabs;\r\n      break;\r\n    case 'navigation':\r\n      animationFunction = slideNavigation;\r\n      break;\r\n    /* default:\r\n      break; */\r\n  }\r\n\r\n  content.dataset.animation = type;\r\n  \r\n  return Transition(content, animationFunction, transitionTime, onTransitionEnd, isHeavy);\r\n};\r\n\r\ntype TransitionFunction = (tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) => void | (() => void);\r\n\r\nconst Transition = (\r\n  content: HTMLElement, \r\n  animationFunction: TransitionFunction, \r\n  transitionTime: number, \r\n  onTransitionEnd?: (id: number) => void, \r\n  isHeavy = true,\r\n  once = false,\r\n  withAnimationListener = true\r\n) => {\r\n  const onTransitionEndCallbacks: Map<HTMLElement, Function> = new Map();\r\n  let animationDeferred: CancellablePromise<void>;\r\n  // let animationStarted = 0;\r\n  let from: HTMLElement = null;\r\n\r\n  if(withAnimationListener) {\r\n    const listenerName = animationFunction ? 'transitionend' : 'animationend';\r\n\r\n    const onEndEvent = (e: TransitionEvent | AnimationEvent) => {\r\n      cancelEvent(e);\r\n  \r\n      if((e.target as HTMLElement).parentElement !== content) {\r\n        return;\r\n      }\r\n      \r\n      //console.log('Transition: transitionend', /* content, */ e, selectTab.prevId, performance.now() - animationStarted);\r\n  \r\n      const callback = onTransitionEndCallbacks.get(e.target as HTMLElement);\r\n      if(callback) callback();\r\n  \r\n      if(e.target !== from) {\r\n        return;\r\n      }\r\n  \r\n      if(!animationDeferred && isHeavy) return;\r\n  \r\n      if(animationDeferred) {\r\n        animationDeferred.resolve();\r\n        animationDeferred = undefined;\r\n      }\r\n  \r\n      if(onTransitionEnd) {\r\n        onTransitionEnd(selectTab.prevId());\r\n      }\r\n  \r\n      content.classList.remove('animating', 'backwards', 'disable-hover');\r\n  \r\n      if(once) {\r\n        content.removeEventListener(listenerName, onEndEvent/* , {capture: false} */);\r\n        from = animationDeferred = undefined;\r\n        onTransitionEndCallbacks.clear();\r\n      }\r\n    };\r\n  \r\n    // TODO: check for transition type (transform, etc) using by animationFunction\r\n    content.addEventListener(listenerName, onEndEvent/* , {passive: true, capture: false} */);\r\n  }\r\n\r\n  function selectTab(id: number | HTMLElement, animate = true, overrideFrom?: typeof from) {\r\n    if(overrideFrom) {\r\n      from = overrideFrom;\r\n    }\r\n\r\n    if(id instanceof HTMLElement) {\r\n      id = whichChild(id);\r\n    }\r\n    \r\n    const prevId = selectTab.prevId();\r\n    if(id === prevId) return false;\r\n\r\n    //console.log('selectTab id:', id);\r\n\r\n    const to = content.children[id] as HTMLElement;\r\n\r\n    if(!rootScope.settings.animationsEnabled || prevId === -1) {\r\n      animate = false;\r\n    }\r\n\r\n    if(!withAnimationListener) {\r\n      const timeout = content.dataset.timeout;\r\n      if(timeout !== undefined) {\r\n        clearTimeout(+timeout);\r\n      }\r\n\r\n      delete content.dataset.timeout;\r\n    }\r\n\r\n    if(!animate) {\r\n      if(from) from.classList.remove('active', 'to', 'from');\r\n      else if(to) { // fix instant opening back from closed slider (e.g. instant closening and opening right sidebar)\r\n        const callback = onTransitionEndCallbacks.get(to);\r\n        if(callback) {\r\n          callback();\r\n        }\r\n      }\r\n\r\n      if(to) {\r\n        to.classList.remove('to', 'from');\r\n        to.classList.add('active');\r\n      }\r\n\r\n      content.classList.remove('animating', 'backwards', 'disable-hover');\r\n\r\n      from = to;\r\n\r\n      if(onTransitionEnd) onTransitionEnd(id);\r\n      return;\r\n    }\r\n\r\n    if(!withAnimationListener) {\r\n      content.dataset.timeout = '' + window.setTimeout(() => {\r\n        to.classList.remove('to');\r\n        from && from.classList.remove('from');\r\n        content.classList.remove('animating', 'backwards', 'disable-hover');\r\n        delete content.dataset.timeout;\r\n      }, transitionTime);\r\n    }\r\n\r\n    if(from) {\r\n      from.classList.remove('to');\r\n      from.classList.add('from');\r\n    }\r\n\r\n    content.classList.add('animating'/* , 'disable-hover' */);\r\n    const toRight = prevId < id;\r\n    content.classList.toggle('backwards', !toRight);\r\n\r\n    let onTransitionEndCallback: ReturnType<TransitionFunction>;\r\n    if(!to) {\r\n      //prevTabContent.classList.remove('active');\r\n    } else {\r\n      if(animationFunction) {\r\n        onTransitionEndCallback = animationFunction(to, from, toRight);\r\n      } else {\r\n        to.classList.add('active');\r\n      }\r\n\r\n      to.classList.remove('from');\r\n      to.classList.add('to');\r\n    }\r\n    \r\n    if(to) {\r\n      onTransitionEndCallbacks.set(to, () => {\r\n        to.classList.remove('to');\r\n        onTransitionEndCallbacks.delete(to);\r\n      });\r\n    }\r\n\r\n    if(from/*  && false */) {\r\n      const _from = from;\r\n      const callback = () => {\r\n        _from.classList.remove('active', 'from');\r\n\r\n        if(onTransitionEndCallback) {\r\n          onTransitionEndCallback();\r\n        }\r\n\r\n        onTransitionEndCallbacks.delete(_from);\r\n      };\r\n\r\n      if(to) {\r\n        onTransitionEndCallbacks.set(_from, callback);\r\n      } else {\r\n        const timeout = window.setTimeout(callback, transitionTime);\r\n        onTransitionEndCallbacks.set(_from, () => {\r\n          clearTimeout(timeout);\r\n          onTransitionEndCallbacks.delete(_from);\r\n        });\r\n      }\r\n\r\n      if(isHeavy) {\r\n        if(!animationDeferred) {\r\n          animationDeferred = deferredPromise<void>();\r\n          // animationStarted = performance.now();\r\n        }\r\n  \r\n        dispatchHeavyAnimationEvent(animationDeferred, transitionTime * 2);\r\n      }\r\n    }\r\n    \r\n    from = to;\r\n  }\r\n\r\n  //selectTab.prevId = -1;\r\n  selectTab.prevId = () => from ? whichChild(from) : -1;\r\n  \r\n  return selectTab;\r\n};\r\n\r\nexport default Transition;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's animation.ts\r\n\r\nimport { fastRaf } from './schedulers';\r\nimport { CancellablePromise, deferredPromise } from './cancellablePromise';\r\n\r\ninterface AnimationInstance {\r\n  isCancelled: boolean;\r\n  deferred: CancellablePromise<void>\r\n}\r\n\r\ntype AnimationInstanceKey = any;\r\nconst instances: Map<AnimationInstanceKey, AnimationInstance> = new Map();\r\n\r\nexport function createAnimationInstance(key: AnimationInstanceKey) {\r\n  cancelAnimationByKey(key);\r\n\r\n  const instance: AnimationInstance = {\r\n    isCancelled: false, \r\n    deferred: deferredPromise<void>()\r\n  };\r\n\r\n  instances.set(key, instance);\r\n  instance.deferred.then(() => {\r\n    instances.delete(key);\r\n  });\r\n\r\n  return instance;\r\n}\r\n\r\nexport function getAnimationInstance(key: AnimationInstanceKey) {\r\n  return instances.get(key);\r\n}\r\n\r\nexport function cancelAnimationByKey(key: AnimationInstanceKey) {\r\n  const instance = getAnimationInstance(key);\r\n  if(instance) {\r\n    instance.isCancelled = true;\r\n    instance.deferred.resolve();\r\n  }\r\n}\r\n\r\nexport function animateSingle(tick: Function, key: AnimationInstanceKey, instance?: AnimationInstance) {\r\n  if(!instance) {\r\n    instance = createAnimationInstance(key);\r\n  }\r\n\r\n  fastRaf(() => {\r\n    if(instance.isCancelled) {\r\n      return;\r\n    }\r\n    \r\n    if(tick()) {\r\n      animateSingle(tick, key, instance);\r\n    } else {\r\n      instance.deferred.resolve();\r\n    }\r\n  });\r\n\r\n  return instance.deferred;\r\n}\r\n\r\nexport function animate(tick: Function) {\r\n  fastRaf(() => {\r\n    if(tick()) {\r\n      animate(tick);\r\n    }\r\n  });\r\n}\r\n","export default function forEachReverse<T>(array: Array<T>, callback: (value: T, index?: number, array?: Array<T>) => void) {\n  for(let length = array.length, i = length - 1; i >= 0; --i) {\n    callback(array[i], i, array);\n  }\n};\n","export default function indexOfAndSplice<T>(array: Array<T>, item: T) {\n  const idx = array.indexOf(item);\n  const spliced = idx !== -1 && array.splice(idx, 1);\n  return spliced && spliced[0];\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpAsChild(el: any, parent: any) {\r\n  if(el.parentElement === parent) return el;\r\n  \r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.parentElement === parent) {\r\n      return el;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\n/* export function isInDOM(element: Element, parentNode?: HTMLElement): boolean {\r\n  if(!element) {\r\n    return false;\r\n  }\r\n\r\n  parentNode = parentNode || document.body;\r\n  if(element === parentNode) {\r\n    return true;\r\n  }\r\n  return isInDOM(element.parentNode as HTMLElement, parentNode);\r\n} */\r\nexport default function isInDOM(element: Element): boolean {\r\n  return element?.isConnected;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function whichChild(elem: Node) {\r\n  if(!elem.parentNode) {\r\n    return -1;\r\n  }\r\n  \r\n  let i = 0;\r\n  // @ts-ignore\r\n  while((elem = elem.previousElementSibling) !== null) ++i;\r\n  return i;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's fastSmoothScroll slightly patched\r\n\r\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\r\nimport { fastRaf } from './schedulers';\r\nimport { animateSingle, cancelAnimationByKey } from './animation';\r\nimport rootScope from '../lib/rootScope';\r\nimport isInDOM from './dom/isInDOM';\r\n\r\nconst MIN_JS_DURATION = 250;\r\nconst MAX_JS_DURATION = 600;\r\nconst LONG_TRANSITION_MAX_DISTANCE = 1500;\r\nconst SHORT_TRANSITION_MAX_DISTANCE = 500;\r\n\r\nexport enum FocusDirection {\r\n  Up,\r\n  Down,\r\n  Static,\r\n};\r\n\r\nexport type ScrollGetNormalSizeCallback = (options: {rect: DOMRect}) => number;\r\n\r\nexport type ScrollOptions = {\r\n  container: HTMLElement,\r\n  element: HTMLElement,\r\n  position: ScrollLogicalPosition,\r\n  margin?: number,\r\n  maxDistance?: number,\r\n  forceDirection?: FocusDirection,\r\n  forceDuration?: number,\r\n  axis?: 'x' | 'y',\r\n  getNormalSize?: ScrollGetNormalSizeCallback,\r\n  fallbackToElementStartWhenCentering?: HTMLElement\r\n};\r\n\r\nexport default function fastSmoothScroll(options: ScrollOptions) {\r\n  if(options.margin === undefined) {\r\n    options.margin = 0;\r\n  }\r\n\r\n  if(options.maxDistance === undefined) {\r\n    options.maxDistance = LONG_TRANSITION_MAX_DISTANCE;\r\n  }\r\n\r\n  if(options.axis === undefined) {\r\n    options.axis = 'y';\r\n  }\r\n  //return;\r\n\r\n  if(!rootScope.settings.animationsEnabled) {\r\n    options.forceDirection = FocusDirection.Static;\r\n  }\r\n\r\n  if(options.forceDirection === FocusDirection.Static) {\r\n    options.forceDuration = 0;\r\n    return scrollWithJs(options);\r\n    /* return Promise.resolve();\r\n\r\n    element.scrollIntoView({ block: position });\r\n\r\n    cancelAnimationByKey(container);\r\n    return Promise.resolve(); */\r\n  }\r\n\r\n  const promise = new Promise<void>((resolve) => {\r\n    fastRaf(() => {\r\n      scrollWithJs(options).then(resolve);\r\n    });\r\n  });\r\n\r\n  return options.axis === 'y' ? dispatchHeavyAnimationEvent(promise) : promise;\r\n}\r\n\r\nfunction scrollWithJs(options: ScrollOptions): Promise<void> {\r\n  const {element, container, getNormalSize, axis, margin, position, forceDirection, maxDistance, forceDuration} = options;\r\n  if(!isInDOM(element)) {\r\n    cancelAnimationByKey(container);\r\n    return Promise.resolve();\r\n  }\r\n  \r\n  const rectStartKey = axis === 'y' ? 'top' : 'left';\r\n  const rectEndKey = axis === 'y' ? 'bottom' : 'right';\r\n  const sizeKey = axis === 'y' ? 'height' : 'width';\r\n  const scrollSizeKey = axis === 'y' ? 'scrollHeight' : 'scrollWidth';\r\n  const scrollPositionKey = axis === 'y' ? 'scrollTop' : 'scrollLeft';\r\n\r\n  //const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\r\n  const elementRect = element.getBoundingClientRect();\r\n  const containerRect = container.getBoundingClientRect ? container.getBoundingClientRect() : document.body.getBoundingClientRect();\r\n\r\n  //const transformable = container.firstElementChild as HTMLElement;\r\n\r\n  const elementPosition = elementRect[rectStartKey] - containerRect[rectStartKey];\r\n  const elementSize = element[scrollSizeKey]; // margin is exclusive in DOMRect\r\n\r\n  const containerSize = getNormalSize ? getNormalSize({rect: containerRect}) : containerRect[sizeKey];\r\n\r\n  let scrollPosition = container[scrollPositionKey];\r\n  const scrollSize = container[scrollSizeKey];\r\n  /* const elementPosition = element.offsetTop;\r\n  const elementSize = element.offsetHeight;\r\n\r\n  const scrollPosition = container[scrollPositionKey];\r\n  const scrollSize = container[scrollSizeKey];\r\n  const containerSize = container.offsetHeight; */\r\n\r\n  let path!: number;\r\n\r\n  switch(position) {\r\n    case 'start':\r\n      path = elementPosition - margin;\r\n      break;\r\n    case 'end':\r\n      path = elementRect[rectEndKey] /* + (elementSize - elementRect[sizeKey]) */ - containerRect[rectEndKey] + margin;\r\n      break;\r\n    // 'nearest' is not supported yet\r\n    case 'nearest':\r\n    case 'center':\r\n      if(elementSize < containerSize) {\r\n        path = (elementPosition + elementSize / 2) - (containerSize / 2);\r\n      } else {\r\n        if(options.fallbackToElementStartWhenCentering && options.fallbackToElementStartWhenCentering !== element) {\r\n          options.element = options.fallbackToElementStartWhenCentering;\r\n          options.position = 'start';\r\n          return scrollWithJs(options);\r\n        }\r\n\r\n        path = elementPosition - margin;\r\n      }\r\n\r\n      break;\r\n  }\r\n  /* switch (position) {\r\n    case 'start':\r\n      path = (elementPosition - margin) - scrollPosition;\r\n      break;\r\n    case 'end':\r\n      path = (elementPosition + elementSize + margin) - (scrollPosition + containerSize);\r\n      break;\r\n    // 'nearest' is not supported yet\r\n    case 'nearest':\r\n    case 'center':\r\n      path = elementSize < containerSize\r\n        ? (elementPosition + elementSize / 2) - (scrollPosition + containerSize / 2)\r\n        : (elementPosition - margin) - scrollPosition;\r\n      break;\r\n  } */\r\n\r\n  if(Math.abs(path - (margin || 0)) < 1) {\r\n    cancelAnimationByKey(container);\r\n    return Promise.resolve();\r\n  }\r\n\r\n  if(axis === 'y') {\r\n    if(forceDirection === undefined) {\r\n      if(path > maxDistance) {\r\n        scrollPosition = container.scrollTop += path - maxDistance;\r\n        path = maxDistance;\r\n      } else if(path < -maxDistance) {\r\n        scrollPosition = container.scrollTop += path + maxDistance;\r\n        path = -maxDistance;\r\n      }\r\n    }/*  else if(forceDirection === FocusDirection.Up) { // * not tested yet\r\n      container.scrollTop = offsetTop + container.scrollTop + maxDistance;\r\n    } else if(forceDirection === FocusDirection.Down) { // * not tested yet\r\n      container.scrollTop = Math.max(0, offsetTop + container.scrollTop - maxDistance);\r\n    } */\r\n  }\r\n\r\n  // console.log('scrollWithJs: will scroll path:', path, element);\r\n\r\n  /* let existsTransform = 0;\r\n  const currentTransform = transformable.style.transform;\r\n  if(currentTransform) {\r\n    existsTransform = parseInt(currentTransform.match(/\\((.+?), (.+?), .+\\)/)[2]);\r\n    //path += existsTransform;\r\n  } */\r\n\r\n  if(path < 0) {\r\n    const remainingPath = -scrollPosition;\r\n    path = Math.max(path, remainingPath);\r\n  } else if(path > 0) {\r\n    const remainingPath = scrollSize - (scrollPosition + containerSize);\r\n    path = Math.min(path, remainingPath);\r\n  }\r\n\r\n  const target = container[scrollPositionKey] + path;\r\n  const absPath = Math.abs(path);\r\n  const duration = forceDuration ?? (\r\n    MIN_JS_DURATION + (absPath / LONG_TRANSITION_MAX_DISTANCE) * (MAX_JS_DURATION - MIN_JS_DURATION)\r\n  );\r\n  const startAt = Date.now();\r\n\r\n  /* transformable.classList.add('no-transition');\r\n\r\n  const tickTransform = () => {\r\n    const t = duration ? Math.min((Date.now() - startAt) / duration, 1) : 1;\r\n    const currentPath = path * transition(t);\r\n\r\n    transformable.style.transform = `translate3d(0, ${-currentPath}px, 0)`;\r\n    container.dataset.translate = '' + -currentPath;\r\n\r\n    const willContinue = t < 1;\r\n    if(!willContinue) {\r\n      fastRaf(() => {\r\n        delete container.dataset.transform;\r\n        container.dataset.transform = '';\r\n        transformable.style.transform = '';\r\n        void transformable.offsetLeft; // reflow\r\n        transformable.classList.remove('no-transition');\r\n        void transformable.offsetLeft; // reflow\r\n        container[scrollPositionKey] = Math.round(target);\r\n      });\r\n    }\r\n\r\n    return willContinue;\r\n  };\r\n  \r\n  return animateSingle(tickTransform, container); */\r\n\r\n  /* return new Promise((resolve) => {\r\n    fastRaf(() => {\r\n      transformable.style.transform = '';\r\n      transformable.style.transition = '';\r\n\r\n      setTimeout(resolve, duration);\r\n    });\r\n  });\r\n\r\n  const transformableHeight = transformable.scrollHeight;\r\n  //transformable.style.minHeight = `${transformableHeight}px`;\r\n  */\r\n\r\n  const transition = absPath < SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\r\n  const tick = () => {\r\n    const t = duration ? Math.min((Date.now() - startAt) / duration, 1) : 1;\r\n\r\n    const currentPath = path * (1 - transition(t));\r\n    container[scrollPositionKey] = Math.round(target - currentPath);\r\n    \r\n    return t < 1;\r\n  };\r\n\r\n  if(!duration || !path) {\r\n    cancelAnimationByKey(container);\r\n    tick();\r\n    return Promise.resolve();\r\n  }\r\n\r\n  /* return new Promise((resolve) => {\r\n    setTimeout(resolve, duration);\r\n  }).then(() => {\r\n    transformable.classList.add('no-transition');\r\n    void transformable.offsetLeft; // reflow\r\n    transformable.style.transform = '';\r\n    transformable.style.transition = '';\r\n    void transformable.offsetLeft; // reflow\r\n    transformable.classList.remove('no-transition');\r\n    void transformable.offsetLeft; // reflow\r\n    fastRaf(() => {\r\n      \r\n      container[scrollPositionKey] = Math.round(target);\r\n      //transformable.style.minHeight = ``;\r\n    });\r\n    \r\n  }); */\r\n\r\n  return animateSingle(tick, container);\r\n}\r\n\r\nfunction longTransition(t: number) {\r\n  return 1 - ((1 - t) ** 5);\r\n}\r\n\r\nfunction shortTransition(t: number) {\r\n  return 1 - ((1 - t) ** 3.5);\r\n}\r\n","export default function clamp(v: number, min: number, max: number): number {\n  return v < min ? min : ((v > max) ? max : v);\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's schedulers\r\nimport { NoneToVoidFunction } from \"../types\";\r\n\r\n/*\r\nexport function throttleWithTickEnd<F extends AnyToVoidFunction>(fn: F) {\r\n  return throttleWith(onTickEnd, fn);\r\n}\r\n\r\nexport function throttleWithNow<F extends AnyToVoidFunction>(fn: F) {\r\n  return throttleWith(runNow, fn);\r\n}\r\n\r\nexport function onTickEnd(cb: NoneToVoidFunction) {\r\n  Promise.resolve().then(cb);\r\n}\r\n\r\nfunction runNow(fn: NoneToVoidFunction) {\r\n  fn();\r\n} */\r\n\r\nlet fastRafCallbacks: NoneToVoidFunction[] | undefined;\r\nexport function fastRaf(callback: NoneToVoidFunction) {\r\n  if(!fastRafCallbacks) {\r\n    fastRafCallbacks = [callback];\r\n\r\n    requestAnimationFrame(() => {\r\n      const currentCallbacks = fastRafCallbacks!;\r\n      fastRafCallbacks = undefined;\r\n      currentCallbacks.forEach((cb) => cb());\r\n    });\r\n  } else {\r\n    fastRafCallbacks.push(callback);\r\n  }\r\n}\r\n\r\nlet fastRafConventionalCallbacks: NoneToVoidFunction[] | undefined, processing = false;\r\nexport function fastRafConventional(callback: NoneToVoidFunction) {\r\n  if(!fastRafConventionalCallbacks) {\r\n    fastRafConventionalCallbacks = [callback];\r\n\r\n    requestAnimationFrame(() => {\r\n      processing = true;\r\n      for(let i = 0; i < fastRafConventionalCallbacks.length; ++i) {\r\n        fastRafConventionalCallbacks[i]();\r\n      }\r\n\r\n      fastRafConventionalCallbacks = undefined;\r\n      processing = false;\r\n    });\r\n  } else if(processing) {\r\n    callback();\r\n  } else {\r\n    fastRafConventionalCallbacks.push(callback);\r\n  }\r\n}\r\n\r\nlet rafPromise: Promise<DOMHighResTimeStamp>;\r\nexport function fastRafPromise() {\r\n  if(rafPromise) return rafPromise;\r\n\r\n  rafPromise = new Promise(requestAnimationFrame);\r\n  rafPromise.then(() => {\r\n    rafPromise = undefined;\r\n  });\r\n\r\n  return rafPromise;\r\n}\r\n\r\nexport function doubleRaf() {\r\n  return new Promise<void>((resolve) => {\r\n    fastRaf(() => {\r\n      fastRaf(resolve);\r\n    });\r\n  });\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's useHeavyAnimationCheck.ts, patched\r\n\r\nimport { AnyToVoidFunction } from '../types';\r\nimport ListenerSetter from '../helpers/listenerSetter';\r\nimport { CancellablePromise, deferredPromise } from '../helpers/cancellablePromise';\r\nimport rootScope from '../lib/rootScope';\r\nimport DEBUG from '../config/debug';\r\nimport { pause } from '../helpers/schedulers/pause';\r\n\r\nconst ANIMATION_START_EVENT = 'event-heavy-animation-start';\r\nconst ANIMATION_END_EVENT = 'event-heavy-animation-end';\r\n\r\nlet isAnimating = false;\r\nlet heavyAnimationPromise: CancellablePromise<void> = deferredPromise<void>();\r\nlet promisesInQueue = 0;\r\n\r\nheavyAnimationPromise.resolve();\r\n\r\nconst log = console.log.bind(console.log, '[HEAVY-ANIMATION]:');\r\n\r\nexport function dispatchHeavyAnimationEvent(promise: Promise<any>, timeout?: number) {\r\n  if(!isAnimating) {\r\n    heavyAnimationPromise = deferredPromise<void>();\r\n    rootScope.dispatchEvent(ANIMATION_START_EVENT);\r\n    isAnimating = true;\r\n    DEBUG && log('start');\r\n  }\r\n  \r\n  ++promisesInQueue;\r\n  DEBUG && log('attach promise, length:', promisesInQueue, timeout);\r\n\r\n  const promises = [\r\n    timeout !== undefined ? pause(timeout) : undefined,\r\n    promise.finally(() => {})\r\n  ].filter(Boolean);\r\n\r\n  const perf = performance.now();\r\n  const _heavyAnimationPromise = heavyAnimationPromise;\r\n  Promise.race(promises).then(() => {\r\n    if(heavyAnimationPromise !== _heavyAnimationPromise || heavyAnimationPromise.isFulfilled) { // interrupted\r\n      return;\r\n    }\r\n\r\n    --promisesInQueue;\r\n    DEBUG && log('promise end, length:', promisesInQueue, performance.now() - perf);\r\n    if(promisesInQueue <= 0) {\r\n      onHeavyAnimationEnd();\r\n    }\r\n  });\r\n\r\n  return heavyAnimationPromise;\r\n}\r\n\r\nfunction onHeavyAnimationEnd() {\r\n  if(heavyAnimationPromise.isFulfilled) {\r\n    return;\r\n  }\r\n\r\n  isAnimating = false;\r\n  promisesInQueue = 0;\r\n  rootScope.dispatchEvent(ANIMATION_END_EVENT);\r\n  heavyAnimationPromise.resolve();\r\n\r\n  DEBUG && log('end');\r\n}\r\n\r\nexport function interruptHeavyAnimation() {\r\n  onHeavyAnimationEnd();\r\n}\r\n\r\nexport function getHeavyAnimationPromise() {\r\n  return heavyAnimationPromise;\r\n}\r\n\r\nexport default function(\r\n  handleAnimationStart: AnyToVoidFunction,\r\n  handleAnimationEnd: AnyToVoidFunction,\r\n  listenerSetter?: ListenerSetter\r\n) {\r\n  //useEffect(() => {\r\n    if(isAnimating) {\r\n      handleAnimationStart();\r\n    }\r\n\r\n    const add = listenerSetter ? listenerSetter.add(rootScope) : rootScope.addEventListener.bind(rootScope);\r\n    const remove = listenerSetter ? listenerSetter.removeManual.bind(listenerSetter, rootScope) : rootScope.removeEventListener.bind(rootScope);\r\n    add(ANIMATION_START_EVENT, handleAnimationStart);\r\n    add(ANIMATION_END_EVENT, handleAnimationEnd);\r\n\r\n    return () => {\r\n      remove(ANIMATION_END_EVENT, handleAnimationEnd);\r\n      remove(ANIMATION_START_EVENT, handleAnimationStart);\r\n    };\r\n  //}, [handleAnimationEnd, handleAnimationStart]);\r\n}\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"rlottie.worker.dfa26d04325d4bc271d8.bundle.worker.js\");\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { IS_SAFARI } from \"../../environment/userAgent\";\nimport EventListenerBase from \"../../helpers/eventListenerBase\";\n\nexport default class QueryableWorker extends EventListenerBase<{\n  ready: () => void,\n  frame: (reqId: number, frameNo: number, frame: Uint8ClampedArray) => void,\n  loaded: (reqId: number, frameCount: number, fps: number) => void,\n  error: (reqId: number, error: Error) => void,\n  workerError: (error: ErrorEvent) => void\n}> {\n  constructor(private worker: Worker) {\n    super();\n\n    this.worker.onerror = (error) => {\n      try {\n        this.dispatchEvent('workerError', error);\n        this.cleanup();\n        this.terminate();\n      } catch(err) {\n        \n      }\n    };\n\n    this.worker.onmessage = (event) => {\n      this.dispatchEvent(event.data.queryMethodListener, ...event.data.queryMethodArguments);\n    };\n  }\n\n  public postMessage(message: any) {\n    this.worker.postMessage(message);\n  }\n\n  public terminate() {\n    this.worker.terminate();\n  }\n\n  public sendQuery(queryMethod: string, ...args: any[]) {\n    if(IS_SAFARI) {\n      this.worker.postMessage({\n        queryMethod: queryMethod,\n        queryMethodArguments: args\n      });\n    } else {\n      const transfer: (ArrayBuffer | OffscreenCanvas)[] = [];\n      args.forEach(arg => {\n        if(arg instanceof ArrayBuffer) {\n          transfer.push(arg);\n        }\n  \n        if(typeof(arg) === 'object' && arg.buffer instanceof ArrayBuffer) {\n          transfer.push(arg.buffer);\n        }\n      });\n  \n      //console.log('transfer', transfer);\n      this.worker.postMessage({\n        queryMethod: queryMethod,\n        queryMethodArguments: args\n      }, transfer as Transferable[]);\n    }\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport RLottieWorker from 'worker-loader!./rlottie.worker';\r\nimport animationIntersector from \"../../components/animationIntersector\";\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport { pause } from '../../helpers/schedulers/pause';\r\nimport { logger, LogTypes } from \"../logger\";\r\nimport apiManager from \"../mtproto/mtprotoworker\";\r\nimport RLottiePlayer, { RLottieOptions } from './rlottiePlayer';\r\nimport QueryableWorker from './queryableWorker';\r\nimport blobConstruct from '../../helpers/blob/blobConstruct';\r\n\r\nexport type LottieAssetName = 'EmptyFolder' | 'Folders_1' | 'Folders_2' | \r\n  'TwoFactorSetupMonkeyClose' | 'TwoFactorSetupMonkeyCloseAndPeek' | \r\n  'TwoFactorSetupMonkeyCloseAndPeekToIdle' | 'TwoFactorSetupMonkeyIdle' | \r\n  'TwoFactorSetupMonkeyPeek' | 'TwoFactorSetupMonkeyTracking' | \r\n  'voice_outlined2' | 'voip_filled' | 'voice_mini';\r\n\r\nexport class LottieLoader {\r\n  private isWebAssemblySupported = typeof(WebAssembly) !== 'undefined';\r\n  private loadPromise: Promise<void> = !this.isWebAssemblySupported ? Promise.reject() : undefined;\r\n  private loaded = false;\r\n\r\n  private workersLimit = 4;\r\n  private players: {[reqId: number]: RLottiePlayer} = {};\r\n\r\n  private workers: QueryableWorker[] = [];\r\n  private curWorkerNum = 0;\r\n\r\n  private log = logger('LOTTIE', LogTypes.Error);\r\n\r\n  public getAnimation(element: HTMLElement) {\r\n    for(const i in this.players) {\r\n      if(this.players[i].el === element) {\r\n        return this.players[i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public setLoop(loop: boolean) {\r\n    for(const i in this.players) {\r\n      const player = this.players[i];\r\n      player.loop = loop;\r\n      player.autoplay = player._autoplay;\r\n    }\r\n  }\r\n\r\n  public loadLottieWorkers() {\r\n    if(this.loadPromise) {\r\n      return this.loadPromise;\r\n    }\r\n\r\n    return this.loadPromise = new Promise((resolve, reject) => {\r\n      let remain = this.workersLimit;\r\n      for(let i = 0; i < this.workersLimit; ++i) {\r\n        const worker = this.workers[i] = new QueryableWorker(new RLottieWorker());\r\n\r\n        worker.addEventListener('ready', () => {\r\n          this.log('worker #' + i + ' ready');\r\n\r\n          worker.addEventListener('frame', this.onFrame);\r\n          worker.addEventListener('loaded', this.onPlayerLoaded);\r\n          worker.addEventListener('error', this.onPlayerError);\r\n\r\n          --remain;\r\n          if(!remain) {\r\n            this.log('workers ready');\r\n            resolve();\r\n            this.loaded = true;\r\n          }\r\n        }, {once: true});\r\n\r\n        worker.addEventListener('workerError', (error) => {\r\n          reject('rlottie load error: ' + error.message);\r\n          this.loaded = false;\r\n        }, {once: true});\r\n      }\r\n    });\r\n  }\r\n\r\n  public loadAnimationAsAsset(params: Omit<RLottieOptions, 'animationData' | 'name'>, name: LottieAssetName) {\r\n    (params as RLottieOptions).name = name;\r\n    return this.loadAnimationFromURL(params, 'assets/tgs/' + name + '.json');\r\n  }\r\n\r\n  public loadAnimationFromURL(params: Omit<RLottieOptions, 'animationData'>, url: string): Promise<RLottiePlayer> {\r\n    if(!this.isWebAssemblySupported) {\r\n      return this.loadPromise as any;\r\n    }\r\n    \r\n    if(!this.loaded) {\r\n      this.loadLottieWorkers();\r\n    }\r\n\r\n    return fetch(url)\r\n    .then(res => {\r\n      if(!res.headers || res.headers.get('content-type') === 'application/octet-stream') {\r\n        return res.arrayBuffer().then(data => apiManager.invokeCrypto('gzipUncompress', data)).then(arr => blobConstruct([arr], ''))\r\n      } else {\r\n        return res.blob();\r\n      }\r\n    })\r\n    /* .then(str => {\r\n      return new Promise<string>((resolve) => setTimeout(() => resolve(str), 2e3));\r\n    }) */\r\n    .then(blob => {\r\n      const newParams = Object.assign(params, {animationData: blob, needUpscale: true});\r\n      if(!newParams.name) newParams.name = url;\r\n      return this.loadAnimationWorker(newParams);\r\n    });\r\n  }\r\n\r\n  public waitForFirstFrame(player: RLottiePlayer) {\r\n    return Promise.race([\r\n      /* new Promise<void>((resolve) => {\r\n        player.addEventListener('firstFrame', () => {\r\n          setTimeout(() => resolve(), 1500);\r\n        }, true);\r\n      }) */\r\n      new Promise<void>((resolve) => {\r\n        player.addEventListener('firstFrame', resolve, {once: true});\r\n      }),\r\n      pause(2500)\r\n    ]).then(() => player);\r\n  }\r\n\r\n  public async loadAnimationWorker(params: RLottieOptions, group = params.group || '', middleware?: () => boolean): Promise<RLottiePlayer> {\r\n    if(!this.isWebAssemblySupported) {\r\n      return this.loadPromise as any;\r\n    }\r\n    //params.autoplay = true;\r\n\r\n    if(!this.loaded) {\r\n      await this.loadLottieWorkers();\r\n    }\r\n\r\n    if(middleware && !middleware()) {\r\n      throw new Error('middleware');\r\n    }\r\n\r\n    if(!params.width || !params.height) {\r\n      params.width = parseInt(params.container.style.width);\r\n      params.height = parseInt(params.container.style.height);\r\n    }\r\n\r\n    if(!params.width || !params.height) {\r\n      throw new Error('No size for sticker!');\r\n    }\r\n\r\n    params.group = group;\r\n\r\n    const player = this.initPlayer(params.container, params);\r\n\r\n    if(group !== 'none') {\r\n      animationIntersector.addAnimation(player, group);\r\n    }\r\n\r\n    return player;\r\n  }\r\n\r\n  private onPlayerLoaded = (reqId: number, frameCount: number, fps: number) => {\r\n    const rlPlayer = this.players[reqId];\r\n    if(!rlPlayer) {\r\n      this.log.warn('onPlayerLoaded on destroyed player:', reqId, frameCount);\r\n      return;\r\n    }\r\n\r\n    this.log.debug('onPlayerLoaded');\r\n    rlPlayer.onLoad(frameCount, fps);\r\n    //rlPlayer.addListener('firstFrame', () => {\r\n      //animationIntersector.addAnimation(player, group);\r\n    //}, true);\r\n  };\r\n\r\n  private onFrame = (reqId: number, frameNo: number, frame: Uint8ClampedArray) => {\r\n    const rlPlayer = this.players[reqId];\r\n    if(!rlPlayer) {\r\n      this.log.warn('onFrame on destroyed player:', reqId, frameNo);\r\n      return;\r\n    }\r\n\r\n    if(rlPlayer.clamped !== undefined) {\r\n      rlPlayer.clamped = frame;\r\n    }\r\n    \r\n    rlPlayer.renderFrame(frame, frameNo);\r\n  };\r\n\r\n  private onPlayerError = (reqId: number, error: Error) => {\r\n    const rlPlayer = this.players[reqId];\r\n    if(rlPlayer) {\r\n      // ! will need refactoring later, this is not the best way to remove the animation\r\n      const animations = animationIntersector.getAnimations(rlPlayer.el);\r\n      animations.forEach(animation => {\r\n        animationIntersector.checkAnimation(animation, true, true);\r\n      });\r\n    }\r\n  };\r\n\r\n  public onDestroy(reqId: number) {\r\n    delete this.players[reqId];\r\n  }\r\n\r\n  public destroyWorkers() {\r\n    this.workers.forEach((worker, idx) => {\r\n      worker.terminate();\r\n      this.log('worker #' + idx + ' terminated');\r\n    });\r\n\r\n    this.log('workers destroyed');\r\n    this.workers.length = 0;\r\n  }\r\n\r\n  private initPlayer(el: HTMLElement, options: RLottieOptions) {\r\n    const rlPlayer = new RLottiePlayer({\r\n      el, \r\n      worker: this.workers[this.curWorkerNum++],\r\n      options\r\n    });\r\n\r\n    this.players[rlPlayer.reqId] = rlPlayer;\r\n    if(this.curWorkerNum >= this.workers.length) {\r\n      this.curWorkerNum = 0;\r\n    }\r\n\r\n    rlPlayer.loadFromData(options.animationData);\r\n\r\n    return rlPlayer;\r\n  }\r\n}\r\n\r\nconst lottieLoader = new LottieLoader();\r\nMOUNT_CLASS_TO.lottieLoader = lottieLoader;\r\nexport default lottieLoader;\r\n","import { IS_SAFARI } from \"./userAgent\";\n\n/*\n * This is used as a workaround for a memory leak in Safari caused by using Transferable objects to\n * transfer data between WebWorkers and the main thread.\n * https://github.com/mapbox/mapbox-gl-js/issues/8771\n *\n * This should be removed once the underlying Safari issue is fixed.\n */\n\nlet CAN_USE_TRANSFERABLES: boolean;\nif(!IS_SAFARI) CAN_USE_TRANSFERABLES = true;\nelse {\n  try {\n    const match = navigator.userAgent.match(/Version\\/(.+?) /);\n    CAN_USE_TRANSFERABLES = +match[1] >= 14;\n  } catch(err) {\n    CAN_USE_TRANSFERABLES = false;\n  }\n}\n\nexport default CAN_USE_TRANSFERABLES;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport CAN_USE_TRANSFERABLES from \"../../environment/canUseTransferables\";\nimport { IS_ANDROID, IS_APPLE_MOBILE, IS_APPLE, IS_SAFARI } from \"../../environment/userAgent\";\nimport EventListenerBase from \"../../helpers/eventListenerBase\";\nimport mediaSizes from \"../../helpers/mediaSizes\";\nimport clamp from \"../../helpers/number/clamp\";\nimport lottieLoader from \"./lottieLoader\";\nimport QueryableWorker from \"./queryableWorker\";\n\nexport type RLottieOptions = {\n  container: HTMLElement, \n  canvas?: HTMLCanvasElement, \n  autoplay?: boolean, \n  animationData: Blob, \n  loop?: boolean, \n  width?: number,\n  height?: number,\n  group?: string,\n  noCache?: boolean,\n  needUpscale?: boolean,\n  skipRatio?: number,\n  initFrame?: number, // index\n  color?: RLottieColor,\n  inverseColor?: RLottieColor,\n  name?: string,\n  skipFirstFrameRendering?: boolean,\n  toneIndex?: number\n};\n\ntype RLottieCacheMap = Map<number, Uint8ClampedArray>;\nclass RLottieCache {\n  private cache: Map<string, {frames: RLottieCacheMap, counter: number}>;\n  \n  constructor() {\n    this.cache = new Map();\n  }\n\n  public getCache(name: string) {\n    let cache = this.cache.get(name);\n    if(!cache) {\n      this.cache.set(name, cache = {frames: new Map(), counter: 0});\n    } else {\n      // console.warn('[RLottieCache] cache will be reused', cache);\n    }\n\n    ++cache.counter;\n    return cache.frames;\n  }\n\n  public releaseCache(name: string) {\n    const cache = this.cache.get(name);\n    if(cache && !--cache.counter) {\n      this.cache.delete(name);\n      // console.warn('[RLottieCache] released cache', cache);\n    }\n  }\n\n  public getCacheCounter(name: string) {\n    const cache = this.cache.get(name);\n    return cache?.counter;\n  }\n\n  public generateName(name: string, width: number, height: number, color: RLottieColor, toneIndex: number) {\n    return [\n      name, \n      width, \n      height, \n      // color ? rgbaToHexa(color) : ''\n      color ? 'colored' : '',\n      toneIndex || ''\n    ].filter(Boolean).join('-');\n  }\n}\n\nconst cache = new RLottieCache();\n\nexport type RLottieColor = [number, number, number];\n\nexport default class RLottiePlayer extends EventListenerBase<{\n  enterFrame: (frameNo: number) => void,\n  ready: () => void,\n  firstFrame: () => void,\n  cached: () => void\n}> {\n  private static reqId = 0;\n\n  public reqId = 0;\n  public curFrame: number;\n  private frameCount: number;\n  private fps: number;\n  private skipDelta: number;\n  private name: string;\n  private cacheName: string;\n  private toneIndex: number;\n\n  private worker: QueryableWorker;\n  \n  private width = 0;\n  private height = 0;\n\n  public el: HTMLElement;\n  public canvas: HTMLCanvasElement;\n  private context: CanvasRenderingContext2D;\n\n  public paused = true;\n  //public paused = false;\n  public direction = 1;\n  private speed = 1;\n  public autoplay = true;\n  public _autoplay: boolean; // ! will be used to store original value for settings.stickers.loop\n  public loop = true;\n  private _loop: boolean; // ! will be used to store original value for settings.stickers.loop\n  private group = '';\n\n  private frInterval: number;\n  private frThen: number;\n  private rafId: number;\n\n  //private caching = false;\n  //private removed = false;\n\n  private frames: RLottieCacheMap;\n  private imageData: ImageData;\n  public clamped: Uint8ClampedArray;\n  private cachingDelta = 0;\n\n  private initFrame: number;\n  private color: RLottieColor;\n  private inverseColor: RLottieColor;\n\n  public minFrame: number;\n  public maxFrame: number;\n\n  //private playedTimes = 0;\n\n  private currentMethod: RLottiePlayer['mainLoopForwards'] | RLottiePlayer['mainLoopBackwards'];\n  private frameListener: (currentFrame: number) => void;\n  private skipFirstFrameRendering: boolean;\n  private playToFrameOnFrameCallback: (frameNo: number) => void;\n\n  constructor({el, worker, options}: {\n    el: HTMLElement,\n    worker: QueryableWorker,\n    options: RLottieOptions\n  }) {\n    super(true);\n\n    this.reqId = ++RLottiePlayer['reqId'];\n    this.el = el;\n    this.worker = worker;\n\n    for(let i in options) {\n      if(this.hasOwnProperty(i)) {\n        // @ts-ignore\n        this[i] = options[i];\n      }\n    }\n\n    this._loop = this.loop;\n    this._autoplay = this.autoplay;\n\n    // ! :(\n    this.initFrame = options.initFrame;\n    this.color = options.color;\n    this.inverseColor = options.inverseColor;\n    this.name = options.name;\n    this.skipFirstFrameRendering = options.skipFirstFrameRendering;\n    this.toneIndex = options.toneIndex;\n\n    // * Skip ratio (30fps)\n    let skipRatio: number;\n    if(options.skipRatio !== undefined) skipRatio = options.skipRatio;\n    else if((IS_ANDROID || IS_APPLE_MOBILE || (IS_APPLE && !IS_SAFARI)) && this.width < 100 && this.height < 100 && !options.needUpscale) {\n      skipRatio = 0.5;\n    }\n\n    this.skipDelta = skipRatio !== undefined ? 1 / skipRatio | 0 : 1;\n\n    //options.needUpscale = true;\n\n    // * Pixel ratio\n    //const pixelRatio = window.devicePixelRatio;\n    const pixelRatio = clamp(window.devicePixelRatio, 1, 2);\n    if(pixelRatio > 1) {\n      //this.cachingEnabled = true;//this.width < 100 && this.height < 100;\n      if(options.needUpscale) {\n        this.width = Math.round(this.width * pixelRatio);\n        this.height = Math.round(this.height * pixelRatio);\n      } else if(pixelRatio > 1) {\n        if(this.width > 100 && this.height > 100) {\n          if(IS_APPLE || !mediaSizes.isMobile) {\n            /* this.width = Math.round(this.width * (pixelRatio - 1));\n            this.height = Math.round(this.height * (pixelRatio - 1)); */\n            this.width = Math.round(this.width * pixelRatio);\n            this.height = Math.round(this.height * pixelRatio);\n          } else if(pixelRatio > 2.5) {\n            this.width = Math.round(this.width * (pixelRatio - 1.5));\n            this.height = Math.round(this.height * (pixelRatio - 1.5));\n          }\n        } else {\n          this.width = Math.round(this.width * Math.max(1.5, pixelRatio - 1.5));\n          this.height = Math.round(this.height * Math.max(1.5, pixelRatio - 1.5));\n        }\n      }\n    }\n\n    //options.noCache = true;\n    \n    // * Cache frames params\n    if(!options.noCache/*  && false */) {\n      // проверка на размер уже после скейлинга, сделано для попапа и сайдбара, где стикеры 80х80 и 68х68, туда нужно 75%\n      if(IS_APPLE && this.width > 100 && this.height > 100) {\n        this.cachingDelta = 2; //2 // 50%\n      } else if(this.width < 100 && this.height < 100) {\n        this.cachingDelta = Infinity; // 100%\n      } else {\n        this.cachingDelta = 4; // 75%\n      }\n    }\n    \n    // this.cachingDelta = Infinity;\n    // if(isApple) {\n    //   this.cachingDelta = 0; //2 // 50%\n    // }\n\n    /* this.width *= 0.8;\n    this.height *= 0.8; */\n    \n    //console.log(\"RLottiePlayer width:\", this.width, this.height, options);\n    if(!this.canvas) {\n      this.canvas = document.createElement('canvas');\n      this.canvas.classList.add('rlottie');\n      this.canvas.width = this.width;\n      this.canvas.height = this.height;\n    }\n\n    this.context = this.canvas.getContext('2d');\n\n    if(CAN_USE_TRANSFERABLES) {\n      this.clamped = new Uint8ClampedArray(this.width * this.height * 4);\n    }\n\n    this.imageData = new ImageData(this.width, this.height);\n\n    if(this.name) {\n      this.cacheName = cache.generateName(this.name, this.width, this.height, this.color, this.toneIndex);\n      this.frames = cache.getCache(this.cacheName);\n    } else {\n      this.frames = new Map();\n    }\n  }\n\n  public clearCache() {\n    if(this.cachingDelta === Infinity) {\n      return;\n    }\n    \n    if(this.cacheName && cache.getCacheCounter(this.cacheName) > 1) { // skip clearing because same sticker can be still visible\n      return;\n    }\n    \n    this.frames.clear();\n  }\n\n  public sendQuery(methodName: string, ...args: any[]) {\n    //console.trace('RLottie sendQuery:', methodName);\n    this.worker.sendQuery(methodName, this.reqId, ...args);\n  }\n\n  public loadFromData(data: RLottieOptions['animationData']) {\n    this.sendQuery('loadFromData', data, this.width, this.height, this.toneIndex/* , this.canvas.transferControlToOffscreen() */);\n  }\n\n  public play() {\n    if(!this.paused) {\n      return;\n    }\n\n    //return;\n\n    //console.log('RLOTTIE PLAY' + this.reqId);\n\n    this.paused = false;\n    this.setMainLoop();\n  }\n\n  public pause(clearPendingRAF = true) {\n    if(this.paused) {\n      return;\n    }\n\n    this.paused = true;\n    if(clearPendingRAF) {\n      clearTimeout(this.rafId);\n    }\n    //window.cancelAnimationFrame(this.rafId);\n  }\n\n  private resetCurrentFrame() {\n    return this.curFrame = this.initFrame ?? (this.direction === 1 ? this.minFrame : this.maxFrame);\n  }\n\n  public stop(renderFirstFrame = true) {\n    this.pause();\n\n    const curFrame = this.resetCurrentFrame();\n    if(renderFirstFrame) {\n      this.requestFrame(curFrame);\n      //this.sendQuery('renderFrame', this.curFrame);\n    }\n  }\n\n  public restart() {\n    this.stop(false);\n    this.play();\n  }\n\n  public setSpeed(speed: number) {\n    if(this.speed === speed) {\n      return;\n    }\n\n    this.speed = speed;\n\n    if(!this.paused) {\n      this.setMainLoop();\n    }\n  }\n\n  public setDirection(direction: number) {\n    if(this.direction === direction) {\n      return;\n    }\n\n    this.direction = direction;\n    \n    if(!this.paused) {\n      this.setMainLoop();\n    }\n  }\n\n  public remove() {\n    //alert('remove');\n    lottieLoader.onDestroy(this.reqId);\n    this.pause();\n    this.sendQuery('destroy');\n    if(this.cacheName) cache.releaseCache(this.cacheName);\n    this.cleanup();\n    //this.removed = true;\n  }\n\n  private applyColor(frame: Uint8ClampedArray) {\n    const [r, g, b] = this.color;\n    for(let i = 0, length = frame.length; i < length; i += 4) {\n      if(frame[i + 3] !== 0) {\n        frame[i] = r;\n        frame[i + 1] = g;\n        frame[i + 2] = b;\n      }\n    }\n  }\n\n  private applyInversing(frame: Uint8ClampedArray) {\n    const [r, g, b] = this.inverseColor;\n    for(let i = 0, length = frame.length; i < length; i += 4) {\n      if(frame[i + 3] === 0) {\n        frame[i] = r;\n        frame[i + 1] = g;\n        frame[i + 2] = b;\n        frame[i + 3] = 255;\n      } else {\n        frame[i + 3] = 0;\n      }\n    }\n  }\n\n  public renderFrame2(frame: Uint8ClampedArray, frameNo: number) {\n    /* this.setListenerResult('enterFrame', frameNo);\n    return; */\n\n    try {\n      if(this.color) {\n        this.applyColor(frame);\n      }\n\n      if(this.inverseColor) {\n        this.applyInversing(frame);\n      }\n\n      this.imageData.data.set(frame);\n      \n      //this.context.putImageData(new ImageData(frame, this.width, this.height), 0, 0);\n      //let perf = performance.now();\n      this.context.putImageData(this.imageData, 0, 0);\n      //console.log('renderFrame2 perf:', performance.now() - perf);\n    } catch(err) {\n      console.error('RLottiePlayer renderFrame error:', err/* , frame */, this.width, this.height);\n      this.autoplay = false;\n      this.pause();\n      return;\n    }\n    \n    //console.log('set result enterFrame', frameNo);\n    this.dispatchEvent('enterFrame', frameNo);\n  }\n\n  public renderFrame(frame: Uint8ClampedArray, frameNo: number) {\n    //console.log('renderFrame', frameNo, this);\n    if(this.cachingDelta && (frameNo % this.cachingDelta || !frameNo) && !this.frames.has(frameNo)) {\n      this.frames.set(frameNo, new Uint8ClampedArray(frame));//frame;\n    }\n\n    /* if(!this.listenerResults.hasOwnProperty('cached')) {\n      this.setListenerResult('enterFrame', frameNo);\n      if(frameNo === (this.frameCount - 1)) {\n        this.setListenerResult('cached');\n      }\n\n      return;\n    } */\n\n    if(this.frInterval) {\n      const now = Date.now(), delta = now - this.frThen;\n      //console.log(`renderFrame delta${this.reqId}:`, this, delta, this.frInterval);\n\n      if(delta < 0) {\n        if(this.rafId) clearTimeout(this.rafId);\n        return this.rafId = window.setTimeout(() => {\n          this.renderFrame2(frame, frameNo);\n        }, this.frInterval > -delta ? -delta % this.frInterval : this.frInterval);\n        //await new Promise((resolve) => setTimeout(resolve, -delta % this.frInterval));\n      }\n    }\n\n    this.renderFrame2(frame, frameNo);\n  }\n\n  public requestFrame(frameNo: number) {\n    const frame = this.frames.get(frameNo);\n    if(frame) {\n      this.renderFrame(frame, frameNo);\n    } else {\n      if(this.clamped && !this.clamped.length) { // fix detached\n        this.clamped = new Uint8ClampedArray(this.width * this.height * 4);\n      }\n      \n      this.sendQuery('renderFrame', frameNo, this.clamped);\n    }\n  }\n\n  private onLap() {\n    //this.playedTimes++;\n\n    if(!this.loop) {\n      this.pause(false);\n      return false;\n    }\n\n    return true;\n  }\n\n  private mainLoopForwards() {\n    const {skipDelta, maxFrame} = this;\n    const frame = (this.curFrame + skipDelta) > maxFrame ? this.curFrame = (this.loop ? this.minFrame : this.maxFrame) : this.curFrame += skipDelta;\n    // console.log('mainLoopForwards', this.curFrame, skipDelta, frame);\n\n    this.requestFrame(frame);\n    if((frame + skipDelta) > maxFrame) {\n      return this.onLap();\n    }\n\n    return true;\n  }\n  \n  private mainLoopBackwards() {\n    const {skipDelta, minFrame} = this;\n    const frame = (this.curFrame - skipDelta) < minFrame ? this.curFrame = (this.loop ? this.maxFrame : this.minFrame) : this.curFrame -= skipDelta;\n    // console.log('mainLoopBackwards', this.curFrame, skipDelta, frame);\n\n    this.requestFrame(frame);\n    if((frame - skipDelta) < minFrame) {\n      return this.onLap();\n    }\n\n    return true;\n  }\n\n  public setMainLoop() {\n    //window.cancelAnimationFrame(this.rafId);\n    clearTimeout(this.rafId);\n\n    this.frInterval = 1000 / this.fps / this.speed * this.skipDelta;\n    this.frThen = Date.now() - this.frInterval;\n\n    //console.trace('setMainLoop', this.frInterval, this.direction, this, JSON.stringify(this.listenerResults), this.listenerResults);\n\n    const method = (this.direction === 1 ? this.mainLoopForwards : this.mainLoopBackwards).bind(this);\n    this.currentMethod = method;\n    //this.frameListener && this.removeListener('enterFrame', this.frameListener);\n\n    //setTimeout(() => {\n      //this.addListener('enterFrame', this.frameListener);\n    //}, 0);\n\n    if(this.frameListener) {\n      const lastResult = this.listenerResults.enterFrame;\n      if(lastResult !== undefined) {\n        this.frameListener(this.curFrame);\n      }\n    }\n  \n    //this.mainLoop(method);\n    //this.r(method);\n    //method();\n  }\n\n  public playPart(options: {\n    from: number, \n    to: number, \n    callback?: () => void\n  }) {\n    this.pause();\n\n    const {from, to, callback} = options;\n    this.curFrame = from - 1;\n\n    return this.playToFrame({\n      frame: to,\n      direction: to > from ? 1 : -1,\n      callback\n    });\n  }\n\n  public playToFrame(options: {\n    frame: number, \n    speed?: number, \n    direction?: number,\n    callback?: () => void\n  }) {\n    this.pause();\n    \n    const {frame, speed, callback, direction} = options;\n    this.setDirection(direction === undefined ? this.curFrame > frame ? -1 : 1 : direction);\n    speed !== undefined && this.setSpeed(speed);\n\n    const bounds = [this.curFrame, frame];\n    if(this.direction === -1) bounds.reverse();\n    \n    this.loop = false;\n    this.setMinMax(bounds[0], bounds[1]);\n\n    if(this.playToFrameOnFrameCallback) {\n      this.removeEventListener('enterFrame', this.playToFrameOnFrameCallback);\n    }\n\n    if(callback) {\n      this.playToFrameOnFrameCallback = (frameNo: number) => {\n        if(frameNo === frame) {\n          this.removeEventListener('enterFrame', this.playToFrameOnFrameCallback);\n          callback();\n        }\n      };\n\n      this.addEventListener('enterFrame', this.playToFrameOnFrameCallback);\n    }\n\n    this.play();\n  }\n\n  public setColor(color: RLottieColor, renderIfPaused: boolean) {\n    this.color = color;\n\n    if(renderIfPaused && this.paused) {\n      this.renderFrame2(this.imageData.data, this.curFrame);\n    }\n  }\n\n  public setInverseColor(color: RLottieColor) {\n    this.inverseColor = color;\n  }\n\n  private setMinMax(minFrame = 0, maxFrame = this.frameCount - 1) {\n    this.minFrame = minFrame;\n    this.maxFrame = maxFrame;\n  }\n\n  public async onLoad(frameCount: number, fps: number) {\n    this.frameCount = frameCount;\n    this.fps = fps;\n    this.setMinMax();\n    if(this.initFrame !== undefined) {\n      this.initFrame = clamp(this.initFrame, this.minFrame, this.maxFrame);\n    }\n\n    const curFrame = this.resetCurrentFrame();\n\n    // * Handle 30fps stickers if 30fps set\n    if(this.fps < 60 && this.skipDelta !== 1) {\n      const diff = 60 / fps;\n      this.skipDelta = this.skipDelta / diff | 0;\n    }\n\n    this.frInterval = 1000 / this.fps / this.speed * this.skipDelta;\n    this.frThen = Date.now() - this.frInterval;\n    //this.sendQuery('renderFrame', 0);\n    \n    // Кешировать сразу не получится, рендер стикера (тайгер) занимает 519мс, \n    // если рендерить 75% с получением каждого кадра из воркера, будет 475мс, т.е. при 100% было бы 593мс, потеря на передаче 84мс. \n\n    /* console.time('cache' + this.reqId);\n    for(let i = 0; i < frameCount; ++i) {\n      //if(this.removed) return;\n      \n      if(i % 4) {\n        await new Promise((resolve) => {\n          delete this.listenerResults.enterFrame;\n          this.addListener('enterFrame', resolve, true);\n          this.requestFrame(i);\n        });  \n      }\n    }\n    \n    console.timeEnd('cache' + this.reqId); */\n    //console.log('cached');\n    /* this.el.innerHTML = '';\n    this.el.append(this.canvas);\n    return; */\n\n    !this.skipFirstFrameRendering && this.requestFrame(curFrame);\n    this.dispatchEvent('ready');\n    this.addEventListener('enterFrame', () => {\n      this.dispatchEvent('firstFrame');\n\n      if(!this.canvas.parentNode && this.el) {\n        this.el.appendChild(this.canvas);\n      }\n\n      //console.log('enterFrame firstFrame');\n \n      //let lastTime = this.frThen;\n      this.frameListener = () => {\n        if(this.paused) {\n          return;\n        }\n\n        const time = Date.now();\n        //console.log(`enterFrame handle${this.reqId}`, time, (time - lastTime), this.frInterval);\n        /* if(Math.round(time - lastTime + this.frInterval * 0.25) < Math.round(this.frInterval)) {\n          return;\n        } */\n\n        //lastTime = time;\n\n        this.frThen = time + this.frInterval;\n        const canContinue = this.currentMethod();\n        if(!canContinue && !this.loop && this.autoplay) {\n          this.autoplay = false;\n        }\n      };\n\n      this.addEventListener('enterFrame', this.frameListener);\n\n      // ! fix autoplaying since there will be no animationIntersector for it,\n      if(this.group === 'none' && this.autoplay) {\n        this.play();\n      }\n    }, {once: true});\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Page from \"./page\";\r\nimport lottieLoader from \"../lib/rlottie/lottieLoader\";\r\nimport { horizontalMenu } from \"../components/horizontalMenu\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport fastSmoothScroll from \"../helpers/fastSmoothScroll\";\r\nimport whichChild from \"../helpers/dom/whichChild\";\r\n\r\nclass PagesManager {\r\n  private pageId = -1;\r\n  private page: Page;\r\n\r\n  private selectTab: ReturnType<typeof horizontalMenu>;\r\n  public pagesDiv: HTMLDivElement;\r\n  public scrollableDiv: HTMLElement;\r\n\r\n  constructor() {\r\n    this.pagesDiv = document.getElementById('auth-pages') as HTMLDivElement;\r\n    this.scrollableDiv = this.pagesDiv.querySelector('.scrollable') as HTMLElement;\r\n    this.selectTab = horizontalMenu(null, this.scrollableDiv.querySelector('.tabs-container') as HTMLDivElement, null, () => {\r\n      if(this.page?.onShown) {\r\n        this.page.onShown();\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPage(page: Page) {\r\n    if(page.isAuthPage) {\r\n      this.pagesDiv.style.display = '';\r\n\r\n      let id = whichChild(page.pageEl);\r\n      if(this.pageId === id) return;\r\n\r\n      this.selectTab(id);\r\n\r\n      if(this.pageId !== -1 && id > 1) {\r\n        lottieLoader.loadLottieWorkers();\r\n      }\r\n\r\n\r\n\r\n      this.pageId = id;\r\n\r\n      if(this.scrollableDiv) {\r\n        fastSmoothScroll({\r\n          container: this.scrollableDiv, \r\n          element: this.scrollableDiv.firstElementChild as HTMLElement, \r\n          position: 'start'\r\n        });\r\n      }\r\n    } else {\r\n      this.pagesDiv.style.display = 'none';\r\n      page.pageEl.style.display = '';\r\n\r\n      this.pageId = -1;\r\n    }\r\n\r\n    this.page = page;\r\n  }\r\n}\r\n\r\nconst pagesManager = new PagesManager();\r\nMOUNT_CLASS_TO.pagesManager = pagesManager;\r\nexport default pagesManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport pagesManager from \"./pagesManager\";\r\n\r\nexport default class Page {\r\n  public pageEl: HTMLDivElement;\r\n  private installed = false;\r\n\r\n  constructor(className: string, public isAuthPage: boolean, private onFirstMount?: (...args: any[]) => Promise<any> | void, private onMount?: (...args: any[]) => void, public onShown?: () => void) {\r\n    this.pageEl = document.body.querySelector('.' + className) as HTMLDivElement;\r\n  }\r\n\r\n  public async mount(...args: any[]) {\r\n    //this.pageEl.style.display = '';\r\n\r\n    if(this.onMount) {\r\n      this.onMount(...args);\r\n    }\r\n\r\n    if(!this.installed) {\r\n      if(this.onFirstMount) {\r\n        try {\r\n          const res = this.onFirstMount(...args);\r\n          if(res instanceof Promise) {\r\n            await res;\r\n          }\r\n        } catch(err) {\r\n          console.error('PAGE MOUNT ERROR:', err);\r\n        }\r\n      }\r\n      \r\n      this.installed = true;\r\n    }\r\n\r\n    pagesManager.setPage(this);\r\n  }\r\n}\r\n"],"names":["animationIntersector","constructor","visible","Set","byGroups","lockedGroups","onlyOnePlayableGroup","intersectionLockedGroups","videosLocked","this","observer","IntersectionObserver","entries","entry","target","group","player","find","p","el","isIntersecting","add","checkAnimation","delete","animation","clearCache","overrideIdleGroups","doc","type","checkAnimations","setOverrideIdleGroup","override","getAnimations","element","found","push","removeAnimation","remove","HTMLVideoElement","IS_SAFARI","setTimeout","src","load","length","unobserve","addAnimation","loop","observe","blurred","destroy","undefined","groups","Object","keys","animations","paused","pause","has","autoplay","play","setOnlyOnePlayableGroup","lockGroup","unlockGroup","refreshGroup","forEach","window","requestAnimationFrame","lockIntersectionGroup","unlockIntersectionGroup","horizontalMenu","tabs","content","onClick","onTransitionEnd","transitionTime","scrollableX","selectTab","dataset","proxy","Proxy","apply","that","args","id","animate","querySelector","children","selectTarget","tabContent","canChange","scrollIntoViewNew","parentElement","position","forceDirection","forceDuration","axis","prevId","classList","contains","prev","tagName","toLowerCase","useStripe","indicator","currentIndicator","shiftLeft","offsetLeft","scaleFactor","clientWidth","style","transform","firstElementChild","addEventListener","e","tab","slideNavigation","prevTabContent","toRight","width","getBoundingClientRect","elements","reverse","filter","offsetWidth","slideTabs","TransitionSlider","isHeavy","animationFunction","Transition","once","withAnimationListener","onTransitionEndCallbacks","Map","animationDeferred","from","listenerName","onEndEvent","callback","get","resolve","removeEventListener","clear","overrideFrom","HTMLElement","to","timeout","clearTimeout","onTransitionEndCallback","toggle","set","_from","instances","cancelAnimationByKey","key","instance","getAnimationInstance","isCancelled","deferred","animateSingle","tick","then","createAnimationInstance","forEachReverse","array","i","indexOfAndSplice","item","idx","indexOf","spliced","splice","findUpAsChild","parent","isInDOM","isConnected","whichChild","elem","parentNode","previousElementSibling","FocusDirection","fastSmoothScroll","options","margin","maxDistance","Static","scrollWithJs","promise","Promise","container","getNormalSize","rectStartKey","rectEndKey","sizeKey","scrollSizeKey","scrollPositionKey","elementRect","containerRect","document","body","elementPosition","elementSize","containerSize","rect","scrollPosition","scrollSize","path","fallbackToElementStartWhenCentering","Math","abs","scrollTop","remainingPath","max","min","absPath","duration","startAt","Date","now","transition","shortTransition","longTransition","t","currentPath","round","clamp","v","fastRafCallbacks","fastRaf","currentCallbacks","cb","fastRafConventionalCallbacks","rafPromise","processing","fastRafConventional","fastRafPromise","doubleRaf","ANIMATION_START_EVENT","ANIMATION_END_EVENT","isAnimating","heavyAnimationPromise","promisesInQueue","log","console","bind","dispatchHeavyAnimationEvent","promises","finally","Boolean","perf","performance","_heavyAnimationPromise","race","isFulfilled","onHeavyAnimationEnd","interruptHeavyAnimation","getHeavyAnimationPromise","handleAnimationStart","handleAnimationEnd","listenerSetter","removeManual","Worker_fn","Worker","QueryableWorker","worker","super","onerror","error","dispatchEvent","cleanup","terminate","err","onmessage","event","data","queryMethodListener","queryMethodArguments","postMessage","message","sendQuery","queryMethod","transfer","arg","ArrayBuffer","buffer","lottieLoader","isWebAssemblySupported","loadPromise","reject","loaded","workersLimit","players","workers","curWorkerNum","logger","onPlayerLoaded","reqId","frameCount","fps","rlPlayer","debug","onLoad","warn","onFrame","frameNo","frame","clamped","renderFrame","onPlayerError","getAnimation","setLoop","_autoplay","loadLottieWorkers","remain","loadAnimationAsAsset","params","name","loadAnimationFromURL","url","fetch","res","headers","blob","arrayBuffer","arr","blobConstruct","newParams","assign","animationData","needUpscale","loadAnimationWorker","waitForFirstFrame","middleware","Error","height","parseInt","initPlayer","onDestroy","destroyWorkers","loadFromData","CAN_USE_TRANSFERABLES","navigator","userAgent","match","cache","getCache","frames","counter","releaseCache","getCacheCounter","generateName","color","toneIndex","join","RLottiePlayer","direction","speed","cachingDelta","hasOwnProperty","skipRatio","_loop","initFrame","inverseColor","skipFirstFrameRendering","IS_ANDROID","IS_APPLE_MOBILE","IS_APPLE","skipDelta","pixelRatio","devicePixelRatio","mediaSizes","noCache","Infinity","canvas","createElement","context","getContext","Uint8ClampedArray","imageData","ImageData","cacheName","methodName","setMainLoop","clearPendingRAF","rafId","resetCurrentFrame","curFrame","minFrame","maxFrame","stop","renderFirstFrame","requestFrame","restart","setSpeed","setDirection","applyColor","r","g","b","applyInversing","renderFrame2","putImageData","frInterval","delta","frThen","onLap","mainLoopForwards","mainLoopBackwards","method","currentMethod","frameListener","listenerResults","enterFrame","playPart","playToFrame","bounds","setMinMax","playToFrameOnFrameCallback","setColor","renderIfPaused","setInverseColor","diff","appendChild","time","pagesManager","pageId","pagesDiv","getElementById","scrollableDiv","page","onShown","setPage","isAuthPage","display","pageEl","Page","className","onFirstMount","onMount","installed","mount"],"sourceRoot":""}