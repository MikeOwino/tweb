{"version":3,"file":"436.fc57e380ea4d30dae9c8.chunk.js","mappings":"mLA0DA,MAAMA,EAAO,I,QAAI,GAAK,cAAc,GA7CjB,KAEjB,sBAA4B,YAAa,CAACC,EAAG,sBAI7C,wBAAwB,YAEpB,mCACF,6BAAwBC,MAAKC,IACxBA,EAASC,OACV,sBAAiBD,EAASE,cAKhCL,EAAKM,OAAOC,MAAMC,QAAU,IAiB5B,SAEOC,QAAQC,IAAI,EACjB,SACA,4FACCR,MAAK,KACNS,YAAW,KACTC,SAASC,eAAe,cAAcC,WACrC,WAKP","sources":["webpack://tweb/./src/pages/pageIm.ts"],"sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport blurActiveElement from \"../helpers/dom/blurActiveElement\";\r\nimport loadFonts from \"../helpers/dom/loadFonts\";\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport I18n from \"../lib/langPack\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport Page from \"./page\";\r\n\r\nlet onFirstMount = () => {\r\n  //return;\r\n  appStateManager.pushToState('authState', {_: 'authStateSignedIn'});\r\n  // ! TOO SLOW\r\n  /* appStateManager.saveState(); */\r\n\r\n  rootScope.dispatchEvent('im_mount');\r\n\r\n  if(!I18n.requestedServerLanguage) {\r\n    I18n.getCacheLangPack().then(langPack => {\r\n      if(langPack.local) {\r\n        I18n.getLangPack(langPack.lang_code);\r\n      }\r\n    });\r\n  }\r\n\r\n  page.pageEl.style.display = '';\r\n\r\n  //alert('pageIm!');\r\n  \r\n  //AudioContext && global.navigator && global.navigator.mediaDevices && global.navigator.mediaDevices.getUserMedia && global.WebAssembly;\r\n\r\n  /* // @ts-ignore\r\n  var AudioContext = globalThis.AudioContext || globalThis.webkitAudioContext;\r\n  alert('AudioContext:' + typeof(AudioContext));\r\n  // @ts-ignore\r\n  alert('global.navigator:' + typeof(navigator));\r\n  alert('navigator.mediaDevices:' + typeof(navigator.mediaDevices));\r\n  alert('navigator.mediaDevices.getUserMedia:' + typeof(navigator.mediaDevices?.getUserMedia));\r\n  alert('global.WebAssembly:' + typeof(WebAssembly)); */\r\n\r\n  //(Array.from(document.getElementsByClassName('rp')) as HTMLElement[]).forEach(el => ripple(el));\r\n\r\n  blurActiveElement();\r\n\r\n  return Promise.all([\r\n    loadFonts()/* .then(() => new Promise((resolve) => window.requestAnimationFrame(resolve))) */,\r\n    import('../lib/appManagers/appDialogsManager')\r\n  ]).then(() => {\r\n    setTimeout(() => {\r\n      document.getElementById('auth-pages').remove();\r\n    }, 1e3);\r\n  });\r\n};\r\n\r\nconst page = new Page('page-chats', false, onFirstMount);\r\nexport default page;\r\n"],"names":["page","_","then","langPack","local","lang_code","pageEl","style","display","Promise","all","setTimeout","document","getElementById","remove"],"sourceRoot":""}